{
    "directives": {
        "delegate_to": [
            "Role",
            "Block",
            "Task"
        ],
        "failed_when": [
            "Task"
        ],
        "tasks": [
            "Play"
        ],
        "vars": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "become_user": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "vault_password": [
            "Play"
        ],
        "loop_control": [
            "Task"
        ],
        "gather_subset": [
            "Play"
        ],
        "accelerate": [
            "Play"
        ],
        "local_action": [
            "Task"
        ],
        "serial": [
            "Play"
        ],
        "poll": [
            "Task"
        ],
        "port": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "rescue": [
            "Block"
        ],
        "post_tasks": [
            "Play"
        ],
        "environment": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "remote_user": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "become_method": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "when": [
            "Role",
            "Block",
            "Task"
        ],
        "strategy": [
            "Play"
        ],
        "no_log": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "pre_tasks": [
            "Play"
        ],
        "action": [
            "Task"
        ],
        "vars_files": [
            "Play"
        ],
        "until": [
            "Task"
        ],
        "accelerate_port": [
            "Play"
        ],
        "force_handlers": [
            "Play"
        ],
        "tags": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "gather_facts": [
            "Play"
        ],
        "args": [
            "Task"
        ],
        "first_available_file": [
            "Task"
        ],
        "always_run": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "run_once": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "with_": [
            "Task"
        ],
        "max_fail_percentage": [
            "Play"
        ],
        "async": [
            "Task"
        ],
        "ignore_errors": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "loop_args": [
            "Task"
        ],
        "register": [
            "Task"
        ],
        "retries": [
            "Task"
        ],
        "changed_when": [
            "Task"
        ],
        "name": [
            "Play",
            "Task"
        ],
        "roles": [
            "Play"
        ],
        "any_errors_fatal": [
            "Play",
            "Block",
            "Task"
        ],
        "always": [
            "Block"
        ],
        "handlers": [
            "Play"
        ],
        "connection": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "delay": [
            "Task"
        ],
        "hosts": [
            "Play"
        ],
        "loop": [
            "Task"
        ],
        "vars_prompt": [
            "Play"
        ],
        "become": [
            "Play",
            "Role",
            "Block",
            "Task"
        ],
        "accelerate_ipv6": [
            "Play"
        ],
        "delegate_facts": [
            "Role",
            "Block",
            "Task"
        ],
        "block": [
            "Block"
        ],
        "notify": [
            "Task"
        ]
    },
    "modules": [{
            "short_description": "Retrieve AWS AMI information for a given operating system.",
            "deprecated": "in favor of the ec2_ami_find module",
            "options": {
                "stream": {
                    "default": "server",
                    "required": false,
                    "description": "Type of release.",
                    "choices": [
                        "server",
                        "desktop"
                    ]
                },
                "release": {
                    "required": true,
                    "description": "short name of the release (e.g., C(precise))"
                },
                "virt": {
                    "default": "paravirtual",
                    "required": false,
                    "description": "virutalization type",
                    "choices": [
                        "paravirtual",
                        "hvm"
                    ]
                },
                "region": {
                    "default": "us-east-1",
                    "required": false,
                    "description": "EC2 region",
                    "choices": [
                        "ap-northeast-1",
                        "ap-southeast-1",
                        "ap-southeast-2",
                        "eu-central-1",
                        "eu-west-1",
                        "sa-east-1",
                        "us-east-1",
                        "us-west-1",
                        "us-west-2",
                        "us-gov-west-1"
                    ]
                },
                "arch": {
                    "default": "amd64",
                    "required": false,
                    "description": "CPU architecture",
                    "choices": [
                        "i386",
                        "amd64"
                    ]
                },
                "store": {
                    "default": "ebs",
                    "required": false,
                    "description": "Back-end store for instance",
                    "choices": [
                        "ebs",
                        "ebs-io1",
                        "ebs-ssd",
                        "instance-store"
                    ]
                },
                "distro": {
                    "required": true,
                    "description": "Linux distribution (e.g., C(ubuntu))",
                    "choices": [
                        "ubuntu"
                    ]
                }
            },
            "module": "ec2_ami_search"
        },
        {
            "short_description": "Enable fireball mode on remote node",
            "deprecated": "in favor of SSH with ControlPersist",
            "options": null,
            "module": "fireball"
        },
        {
            "short_description": "Add/Delete images from glance",
            "deprecated": "Deprecated in 1.10. Use os_image instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "container_format": {
                    "default": "bare",
                    "required": false,
                    "description": [
                        "The format of the container"
                    ]
                },
                "min_ram": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The minimum ram required to deploy this image"
                    ]
                },
                "owner": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The owner of the image"
                    ]
                },
                "endpoint_type": {
                    "default": "publicURL",
                    "required": false,
                    "description": [
                        "The name of the glance service's endpoint URL type"
                    ],
                    "version_added": "1.7",
                    "choices": [
                        "publicURL",
                        "internalURL"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "file": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The path to the file which has to be uploaded, mutually exclusive with copy_from"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "min_disk": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The minimum disk space required to deploy this image"
                    ]
                },
                "is_public": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether the image can be accessed publicly"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name that has to be given to the image"
                    ]
                },
                "disk_format": {
                    "default": "qcow2",
                    "required": false,
                    "description": [
                        "The format of the disk that is getting uploaded"
                    ]
                },
                "copy_from": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A url from where the image can be downloaded, mutually exclusive with file parameter"
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "The time to wait for the image process to complete in seconds"
                    ]
                }
            },
            "module": "glance_image"
        },
        {
            "short_description": "Manage OpenStack Identity (keystone) users, tenants and roles",
            "deprecated": "Deprecated in 2.0. Use os_user instead",
            "options": {
                "tenant_description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A description for the tenant"
                    ]
                },
                "endpoint": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "login_user": {
                    "default": "admin",
                    "required": false,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "token": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The token to be uses in case the password is not specified"
                    ]
                },
                "login_tenant_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The tenant login_user belongs to"
                    ],
                    "version_added": "1.3"
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "role": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the role to be assigned or created"
                    ]
                },
                "user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the user that has to added/removed from OpenStack"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Password of login user"
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The password to be assigned to the user"
                    ]
                },
                "email": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "An email address for the user"
                    ]
                },
                "tenant": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The tenant name that has be added/removed"
                    ]
                }
            },
            "module": "keystone_user"
        },
        {
            "short_description": "Create/Delete VMs from OpenStack",
            "deprecated": "Deprecated in 2.0. Use os_server instead",
            "options": {
                "image_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The name of the base image to boot. Mutually exclusive with image_id"
                    ],
                    "version_added": "1.8"
                },
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "availability_zone": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the availability zone"
                    ],
                    "version_added": "1.8"
                },
                "key_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The key pair name to be used when creating a VM"
                    ]
                },
                "image_exclude": {
                    "description": [
                        "Text to use to filter image names, for the case, such as HP, where there are multiple image names matching the common identifying portions. image_exclude is a negative match filter - it is text that may not exist in the image name. Defaults to \"(deprecated)\""
                    ],
                    "version_added": "1.8"
                },
                "flavor_include": {
                    "description": [
                        "Text to use to filter flavor names, for the case, such as Rackspace, where there are multiple flavors that have the same ram count. flavor_include is a positive match filter - it must exist in the flavor name."
                    ],
                    "version_added": "1.8"
                },
                "image_id": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The id of the base image to boot. Mutually exclusive with image_name"
                    ]
                },
                "meta": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of key value pairs that should be provided as a metadata to the new VM"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "wait_for": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "The amount of time the module should wait for the VM to get into active state"
                    ]
                },
                "auto_floating_ip": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Should a floating ip be auto created and assigned"
                    ],
                    "version_added": "1.8"
                },
                "scheduler_hints": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Arbitrary key/value pairs to the scheduler for custom use"
                    ],
                    "version_added": "1.9"
                },
                "flavor_id": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The id of the flavor in which the new VM has to be created. Mutually exclusive with flavor_ram"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name that has to be given to the instance"
                    ]
                },
                "nics": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of network id's to which the VM's interface should be attached"
                    ]
                },
                "floating_ips": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "list of valid floating IPs that pre-exist to assign to this node"
                    ],
                    "version_added": "1.8"
                },
                "flavor_ram": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The minimum amount of ram in MB that the flavor in which the new VM has to be created must have. Mutually exclusive with flavor_id"
                    ],
                    "version_added": "1.8"
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "security_groups": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the security group to which the VM should be added"
                    ]
                },
                "user_data": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Opaque blob of data which is made available to the instance"
                    ],
                    "version_added": "1.6"
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If the module should wait for the VM to be created."
                    ]
                },
                "config_drive": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether to boot the server with config drive enabled"
                    ],
                    "version_added": "1.8"
                },
                "floating_ip_pools": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "list of floating IP pools from which to choose a floating IP"
                    ],
                    "version_added": "1.8"
                }
            },
            "module": "nova_compute"
        },
        {
            "short_description": "Add/Delete key pair from nova",
            "deprecated": "Deprecated in 2.0. Use os_keypair instead",
            "options": {
                "public_key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The public key that would be uploaded to nova and injected to vm's upon creation"
                    ]
                },
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name that has to be given to the key pair"
                    ]
                }
            },
            "module": "nova_keypair"
        },
        {
            "short_description": "Add/Remove floating IP from an instance",
            "deprecated": "Deprecated in 2.0. Use os_floating_ip instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "instance_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The name of the instance to which the IP address should be assigned"
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "internal_network_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the network of the port to associate with the floating ip. Necessary when VM multiple networks."
                    ],
                    "version_added": "1.5"
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "network_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the network from which IP has to be assigned to VM. Please make sure the network is an external network"
                    ]
                }
            },
            "module": "quantum_floating_ip"
        },
        {
            "short_description": "Associate or disassociate a particular floating IP with an instance",
            "deprecated": "Deprecated in 2.0. Use os_floating_ip instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "name of the region"
                    ]
                },
                "instance_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "name of the instance to which the public IP should be assigned"
                    ]
                },
                "login_tenant_name": {
                    "default": true,
                    "required": true,
                    "description": [
                        "the tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "indicates the desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "the keystone url for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "ip_address": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "floating ip that should be assigned to the instance"
                    ]
                }
            },
            "module": "quantum_floating_ip_associate"
        },
        {
            "short_description": "Creates/Removes networks from OpenStack",
            "deprecated": "Deprecated in 2.0. Use os_network instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "provider_network_type": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The type of the network to be created, gre, vlan, local. Available types depend on the plugin. The Quantum service decides if not specified."
                    ]
                },
                "admin_state_up": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether the state should be marked as up or down"
                    ]
                },
                "router_external": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If 'yes', specifies that the virtual network is a external network (public)."
                    ]
                },
                "tenant_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the tenant for whom the network is created"
                    ]
                },
                "provider_physical_network": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The physical network which would realize the virtual network for flat and vlan networks."
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "shared": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether this network is shared or not"
                    ]
                },
                "provider_segmentation_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The id that has to be assigned to the network, in case of vlan networks that would be vlan id and for gre the tunnel id"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name to be assigned to the nework"
                    ]
                }
            },
            "module": "quantum_network"
        },
        {
            "short_description": "Create or Remove router from openstack",
            "deprecated": "Deprecated in 2.0. Use os_router instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "admin_state_up": {
                    "default": true,
                    "required": false,
                    "description": [
                        "desired admin state of the created router ."
                    ]
                },
                "tenant_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the tenant for which the router has to be created, if none router would be created for the login tenant."
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone url for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name to be give to the router"
                    ]
                }
            },
            "module": "quantum_router"
        },
        {
            "short_description": "set/unset a gateway interface for the router with the specified external network",
            "deprecated": "Deprecated in 2.0. Use os_router instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "router_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the router to which the gateway should be attached."
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone URL for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "network_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the external network which should be attached to the router."
                    ]
                }
            },
            "module": "quantum_router_gateway"
        },
        {
            "short_description": "Attach/Dettach a subnet's interface to a router",
            "deprecated": "Deprecated in 2.0. Use os_router instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "tenant_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the tenant whose subnet has to be attached."
                    ]
                },
                "login_tenant_name": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone URL for authentication"
                    ]
                },
                "login_password": {
                    "default": "yes",
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "subnet_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the subnet to whose interface should be attached to the router."
                    ]
                },
                "router_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the router to which the subnet's interface should be attached."
                    ]
                }
            },
            "module": "quantum_router_interface"
        },
        {
            "short_description": "Add/remove subnet from a network",
            "deprecated": "Deprecated in 2.0. Use os_subnet instead",
            "options": {
                "region_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of the region"
                    ]
                },
                "tenant_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the tenant for whom the subnet should be created"
                    ]
                },
                "auth_url": {
                    "default": "http://127.0.0.1:35357/v2.0/",
                    "required": false,
                    "description": [
                        "The keystone URL for authentication"
                    ]
                },
                "login_password": {
                    "default": true,
                    "required": true,
                    "description": [
                        "Password of login user"
                    ]
                },
                "login_username": {
                    "default": "admin",
                    "required": true,
                    "description": [
                        "login username to authenticate to keystone"
                    ]
                },
                "cidr": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The CIDR representation of the subnet that should be assigned to the subnet"
                    ]
                },
                "network_name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name of the network to which the subnet should be attached"
                    ]
                },
                "allocation_pool_end": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "From the subnet pool the last IP that should be assigned to the virtual machines"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The name of the subnet that should be created"
                    ]
                },
                "enable_dhcp": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether DHCP should be enabled for this subnet."
                    ]
                },
                "dns_nameservers": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "DNS nameservers for this subnet, comma-separated"
                    ],
                    "version_added": "1.4"
                },
                "login_tenant_name": {
                    "default": true,
                    "required": true,
                    "description": [
                        "The tenant name of the login user"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "allocation_pool_start": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "From the subnet pool the starting address from which the IP should be allocated"
                    ]
                },
                "gateway_ip": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The ip that would be assigned to the gateway for this subnet"
                    ]
                },
                "ip_version": {
                    "default": 4,
                    "required": false,
                    "description": [
                        "The IP version of the subnet 4 or 6"
                    ]
                }
            },
            "module": "quantum_subnet"
        },
        {
            "short_description": "Manage A10 Networks AX/SoftAX/Thunder/vThunder devices",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "admin account of your A10 Networks device"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "server_name": {
                    "required": true,
                    "description": [
                        "slb server name"
                    ],
                    "aliases": [
                        "server"
                    ]
                },
                "server_ports": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of ports to create for the server. Each list item should be a dictionary which specifies the C(port:) and C(protocol:), but can also optionally specify the C(status:). See the examples below for details. This parameter is required when C(state) is C(present)."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "hostname or ip of your A10 Networks device"
                    ]
                },
                "server_status": {
                    "default": "enabled",
                    "aliases": [
                        "status"
                    ],
                    "required": false,
                    "description": [
                        "slb virtual server status"
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create, update or remove slb server"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "server_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "slb server IP address"
                    ],
                    "aliases": [
                        "ip",
                        "address"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "admin password of your A10 Networks device"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                }
            },
            "module": "a10_server"
        },
        {
            "short_description": "Manage A10 Networks devices' service groups",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "aliases": [
                        "user",
                        "admin"
                    ],
                    "required": true,
                    "description": [
                        "admin account of your A10 Networks device"
                    ],
                    "choices": []
                },
                "service_group": {
                    "default": null,
                    "aliases": [
                        "service",
                        "pool",
                        "group"
                    ],
                    "required": true,
                    "description": [
                        "slb service-group name"
                    ],
                    "choices": []
                },
                "host": {
                    "default": null,
                    "aliases": [],
                    "required": true,
                    "description": [
                        "hostname or ip of your A10 Networks device"
                    ],
                    "choices": []
                },
                "servers": {
                    "default": null,
                    "aliases": [],
                    "required": false,
                    "description": [
                        "A list of servers to add to the service group. Each list item should be a dictionary which specifies the C(server:) and C(port:), but can also optionally specify the C(status:). See the examples below for details."
                    ],
                    "choices": []
                },
                "service_group_protocol": {
                    "default": "tcp",
                    "aliases": [
                        "proto",
                        "protocol"
                    ],
                    "required": false,
                    "description": [
                        "slb service-group protocol"
                    ],
                    "choices": [
                        "tcp",
                        "udp"
                    ]
                },
                "write_config": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), any changes will cause a write of the running configuration to non-volatile memory. This will save I(all) configuration changes, including those that may have been made manually or through other modules, so care should be taken when specifying C(yes)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "service_group_method": {
                    "default": "round-robin",
                    "aliases": [
                        "method"
                    ],
                    "required": false,
                    "description": [
                        "slb service-group loadbalancing method"
                    ],
                    "choices": [
                        "round-robin",
                        "weighted-rr",
                        "least-connection",
                        "weighted-least-connection",
                        "service-least-connection",
                        "service-weighted-least-connection",
                        "fastest-response",
                        "least-request",
                        "round-robin-strict",
                        "src-ip-only-hash",
                        "src-ip-hash"
                    ]
                },
                "password": {
                    "default": null,
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "required": true,
                    "description": [
                        "admin password of your A10 Networks device"
                    ],
                    "choices": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled devices using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "a10_service_group"
        },
        {
            "short_description": "Manage A10 Networks devices' virtual servers",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "aliases": [
                        "user",
                        "admin"
                    ],
                    "required": true,
                    "description": [
                        "admin account of your A10 Networks device"
                    ],
                    "choices": []
                },
                "password": {
                    "default": null,
                    "aliases": [
                        "pass",
                        "pwd"
                    ],
                    "required": true,
                    "description": [
                        "admin password of your A10 Networks device"
                    ],
                    "choices": []
                },
                "virtual_server_ports": {
                    "required": false,
                    "description": [
                        "A list of ports to create for the virtual server. Each list item should be a dictionary which specifies the C(port:) and C(type:), but can also optionally specify the C(service_group:) as well as the C(status:). See the examples below for details. This parameter is required when C(state) is C(present)."
                    ]
                },
                "host": {
                    "default": null,
                    "aliases": [],
                    "required": true,
                    "description": [
                        "hostname or ip of your A10 Networks device"
                    ],
                    "choices": []
                },
                "virtual_server_status": {
                    "default": "enable",
                    "aliases": [
                        "status"
                    ],
                    "required": false,
                    "description": [
                        "slb virtual server status"
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "write_config": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), any changes will cause a write of the running configuration to non-volatile memory. This will save I(all) configuration changes, including those that may have been made manually or through other modules, so care should be taken when specifying C(yes)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "virtual_server_ip": {
                    "default": null,
                    "aliases": [
                        "ip",
                        "address"
                    ],
                    "required": false,
                    "description": [
                        "slb virtual server ip address"
                    ],
                    "choices": []
                },
                "virtual_server": {
                    "default": null,
                    "aliases": [
                        "vip",
                        "virtual"
                    ],
                    "required": true,
                    "description": [
                        "slb virtual server name"
                    ],
                    "choices": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled devices using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "a10_virtual_server"
        },
        {
            "short_description": "Sets and retrieves file ACL information.",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The full path of the file or object."
                    ],
                    "aliases": [
                        "path"
                    ]
                },
                "default": {
                    "default": false,
                    "required": false,
                    "description": [
                        "if the target is a directory, setting this to yes will make it the default acl for entities created inside the directory. It causes an error if name is a file."
                    ],
                    "version_added": "1.5",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "entity": {
                    "required": false,
                    "description": [
                        "actual user or group that the ACL applies to when matching entity types user or group are selected."
                    ],
                    "version_added": "1.5"
                },
                "state": {
                    "default": "query",
                    "required": false,
                    "description": [
                        "defines whether the ACL should be present or not.  The C(query) state gets the current acl without changing it, for use in 'register' operations."
                    ],
                    "choices": [
                        "query",
                        "present",
                        "absent"
                    ]
                },
                "follow": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether to follow symlinks on the path if a symlink is encountered."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "etype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the entity type of the ACL to apply, see setfacl documentation for more info."
                    ],
                    "version_added": "1.5",
                    "choices": [
                        "user",
                        "group",
                        "mask",
                        "other"
                    ]
                },
                "entry": {
                    "default": null,
                    "required": false,
                    "description": [
                        "DEPRECATED. The acl to set or remove.  This must always be quoted in the form of '<etype>:<qualifier>:<perms>'.  The qualifier may be empty for some types, but the type and perms are always requried. '-' can be used as placeholder when you do not care about permissions. This is now superseded by entity, type and permissions fields."
                    ]
                },
                "permissions": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Permissions to apply/remove can be any combination of r, w and  x (read, write and execute respectively)"
                    ],
                    "version_added": "1.5"
                },
                "recursive": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Recursively sets the specified ACL (added in Ansible 2.0). Incompatible with C(state=query)."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "acl"
        },
        {
            "short_description": "add a host (and alternatively a group) to the ansible-playbook in-memory inventory",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "The hostname/ip of the host to add to the inventory, can include a colon and a port number."
                    ],
                    "aliases": [
                        "hostname",
                        "host"
                    ]
                },
                "groups": {
                    "required": false,
                    "description": [
                        "The groups to add the hostname to, comma separated."
                    ],
                    "aliases": [
                        "groupname",
                        "group"
                    ]
                }
            },
            "module": "add_host"
        },
        {
            "short_description": "Notify airbrake about app deployments",
            "deprecated": null,
            "options": {
                "repo": {
                    "required": false,
                    "description": [
                        "URL of the project repository"
                    ]
                },
                "environment": {
                    "required": true,
                    "description": [
                        "The airbrake environment name, typically 'production', 'staging', etc."
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token."
                    ]
                },
                "user": {
                    "required": false,
                    "description": [
                        "The username of the person doing the deployment"
                    ]
                },
                "url": {
                    "default": "https://airbrake.io/deploys.txt",
                    "required": false,
                    "description": [
                        "Optional URL to submit the notification to. Use to send notifications to Airbrake-compliant tools like Errbit."
                    ],
                    "version_added": "1.5"
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "revision": {
                    "required": false,
                    "description": [
                        "A hash, number, tag, or other identifier showing what revision was deployed"
                    ]
                }
            },
            "module": "airbrake_deployment"
        },
        {
            "short_description": "Manages alternative programs for common commands",
            "deprecated": null,
            "options": {
                "path": {
                    "required": true,
                    "description": [
                        "The path to the real executable that the link should point to."
                    ]
                },
                "link": {
                    "required": false,
                    "description": [
                        "The path to the symbolic link that should point to the real executable.",
                        "This option is required on RHEL-based distributions"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The generic name of the link."
                    ]
                }
            },
            "module": "alternatives"
        },
        {
            "short_description": "enables/disables a module of the Apache2 webserver",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "description": [
                        "indicate the desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "force disabling of default modules and override Debian warnings"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the module to enable/disable"
                    ]
                }
            },
            "module": "apache2_module"
        },
        {
            "short_description": "Manages apk packages",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicates the desired package(s) state.",
                        "C(present) ensures the package(s) is/are present.",
                        "C(absent) ensures the package(s) is/are absent.",
                        "C(latest) ensures the package(s) is/are present and the latest version(s)."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Upgrade all installed packages to their latest version."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Update repository indexes. Can be run with other steps or on it's own."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A package name, like C(foo), or mutliple packages, like C(foo, bar)."
                    ]
                }
            },
            "module": "apk"
        },
        {
            "short_description": "Manages apt-packages",
            "deprecated": null,
            "options": {
                "dpkg_options": {
                    "default": "force-confdef,force-confold",
                    "required": false,
                    "description": [
                        "Add dpkg options to apt command. Defaults to '-o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"'",
                        "Options should be supplied as comma separated list"
                    ]
                },
                "upgrade": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If yes or safe, performs an aptitude safe-upgrade.",
                        "If full, performs an aptitude full-upgrade.",
                        "If dist, performs an apt-get dist-upgrade.",
                        "Note: This does not upgrade a specific package, use state=latest for that."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "no",
                        "yes",
                        "safe",
                        "full",
                        "dist"
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), force installs/removes."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A package name, like C(foo), or package specifier with version, like C(foo=1.0). Name wildcards (fnmatch) like C(apt*) and version wildcards like C(foo=1.0*) are also supported.  Note that the apt-get commandline supports implicit regex matches here but we do not because it can let typos through easier (If you typo C(foo) as C(fo) apt-get would install packages that have \"fo\" in their name with a warning and a prompt for the user.  Since we don't have warnings and prompts before installing we disallow this.  Use an explicit fnmatch pattern if you want wildcarding)"
                    ],
                    "aliases": [
                        "pkg",
                        "package"
                    ]
                },
                "purge": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Will force purging of configuration files if the module state is set to I(absent)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "allow_unauthenticated": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Ignore if packages cannot be authenticated. This is useful for bootstrapping environments that manage their own apt-key setup."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicates the desired package state. C(latest) ensures that the latest version is installed. C(build-dep) ensures the package build dependencies are installed."
                    ],
                    "choices": [
                        "latest",
                        "absent",
                        "present",
                        "build-dep"
                    ]
                },
                "autoremove": {
                    "aliases": [
                        "autoclean"
                    ],
                    "description": [
                        "If C(yes), remove unused dependency packages for all module states except I(build-dep)."
                    ],
                    "version_added": "2.1",
                    "default": false,
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Run the equivalent of C(apt-get update) before the operation. Can be run as part of the package installation or as a separate step."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "default_release": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Corresponds to the C(-t) option for I(apt) and sets pin priorities"
                    ]
                },
                "only_upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Only install/upgrade a package if it is already installed."
                    ],
                    "version_added": "2.1"
                },
                "cache_valid_time": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If C(update_cache) is specified and the last run is less or equal than I(cache_valid_time) seconds ago, the C(update_cache) gets skipped."
                    ]
                },
                "deb": {
                    "required": false,
                    "description": [
                        "Path to a .deb package on the remote machine.",
                        "If :// in the path, ansible will attempt to download deb before installing. (Version added 2.1)"
                    ],
                    "version_added": "1.6"
                },
                "install_recommends": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Corresponds to the C(--no-install-recommends) option for I(apt). C(yes) installs recommended packages.  C(no) does not install recommended packages. By default, Ansible will use the same defaults as the operating system. Suggested packages are never installed."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "apt"
        },
        {
            "short_description": "Add or remove an apt key",
            "deprecated": null,
            "options": {
                "keyserver": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "keyserver to retrieve key from."
                    ],
                    "version_added": "1.6"
                },
                "url": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "url to retrieve key from."
                    ]
                },
                "data": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "keyfile contents"
                    ]
                },
                "keyring": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "path to specific keyring file in /etc/apt/trusted.gpg.d"
                    ],
                    "version_added": "1.3"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "used to specify if key is being added or revoked"
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "file": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "keyfile path"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "id": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "identifier of key. Including this allows check mode to correctly report the changed state."
                    ]
                }
            },
            "module": "apt_key"
        },
        {
            "short_description": "Add and remove APT repositories",
            "deprecated": null,
            "options": {
                "repo": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "A source string for the repository."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "A source string state."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "update_cache": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Run the equivalent of C(apt-get update) when a change occurs.  Cache updates are run after making changes."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "mode": {
                    "default": 420,
                    "required": false,
                    "description": [
                        "The octal mode for newly created files in sources.list.d"
                    ],
                    "version_added": "1.6"
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target repo will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "filename": {
                    "required": false,
                    "description": [
                        "Sets the name of the source list file in sources.list.d. Defaults to a file name based on the repository source url. The .list extension will be automatically added."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "apt_repository"
        },
        {
            "short_description": "apt_rpm package manager",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicates the desired package state"
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "update the package database first C(apt-get update)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "pkg": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of package to install, upgrade or remove."
                    ]
                }
            },
            "module": "apt_rpm"
        },
        {
            "short_description": "Assembles a configuration file from fragments",
            "deprecated": null,
            "options": {
                "ignore_hidden": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A boolean that controls if files that start with a '.' will be included or not."
                    ],
                    "version_added": "2.0"
                },
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "An already existing directory full of source files."
                    ],
                    "aliases": []
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "remote_src": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "If False, it will search for src at originating/master machine, if True it will go to the remote/target machine for the src. Default is True."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "A file to create using the concatenation of all of the source files."
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "delimiter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A delimiter to separate the file contents."
                    ],
                    "version_added": "1.4"
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "regexp": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Assemble files only if C(regex) matches the filename. If not set, all files are assembled. All \"\\\" (backslash) must be escaped as \"\\\\\" to comply yaml syntax. Uses Python regular expressions; see U(http://docs.python.org/2/library/re.html)."
                    ]
                },
                "validate": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place.  The path to the file to validate is passed in via '%s' which must be present as in the sshd example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ],
                    "version_added": "2.0"
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file (if C(yes)), including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "assemble"
        },
        {
            "short_description": "Fail with custom message",
            "deprecated": null,
            "options": {
                "that": {
                    "required": true,
                    "description": [
                        "A string expression of the same form that can be passed to the 'when' statement",
                        "Alternatively, a list of string expressions"
                    ]
                }
            },
            "module": "assert"
        },
        {
            "short_description": "Obtain status of asynchronous task",
            "deprecated": null,
            "options": {
                "jid": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Job or task identifier"
                    ],
                    "aliases": []
                },
                "mode": {
                    "default": "status",
                    "required": false,
                    "description": [
                        "if C(status), obtain the status; if C(cleanup), clean up the async job cache located in C(~/.ansible_async/) for the specified job I(jid)."
                    ],
                    "choices": [
                        "status",
                        "cleanup"
                    ]
                }
            },
            "module": "async_status"
        },
        {
            "short_description": "Schedule the execution of a command or script file via the at command.",
            "deprecated": null,
            "options": {
                "count": {
                    "required": true,
                    "description": [
                        "The count of units in the future to execute the command or script file."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state dictates if the command or script file should be evaluated as present(added) or absent(deleted)."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "command": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A command to be executed in the future."
                    ]
                },
                "units": {
                    "required": true,
                    "description": [
                        "The type of units in the future to execute the command or script file."
                    ],
                    "choices": [
                        "minutes",
                        "hours",
                        "days",
                        "weeks"
                    ]
                },
                "unique": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If a matching job is present a new job will not be added."
                    ]
                },
                "script_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An existing script file to be executed in the future."
                    ]
                }
            },
            "module": "at"
        },
        {
            "short_description": "Adds or removes an SSH authorized key",
            "deprecated": null,
            "options": {
                "exclusive": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether to remove all other non-specified keys from the authorized_keys file. Multiple keys can be specified in a single C(key) string value by separating them by newlines.",
                        "This option is not loop aware, so if you use C(with_) , it will be exclusive per iteration of the loop, if you want multiple keys in the file you need to pass them all to C(key) in a single batch as mentioned above."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "key_options": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A string of ssh key options to be prepended to the key in the authorized_keys file"
                    ],
                    "version_added": "1.4"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the given key (with the given key_options) should or should not be in the file"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "The username on the remote host whose authorized_keys file will be modified"
                    ]
                },
                "key": {
                    "required": true,
                    "description": [
                        "The SSH public key(s), as a string or (since 1.9) url (https://github.com/username.keys)"
                    ]
                },
                "path": {
                    "default": "(homedir)+/.ssh/authorized_keys",
                    "required": false,
                    "description": [
                        "Alternate path to the authorized_keys file"
                    ],
                    "version_added": "1.2"
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "This only applies if using a https url as the source of the keys. If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates as it avoids verifying the source site.",
                        "Prior to 2.1 the code worked as if this was set to C(yes)."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "manage_dir": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether this module should manage the directory of the authorized key file.  If set, the module will create the directory, as well as set the owner and permissions of an existing directory. Be sure to set C(manage_dir=no) if you are using an alternate directory for authorized_keys, as set with C(path), since you could lock yourself out of SSH access. See the example below."
                    ],
                    "version_added": "1.2",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "authorized_key"
        },
        {
            "short_description": "create or terminate a virtual machine in azure",
            "deprecated": null,
            "options": {
                "role_size": {
                    "default": "Small",
                    "required": false,
                    "description": [
                        "azure role size for the new virtual machine (e.g., Small, ExtraLarge, A6). You have to pay attention to the fact that instances of type G and DS are not available in all regions (locations). Make sure if you selected the size and type of instance available in your chosen location."
                    ]
                },
                "virtual_network_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of virtual network."
                    ]
                },
                "image": {
                    "default": null,
                    "required": true,
                    "description": [
                        "system image for creating the virtual machine (e.g., b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu_DAILY_BUILD-precise-12_04_3-LTS-amd64-server-20131205-en-us-30GB)"
                    ]
                },
                "wait_timeout_redirects": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up for redirects, in seconds"
                    ],
                    "aliases": []
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "aliases": []
                },
                "user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the unix username for the new virtual machine."
                    ]
                },
                "auto_updates": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Enable Auto Updates on Windows Machines"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "storage_account": {
                    "required": true,
                    "description": [
                        "the azure storage account in which to store the data disks."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the unix password for the new virtual machine."
                    ]
                },
                "os_type": {
                    "default": "linux",
                    "required": false,
                    "description": [
                        "The type of the os that is gettings provisioned"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "windows",
                        "linux"
                    ]
                },
                "wait": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the virtual machine and associated cloud service."
                    ]
                },
                "management_cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to an azure management certificate associated with the subscription id. Overrides the AZURE_CERT_PATH environment variable."
                    ]
                },
                "hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "hostname to write /etc/hostname. Defaults to <name>.cloudapp.net."
                    ]
                },
                "ssh_cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to an X509 certificate containing the public ssh key to install in the virtual machine. See http://www.windowsazure.com/en-us/manage/linux/tutorials/intro-to-linux/ for more details.",
                        "if this option is specified, password-based ssh authentication will be disabled."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or terminate instances"
                    ],
                    "aliases": []
                },
                "location": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the azure location to use (e.g. 'East US')"
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "azure subscription id. Overrides the AZURE_SUBSCRIPTION_ID environment variable."
                    ]
                },
                "endpoints": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "a comma-separated list of TCP ports to expose on the virtual machine (e.g., \"22,80\")"
                    ]
                },
                "enable_winrm": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Enable winrm on Windows Machines"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "azure"
        },
        {
            "short_description": "Create or destroy Azure Resource Manager template deployments",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "resource_group_name": {
                    "required": true,
                    "description": [
                        "The resource group name to use or create to host the deployed template"
                    ]
                },
                "parameters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A hash of all the required template variables for the deployment template. This parameter is mutually exclusive with 'parameters_link'. Either one of them is required if \"state\" parameter is \"present\"."
                    ]
                },
                "deployment_name": {
                    "default": "ansible-arm",
                    "description": [
                        "The name of the deployment to be tracked in the resource group deployment history. Re-using a deployment name will overwrite the previous value in the resource group's deployment history."
                    ]
                },
                "wait_for_deployment_polling_period": {
                    "default": 10,
                    "description": [
                        "Time (in seconds) to wait between polls when waiting for deployment completion."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "wait_for_deployment_completion": {
                    "default": true,
                    "description": [
                        "Whether or not to block until the deployment has completed."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "template_link": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Uri of file containing the template body. This parameter is mutually exclusive with 'template'. Either one of them is required if \"state\" parameter is \"present\"."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "If state is \"present\", template will be created. If state is \"present\" and if deployment exists, it will be updated. If state is \"absent\", stack will be removed."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "location": {
                    "default": "westus",
                    "required": false,
                    "description": [
                        "The geo-locations in which the resource group will be located."
                    ]
                },
                "template": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A hash containing the templates inline. This parameter is mutually exclusive with 'template_link'. Either one of them is required if \"state\" parameter is \"present\"."
                    ]
                },
                "parameters_link": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Uri of file containing the parameters body. This parameter is mutually exclusive with 'parameters'. Either one of them is required if \"state\" parameter is \"present\"."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "deployment_mode": {
                    "default": "complete",
                    "required": false,
                    "description": [
                        "In incremental mode, resources are deployed without deleting existing resources that are not included in the template. In complete mode resources are deployed and existing resources in the resource group not included in the template are deleted."
                    ],
                    "choices": [
                        "complete",
                        "incremental"
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_deployment"
        },
        {
            "short_description": "Manage Azure network interfaces.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of a resource group where the network interface exists or will be created."
                    ]
                },
                "open_ports": {
                    "default": null,
                    "required": false,
                    "type": "list",
                    "description": [
                        "When a default security group is created for a Linux host a rule will be added allowing inbound TCP connections to the default SSH port 22, and for a Windows host rules will be added allowing inbound access to RDP ports 3389 and 5986. Override the default ports by providing a list of open ports."
                    ]
                },
                "virtual_network_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing virtual network with which the network interface will be associated. Required when creating a network interface."
                    ],
                    "aliases": [
                        "virtual_network"
                    ]
                },
                "public_ip_allocation_method": {
                    "default": "Dynamic",
                    "required": false,
                    "description": [
                        "If a public_ip_address_name is not provided, a default public IP address will be created. The allocation method determines whether or not the public IP address assigned to the network interface is permanent."
                    ],
                    "choices": [
                        "Dynamic",
                        "Static"
                    ]
                },
                "security_group_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing security group with which to associate the network interface. If not provided, a default security group will be created."
                    ],
                    "aliases": [
                        "security_group"
                    ]
                },
                "public_ip": {
                    "default": true,
                    "required": false,
                    "description": [
                        "When creating a network interface, if no public IP address name is provided a default public IP address will be created. Set to false, if you do not want a public IP address automatically created."
                    ]
                },
                "private_ip_allocation_method": {
                    "default": "Dynamic",
                    "required": false,
                    "description": [
                        "Specify whether or not the assigned IP address is permanent. NOTE: when creating a network interface specifying a value of 'Static' requires that a private_ip_address value be provided. You can update the allocation method to 'Static' after a dynamic private ip address has been assigned."
                    ],
                    "choices": [
                        "Dynamic",
                        "Static"
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "public_ip_address_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing public IP address object to associate with the security group."
                    ],
                    "aliases": [
                        "public_ip_address",
                        "public_ip_name"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the network interface."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the network interface. Use 'present' to create or update an interface and 'absent' to delete an interface."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "subnet_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing subnet within the specified virtual network. Required when creating a network interface"
                    ],
                    "aliases": [
                        "subnet"
                    ]
                },
                "location": {
                    "default": "resource_group location",
                    "required": false,
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                },
                "private_ip_address": {
                    "required": false,
                    "description": [
                        "Valid IPv4 address that falls within the specified subnet."
                    ]
                },
                "os_type": {
                    "default": "Linux",
                    "required": false,
                    "description": [
                        "Determines any rules to be added to a default security group. When creating a network interface, if no security group name is provided, a default security group will be created. If the os_type is 'Windows', a rule will be added allowing RDP access. If the os_type is 'Linux', a rule allowing SSH access will be added."
                    ],
                    "choices": [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            "module": "azure_rm_networkinterface"
        },
        {
            "short_description": "Get network interface facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific network interface."
                    ]
                },
                "resource_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the resource group containing the network interface(s). Required when searching by name."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_networkinterface_facts"
        },
        {
            "short_description": "Manage Azure Public IP Addresses.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the Public IP."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of resource group with which the Public IP is associated."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the Public IP. Use 'present' to create or update a and 'absent' to delete."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "domain_name_label": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The customizable portion of the FQDN assigned to public IP address. This is an explicit setting. If no value is provided, any existing value will be removed on an existing public IP."
                    ],
                    "aliases": [
                        "domain_name_label"
                    ]
                },
                "location": {
                    "default": "resource_group location",
                    "required": false,
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "allocation_method": {
                    "default": "Dynamic",
                    "required": false,
                    "description": [
                        "Control whether the assigned Public IP remains permanently assigned to the object. If not set to 'Static', the IP address my changed anytime an associated virtual machine is power cycled."
                    ],
                    "choices": [
                        "Dynamic",
                        "Static"
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_publicipaddress"
        },
        {
            "short_description": "Get public IP facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific Public IP."
                    ]
                },
                "resource_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by resource group. Required when using name parameter."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_publicip_facts"
        },
        {
            "short_description": "Manage Azure resource groups.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove a resource group and all associated resources. Use with state 'absent' to delete a resource group that contains resources."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the resource group."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the resource group. Use 'present' to create or update and 'absent' to delete. When 'absent' a resource group containing resources will not be removed unless the force option is used."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "location": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure location for the resource group. Required when creating a new resource group. Cannot be changed once resource group is created."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_resourcegroup"
        },
        {
            "short_description": "Get resource group facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results to a specific resource group."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_resouregroup_facts"
        },
        {
            "short_description": "Manage Azure network security groups.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of the resource group the security group belongs to."
                    ]
                },
                "purge_rules": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove any existing rules not matching those defined in the rules parameters."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "rules": {
                    "default": null,
                    "contains": {
                        "source_address_prefix": {
                            "default": "*",
                            "description": "IP address or CIDR from which traffic originates."
                        },
                        "destination_address_prefix": {
                            "default": "*",
                            "description": "IP address or CIDR to which traffic is headed."
                        },
                        "protocol": {
                            "default": "*",
                            "description": "Accepted traffic protocol.",
                            "choices": [
                                "Udp",
                                "Tcp",
                                "*"
                            ]
                        },
                        "name": {
                            "required": true,
                            "description": "Unique name for the rule."
                        },
                        "description": {
                            "description": "Short description of the rule's purpose."
                        },
                        "direction": {
                            "default": "Inbound",
                            "description": "Indicates the direction of the traffic flow.",
                            "choices": [
                                "Inbound",
                                "Outbound"
                            ]
                        },
                        "access": {
                            "default": "Allow",
                            "description": "Whether or not to allow the traffic flow.",
                            "choices": [
                                "Allow",
                                "Deny"
                            ]
                        },
                        "source_port_range": {
                            "default": "*",
                            "description": "Port or range of ports from which traffic originates."
                        },
                        "destination_port_range": {
                            "default": "*",
                            "description": "Port or range of ports to which traffic is headed."
                        },
                        "priority": {
                            "required": true,
                            "type": "int",
                            "description": "Order in which to apply the rule. Must a unique integer between 100 and 4096 inclusive."
                        }
                    },
                    "type": "complex",
                    "description": [
                        "Set of rules shaping traffic flow to or from a subnet or NIC. Each rule is a dictionary."
                    ],
                    "required": false
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "default_rules": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The set of default rules automatically added to a security group at creation. In general default rules will not be modified. Modify rules to shape the flow of traffic to or from a subnet or NIC. See rules below for the makeup of a rule dict."
                    ]
                },
                "purge_default_rules": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove any existing rules not matching those defined in the default_rules parameter."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the security group. Set to 'present' to create or update a security group. Set to 'absent' to remove a security group."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "location": {
                    "default": "resource_group location",
                    "required": false,
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the security group to operate on."
                    ]
                }
            },
            "module": "azure_rm_securitygroup"
        },
        {
            "short_description": "Get security group facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific security group."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of the resource group to use."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_securitygroup_facts"
        },
        {
            "short_description": "Manage Azure storage accounts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "kind": {
                    "default": "Storage",
                    "required": false,
                    "description": [
                        "The 'kind' of storage."
                    ],
                    "version_added": "2.2",
                    "choices": [
                        "Storage",
                        "StorageBlob"
                    ]
                },
                "account_type": {
                    "default": null,
                    "choices": [
                        "Premium_LRS",
                        "Standard_GRS",
                        "Standard_LRS",
                        "Standard_RAGRS",
                        "Standard_ZRS"
                    ],
                    "required": false,
                    "description": [
                        "Type of storage account. Required when creating a storage account. NOTE: Standard_ZRS and Premium_LRS accounts cannot be changed to other account types, and other account types cannot be changed to Standard_ZRS or Premium_LRS."
                    ],
                    "aliases": [
                        "type"
                    ]
                },
                "custom_domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "User domain assigned to the storage account. Must be a dictionary with 'name' and 'use_sub_domain' keys where 'name' is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
                        "Can be added to an existing storage account. Will be ignored during storage account creation."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of the resource group to use."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the storage account. Use 'present' to create or update a storage account and 'absent' to delete an account."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "location": {
                    "default": "resource_group location",
                    "required": false,
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the storage account to update or create."
                    ]
                }
            },
            "module": "azure_rm_storageaccount"
        },
        {
            "short_description": "Get storage account facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific account."
                    ]
                },
                "resource_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results to a resource group. Required when filtering by name."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_storageaccount_facts"
        },
        {
            "short_description": "Manage blob containers and blob objects.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Overwrite existing blob or file when uploading or downloading. Force deletion of a container that contains blobs."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of the resource group to use."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "dest": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Destination file path. Use with state 'present' to download a blob."
                    ],
                    "aliases": [
                        "destination"
                    ]
                },
                "content_language": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob content-language header."
                    ]
                },
                "content_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob content-type header. For example, 'image/png'."
                    ]
                },
                "public_access": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Determine a container's level of public access. By default containers are private. Can only be set at time of container creation."
                    ],
                    "choices": [
                        "container",
                        "blob"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Source file path. Use with state 'present' to upload a blob."
                    ],
                    "aliases": [
                        "source"
                    ]
                },
                "container": {
                    "required": true,
                    "description": [
                        "Name of a blob container within the storage account."
                    ],
                    "aliases": [
                        "container_name"
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of a container or blob.",
                        "Use state 'absent' with a container value only to delete a container. Include a blob value to remove a specific blob. A container will not be deleted, if it contains blobs. Use the force option to override, deleting the container and all associated blobs.",
                        "Use state 'present' to create or update a container and upload or download a blob. If the container does not exist, it will be created. If it exists, it will be updated with configuration options. Provide a blob name and either src or dest to upload or download. Provide a src path to upload and a dest path to download. If a blob (uploading) or a file (downloading) already exists, it will not be overwritten unless the force parameter is true."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "blob": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of a blob object within the container."
                    ],
                    "aliases": [
                        "blob_name"
                    ]
                },
                "content_md5": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob md5 hash value."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "storage_account_name": {
                    "required": true,
                    "description": [
                        "Name of the storage account to use."
                    ],
                    "aliases": [
                        "account_name"
                    ]
                },
                "content_disposition": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob content-disposition header."
                    ]
                },
                "cache_control": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob cache-control header."
                    ]
                },
                "content_encoding": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the blob encoding header."
                    ]
                }
            },
            "module": "azure_rm_storageblob"
        },
        {
            "short_description": "Manage Azure subnets.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the subnet."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of resource group."
                    ]
                },
                "virtual_network_name": {
                    "required": true,
                    "description": [
                        "Name of an existing virtual network with which the subnet is or will be associated."
                    ],
                    "aliases": [
                        "virtual_network"
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "security_group_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing security group with which to associate the subnet."
                    ],
                    "aliases": [
                        "security_group"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Assert the state of the subnet. Use 'present' to create or update a subnet and 'absent' to delete a subnet."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "address_prefix_cidr": {
                    "required": true,
                    "description": [
                        "CIDR defining the IPv4 address space of the subnet. Must be valid within the context of the virtual network."
                    ],
                    "aliases": [
                        "address_prefix"
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_subnet"
        },
        {
            "short_description": "Manage Azure virtual machines.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "Name of the resource group containing the virtual machine."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "virtual_network_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When creating a virtual machine, if a network interface name is not provided, one will be created. The new network interface will be assigned to the first virtual network found in the resource group. Use this parameter to provide a specific virtual network instead."
                    ],
                    "aliases": [
                        "virtual_network"
                    ]
                },
                "public_ip_allocation_method": {
                    "default": [
                        "Static"
                    ],
                    "choices": [
                        "Dynamic",
                        "Static"
                    ],
                    "required": false,
                    "description": [
                        "If a public IP address is created when creating the VM (beacuse a Network Interface was not provided), determines if the public IP address remains permanently associated with the Network Interface. If set to 'Dynamic' the public IP address may change any time the VM is rebooted or power cycled."
                    ],
                    "aliases": [
                        "public_ip_allocation"
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "A dictionary describing the Marketplace image used to build the VM. Will contain keys: publisher, offer, sku and version. NOTE: set image.version to 'latest' to get the most recent version of a given image."
                    ]
                },
                "open_ports": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If a network interface is created when creating the VM, a security group will be created as well. For Linux hosts a rule will be added to the security group allowing inbound TCP connections to the default SSH port 22, and for Windows hosts ports 3389 and 5986 will be opened. Override the default open ports by providing a list of ports."
                    ]
                },
                "ssh_public_keys": {
                    "default": null,
                    "required": false,
                    "description": [
                        "For os_type Linux provide a list of SSH keys. Each item in the list should be a dictionary where the dictionary contains two keys: path and key_data. Set the path to the default location of the authorized_keys files. On an Enterprise Linux host, for example, the path will be /home/<admin username>/.ssh/authorized_keys. Set key_data to the actual value of the public key."
                    ]
                },
                "storage_container_name": {
                    "default": "vhds",
                    "required": false,
                    "description": [
                        "Name of the container to use within the storage account to store VHD blobs. If no name is specified a default container will created."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "allocated": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Toggle that controls if the machine is allocated/deallocated, only useful with state='present'."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "ssh_password_enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "When the os_type is Linux, setting ssh_password_enabled to false will disable SSH password authentication and require use of SSH keys."
                    ]
                },
                "vm_size": {
                    "default": "Standard_D1",
                    "required": false,
                    "description": [
                        "A valid Azure VM size value. For example, 'Standard_D4'. The list of choices varies depending on the subscription and location. Check your subscription for available choices."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "remove_on_absent": {
                    "default": [
                        "all"
                    ],
                    "required": false,
                    "description": [
                        "When removing a VM using state 'absent', also remove associated resources",
                        "It can be 'all' or a list with any of the following: ['network_interfaces', 'virtual_storage', 'public_ips']",
                        "Any other input will be ignored"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the virtual machine."
                    ]
                },
                "restarted": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use with state 'present' to restart a running VM."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "admin_username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Admin username used to access the host after it is created. Required when creating a VM."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "short_hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name assigned internally to the host. On a linux VM this is the name returned by the `hostname` command. When creating a virtual machine, short_hostname defaults to name."
                    ]
                },
                "started": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use with state 'present' to start the machine. Set to false to have the machine be 'stopped'."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the virtual machine.",
                        "State 'present' will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated. Use options started, allocated and restarted to change the machine's power state.",
                        "State 'absent' will remove the virtual machine."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "subnet_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When creating a virtual machine, if a network interface name is not provided, one will be created. The new network interface will be assigned to the first subnet found in the virtual network. Use this parameter to provide a specific subnet instead."
                    ],
                    "aliases": [
                        "virtual_network"
                    ]
                },
                "location": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Valid Azure location. Defaults to location of the resource group."
                    ]
                },
                "os_disk_caching": {
                    "default": "ReadOnly",
                    "choices": [
                        "ReadOnly",
                        "ReadWrite"
                    ],
                    "required": false,
                    "description": [
                        "Type of OS disk caching."
                    ],
                    "aliases": [
                        "disk_caching"
                    ]
                },
                "network_interface_names": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of existing network interface names to add to the VM. If a network interface name is not provided when the VM is created, a default network interface will be created. In order for the module to create a network interface, at least one Virtual Network with one Subnet must exist."
                    ]
                },
                "os_type": {
                    "default": [
                        "Linux"
                    ],
                    "required": false,
                    "description": [
                        "Base type of operating system."
                    ],
                    "choices": [
                        "Windows",
                        "Linux"
                    ]
                },
                "storage_account_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an existing storage account that supports creation of VHD blobs. If not specified for a new VM, a new storage account named <vm name>01 will be created using storage type 'Standard_LRS'."
                    ]
                },
                "storage_blob_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name fo the storage blob used to hold the VM's OS disk image. If no name is provided, defaults to the VM name + '.vhd'. If you provide a name, it must end with '.vhd'"
                    ],
                    "aliases": [
                        "storage_blob"
                    ]
                },
                "admin_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password for the admin username. Not required if the os_type is Linux and SSH password authentication is disabled by setting ssh_password_enabled to false."
                    ]
                }
            },
            "module": "azure_rm_virtualmachine"
        },
        {
            "short_description": "Get virtual machine image facts.",
            "deprecated": null,
            "options": {
                "sku": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Image offering SKU. Combine with offer to see a list of available versions."
                    ]
                },
                "publisher": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an image publisher. List image offerings associated with a particular publisher."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific security group."
                    ]
                },
                "offer": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an image offering. Combine with sku to see a list of available image versions."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specific version number of an image."
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "location": {
                    "required": true,
                    "description": [
                        "Azure location value (ie. westus, eastus, eastus2, northcentralus, etc.). Supplying only a location value will yield a list of available publishers for the location."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_virtualmachineimage_facts"
        },
        {
            "short_description": "Manage Azure virtual networks.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "dns_servers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Custom list of DNS servers. Maximum length of two. The first server in the list will be treated as the Primary server. This is an explicit list. Existing DNS servers will be replaced with the specified list. Use the purge_dns_servers option to remove all custom DNS servers and revert to default Azure servers."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the virtual network."
                    ]
                },
                "resource_group": {
                    "required": true,
                    "description": [
                        "name of resource group."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of string:string pairs to assign as metadata to the object. Metadata tags on the object will be updated with any provided values. To remove tags set append_tags option to false."
                    ]
                },
                "append_tags": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Use to control if tags field is cannonical or just appends to existing tags. When cannonical, any tags not found in the tags parameter will be removed from the object's metadata."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Assert the state of the virtual network. Use 'present' to create or update and 'absent' to delete."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "address_prefixes_cidr": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of IPv4 address ranges where each is formatted using CIDR notation. Required when creating a new virtual network or using purge_address_prefixes."
                    ],
                    "aliases": [
                        "address_prefixes"
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "purge_address_prefixes": {
                    "default": false,
                    "description": [
                        "Use with state present to remove any existing address_prefixes."
                    ]
                },
                "purge_dns_servers": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use with state present to remove existing DNS servers, reverting to default Azure servers. Mutually exclusive with dns_servers."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                },
                "location": {
                    "default": "resource_group location",
                    "required": false,
                    "description": [
                        "Valid azure location. Defaults to location of the resource group."
                    ]
                }
            },
            "module": "azure_rm_virtualnetwork"
        },
        {
            "short_description": "Get virtual network facts.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security profile found in ~/.azure/credentials file."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only show results for a specific security group."
                    ]
                },
                "resource_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by resource group. Required when filtering by name."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'."
                    ]
                },
                "ad_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory username. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client secret. Use when authenticating with a Service Principal."
                    ]
                },
                "client_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure client ID. Use when authenticating with a Service Principal."
                    ]
                },
                "subscription_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Your Azure subscription Id."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal."
                    ]
                },
                "tenant": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Azure tenant ID. Use when authenticating with a Service Principal."
                    ]
                }
            },
            "module": "azure_rm_virtualnetwork_facts"
        },
        {
            "short_description": "Collect facts from F5 BIG-IP devices",
            "deprecated": null,
            "options": {
                "filter": {
                    "default": null,
                    "choices": [],
                    "required": false,
                    "description": [
                        "Shell-style glob matching string used to filter fact keys. Not applicable for software and system_info fact categories."
                    ],
                    "aliases": []
                },
                "include": {
                    "default": null,
                    "choices": [
                        "address_class",
                        "certificate",
                        "client_ssl_profile",
                        "device",
                        "device_group",
                        "interface",
                        "key",
                        "node",
                        "pool",
                        "rule",
                        "self_ip",
                        "software",
                        "system_info",
                        "traffic_group",
                        "trunk",
                        "virtual_address",
                        "virtual_server",
                        "vlan"
                    ],
                    "required": true,
                    "description": [
                        "Fact category or list of categories to collect"
                    ],
                    "aliases": []
                },
                "session": {
                    "default": true,
                    "choices": [],
                    "required": false,
                    "description": [
                        "BIG-IP session support; may be useful to avoid concurrency issues in certain circumstances."
                    ],
                    "aliases": []
                },
                "user": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ],
                    "aliases": []
                },
                "password": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "server": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ],
                    "aliases": []
                }
            },
            "module": "bigip_facts"
        },
        {
            "short_description": "Manages F5 BIG-IP GTM wide ip",
            "deprecated": null,
            "options": {
                "password": {
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ]
                },
                "lb_method": {
                    "required": true,
                    "description": [
                        "LB method of wide ip"
                    ],
                    "choices": [
                        "return_to_dns",
                        "null",
                        "round_robin",
                        "ratio",
                        "topology",
                        "static_persist",
                        "global_availability",
                        "vs_capacity",
                        "least_conn",
                        "lowest_rtt",
                        "lowest_hops",
                        "packet_rate",
                        "cpu",
                        "hit_ratio",
                        "qos",
                        "bps",
                        "drop_packet",
                        "explicit_ip",
                        "connection_rate",
                        "vs_score"
                    ]
                },
                "wide_ip": {
                    "required": true,
                    "description": [
                        "Wide IP name"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ]
                }
            },
            "module": "bigip_gtm_wide_ip"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM http monitors",
            "deprecated": null,
            "options": {
                "interval": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The interval specifying how frequently the monitor instance of this template will run. By default, this interval is used for up and down states. The default API setting is 5."
                    ]
                },
                "parent": {
                    "default": "http",
                    "required": false,
                    "description": [
                        "The parent template of this monitor template"
                    ]
                },
                "ip": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "IP address part of the ipport definition. The default API setting is \"0.0.0.0\"."
                    ]
                },
                "user": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ]
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ]
                },
                "port": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "port address part op the ipport definition. The default API setting is 0."
                    ]
                },
                "receive_disable": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The receive disable string for the monitor call"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Monitor name"
                    ],
                    "aliases": [
                        "monitor"
                    ]
                },
                "receive": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The receive string for the monitor call"
                    ]
                },
                "partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition for the monitor"
                    ]
                },
                "send": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The send string for the monitor call"
                    ]
                },
                "server": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Monitor state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "time_until_up": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of 0 will cause a node to be marked up immediately after a valid response is received from the node. The default API setting is 0."
                    ]
                },
                "timeout": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second. The default API setting is 16."
                    ]
                },
                "parent_partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition for the parent monitor"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "bigip_monitor_http"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM tcp monitors",
            "deprecated": null,
            "options": {
                "interval": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The interval specifying how frequently the monitor instance of this template will run. By default, this interval is used for up and down states. The default API setting is 5."
                    ]
                },
                "parent": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "The parent template of this monitor template"
                    ],
                    "choices": [
                        "tcp",
                        "tcp_echo",
                        "tcp_half_open"
                    ]
                },
                "ip": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "IP address part of the ipport definition. The default API setting is \"0.0.0.0\"."
                    ]
                },
                "user": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ]
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ]
                },
                "port": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "port address part op the ipport definition. The default API setting is 0."
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Monitor name"
                    ],
                    "aliases": [
                        "monitor"
                    ]
                },
                "receive": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The receive string for the monitor call"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition for the monitor"
                    ]
                },
                "send": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The send string for the monitor call"
                    ]
                },
                "server": {
                    "default": null,
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Monitor state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "time_until_up": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of 0 will cause a node to be marked up immediately after a valid response is received from the node. The default API setting is 0."
                    ]
                },
                "timeout": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second. The default API setting is 16."
                    ]
                },
                "parent_partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition for the parent monitor"
                    ]
                },
                "type": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "The template type of this monitor template"
                    ],
                    "choices": [
                        "TTYPE_TCP",
                        "TTYPE_TCP_ECHO",
                        "TTYPE_TCP_HALF_OPEN"
                    ]
                }
            },
            "module": "bigip_monitor_tcp"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM nodes",
            "deprecated": null,
            "options": {
                "session_state": {
                    "aliases": [],
                    "description": [
                        "Set new session availability status for node"
                    ],
                    "version_added": "1.9",
                    "default": null,
                    "required": false,
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Node name"
                    ],
                    "choices": []
                },
                "monitor_state": {
                    "aliases": [],
                    "description": [
                        "Set monitor availability status for node"
                    ],
                    "version_added": "1.9",
                    "default": null,
                    "required": false,
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "partition": {
                    "default": "Common",
                    "choices": [],
                    "required": false,
                    "description": [
                        "Partition"
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": true,
                    "description": [
                        "Pool member state"
                    ],
                    "aliases": []
                },
                "server": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ],
                    "aliases": []
                },
                "host": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Node IP. Required when state=present and node does not exist. Error when state=absent."
                    ],
                    "aliases": [
                        "address",
                        "ip"
                    ]
                },
                "user": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ],
                    "aliases": []
                },
                "password": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Node description."
                    ],
                    "choices": []
                }
            },
            "module": "bigip_node"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM pools",
            "deprecated": null,
            "options": {
                "lb_method": {
                    "aliases": [],
                    "description": [
                        "Load balancing method"
                    ],
                    "version_added": "1.3",
                    "default": "round_robin",
                    "required": false,
                    "choices": [
                        "round_robin",
                        "ratio_member",
                        "least_connection_member",
                        "observed_member",
                        "predictive_member",
                        "ratio_node_address",
                        "least_connection_node_address",
                        "fastest_node_address",
                        "observed_node_address",
                        "predictive_node_address",
                        "dynamic_ratio",
                        "fastest_app_response",
                        "least_sessions",
                        "dynamic_ratio_member",
                        "l3_addr",
                        "unknown",
                        "weighted_least_connection_member",
                        "weighted_least_connection_node_address",
                        "ratio_session",
                        "ratio_least_connection_member",
                        "ratio_least_connection_node_address"
                    ]
                },
                "quorum": {
                    "aliases": [],
                    "description": [
                        "Monitor quorum value when monitor_type is m_of_n"
                    ],
                    "version_added": "1.3",
                    "default": null,
                    "required": false,
                    "choices": []
                },
                "name": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Pool name"
                    ],
                    "aliases": [
                        "pool"
                    ]
                },
                "partition": {
                    "default": "Common",
                    "choices": [],
                    "required": false,
                    "description": [
                        "Partition of pool/pool member"
                    ],
                    "aliases": []
                },
                "slow_ramp_time": {
                    "aliases": [],
                    "description": [
                        "Sets the ramp-up time (in seconds) to gradually ramp up the load on newly added or freshly detected up pool members"
                    ],
                    "version_added": "1.3",
                    "default": null,
                    "required": false,
                    "choices": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "Pool/pool member state"
                    ],
                    "aliases": []
                },
                "service_down_action": {
                    "aliases": [],
                    "description": [
                        "Sets the action to take when node goes down in pool"
                    ],
                    "version_added": "1.3",
                    "default": null,
                    "required": false,
                    "choices": [
                        "none",
                        "reset",
                        "drop",
                        "reselect"
                    ]
                },
                "server": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ],
                    "aliases": []
                },
                "port": {
                    "default": null,
                    "choices": [],
                    "required": false,
                    "description": [
                        "Pool member port"
                    ],
                    "aliases": []
                },
                "host": {
                    "default": null,
                    "choices": [],
                    "required": false,
                    "description": [
                        "Pool member IP"
                    ],
                    "aliases": [
                        "address"
                    ]
                },
                "user": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ],
                    "aliases": []
                },
                "password": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "monitors": {
                    "aliases": [],
                    "description": [
                        "Monitor template name list. Always use the full path to the monitor."
                    ],
                    "version_added": "1.3",
                    "default": null,
                    "required": false,
                    "choices": []
                },
                "monitor_type": {
                    "aliases": [],
                    "description": [
                        "Monitor rule type when monitors > 1"
                    ],
                    "version_added": "1.3",
                    "default": null,
                    "required": false,
                    "choices": [
                        "and_list",
                        "m_of_n"
                    ]
                }
            },
            "module": "bigip_pool"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM pool members",
            "deprecated": null,
            "options": {
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Pool member description"
                    ]
                },
                "monitor_state": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set monitor availability status for pool member"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Pool member IP"
                    ],
                    "aliases": [
                        "address",
                        "name"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ]
                },
                "rate_limit": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Pool member rate limit (connections-per-second). Setting this to 0 disables the limit."
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ]
                },
                "port": {
                    "required": true,
                    "description": [
                        "Pool member port"
                    ]
                },
                "pool": {
                    "required": true,
                    "description": [
                        "Pool name. This pool must exist."
                    ]
                },
                "session_state": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set new session availability status for pool member"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "ratio": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Pool member ratio weight. Valid values range from 1 through 100. New pool members -- unless overriden with this value -- default to 1."
                    ]
                },
                "partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition"
                    ]
                },
                "connection_limit": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Pool member connection limit. Setting this to 0 disables the limit."
                    ]
                },
                "preserve_node": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When state is absent and the pool member is no longer referenced in other pools, the default behavior removes the unused node object. Setting this to 'yes' disables this behavior."
                    ],
                    "version_added": 2.1,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Pool member state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites.  Prior to 2.0, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8"
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "bigip_pool_member"
        },
        {
            "short_description": "Manages F5 BIG-IP LTM virtual servers",
            "deprecated": null,
            "options": {
                "partition": {
                    "default": "Common",
                    "required": false,
                    "description": [
                        "Partition"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Virtual server name."
                    ],
                    "aliases": [
                        "vs"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "default_persistence_profile": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Default Profile which manages the session persistence"
                    ]
                },
                "destination": {
                    "required": true,
                    "description": [
                        "Destination IP of the virtual server (only host is currently supported) . Required when state=present and vs does not exist."
                    ],
                    "aliases": [
                        "address",
                        "ip"
                    ]
                },
                "all_profiles": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of all Profiles (HTTP,ClientSSL,ServerSSL,etc) that must be used by the virtual server"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "BIG-IP host"
                    ]
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent",
                        "enabled",
                        "disabled"
                    ],
                    "required": false,
                    "description": [
                        "Virtual Server state",
                        "Absent, delete the VS if present",
                        "present (and its synonym enabled), create if needed the VS and set state to enabled",
                        "disabled, create if needed the VS and set state to disabled"
                    ],
                    "aliases": []
                },
                "user": {
                    "required": true,
                    "description": [
                        "BIG-IP username"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "BIG-IP password"
                    ]
                },
                "snat": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Source network address policy"
                    ]
                },
                "port": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Port of the virtual server . Required when state=present and vs does not exist"
                    ]
                },
                "pool": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Default pool for the virtual server"
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Virtual server description."
                    ]
                }
            },
            "module": "bigip_virtual_server"
        },
        {
            "short_description": "Notify BigPanda about deployments",
            "deprecated": null,
            "options": {
                "description": {
                    "required": false,
                    "description": [
                        "Free text description of the deployment."
                    ]
                },
                "url": {
                    "default": "https://api.bigpanda.io",
                    "required": false,
                    "description": [
                        "Base URL of the API server."
                    ]
                },
                "component": {
                    "alias": "name",
                    "required": true,
                    "description": [
                        "The name of the component being deployed. Ex: billing"
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "State of the deployment."
                    ],
                    "choices": [
                        "started",
                        "finished",
                        "failed"
                    ]
                },
                "version": {
                    "required": true,
                    "description": [
                        "The deployment version."
                    ]
                },
                "hosts": {
                    "default": "machine's hostname",
                    "alias": "host",
                    "required": false,
                    "description": [
                        "Name of affected host name. Can be a list."
                    ]
                },
                "env": {
                    "required": false,
                    "description": [
                        "The environment name, typically 'production', 'staging', etc."
                    ]
                },
                "owner": {
                    "required": false,
                    "description": [
                        "The person responsible for the deployment."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "bigpanda"
        },
        {
            "short_description": "Insert/update/remove a text block surrounded by marker lines.",
            "deprecated": null,
            "options": {
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "insertbefore": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "If specified, the block will be inserted before the last match of specified regular expression. A special value is available; C(BOF) for inserting the block at the beginning of the file.  If specified regular expresion has no matches, the block will be inserted at the end of the file."
                    ],
                    "choices": [
                        "BOF",
                        "*regex*"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "The file to modify."
                    ],
                    "aliases": [
                        "name",
                        "destfile"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "create": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a new file if it doesn't exist."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "marker": {
                    "default": "# {mark} ANSIBLE MANAGED BLOCK",
                    "required": false,
                    "description": [
                        "The marker line template. \"{mark}\" will be replaced with \"BEGIN\" or \"END\"."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the block should be there or not."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "insertafter": {
                    "default": "EOF",
                    "required": false,
                    "description": [
                        "If specified, the block will be inserted after the last match of specified regular expression. A special value is available; C(EOF) for inserting the block at the end of the file.  If specified regular expresion has no matches, C(EOF) will be used instead."
                    ],
                    "choices": [
                        "EOF",
                        "*regex*"
                    ]
                },
                "follow": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This flag indicates that filesystem links, if they exist, should be followed."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "block": {
                    "default": "",
                    "required": false,
                    "description": [
                        "The text to insert inside the marker lines. If it's missing or an empty string, the block will be removed as if C(state) were specified to C(absent)."
                    ],
                    "aliases": [
                        "content"
                    ]
                }
            },
            "module": "blockinfile"
        },
        {
            "short_description": "Manage boundary meters",
            "deprecated": null,
            "options": {
                "state": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to create or remove the client from boundary"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "apikey": {
                    "required": true,
                    "description": [
                        "Organizations boundary API KEY"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "apiid": {
                    "required": true,
                    "description": [
                        "Organizations boundary API ID"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "meter name"
                    ]
                }
            },
            "module": "boundary_meter"
        },
        {
            "short_description": "Manage bower packages with bower",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of the bower package"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "production": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Install with --production flag"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "The name of a bower package to install"
                    ]
                },
                "version": {
                    "required": false,
                    "description": [
                        "The version to be installed"
                    ]
                },
                "relative_execpath": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Relative path to bower executable from install path"
                    ],
                    "version_added": "2.1"
                },
                "path": {
                    "required": true,
                    "description": [
                        "The base path where to install the bower packages"
                    ]
                },
                "offline": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Install packages from local cache, if the packages were installed before"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "bower"
        },
        {
            "short_description": "Manage Ruby Gem dependencies with Bundler",
            "deprecated": null,
            "options": {
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the bundler executable"
                    ]
                },
                "chdir": {
                    "default": "temporary working directory",
                    "required": false,
                    "description": [
                        "The directory to execute the bundler commands from. This directoy needs to contain a valid Gemfile or .bundle/ directory"
                    ]
                },
                "gemfile": {
                    "default": "Gemfile in current directory",
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). The path to the gemfile to use to install gems."
                    ]
                },
                "clean": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). If set removes any gems on the target host that are not in the gemfile"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "user_install": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). Installs gems in the local user's cache or for all users"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "extra_args": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A space separated string of additional commands that can be applied to the Bundler command. Refer to the Bundler documentation for more information"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The desired state of the Gem bundle. C(latest) updates gems to the most recent, acceptable version"
                    ],
                    "choices": [
                        "present",
                        "latest"
                    ]
                },
                "deployment_mode": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). If set it will only install gems that are in the default or production groups. Requires a Gemfile.lock file to have been created prior"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "binstub_directory": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). Specifies the directory to install any gem bins files to. When executed the bin files will run within the context of the Gemfile and fail if any required gem dependencies are not installed. If C(chdir) is set then this path is relative to C(chdir)"
                    ]
                },
                "exclude_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of Gemfile groups to exclude during operations. This only applies when state is C(present). Bundler considers this a 'remembered' property for the Gemfile and will automatically exclude groups in future operations even if C(exclude_groups) is not set"
                    ]
                },
                "local": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set only installs gems from the cache on the target host"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "gem_path": {
                    "default": "RubyGems gem paths",
                    "required": false,
                    "description": [
                        "Only applies if state is C(present). Specifies the directory to install the gems into. If C(chdir) is set then this path is relative to C(chdir)"
                    ]
                }
            },
            "module": "bundler"
        },
        {
            "short_description": "Deploy software (or files) from bzr branches",
            "deprecated": null,
            "options": {
                "dest": {
                    "required": true,
                    "description": [
                        "Absolute path of where the branch should be cloned to."
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to bzr executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
                    ],
                    "version_added": "1.4"
                },
                "version": {
                    "default": "head",
                    "required": false,
                    "description": [
                        "What version of the branch to clone.  This can be the bzr revno or revid."
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), any modified files in the working tree will be discarded.  Before 1.9 the default value was \"yes\"."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "SSH or HTTP protocol address of the parent branch."
                    ],
                    "aliases": [
                        "parent"
                    ]
                }
            },
            "module": "bzr"
        },
        {
            "short_description": "Send a message to Campfire",
            "deprecated": null,
            "options": {
                "msg": {
                    "required": true,
                    "description": [
                        "The message body."
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token."
                    ]
                },
                "subscription": {
                    "required": true,
                    "description": [
                        "The subscription name to use."
                    ]
                },
                "notify": {
                    "required": false,
                    "description": [
                        "Send a notification sound before the message."
                    ],
                    "choices": [
                        "56k",
                        "bell",
                        "bezos",
                        "bueller",
                        "clowntown",
                        "cottoneyejoe",
                        "crickets",
                        "dadgummit",
                        "dangerzone",
                        "danielsan",
                        "deeper",
                        "drama",
                        "greatjob",
                        "greyjoy",
                        "guarantee",
                        "heygirl",
                        "horn",
                        "horror",
                        "inconceivable",
                        "live",
                        "loggins",
                        "makeitso",
                        "noooo",
                        "nyan",
                        "ohmy",
                        "ohyeah",
                        "pushit",
                        "rimshot",
                        "rollout",
                        "rumble",
                        "sax",
                        "secret",
                        "sexyback",
                        "story",
                        "tada",
                        "tmyk",
                        "trololo",
                        "trombone",
                        "unix",
                        "vuvuzela",
                        "what",
                        "whoomp",
                        "yeah",
                        "yodel"
                    ]
                },
                "room": {
                    "required": true,
                    "description": [
                        "Room number to which the message should be sent."
                    ]
                }
            },
            "module": "campfire"
        },
        {
            "short_description": "Manage Linux capabilities",
            "deprecated": null,
            "options": {
                "capability": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Desired capability to set (with operator and flags, if state is C(present)) or remove (if state is C(absent))"
                    ],
                    "aliases": [
                        "cap"
                    ]
                },
                "path": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Specifies the path to the file to be managed."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Whether the entry should be present or absent in the file's capabilities."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                }
            },
            "module": "capabilities"
        },
        {
            "short_description": "create an annotation in circonus",
            "deprecated": null,
            "options": {
                "category": {
                    "required": true,
                    "description": [
                        "Annotation Category"
                    ]
                },
                "start": {
                    "required": false,
                    "description": [
                        "Unix timestamp of event start, defaults to now"
                    ]
                },
                "description": {
                    "required": true,
                    "description": [
                        "Description of annotation"
                    ]
                },
                "title": {
                    "required": true,
                    "description": [
                        "Title of annotation"
                    ]
                },
                "duration": {
                    "required": false,
                    "description": [
                        "Duration in seconds of annotation, defaults to 0"
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "Circonus API key"
                    ]
                },
                "stop": {
                    "required": false,
                    "description": [
                        "Unix timestamp of event end, defaults to now + duration"
                    ]
                }
            },
            "module": "circonus_annotation"
        },
        {
            "short_description": "Configures a bond port on Cumulus Linux",
            "deprecated": null,
            "options": {
                "clag_id": {
                    "description": [
                        "specify a unique clag_id for every dual connected bond on each peer switch. The value must be between 1 and 65535 and must be the same on both peer switches in order for the bond to be considered dual-connected"
                    ]
                },
                "lacp_rate": {
                    "default": 1,
                    "description": [
                        "lacp rate"
                    ]
                },
                "xmit_hash_policy": {
                    "default": "layer3+4",
                    "description": [
                        "transmit load balancing algorithm. As of Cumulus Linux 2.5 only layer3+4 policy is supported"
                    ]
                },
                "miimon": {
                    "default": 100,
                    "description": [
                        "mii link monitoring interval"
                    ]
                },
                "mstpctl_portadminedge": {
                    "description": [
                        "Enables admin edge port"
                    ]
                },
                "mode": {
                    "default": "802.3ad",
                    "description": [
                        "bond mode. as of Cumulus Linux 2.5 only LACP bond mode is supported"
                    ]
                },
                "lacp_bypass_allow": {
                    "description": [
                        "Enable LACP bypass."
                    ]
                },
                "lacp_bypass_all_active": {
                    "description": [
                        "Activate all interfaces for bypass. It is recommended to configure all_active instead of using bypass_priority."
                    ]
                },
                "virtual_mac": {
                    "description": [
                        "define Ethernet mac associated with Cumulus Linux VRR feature"
                    ]
                },
                "min_links": {
                    "default": 1,
                    "description": [
                        "minimum number of links"
                    ]
                },
                "lacp_bypass_period": {
                    "description": [
                        "Period for enabling LACP bypass. Max value is 900."
                    ]
                },
                "alias_name": {
                    "description": [
                        "add a port description"
                    ]
                },
                "lacp_bypass_priority": {
                    "description": [
                        "List of ports and priorities. Example \"swp1=10, swp2=20\""
                    ]
                },
                "addr_method": {
                    "description": [
                        "configures the port to use DHCP. To enable this feature use the option 'dhcp'"
                    ],
                    "choices": [
                        "dhcp"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the interface"
                    ]
                },
                "mstpctl_bpduguard": {
                    "description": [
                        "Enables BPDU Guard on a port in vlan-aware mode"
                    ]
                },
                "location": {
                    "default": [
                        "/etc/network/interfaces.d"
                    ],
                    "description": [
                        "interface directory location"
                    ]
                },
                "mtu": {
                    "description": [
                        "set MTU. Configure Jumbo Frame by setting MTU to 9000."
                    ]
                },
                "pvid": {
                    "description": [
                        "in vlan aware mode, defines vlan that is the untagged vlan"
                    ]
                },
                "ipv4": {
                    "description": [
                        "list of IPv4 addresses to configure on the interface. use X.X.X.X/YY syntax."
                    ]
                },
                "slaves": {
                    "required": true,
                    "description": [
                        "bond members"
                    ]
                },
                "ipv6": {
                    "description": [
                        "list of IPv6 addresses  to configure on the interface. use X:X:X::X/YYY syntax"
                    ]
                },
                "vids": {
                    "description": [
                        "in vlan aware mode, lists vlans defined under the interface"
                    ]
                },
                "mstpctl_portnetwork": {
                    "description": [
                        "Enables bridge assurance in vlan-aware mode"
                    ]
                },
                "virtual_ip": {
                    "description": [
                        "define IPv4 virtual IP used by the Cumulus Linux VRR feature"
                    ]
                }
            },
            "module": "cl_bond"
        },
        {
            "short_description": "Configures a bridge port on Cumulus Linux",
            "deprecated": null,
            "options": {
                "addr_method": {
                    "description": [
                        "configures the port to use DHCP. To enable this feature use the option 'dhcp'"
                    ],
                    "choices": [
                        "dhcp"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the interface"
                    ]
                },
                "virtual_ip": {
                    "description": [
                        "define IPv4 virtual IP used by the Cumulus Linux VRR feature"
                    ]
                },
                "vlan_aware": {
                    "description": [
                        "enables vlan aware mode."
                    ]
                },
                "mstpctl_treeprio": {
                    "description": [
                        "set spanning tree root priority. Must be a multiple of 4096"
                    ]
                },
                "virtual_mac": {
                    "description": [
                        "define Ethernet mac associated with Cumulus Linux VRR feature"
                    ]
                },
                "mtu": {
                    "description": [
                        "set MTU. Configure Jumbo Frame by setting MTU to 9000."
                    ]
                },
                "pvid": {
                    "description": [
                        "in vlan aware mode, defines vlan that is the untagged vlan"
                    ]
                },
                "stp": {
                    "default": "yes",
                    "description": [
                        "enables spanning tree. As of Cumulus Linux 2.5 the default bridging mode, only per vlan RSTP or 802.1d is supported. For the vlan aware mode, only common instance STP is supported"
                    ]
                },
                "location": {
                    "default": [
                        "/etc/network/interfaces.d"
                    ],
                    "description": [
                        "interface directory location"
                    ]
                },
                "ipv6": {
                    "description": [
                        "list of IPv6 addresses  to configure on the interface. use X:X:X::X/YYY syntax"
                    ]
                },
                "vids": {
                    "description": [
                        "in vlan aware mode, lists vlans defined under the interface"
                    ]
                },
                "alias_name": {
                    "description": [
                        "add a port description"
                    ]
                },
                "ports": {
                    "required": true,
                    "description": [
                        "list of bridge members"
                    ]
                },
                "ipv4": {
                    "description": [
                        "list of IPv4 addresses to configure on the interface. use X.X.X.X/YY syntax."
                    ]
                }
            },
            "module": "cl_bridge"
        },
        {
            "short_description": "Install a different Cumulus Linux version.",
            "deprecated": null,
            "options": {
                "src": {
                    "required": true,
                    "description": [
                        "full path to the Cumulus Linux binary image. Can be a local path, http or https URL. If the code version is in the name of the file, the module will assume this is the version of code you wish to install."
                    ]
                },
                "version": {
                    "description": [
                        "inform the module of the exact version one is installing. This overrides the automatic check of version in the file name. For example, if the binary file name is called CumulusLinux-2.2.3.bin, and version is set to '2.5.0', then the module will assume it is installing '2.5.0' not '2.2.3'. If version is not included, then the module will assume '2.2.3' is the version to install."
                    ]
                },
                "switch_slot": {
                    "default": "no",
                    "description": [
                        "Switch slots after installing the image. To run the installed code, reboot the switch"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "cl_img_install"
        },
        {
            "short_description": "Configures a front panel port, loopback or management port on Cumulus Linux.",
            "deprecated": null,
            "options": {
                "clagd_sys_mac": {
                    "description": [
                        "Clagd system mac address. Recommended to use the range starting with 44:38:39:ff. Needs to be the same between 2 Clag switches"
                    ]
                },
                "ipv6": {
                    "description": [
                        "list of IPv6 addresses  to configure on the interface. use X:X:X::X/YYY syntax"
                    ]
                },
                "virtual_mac": {
                    "description": [
                        "define Ethernet mac associated with Cumulus VRR feature"
                    ]
                },
                "alias_name": {
                    "description": [
                        "add a port description"
                    ]
                },
                "mstpctl_portadminedge": {
                    "description": [
                        "Enables admin edge port"
                    ]
                },
                "speed": {
                    "description": [
                        "set speed of the swp(front panel) or management(eth0) interface. speed is in MB"
                    ]
                },
                "virtual_ip": {
                    "description": [
                        "define IPv4 virtual IP used by the Cumulus VRR feature"
                    ]
                },
                "addr_method": {
                    "description": [
                        "can be loopback for loopback interfaces or dhcp for dhcp interfaces."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the interface"
                    ]
                },
                "clagd_enable": {
                    "description": [
                        "Enables the clagd daemon. This command should only be applied to the clag peerlink interface"
                    ]
                },
                "mstpctl_bpduguard": {
                    "description": [
                        "Enables BPDU Guard on a port in vlan-aware mode"
                    ]
                },
                "clagd_priority": {
                    "description": [
                        "Integer that changes the role the switch has in the clag domain. The lower priority switch will assume the primary role. The number can be between 0 and 65535"
                    ]
                },
                "mtu": {
                    "description": [
                        "set MTU. Configure Jumbo Frame by setting MTU to 9000."
                    ]
                },
                "pvid": {
                    "description": [
                        "in vlan aware mode, defines vlan that is the untagged vlan"
                    ]
                },
                "location": {
                    "default": [
                        "/etc/network/interfaces.d"
                    ],
                    "description": [
                        "interface directory location"
                    ]
                },
                "clagd_peer_ip": {
                    "description": [
                        "IP address of the directly connected peer switch interface"
                    ]
                },
                "vids": {
                    "description": [
                        "in vlan aware mode, lists vlans defined under the interface"
                    ]
                },
                "mstpctl_portnetwork": {
                    "description": [
                        "Enables bridge assurance in vlan-aware mode"
                    ]
                },
                "ipv4": {
                    "description": [
                        "list of IPv4 addresses to configure on the interface. use X.X.X.X/YY syntax."
                    ]
                }
            },
            "module": "cl_interface"
        },
        {
            "short_description": "Configure interface enforcement policy on Cumulus Linux",
            "deprecated": null,
            "options": {
                "location": {
                    "default": "/etc/network/interfaces.d/",
                    "description": [
                        "folder to store interface files."
                    ]
                },
                "allowed": {
                    "description": [
                        "list of ports to run initial run at 10G"
                    ]
                }
            },
            "module": "cl_interface_policy"
        },
        {
            "short_description": "Install Cumulus Linux license",
            "deprecated": null,
            "options": {
                "src": {
                    "description": [
                        "full path to the license. Can be local path or http url"
                    ]
                },
                "force": {
                    "description": [
                        "force installation of a license. Typically not needed. It is recommended to manually run this command via the ansible command. A reload of switchd is not required. Running the force option in a playbook will break the idempotent state machine of the module and cause the switchd notification to kick in all the time, causing a disruption."
                    ]
                }
            },
            "module": "cl_license"
        },
        {
            "short_description": "Configure Cumulus Switch port attributes (ports.conf)",
            "deprecated": null,
            "options": {
                "speed_4_by_10g": {
                    "description": [
                        "list of 40G ports that will be unganged to run as 4 10G ports."
                    ]
                },
                "speed_10g": {
                    "description": [
                        "list of ports to run initial run at 10G"
                    ]
                },
                "speed_40g": {
                    "description": [
                        "list of ports to run initial run at 40G"
                    ]
                },
                "speed_40g_div_4": {
                    "description": [
                        "list of 10G ports that will be ganged to form a 40G port"
                    ]
                }
            },
            "module": "cl_ports"
        },
        {
            "short_description": "Create or Delete Anti Affinity Policies at CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create or delete the policy."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "location": {
                    "required": true,
                    "description": [
                        "Datacenter in which the policy lives/should live."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the Anti Affinity Policy."
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_aa_policy"
        },
        {
            "short_description": "Create or Delete Alert Policies at CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the alert policy. This is mutually exclusive with id"
                    ]
                },
                "metric": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The metric on which to measure the condition that will trigger the alert. This is required for state 'present'"
                    ],
                    "choices": [
                        "cpu",
                        "memory",
                        "disk"
                    ]
                },
                "alert_recipients": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of recipient email ids to notify the alert. This is required for state 'present'"
                    ]
                },
                "alias": {
                    "required": true,
                    "description": [
                        "The alias of your CLC Account"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create or delete the policy."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "threshold": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The threshold that will trigger the alert when the metric equals or exceeds it. This is required for state 'present' This number represents a percentage and must be a value between 5.0 - 95.0 that is a multiple of 5.0"
                    ]
                },
                "id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The alert policy id. This is mutually exclusive with name"
                    ]
                },
                "duration": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The length of time in minutes that the condition must exceed the threshold. This is required for state 'present'"
                    ]
                }
            },
            "module": "clc_alert_policy"
        },
        {
            "short_description": "deploys a blue print package on a set of servers in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "server_ids": {
                    "required": true,
                    "description": [
                        "A list of server Ids to deploy the blue print package."
                    ]
                },
                "package_id": {
                    "required": true,
                    "description": [
                        "The package id of the blue print."
                    ]
                },
                "package_params": {
                    "default": {},
                    "required": false,
                    "description": [
                        "The dictionary of arguments required to deploy the blue print."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to install or un-install the package. Currently it supports only \"present\" for install action."
                    ],
                    "choices": [
                        "present"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_blueprint_package"
        },
        {
            "short_description": "Create/delete/update firewall policies",
            "deprecated": null,
            "options": {
                "destination_account_alias": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "CLC alias for the destination account"
                    ]
                },
                "destination": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The list of destination addresses for traffic on the terminating firewall. This is required when state is 'present'"
                    ]
                },
                "enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether the firewall policy is enabled or disabled"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "location": {
                    "required": true,
                    "description": [
                        "Target datacenter for the firewall policy"
                    ]
                },
                "source": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The list  of source addresses for traffic on the originating firewall. This is required when state is 'present\""
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create or delete the firewall policy"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "firewall_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Id of the firewall policy. This is required to update or delete an existing firewall policy"
                    ]
                },
                "source_account_alias": {
                    "required": true,
                    "description": [
                        "CLC alias for the source account"
                    ]
                },
                "ports": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The list of ports associated with the policy. TCP and UDP can take in single ports or port ranges."
                    ],
                    "choices": [
                        "any",
                        "icmp",
                        "TCP/123",
                        "UDP/123",
                        "TCP/123-456",
                        "UDP/123-456"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the provisioning tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_firewall_policy"
        },
        {
            "short_description": "Create/delete Server Groups at Centurylink Cloud",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "description": [
                        "Whether to create or delete the group"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the Server Group"
                    ]
                },
                "parent": {
                    "required": false,
                    "description": [
                        "The parent group of the server group. If parent is not provided, it creates the group at top level."
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "location": {
                    "required": false,
                    "description": [
                        "Datacenter to create the group in. If location is not provided, the group gets created in the default datacenter associated with the account"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "A description of the Server Group"
                    ]
                }
            },
            "module": "clc_group"
        },
        {
            "short_description": "Create, Delete shared loadbalancers in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "status": {
                    "default": "enabled",
                    "required": false,
                    "description": [
                        "The status of the loadbalancer"
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the loadbalancer"
                    ]
                },
                "method": {
                    "default": "None",
                    "required": false,
                    "description": "-The balancing method for the load balancer pool",
                    "choices": [
                        "leastConnection",
                        "roundRobin"
                    ]
                },
                "alias": {
                    "required": true,
                    "description": [
                        "The alias of your CLC Account"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create or delete the load balancer pool"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "port_absent",
                        "nodes_present",
                        "nodes_absent"
                    ]
                },
                "location": {
                    "required": true,
                    "description": [
                        "The location of the datacenter where the load balancer resides in"
                    ]
                },
                "nodes": {
                    "default": [],
                    "required": false,
                    "description": [
                        "A list of nodes that needs to be added to the load balancer pool"
                    ]
                },
                "port": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Port to configure on the public-facing side of the load balancer pool"
                    ],
                    "choices": [
                        80,
                        443
                    ]
                },
                "persistence": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The persistence method for the load balancer"
                    ],
                    "choices": [
                        "standard",
                        "sticky"
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A description for the loadbalancer"
                    ]
                }
            },
            "module": "clc_loadbalancer"
        },
        {
            "short_description": "modify servers in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "alert_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The alert policy id to be associated to the server. This is mutually exclusive with 'alert_policy_name'"
                    ]
                },
                "anti_affinity_policy_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The anti affinity policy name to be set for a hyper scale server. This is mutually exclusive with 'anti_affinity_policy_id'"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state to insure that the provided resources are in."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "anti_affinity_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The anti affinity policy id to be set for a hyper scale server. This is mutually exclusive with 'anti_affinity_policy_name'"
                    ]
                },
                "alert_policy_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The alert policy name to be associated to the server. This is mutually exclusive with 'alert_policy_id'"
                    ]
                },
                "memory": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Memory (in GB) to set to the server."
                    ]
                },
                "server_ids": {
                    "required": true,
                    "description": [
                        "A list of server Ids to modify."
                    ]
                },
                "cpu": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How many CPUs to update on the server"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the provisioning tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_modify_server"
        },
        {
            "short_description": "Add and Delete public ips on servers in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "server_ids": {
                    "required": true,
                    "description": [
                        "A list of servers to create public ips on."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Determine whether to create or delete public IPs. If present module will not create a second public ip if one already exists."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "protocol": {
                    "default": "TCP",
                    "required": false,
                    "description": [
                        "The protocol that the public IP will listen for."
                    ],
                    "choices": [
                        "TCP",
                        "UDP",
                        "ICMP"
                    ]
                },
                "ports": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of ports to expose. This is required when state is 'present'"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_publicip"
        },
        {
            "short_description": "Create, Delete, Start and Stop servers in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "cpu_autoscale_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The autoscale policy to assign to the server."
                    ]
                },
                "anti_affinity_policy_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The anti-affinity policy to assign to the server. This is mutually exclusive with 'anti_affinity_policy_id'."
                    ]
                },
                "storage_type": {
                    "default": "standard",
                    "required": false,
                    "description": [
                        "The type of storage to attach to the server."
                    ],
                    "choices": [
                        "standard",
                        "hyperscale"
                    ]
                },
                "anti_affinity_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The anti-affinity policy to assign to the server. This is mutually exclusive with 'anti_affinity_policy_name'."
                    ]
                },
                "ttl": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The time to live for the server in seconds.  The server will be deleted when this time expires."
                    ]
                },
                "count_group": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Required when exact_count is specified.  The Server Group use to determine how many severs to deploy."
                    ]
                },
                "secondary_dns": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Secondary DNS used by the server."
                    ]
                },
                "custom_fields": {
                    "default": [],
                    "required": false,
                    "description": [
                        "The list of custom fields to set on the server."
                    ]
                },
                "packages": {
                    "default": [],
                    "required": false,
                    "description": [
                        "The list of blue print packages to run on the server after its created."
                    ]
                },
                "group": {
                    "default": "Default Group",
                    "required": false,
                    "description": [
                        "The Server Group to create servers under."
                    ]
                },
                "exact_count": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Run in idempotent mode.  Will insure that this exact number of servers are running in the provided group, creating and deleting them to reach that count.  Requires count_group to be set."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state to insure that the provided resources are in."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "started",
                        "stopped"
                    ]
                },
                "location": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The Datacenter to create servers in."
                    ]
                },
                "template": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The template to use for server creation.  Will search for a template if a partial string is provided. This is required when state is 'present'"
                    ]
                },
                "memory": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Memory in GB."
                    ]
                },
                "server_ids": {
                    "default": [],
                    "required": false,
                    "description": [
                        "Required for started, stopped, and absent states. A list of server Ids to insure are started, stopped, or absent."
                    ]
                },
                "type": {
                    "default": "standard",
                    "required": false,
                    "description": [
                        "The type of server to create."
                    ],
                    "choices": [
                        "standard",
                        "hyperscale",
                        "bareMetal"
                    ]
                },
                "managed_os": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to create the server as 'Managed' or not."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "additional_disks": {
                    "default": [],
                    "required": false,
                    "description": [
                        "The list of additional disks for the server"
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The description to set for the server."
                    ]
                },
                "add_public_ip": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to add a public ip to the server"
                    ],
                    "choices": [
                        false,
                        true
                    ]
                },
                "alert_policy_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The alert policy to assign to the server. This is mutually exclusive with 'alert_policy_name'."
                    ]
                },
                "alert_policy_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The alert policy to assign to the server. This is mutually exclusive with 'alert_policy_id'."
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Password for the administrator / root user"
                    ]
                },
                "ip_address": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The IP Address for the server. One is assigned if not provided."
                    ]
                },
                "public_ip_protocol": {
                    "default": "TCP",
                    "required": false,
                    "description": [
                        "The protocol to use for the public ip if add_public_ip is set to True."
                    ],
                    "choices": [
                        "TCP",
                        "UDP",
                        "ICMP"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the provisioning tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "count": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The number of servers to build (mutually exclusive with exact_count)"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A 1 to 6 character identifier to use for the server. This is required when state is 'present'"
                    ]
                },
                "network_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The network UUID on which to create servers."
                    ]
                },
                "primary_dns": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Primary DNS used by the server."
                    ]
                },
                "alias": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The account alias to provision the servers under."
                    ]
                },
                "public_ip_ports": {
                    "default": [],
                    "required": false,
                    "description": [
                        "A list of ports to allow on the firewall to the servers public ip, if add_public_ip is set to True."
                    ]
                },
                "source_server_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The password for the source server if a clone is specified."
                    ]
                },
                "os_type": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Only required for bare metal servers. Specifies the OS to provision with the bare metal server."
                    ],
                    "choices": [
                        "redHat6_64Bit",
                        "centOS6_64Bit",
                        "windows2012R2Standard_64Bit",
                        "ubuntu14_64Bit"
                    ]
                },
                "configuration_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Only required for bare metal servers. Specifies the identifier for the specific configuration type of bare metal server to deploy."
                    ]
                },
                "cpu": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "How many CPUs to provision on the server"
                    ]
                }
            },
            "module": "clc_server"
        },
        {
            "short_description": "Create, Delete and Restore server snapshots in CenturyLink Cloud.",
            "deprecated": null,
            "options": {
                "server_ids": {
                    "required": true,
                    "description": [
                        "The list of CLC server Ids."
                    ]
                },
                "expiration_days": {
                    "default": 7,
                    "required": false,
                    "description": [
                        "The number of days to keep the server snapshot before it expires."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state to insure that the provided resources are in."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "restore"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to wait for the provisioning tasks to finish before returning."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "clc_server_snapshot"
        },
        {
            "short_description": "manage Cloudflare DNS records",
            "deprecated": null,
            "options": {
                "solo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Whether the record should be the only one for that record type and record name. Only use with C(state=present)",
                        "This will delete all other records with the same record name and type."
                    ]
                },
                "account_email": {
                    "required": true,
                    "description": [
                        "Account email."
                    ]
                },
                "weight": {
                    "default": "1",
                    "required": false,
                    "description": "Service weight. Required for C(type=SRV)"
                },
                "proto": {
                    "default": null,
                    "required": false,
                    "description": "Service protocol. Required for C(type=SRV)",
                    "choices": [
                        "tcp",
                        "udp"
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The record value. Required for C(state=present)"
                    ],
                    "aliases": [
                        "content"
                    ]
                },
                "priority": {
                    "default": "1",
                    "required": false,
                    "description": "Record priority. Required for C(type=MX) and C(type=SRV)"
                },
                "record": {
                    "default": "@",
                    "required": false,
                    "description": [
                        "Record to add. Required if C(state=present). Default is C(@) (e.g. the zone name)"
                    ],
                    "aliases": [
                        "name"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the record(s) should exist or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "service": {
                    "default": null,
                    "required": false,
                    "description": "Record service. Required for C(type=SRV)"
                },
                "timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "Timeout for Cloudflare API calls"
                    ]
                },
                "ttl": {
                    "default": "1 (automatic)",
                    "required": false,
                    "description": [
                        "The TTL to give the new record. Min 1 (automatic), max 2147483647"
                    ]
                },
                "zone": {
                    "required": true,
                    "description": [
                        "The name of the Zone to work with (e.g. \"example.com\"). The Zone must already exist."
                    ],
                    "aliases": [
                        "domain"
                    ]
                },
                "type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of DNS record to create. Required if C(state=present)"
                    ],
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "TXT",
                        "SRV",
                        "MX",
                        "NS",
                        "SPF"
                    ]
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": "Service port. Required for C(type=SRV)"
                },
                "account_api_token": {
                    "required": true,
                    "description": [
                        "Account API token. You can obtain your API key from the bottom of the Cloudflare 'My Account' page, found here: U(https://www.cloudflare.com/a/account)"
                    ]
                }
            },
            "module": "cloudflare_dns"
        },
        {
            "short_description": "Create or delete an AWS CloudFormation stack",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "disable_rollback": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "If a stacks fails to form, rollback will remove the stack"
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "notification_arns": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The Simple Notification Service (SNS) topic ARNs to publish stack related events."
                    ],
                    "version_added": "2.0"
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of tags to associate with stack and it's resources during stack creation. Cannot be updated later. Requires at least Boto version 2.6.0."
                    ],
                    "version_added": "1.4"
                },
                "stack_name": {
                    "required": true,
                    "description": [
                        "name of the cloudformation stack"
                    ]
                },
                "stack_policy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the path of the cloudformation stack policy"
                    ],
                    "version_added": "1.9"
                },
                "region": {
                    "required": true,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used."
                    ],
                    "version_added": "1.5",
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "template_format": {
                    "default": "json",
                    "required": false,
                    "description": [
                        "For local templates, allows specification of json or yaml format"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "json",
                        "yaml"
                    ]
                },
                "template_parameters": {
                    "default": {},
                    "required": false,
                    "description": [
                        "a list of hashes of all the template variables for the stack"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "If state is \"present\", stack will be created.  If state is \"present\" and if stack exists and template has changed, it will be updated. If state is \"absent\", stack will be removed."
                    ]
                },
                "template_url": {
                    "required": false,
                    "description": [
                        "Location of file containing the template body. The URL must point to a template (max size 307,200 bytes) located in an S3 bucket in the same region as the stack. This parameter is mutually exclusive with 'template'. Either one of them is required if \"state\" parameter is \"present\""
                    ],
                    "version_added": "2.0"
                },
                "template": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The local path of the cloudformation template. This parameter is mutually exclusive with 'template_url'. Either one of them is required if \"state\" parameter is \"present\" Must give full path to the file, relative to the working directory. If using roles this may look like \"roles/cloudformation/files/cloudformation-example.json\""
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "cloudformation"
        },
        {
            "short_description": "manage CloudTrail creation and deletion",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "description": [
                        "name for given CloudTrail configuration.",
                        "This is a primary key and is used to identify the configuration."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used."
                    ],
                    "version_added": "1.5",
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "include_global_events": {
                    "default": false,
                    "required": false,
                    "description": [
                        "record API calls from global services such as IAM and STS?"
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "s3_bucket_prefix": {
                    "required": false,
                    "description": [
                        "bucket to place CloudTrail in.",
                        "this bucket should exist and have the proper policy. See U(http://docs.aws.amazon.com/awscloudtrail/latest/userguide/aggregating_logs_regions_bucket_policy.html)",
                        "required when state=enabled."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "add or remove CloudTrail configuration."
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "s3_key_prefix": {
                    "required": false,
                    "description": [
                        "prefix to keys in bucket. A trailing slash is not necessary and will be removed."
                    ]
                }
            },
            "module": "cloudtrail"
        },
        {
            "short_description": "Executes a command on a remote node",
            "deprecated": null,
            "options": {
                "warn": {
                    "default": true,
                    "required": false,
                    "description": [
                        "if command warnings are on in ansible.cfg, do not warn about this particular line if set to no/false."
                    ],
                    "version_added": "1.8"
                },
                "creates": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename or (since 2.0) glob pattern, when it already exists, this step will B(not) be run."
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "change the shell used to execute the command. Should be an absolute path to the executable."
                    ],
                    "version_added": "0.9"
                },
                "chdir": {
                    "default": null,
                    "required": false,
                    "description": [
                        "cd into this directory before running the command"
                    ],
                    "version_added": "0.6"
                },
                "removes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename or (since 2.0) glob pattern, when it does not exist, this step will B(not) be run."
                    ],
                    "version_added": "0.8"
                },
                "free_form": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the command module takes a free form command to run.  There is no parameter actually named 'free form'. See the examples!"
                    ]
                }
            },
            "module": "command"
        },
        {
            "short_description": "Dependency Manager for PHP",
            "deprecated": null,
            "options": {
                "no_scripts": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Skips the execution of all scripts defined in composer.json ( see --no-scripts )"
                    ],
                    "aliases": [
                        "no-scripts"
                    ]
                },
                "prefer_source": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Forces installation from package sources when possible ( see --prefer-source )"
                    ],
                    "aliases": [
                        "prefer-source"
                    ]
                },
                "prefer_dist": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Forces installation from package dist even for dev versions ( see --prefer-dist )"
                    ],
                    "aliases": [
                        "prefer-dist"
                    ]
                },
                "working_dir": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Directory of your project ( see --working-dir )"
                    ],
                    "aliases": [
                        "working-dir"
                    ]
                },
                "command": {
                    "default": "install",
                    "required": false,
                    "description": [
                        "Composer command like \"install\", \"update\" and so on"
                    ],
                    "version_added": "1.8"
                },
                "arguments": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Composer arguments like required package, version and so on"
                    ],
                    "version_added": "2.0"
                },
                "ignore_platform_reqs": {
                    "aliases": [
                        "ignore-platform-reqs"
                    ],
                    "description": [
                        "Ignore php, hhvm, lib-* and ext-* requirements and force the installation even if the local machine does not fulfill these."
                    ],
                    "version_added": "2.0",
                    "default": "no",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "no_dev": {
                    "default": "yes",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Disables installation of require-dev packages ( see --no-dev )"
                    ],
                    "aliases": [
                        "no-dev"
                    ]
                },
                "no_plugins": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Disables all plugins ( see --no-plugins )"
                    ],
                    "aliases": [
                        "no-plugins"
                    ]
                },
                "optimize_autoloader": {
                    "default": "yes",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Optimize autoloader during autoloader dump ( see --optimize-autoloader ). Convert PSR-0/4 autoloading to classmap to get a faster autoloader. This is recommended especially for production, but can take a bit of time to run so it is currently not done by default."
                    ],
                    "aliases": [
                        "optimize-autoloader"
                    ]
                }
            },
            "module": "composer"
        },
        {
            "short_description": "Add, modify & delete services within a consul cluster.",
            "deprecated": null,
            "options": {
                "service_address": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the address to advertise that the service will be listening on. This value will be passed as the I(Address) parameter to Consul's U(/v1/agent/service/register) API method, so refer to the Consul API documentation for further details."
                    ],
                    "version_added": "2.1"
                },
                "http": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "checks can be registered with an http endpoint. This means that consul will check that the http endpoint returns a successful http status. Interval must also be provided with this option."
                    ],
                    "version_added": "2.0"
                },
                "tags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "a list of tags that will be attached to the service registration."
                    ]
                },
                "check_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "a name for the service check, defaults to the check id. required if standalone, ignored if part of service definition."
                    ]
                },
                "service_name": {
                    "required": false,
                    "description": [
                        "Unique name for the service on a node, must be unique per node, required if registering a service. May be ommitted if registering a node level check"
                    ]
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "host of the consul agent defaults to localhost"
                    ]
                },
                "ttl": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "checks can be registered with a ttl instead of a script and interval this means that the service will check in with the agent before the ttl expires. If it doesn't the check will be considered failed. Required if registering a check and the script an interval are missing Similar to the interval this is a number with a s or m suffix to signify the units of seconds or minutes e.g 15s or 1m. If no suffix is supplied, m will be used by default e.g. 1 will be 1m"
                    ]
                },
                "port": {
                    "default": 8500,
                    "required": false,
                    "description": [
                        "the port on which the consul agent is running"
                    ]
                },
                "script": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the script/command that will be run periodically to check the health of the service. Scripts require an interval and vise versa"
                    ]
                },
                "check_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "an ID for the service check, defaults to the check name, ignored if part of a service definition."
                    ]
                },
                "service_port": {
                    "required": false,
                    "description": [
                        "the port on which the service is listening required for registration of a service, i.e. if service_name or service_id is set"
                    ]
                },
                "notes": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Notes to attach to check when registering it."
                    ]
                },
                "interval": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the interval at which the service check will be run. This is a number with a s or m suffix to signify the units of seconds or minutes e.g 15s or 1m. If no suffix is supplied, m will be used by default e.g. 1 will be 1m. Required if the script param is specified."
                    ]
                },
                "token": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the token key indentifying an ACL rule set. May be required to register services."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the consul service, defaults to present"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A custom HTTP check timeout. The consul default is 10 seconds. Similar to the interval this is a number with a s or m suffix to signify the units of seconds or minutes, e.g. 15s or 1m."
                    ],
                    "version_added": "2.0"
                },
                "service_id": {
                    "default": "service_name if supplied",
                    "required": false,
                    "description": [
                        "the ID for the service, must be unique per node, defaults to the service name if the service name is supplied"
                    ]
                },
                "scheme": {
                    "default": "http",
                    "required": false,
                    "description": [
                        "the protocol scheme on which the consul agent is running"
                    ],
                    "version_added": "2.1"
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether to verify the tls certificate of the consul agent"
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "consul"
        },
        {
            "short_description": "manipulate consul acl keys and rules",
            "deprecated": null,
            "options": {
                "name": {
                    "required": false,
                    "description": [
                        "the name that should be associated with the acl key, this is opaque to Consul"
                    ]
                },
                "rules": {
                    "required": false,
                    "description": [
                        "an list of the rules that should be associated with a given token."
                    ]
                },
                "type": {
                    "description": [
                        "the type of token that should be created, either management or client, defaults to client"
                    ],
                    "choices": [
                        "client",
                        "management"
                    ]
                },
                "state": {
                    "required": false,
                    "description": [
                        "whether the ACL pair should be present or absent, defaults to present"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "token": {
                    "required": false,
                    "description": [
                        "the token key indentifying an ACL rule set. If generated by consul this will be a UUID."
                    ]
                },
                "mgmt_token": {
                    "description": [
                        "a management token is required to manipulate the acl lists"
                    ]
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "host of the consul agent defaults to localhost"
                    ]
                },
                "scheme": {
                    "default": "http",
                    "required": false,
                    "description": [
                        "the protocol scheme on which the consul agent is running"
                    ],
                    "version_added": "2.1"
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether to verify the tls certificate of the consul agent"
                    ],
                    "version_added": "2.1"
                },
                "port": {
                    "default": 8500,
                    "required": false,
                    "description": [
                        "the port on which the consul agent is running"
                    ]
                }
            },
            "module": "consul_acl"
        },
        {
            "short_description": "Manipulate entries in the key/value store of a consul cluster.",
            "deprecated": null,
            "options": {
                "cas": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "used when acquiring a lock with a session. If the cas is 0, then Consul will only put the key if it does not already exist. If the cas value is non-zero, then the key is only set if the index matches the ModifyIndex of that key."
                    ]
                },
                "recurse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "if the key represents a prefix, each entry with the prefix can be retrieved by setting this to true."
                    ]
                },
                "token": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the token key indentifying an ACL rule set that controls access to the key value pair"
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "the value should be associated with the given key, required if state is present"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "the action to take with the supplied key and value. If the state is 'present', the key contents will be set to the value supplied, 'changed' will be set to true only if the value was different to the current contents. The state 'absent' will remove the key/value pair, again 'changed' will be set to true only if the key actually existed prior to the removal. An attempt can be made to obtain or free the lock associated with a key/value pair with the states 'acquire' or 'release' respectively. a valid session must be supplied to make the attempt changed will be true if the attempt is successful, false otherwise."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "acquire",
                        "release"
                    ]
                },
                "session": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the session that should be used to acquire or release a lock associated with a key/value pair"
                    ]
                },
                "flags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "opaque integer value that can be passed when setting a value."
                    ]
                },
                "key": {
                    "required": true,
                    "description": [
                        "the key at which the value should be stored."
                    ]
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "host of the consul agent defaults to localhost"
                    ]
                },
                "scheme": {
                    "default": "http",
                    "required": false,
                    "description": [
                        "the protocol scheme on which the consul agent is running"
                    ],
                    "version_added": "2.1"
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether to verify the tls certificate of the consul agent"
                    ],
                    "version_added": "2.1"
                },
                "port": {
                    "default": 8500,
                    "required": false,
                    "description": [
                        "the port on which the consul agent is running"
                    ]
                }
            },
            "module": "consul_kv"
        },
        {
            "short_description": "manipulate consul sessions",
            "deprecated": null,
            "options": {
                "node": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the name of the node that with which the session will be associated. by default this is the name of the agent."
                    ]
                },
                "datacenter": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "name of the datacenter in which the session exists or should be created."
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the name that should be associated with the session. This is opaque to Consul and not required."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether the session should be present i.e. created if it doesn't exist, or absent, removed if present. If created, the ID for the session is returned in the output. If absent, the name or ID is required to remove the session. Info for a single session, all the sessions for a node or all available sessions can be retrieved by specifying info, node or list for the state; for node or info, the node name or session id is required as parameter."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "info",
                        "node",
                        "list"
                    ]
                },
                "checks": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "a list of checks that will be used to verify the session health. If all the checks fail, the session will be invalidated and any locks associated with the session will be release and can be acquired once the associated lock delay has expired."
                    ]
                },
                "delay": {
                    "default": "15s",
                    "required": false,
                    "description": [
                        "the optional lock delay that can be attached to the session when it is created. Locks for invalidated sessions ar blocked from being acquired until this delay has expired. Valid units for delays include 'ns', 'us', 'ms', 's', 'm', 'h'"
                    ]
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "host of the consul agent defaults to localhost"
                    ]
                },
                "scheme": {
                    "default": "http",
                    "required": false,
                    "description": [
                        "the protocol scheme on which the consul agent is running"
                    ],
                    "version_added": "2.1"
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether to verify the tls certificate of the consul agent"
                    ],
                    "version_added": "2.1"
                },
                "port": {
                    "default": 8500,
                    "required": false,
                    "description": [
                        "the port on which the consul agent is running"
                    ]
                }
            },
            "module": "consul_session"
        },
        {
            "short_description": "Copies files to remote locations.",
            "deprecated": null,
            "options": {
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with \"/\", only inside contents of that directory are copied to destination. Otherwise, if it does not end with \"/\", the directory itself with all contents is copied. This behavior is similar to Rsync."
                    ],
                    "aliases": []
                },
                "directory_mode": {
                    "required": false,
                    "description": [
                        "When doing a recursive copy set the mode for the directories. If this is not set we will use the system defaults. The mode is only set on directories which are newly created, and will not affect those that already existed."
                    ],
                    "version_added": "1.5"
                },
                "force": {
                    "aliases": [
                        "thirsty"
                    ],
                    "description": [
                        "the default is C(yes), which will replace the remote file when contents are different than the source. If C(no), the file will only be transferred if the destination does not exist."
                    ],
                    "version_added": "1.1",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "remote_src": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If False, it will search for src at originating/master machine, if True it will go to the remote/target machine for the src. Default is False.",
                        "Currently remote_src does not support recursive copying."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Remote absolute path where the file should be copied to. If src is a directory, this must be a directory too."
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "content": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When used instead of 'src', sets the contents of a file directly to the specified value. This is for simple values, for anything complex or with formatting please switch to the template module."
                    ],
                    "version_added": "1.1"
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "follow": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This flag indicates that filesystem links, if they exist, should be followed."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "version_added": "0.7",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "copy"
        },
        {
            "short_description": "Manages Perl library dependencies.",
            "deprecated": null,
            "options": {
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Override the path to the cpanm executable"
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the Perl library to install. You may use the \"full distribution path\", e.g.  MIYAGAWA/Plack-0.99_05.tar.gz"
                    ],
                    "aliases": [
                        "pkg"
                    ]
                },
                "installdeps": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Only install dependencies"
                    ],
                    "version_added": "2.0"
                },
                "system_lib": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use this if you want to install modules to the system perl include path. You must be root or have \"passwordless\" sudo for this to work.",
                        "This uses the cpanm commandline option '--sudo', which has nothing to do with ansible privilege escalation."
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "use_sudo"
                    ]
                },
                "mirror_only": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use the mirror's index file instead of the CPAN Meta DB"
                    ]
                },
                "from_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The local directory from where to install"
                    ]
                },
                "version": {
                    "default": false,
                    "required": false,
                    "description": [
                        "minimum version of perl module to consider acceptable"
                    ],
                    "version_added": "2.1"
                },
                "mirror": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Specifies the base URL for the CPAN mirror to use"
                    ]
                },
                "locallib": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Specify the install base to install modules"
                    ]
                },
                "notest": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not run unit tests"
                    ]
                }
            },
            "module": "cpanm"
        },
        {
            "short_description": "Manage cron.d and crontab entries.",
            "deprecated": null,
            "options": {
                "cron_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If specified, uses this file instead of an individual user's crontab. If this is a relative path, it is interpreted with respect to /etc/cron.d. (If it is absolute, it will typically be /etc/crontab). To use the C(cron_file) parameter you must specify the C(user) as well."
                    ]
                },
                "month": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "Month of the year the job should run ( 1-12, *, */2, etc )"
                    ]
                },
                "disabled": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If the job should be disabled (commented out) in the crontab. Only has effect if state=present"
                    ],
                    "version_added": "2.0"
                },
                "job": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The command to execute or, if env is set, the value of environment variable. Required if state=present."
                    ],
                    "aliases": [
                        "value"
                    ]
                },
                "special_time": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Special time specification nickname."
                    ],
                    "version_added": "1.3",
                    "choices": [
                        "reboot",
                        "yearly",
                        "annually",
                        "monthly",
                        "weekly",
                        "daily",
                        "hourly"
                    ]
                },
                "user": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "The specific user whose crontab should be modified."
                    ]
                },
                "insertafter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Used with C(state=present) and C(env). If specified, the environment variable will be inserted after the declaration of specified environment variable."
                    ],
                    "version_added": "2.1"
                },
                "insertbefore": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Used with C(state=present) and C(env). If specified, the environment variable will be inserted before the declaration of specified environment variable."
                    ],
                    "version_added": "2.1"
                },
                "day": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "Day of the month the job should run ( 1-31, *, */2, etc )"
                    ],
                    "aliases": [
                        "dom"
                    ]
                },
                "minute": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "Minute when the job should run ( 0-59, *, */2, etc )"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of a crontab entry or, if env is set, the name of environment variable. Required if state=absent"
                    ]
                },
                "hour": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "Hour when the job should run ( 0-23, *, */2, etc )"
                    ]
                },
                "reboot": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If the job should be run at reboot. This option is deprecated. Users should use special_time."
                    ],
                    "version_added": "1.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to ensure the job or environment variable is present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "weekday": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )"
                    ],
                    "aliases": [
                        "dow"
                    ]
                },
                "env": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set, manages a crontab's environment variable. New variables are added on top of crontab. \"name\" and \"value\" paramenters are the name and the value of environment variable."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set, create a backup of the crontab before it is modified. The location of the backup is returned in the C(backup_file) variable by this module."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "cron"
        },
        {
            "short_description": "Manage variables in crontabs",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the crontab variable."
                    ]
                },
                "insertbefore": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the variable will be inserted just before the variable specified."
                    ]
                },
                "cron_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If specified, uses this file instead of an individual user's crontab. Without a leading /, this is assumed to be in /etc/cron.d.  With a leading /, this is taken as absolute."
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The value to set this variable to.  Required if state=present."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to ensure that the variable is present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "user": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "The specific user whose crontab should be modified."
                    ]
                },
                "insertafter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the variable will be inserted after the variable specified."
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set, create a backup of the crontab before it is modified. The location of the backup is returned in the C(backup) variable by this module."
                    ]
                }
            },
            "module": "cronvar"
        },
        {
            "short_description": "Encrypted Linux block devices",
            "deprecated": null,
            "options": {
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Use I(present) to add a line to C(/etc/crypttab) or update it's definition if already present. Use I(absent) to remove a line with matching I(name). Use I(opts_present) to add options to those already present; options with different values will be updated. Use I(opts_absent) to remove options from the existing set."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "opts_present",
                        "opts_absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the encrypted block device as it appears in the C(/etc/crypttab) file, or optionaly prefixed with C(/dev/mapper/), as it appears in the filesystem. I(/dev/mapper/) will be stripped from I(name)."
                    ],
                    "aliases": []
                },
                "backing_device": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the underlying block device or file, or the UUID of a block-device prefixed with I(UUID=)"
                    ]
                },
                "path": {
                    "default": "/etc/crypttab",
                    "required": false,
                    "description": [
                        "Path to file to use instead of C(/etc/crypttab). This might be useful in a chroot environment."
                    ]
                },
                "password": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Encryption password, the path to a file containing the pasword, or 'none' or '-' if the password should be entered at boot."
                    ]
                },
                "opts": {
                    "required": false,
                    "description": [
                        "A comma-delimited list of options. See C(crypttab(5) ) for details."
                    ]
                }
            },
            "module": "crypttab"
        },
        {
            "short_description": "Manages accounts on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username of the user to be created if account did not exist.",
                        "Required on C(state=present)."
                    ]
                },
                "first_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "First name of the user to be created if account did not exist.",
                        "Required on C(state=present)."
                    ]
                },
                "last_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Last name of the user to be created if account did not exist.",
                        "Required on C(state=present)."
                    ]
                },
                "account_type": {
                    "default": "user",
                    "required": false,
                    "description": [
                        "Type of the account."
                    ],
                    "choices": [
                        "user",
                        "root_admin",
                        "domain_admin"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of account."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password of the user to be created if account did not exist.",
                        "Required on C(state=present)."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": "ROOT",
                    "required": false,
                    "description": [
                        "Domain the account is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the account.",
                        "C(unlocked) is an alias for C(enabled)."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "enabled",
                        "disabled",
                        "locked",
                        "unlocked"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "timezone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Timezone of the user to be created if account did not exist."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "network_domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Network domain of the account."
                    ]
                },
                "email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Email of the user to be created if account did not exist.",
                        "Required on C(state=present)."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_account"
        },
        {
            "short_description": "Manages affinity groups on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the affinity group is related to."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the affinity group."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "affinty_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of the affinity group. If not specified, first found affinity type is used."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the affinity group is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the affinity group is related to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the affinity group."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the affinity group."
                    ]
                }
            },
            "module": "cs_affinitygroup"
        },
        {
            "short_description": "Manages host clusters on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username for the cluster."
                    ]
                },
                "guest_vswitch_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of virtual switch used for guest traffic in the cluster.",
                        "Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)"
                    ],
                    "choices": [
                        "vmwaresvs",
                        "vmwaredvs"
                    ]
                },
                "ovm3_cluster": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ovm3 native OCFS2 clustering enabled for cluster."
                    ]
                },
                "ovm3_pool": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ovm3 native pooling enabled for cluster."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "pod": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the pod in which the cluster belongs to."
                    ]
                },
                "hypervisor": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Name the hypervisor to be used.",
                        "Required if C(state=present)."
                    ],
                    "choices": [
                        "KVM",
                        "VMware",
                        "BareMetal",
                        "XenServer",
                        "LXC",
                        "HyperV",
                        "UCS",
                        "OVM"
                    ]
                },
                "guest_vswitch_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of virtual switch used for guest traffic in the cluster.",
                        "This would override zone wide traffic label setting."
                    ]
                },
                "vms_username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username for the VSM associated with this cluster."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password for the cluster."
                    ]
                },
                "public_vswitch_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of virtual switch used for public traffic in the cluster.",
                        "Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)"
                    ],
                    "choices": [
                        "vmwaresvs",
                        "vmwaredvs"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the cluster."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the cluster belongs to.",
                        "If not set, default zone is used."
                    ]
                },
                "url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL for the cluster"
                    ]
                },
                "cluster_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of the cluster.",
                        "Required if C(state=present)"
                    ],
                    "choices": [
                        "CloudManaged",
                        "ExternalManaged"
                    ]
                },
                "ovm3_vip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ovm3 vip to use for pool (and cluster)."
                    ]
                },
                "vms_ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "IP address of the VSM associated with this cluster."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the cluster."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "disabled",
                        "enabled"
                    ]
                },
                "public_vswitch_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of virtual switch used for public traffic in the cluster.",
                        "This would override zone wide traffic label setting."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "vms_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password for the VSM associated with this cluster."
                    ]
                }
            },
            "module": "cs_cluster"
        },
        {
            "short_description": "Manages configuration on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": "ROOT",
                    "required": false,
                    "description": [
                        "Domain the account is related to.",
                        "Only considered if C(account) is used."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the configuration."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ensure the value for corresponding zone."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "storage": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ensure the value for corresponding storage pool."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ensure the value for corresponding account."
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "Value of the configuration."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "cluster": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ensure the value for corresponding cluster."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_configuration"
        },
        {
            "short_description": "Manages domains on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "clean_up": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Clean up all domain resources like child domains and accounts.",
                        "Considered on C(state=absent)."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the domain."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "Path of the domain.",
                        "Prefix C(ROOT/) or C(/ROOT/) in path is optional."
                    ]
                },
                "network_domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Network domain for networks in the domain."
                    ]
                }
            },
            "module": "cs_domain"
        },
        {
            "short_description": "Gather facts on instances of Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "filter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Filter for a specific fact."
                    ],
                    "choices": [
                        "cloudstack_service_offering",
                        "cloudstack_availability_zone",
                        "cloudstack_public_hostname",
                        "cloudstack_public_ipv4",
                        "cloudstack_local_hostname",
                        "cloudstack_local_ipv4",
                        "cloudstack_instance_id",
                        "cloudstack_user_data"
                    ]
                }
            },
            "module": "cs_facts"
        },
        {
            "short_description": "Manages firewall rules on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "icmp_code": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Error code for this icmp message. Considered if C(protocol=icmp)."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the firewall rule is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "protocol": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "Protocol of the firewall rule.",
                        "C(all) is only available if C(type=egress)"
                    ],
                    "choices": [
                        "tcp",
                        "udp",
                        "icmp",
                        "all"
                    ]
                },
                "network": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Network the egress rule is related to.",
                        "Required if C(type=egress)."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the virtual machine is in.",
                        "If not set, default zone is used."
                    ]
                },
                "type": {
                    "default": "ingress",
                    "required": false,
                    "description": [
                        "Type of the firewall rule."
                    ],
                    "choices": [
                        "ingress",
                        "egress"
                    ]
                },
                "end_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "End port for this rule. Considered if C(protocol=tcp) or C(protocol=udp). If not specified, equal C(start_port)."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the firewall rule is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the firewall rule is related to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the firewall rule."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "start_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Start port for this rule. Considered if C(protocol=tcp) or C(protocol=udp)."
                    ],
                    "aliases": [
                        "port"
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "cidr": {
                    "default": "0.0.0.0/0",
                    "required": false,
                    "description": [
                        "CIDR (full notation) to be used for firewall rule."
                    ]
                },
                "icmp_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of the icmp message being sent. Considered if C(protocol=icmp)."
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Public IP address the ingress rule is assigned to.",
                        "Required if C(type=ingress)."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_firewall"
        },
        {
            "short_description": "Manages instances and virtual machines on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the instance is related to."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Force stop/start the instance if required to apply changes, otherwise a running instance will not be changed."
                    ]
                },
                "disk_offering": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the disk offering to be used."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of tags. Tags are a list of dictionaries having keys C(key) and C(value).",
                        "If you want to delete all tags, set a empty list e.g. C(tags: [])."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "keyboard": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Keyboard device type for the instance."
                    ],
                    "choices": [
                        "de",
                        "de-ch",
                        "es",
                        "fi",
                        "fr",
                        "fr-be",
                        "fr-ch",
                        "is",
                        "it",
                        "jp",
                        "nl-be",
                        "no",
                        "pt",
                        "uk",
                        "us"
                    ]
                },
                "user_data": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Optional data (ASCII) that can be sent to the instance upon a successful deployment.",
                        "The data will be automatically base64 encoded.",
                        "Consider switching to HTTP_POST by using C(CLOUDSTACK_METHOD=post) to increase the HTTP_GET size limit of 2KB to 32 KB."
                    ]
                },
                "root_disk_size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Root disk size in GByte required if deploying instance with KVM hypervisor and want resize the root disk size at startup (need CloudStack >= 4.4, cloud-initramfs-growroot installed and enabled in the template)"
                    ]
                },
                "ssh_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the SSH key to be deployed on the new instance."
                    ]
                },
                "cpu_speed": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The clock speed/shares allocated to the instance, used with custom service offerings"
                    ]
                },
                "ip6_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "IPv6 address for default instance's network."
                    ]
                },
                "service_offering": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or id of the service offering of the new instance.",
                        "If not set, first found service offering is used."
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "IPv4 address for default instance's network during creation."
                    ]
                },
                "networks": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of networks to use for the new instance."
                    ],
                    "aliases": [
                        "network"
                    ]
                },
                "security_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of security groups the instance to be applied to."
                    ],
                    "aliases": [
                        "security_group"
                    ]
                },
                "display_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Custom display name of the instances.",
                        "Display name will be set to C(name) if not specified.",
                        "Either C(name) or C(display_name) is required."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the instance is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Group in where the new instance should be in."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Host name of the instance. C(name) can only contain ASCII letters.",
                        "Name will be generated (UUID) by CloudStack if not specified and can not be changed afterwards.",
                        "Either C(name) or C(display_name) is required."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the instance shoud be deployed.",
                        "If not set, default zone is used."
                    ]
                },
                "hypervisor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name the hypervisor to be used for creating the new instance.",
                        "Relevant when using C(state=present), but only considered if not set on ISO/template.",
                        "If not set or found on ISO/template, first found hypervisor will be used."
                    ],
                    "choices": [
                        "KVM",
                        "VMware",
                        "BareMetal",
                        "XenServer",
                        "LXC",
                        "HyperV",
                        "UCS",
                        "OVM"
                    ]
                },
                "ip_to_networks": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of mappings in the form {'network': NetworkName, 'ip': 1.2.3.4}",
                        "Mutually exclusive with C(networks) option."
                    ],
                    "aliases": [
                        "ip_to_network"
                    ]
                },
                "disk_size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Disk size in GByte required if deploying instance from ISO."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the instance to be deployed in."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the instance."
                    ],
                    "choices": [
                        "deployed",
                        "started",
                        "stopped",
                        "restarted",
                        "restored",
                        "destroyed",
                        "expunged",
                        "present",
                        "absent"
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "affinity_groups": {
                    "default": [],
                    "required": false,
                    "description": [
                        "Affinity groups names to be applied to the new instance."
                    ],
                    "aliases": [
                        "affinity_group"
                    ]
                },
                "template": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or id of the template to be used for creating the new instance.",
                        "Required when using C(state=present).",
                        "Mutually exclusive with C(ISO) option."
                    ]
                },
                "memory": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The memory allocated to the instance, used with custom service offerings"
                    ]
                },
                "iso": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or id of the ISO to be used for creating the new instance.",
                        "Required when using C(state=present).",
                        "Mutually exclusive with C(template) option."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "template_filter": {
                    "aliases": [
                        "iso_filter"
                    ],
                    "description": [
                        "Name of the filter used to search for the template or iso.",
                        "Used for params C(iso) or C(template) on C(state=present)."
                    ],
                    "version_added": "2.1",
                    "default": "executable",
                    "required": false,
                    "choices": [
                        "featured",
                        "self",
                        "selfexecutable",
                        "sharedexecutable",
                        "executable",
                        "community"
                    ]
                },
                "cpu": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The number of CPUs to allocate to the instance, used with custom service offerings"
                    ]
                }
            },
            "module": "cs_instance"
        },
        {
            "short_description": "Gathering facts from the API of instances from Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the instance is related to."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name or display name of the instance."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the instance is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Project the instance is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_instance_facts"
        },
        {
            "short_description": "Manages instance groups on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the instance group is related to."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the instance group."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the instance group is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Project the instance group is related to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the instance group."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_instancegroup"
        },
        {
            "short_description": "Manages public IP address associations on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the IP address is related to."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "network": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Network the IP address is related to."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the IP address is in.",
                        "If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the IP address is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the IP address is related to."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Public IP address.",
                        "Required if C(state=absent)"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_ip_address"
        },
        {
            "short_description": "Manages ISO images on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "is_featured": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the ISO to be featured. Only used if C(state) is present."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the ISO."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone you wish the ISO to be registered or deleted from. If not specified, first zone found will be used."
                    ]
                },
                "url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL where the ISO can be downloaded from. Required if C(state) is present."
                    ]
                },
                "checksum": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The MD5 checksum value of this ISO. If set, we search by checksum instead of name."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "is_dynamically_scalable": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the ISO having XS/VMWare tools installed inorder to support dynamic scaling of VM cpu/memory. Only used if C(state) is present."
                    ],
                    "aliases": []
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the ISO to be registered in."
                    ]
                },
                "bootable": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Register the ISO to be bootable. Only used if C(state) is present."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the ISO."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "is_ready": {
                    "default": false,
                    "required": false,
                    "description": [
                        "This flag is used for searching existing ISOs. If set to C(true), it will only list ISO ready for deployment e.g. successfully downloaded and installed. Recommended to set it to C(false)."
                    ],
                    "aliases": []
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the ISO is related to."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the ISO is related to."
                    ]
                },
                "is_public": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the ISO to be publicly available to all users. Only used if C(state) is present."
                    ]
                },
                "os_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the OS that best represents the OS of this ISO. If the iso is bootable this parameter needs to be passed. Required if C(state) is present."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "iso_filter": {
                    "default": "self",
                    "required": false,
                    "description": [
                        "Name of the filter used to search for the ISO."
                    ],
                    "choices": [
                        "featured",
                        "self",
                        "selfexecutable",
                        "sharedexecutable",
                        "executable",
                        "community"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_iso"
        },
        {
            "short_description": "Manages load balancer rules on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the rule is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "protocol": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The protocol to be used on the load balancer"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the load balancer rule."
                    ]
                },
                "algorithm": {
                    "default": "source",
                    "required": false,
                    "description": [
                        "Load balancer algorithm",
                        "Required when using C(state=present)."
                    ],
                    "choices": [
                        "source",
                        "roundrobin",
                        "leastconn"
                    ]
                },
                "open_firewall": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether the firewall rule for public port should be created, while creating the new rule.",
                        "Use M(cs_firewall) for managing firewall rules."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "public_port": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The public port from where the network traffic will be load balanced from.",
                        "Required when using C(state=present).",
                        "Can not be changed once the rule exists due API limitation."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the rule is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the load balancer IP address is related to."
                    ]
                },
                "private_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The private port of the private ip address/virtual machine where the network traffic will be load balanced to.",
                        "Required when using C(state=present).",
                        "Can not be changed once the rule exists due API limitation."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "State of the rule."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "cidr": {
                    "default": null,
                    "required": false,
                    "description": [
                        "CIDR (full notation) to be used for firewall rule if required."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the rule shoud be created.",
                        "If not set, default zone is used."
                    ]
                },
                "ip_address": {
                    "required": true,
                    "description": [
                        "Public IP address from where the network traffic will be load balanced from."
                    ],
                    "aliases": [
                        "public_ip"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The description of the load balancer rule."
                    ]
                }
            },
            "module": "cs_loadbalancer_rule"
        },
        {
            "short_description": "Manages load balancer rule members on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the rule is related to."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the load balancer rule."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the rule should be located.",
                        "If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the rule is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the firewall rule is related to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Should the VMs be present or absent from the rule."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Public IP address from where the network traffic will be load balanced from.",
                        "Only needed to find the rule if C(name) is not unique."
                    ],
                    "aliases": [
                        "public_ip"
                    ]
                },
                "vms": {
                    "required": true,
                    "type": "list",
                    "description": [
                        "List of VMs to assign to or remove from the rule."
                    ],
                    "aliases": [
                        "vm"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_loadbalancer_rule_member"
        },
        {
            "short_description": "Manages networks on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the network is related to."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "end_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ending IPv6 address of the network belongs to.",
                        "If not specified, value of C(start_ipv6) is used.",
                        "Only considered on create."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "vlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ID or VID of the network."
                    ]
                },
                "clean_up": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Cleanup old network elements.",
                        "Only considered on C(state=restarted)."
                    ]
                },
                "netmask": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The netmask of the network.",
                        "Required for shared networks and isolated networks when it belongs to VPC.",
                        "Only considered on create."
                    ]
                },
                "network_offering": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the offering for the network.",
                        "Required if C(state=present)."
                    ]
                },
                "vpc": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ID or VID of the network."
                    ]
                },
                "start_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The beginning IPv4 address of the network belongs to.",
                        "Only considered on create."
                    ]
                },
                "gateway": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The gateway of the network.",
                        "Required for shared networks and isolated networks when it belongs to VPC.",
                        "Only considered on create."
                    ]
                },
                "gateway_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The gateway of the IPv6 network.",
                        "Required for shared networks.",
                        "Only considered on create."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "display_text": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Display text of the network.",
                        "If not specified, C(name) will be used as C(display_text)."
                    ]
                },
                "isolated_pvlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The isolated private vlan for this network."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the network is related to."
                    ]
                },
                "acl_type": {
                    "default": "account",
                    "required": false,
                    "description": [
                        "Access control type.",
                        "Only considered on create."
                    ],
                    "choices": [
                        "account",
                        "domain"
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name (case sensitive) of the network."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the network should be deployed.",
                        "If not set, default zone is used."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "start_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The beginning IPv6 address of the network belongs to.",
                        "Only considered on create."
                    ]
                },
                "cidr_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "CIDR of IPv6 network, must be at least /64.",
                        "Only considered on create."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the network to be deployed in."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the network."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "restarted"
                    ]
                },
                "end_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ending IPv4 address of the network belongs to.",
                        "If not specified, value of C(start_ip) is used.",
                        "Only considered on create."
                    ]
                },
                "network_domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The network domain."
                    ]
                }
            },
            "module": "cs_network"
        },
        {
            "short_description": "Manages pods on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the pod."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the pod belongs to.",
                        "If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "netmask": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Netmask for the Pod.",
                        "Required on C(state=present)"
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "gateway": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gateway for the Pod.",
                        "Required on C(state=present)"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the pod."
                    ],
                    "choices": [
                        "present",
                        "enabled",
                        "disabled",
                        "absent"
                    ]
                },
                "end_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Ending IP address for the Pod."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "start_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Starting IP address for the Pod.",
                        "Required on C(state=present)"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uuid of the exising pod."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_pod"
        },
        {
            "short_description": "Manages port forwarding rules on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "vm_guest_ip": {
                    "default": false,
                    "required": false,
                    "description": [
                        "VM guest NIC secondary IP address for the port forwarding rule."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the C(vm) is related to."
                    ]
                },
                "protocol": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "Protocol of the port forwarding rule."
                    ],
                    "choices": [
                        "tcp",
                        "udp"
                    ]
                },
                "open_firewall": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether the firewall rule for public port should be created, while creating the new rule.",
                        "Use M(cs_firewall) for managing firewall rules."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the virtual machine is in.",
                        "If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "public_port": {
                    "required": true,
                    "description": [
                        "Start public port for this rule."
                    ]
                },
                "vm": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of virtual machine which we make the port forwarding rule for.",
                        "Required if C(state=present)."
                    ]
                },
                "public_end_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "End public port for this rule.",
                        "If not specified equal C(public_port)."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the C(vm) is located in."
                    ]
                },
                "private_port": {
                    "required": true,
                    "description": [
                        "Start private port for this rule."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the port forwarding rule."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "private_end_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "End private port for this rule.",
                        "If not specified equal C(private_port)."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the C(vm) is related to."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "ip_address": {
                    "required": true,
                    "description": [
                        "Public IP address the rule is assigned to."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_portforward"
        },
        {
            "short_description": "Manages projects on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "display_text": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Display text of the project.",
                        "If not specified, C(name) will be used as C(display_text)."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the project is related to."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the project."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the project is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the project."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "active",
                        "suspended"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_project"
        },
        {
            "short_description": "Manages resource limits on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the resource is related to."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the resource is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the resource is related to."
                    ]
                },
                "limit": {
                    "default": -1,
                    "required": false,
                    "description": [
                        "Maximum number of the resource.",
                        "Default is unlimited C(-1)."
                    ],
                    "aliases": [
                        "max"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "resource_type": {
                    "choices": [
                        "instance",
                        "ip_address",
                        "volume",
                        "snapshot",
                        "template",
                        "network",
                        "vpc",
                        "cpu",
                        "memory",
                        "primary_storage",
                        "secondary_storage"
                    ],
                    "required": true,
                    "description": [
                        "Type of the resource."
                    ],
                    "aliases": [
                        "type"
                    ]
                }
            },
            "module": "cs_resourcelimit"
        },
        {
            "short_description": "Manages security groups on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the security group is related to."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the security group."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the security group is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the security group to be created in."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the security group."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the security group."
                    ]
                }
            },
            "module": "cs_securitygroup"
        },
        {
            "short_description": "Manages security group rules on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "icmp_code": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Error code for this icmp message. Required if C(protocol=icmp)."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "protocol": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "Protocol of the security group rule."
                    ],
                    "choices": [
                        "tcp",
                        "udp",
                        "icmp",
                        "ah",
                        "esp",
                        "gre"
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "start_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Start port for this rule. Required if C(protocol=tcp) or C(protocol=udp)."
                    ],
                    "aliases": [
                        "port"
                    ]
                },
                "user_security_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Security group this rule is based of."
                    ]
                },
                "end_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "End port for this rule. Required if C(protocol=tcp) or C(protocol=udp), but C(start_port) will be used if not set."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the security group to be created in."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the security group rule."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "security_group": {
                    "required": true,
                    "description": [
                        "Name of the security group the rule is related to. The security group must be existing."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "cidr": {
                    "default": "0.0.0.0/0",
                    "required": false,
                    "description": [
                        "CIDR (full notation) to be used for security group rule."
                    ]
                },
                "icmp_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Type of the icmp message being sent. Required if C(protocol=icmp)."
                    ]
                },
                "type": {
                    "default": "ingress",
                    "required": false,
                    "description": [
                        "Ingress or egress security group rule."
                    ],
                    "choices": [
                        "ingress",
                        "egress"
                    ]
                }
            },
            "module": "cs_securitygroup_rule"
        },
        {
            "short_description": "Manages SSH keys on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "public_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "String of the public key."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the public key is related to."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of public key."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the public key is related to."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the public key to be registered in."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the public key."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_sshkeypair"
        },
        {
            "short_description": "Manages static NATs on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "vm_guest_ip": {
                    "default": false,
                    "required": false,
                    "description": [
                        "VM guest NIC secondary IP address for the static NAT."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the static NAT is related to."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the virtual machine is in.",
                        "If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "vm": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of virtual machine which we make the static NAT for.",
                        "Required if C(state=present)."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the static NAT is related to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the static NAT."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the static NAT is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "ip_address": {
                    "required": true,
                    "description": [
                        "Public IP address the static NAT is assigned to."
                    ]
                }
            },
            "module": "cs_staticnat"
        },
        {
            "short_description": "Manages templates on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "is_featured": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the template to be featured.",
                        "Only used if C(state) is present."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "format": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The format for the template.",
                        "Relevant when using C(state=present)."
                    ],
                    "choices": [
                        "QCOW2",
                        "RAW",
                        "VHD",
                        "OVA"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "vm": {
                    "default": null,
                    "required": false,
                    "description": [
                        "VM name the template will be created from its volume or alternatively from a snapshot.",
                        "VM must be in stopped state if created from its volume.",
                        "Mutually exclusive with C(url)."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the template, snapshot or VM is related to."
                    ]
                },
                "is_extractable": {
                    "default": false,
                    "required": false,
                    "description": [
                        "True if the template or its derivatives are extractable."
                    ]
                },
                "is_public": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the template to be publicly available to all users.",
                        "Only used if C(state) is present."
                    ]
                },
                "checksum": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The MD5 checksum value of this template.",
                        "If set, we search by checksum instead of name."
                    ]
                },
                "requires_hvm": {
                    "default": false,
                    "required": false,
                    "description": [
                        "true if this template requires HVM."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the template."
                    ]
                },
                "display_text": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Display text of the template."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the template, snapshot or VM is related to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "password_enabled": {
                    "default": false,
                    "required": false,
                    "description": [
                        "True if the template supports the password reset feature."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone you wish the template to be registered or deleted from.",
                        "If not specified, first found zone will be used."
                    ]
                },
                "url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of where the template is hosted on C(state=present).",
                        "URL to which the template would be extracted on C(state=extracted).",
                        "Mutually exclusive with C(vm)."
                    ]
                },
                "bits": {
                    "default": "64",
                    "required": false,
                    "description": [
                        "32 or 64 bits support."
                    ]
                },
                "sshkey_enabled": {
                    "default": false,
                    "required": false,
                    "description": [
                        "True if the template supports the sshkey upload feature."
                    ]
                },
                "is_dynamically_scalable": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Register the template having XS/VMWare tools installed in order to support dynamic scaling of VM CPU/memory.",
                        "Only used if C(state) is present."
                    ]
                },
                "cross_zones": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether the template should be syned or removed across zones.",
                        "Only used if C(state) is present or absent."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the template to be registered in."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the template."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "extacted"
                    ]
                },
                "is_ready": {
                    "default": false,
                    "required": false,
                    "description": [
                        "This flag is used for searching existing templates.",
                        "If set to C(true), it will only list template ready for deployment e.g. successfully downloaded and installed.",
                        "Recommended to set it to C(false)."
                    ]
                },
                "details": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Template details in key/value pairs."
                    ]
                },
                "hypervisor": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Name the hypervisor to be used for creating the new template.",
                        "Relevant when using C(state=present)."
                    ],
                    "choices": [
                        "KVM",
                        "VMware",
                        "BareMetal",
                        "XenServer",
                        "LXC",
                        "HyperV",
                        "UCS",
                        "OVM"
                    ]
                },
                "is_routing": {
                    "default": false,
                    "required": false,
                    "description": [
                        "True if the template type is routing i.e., if template is used to deploy router.",
                        "Only considered if C(url) is used."
                    ]
                },
                "os_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "OS type that best represents the OS of this template."
                    ]
                },
                "template_tag": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the tag for this template."
                    ]
                },
                "template_filter": {
                    "default": "self",
                    "required": false,
                    "description": [
                        "Name of the filter used to search for the template."
                    ],
                    "choices": [
                        "featured",
                        "self",
                        "selfexecutable",
                        "sharedexecutable",
                        "executable",
                        "community"
                    ]
                },
                "snapshot": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the snapshot, created from the VM ROOT volume, the template will be created from.",
                        "C(vm) is required together with this argument."
                    ]
                },
                "mode": {
                    "default": "http_download",
                    "required": false,
                    "description": [
                        "Mode for the template extraction.",
                        "Only used if C(state=extracted)."
                    ],
                    "choices": [
                        "http_download",
                        "ftp_upload"
                    ]
                }
            },
            "module": "cs_template"
        },
        {
            "short_description": "Manages users on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "Username of the user."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the user will be created under.",
                        "Required on C(state=present)."
                    ]
                },
                "last_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Last name of the user.",
                        "Required on C(state=present)."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "first_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "First name of the user.",
                        "Required on C(state=present)."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the user.",
                        "C(unlocked) is an alias for C(enabled)."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "enabled",
                        "disabled",
                        "locked",
                        "unlocked"
                    ]
                },
                "domain": {
                    "default": "ROOT",
                    "required": false,
                    "description": [
                        "Domain the user is related to."
                    ]
                },
                "timezone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Timezone of the user."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password of the user to be created.",
                        "Required on C(state=present).",
                        "Only considered on creation and will not be updated if user exists."
                    ]
                },
                "email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Email of the user.",
                        "Required on C(state=present)."
                    ]
                }
            },
            "module": "cs_user"
        },
        {
            "short_description": "Manages VM snapshots on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "snapshot_memory": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Snapshot memory if set to true."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the VM snapshot is related to."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the snapshot."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the VM is in. If not set, default zone is used."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "vm": {
                    "required": true,
                    "description": [
                        "Name of the virtual machine."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the VM is assigned to."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the snapshot."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "revert"
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the VM snapshot is related to."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique Name of the snapshot. In CloudStack terms display name."
                    ],
                    "aliases": [
                        "display_name"
                    ]
                }
            },
            "module": "cs_vmsnapshot"
        },
        {
            "short_description": "Manages volumes on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the domain the volume to be deployed in."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Force removal of volume even it is attached to a VM.",
                        "Considered on C(state=absnet) only."
                    ]
                },
                "disk_offering": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the disk offering to be used.",
                        "Required one of C(disk_offering), C(snapshot) if volume is not already C(state=present)."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "account": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account the volume is related to."
                    ]
                },
                "shrink_ok": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to allow to shrink the volume."
                    ]
                },
                "display_volume": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to display the volume to the end user or not.",
                        "Allowed to Root Admins only."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "min_iops": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Min iops"
                    ]
                },
                "size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Size of disk in GB"
                    ]
                },
                "custom_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Custom id to the resource.",
                        "Allowed to Root Admins only."
                    ]
                },
                "poll_async": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Poll async jobs until job has finished."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the volume.",
                        "C(name) can only contain ASCII letters."
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the zone in which the volume should be deployed.",
                        "If not set, default zone is used."
                    ]
                },
                "max_iops": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Max iops"
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the project the volume to be deployed in."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the volume."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "attached",
                        "detached"
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "snapshot": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The snapshot name for the disk volume.",
                        "Required one of C(disk_offering), C(snapshot) if volume is not already C(state=present)."
                    ]
                },
                "vm": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the virtual machine to attach the volume to."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                }
            },
            "module": "cs_volume"
        },
        {
            "short_description": "Manages zones on Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "internal_dns1": {
                    "default": null,
                    "required": false,
                    "description": [
                        "First internal DNS for the zone.",
                        "If not set C(dns1) will be used on C(state=present)."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain the zone is related to.",
                        "Zone is a public zone if not set."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the zone."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the zone."
                    ],
                    "choices": [
                        "present",
                        "enabled",
                        "disabled",
                        "absent"
                    ]
                },
                "dns2": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Second DNS for the zone."
                    ]
                },
                "dns1": {
                    "default": null,
                    "required": false,
                    "description": [
                        "First DNS for the zone.",
                        "Required if C(state=present)"
                    ]
                },
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "internal_dns2": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Second internal DNS for the zone."
                    ]
                },
                "network_type": {
                    "default": "basic",
                    "required": false,
                    "description": [
                        "Network type of the zone."
                    ],
                    "choices": [
                        "basic",
                        "advanced"
                    ]
                },
                "guest_cidr_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Guest CIDR address for the zone."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                },
                "dhcp_provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "DHCP provider for the Zone."
                    ]
                },
                "network_domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Network domain for the zone."
                    ]
                },
                "dns2_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Second DNS for IPv6 for the zone."
                    ]
                },
                "id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uuid of the exising zone."
                    ]
                },
                "dns1_ipv6": {
                    "default": null,
                    "required": false,
                    "description": [
                        "First DNS for IPv6 for the zone."
                    ]
                }
            },
            "module": "cs_zone"
        },
        {
            "short_description": "Gathering facts of zones from Apache CloudStack based clouds.",
            "deprecated": null,
            "options": {
                "api_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "HTTP timeout."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the zone."
                    ]
                },
                "api_http_method": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "HTTP method used."
                    ],
                    "choices": [
                        "get",
                        "post"
                    ]
                },
                "api_secret": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Secret key of the CloudStack API."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "API key of the CloudStack API."
                    ]
                },
                "api_region": {
                    "default": "cloudstack",
                    "required": false,
                    "description": [
                        "Name of the ini section in the C(cloustack.ini) file."
                    ]
                },
                "api_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of the CloudStack API e.g. https://cloud.example.com/client/api."
                    ]
                }
            },
            "module": "cs_zone_facts"
        },
        {
            "short_description": "Posts events to DataDog  service",
            "deprecated": null,
            "options": {
                "date_happened": {
                    "default": "now",
                    "required": false,
                    "description": [
                        "POSIX timestamp of the event.",
                        "Default value is now."
                    ]
                },
                "alert_type": {
                    "default": "info",
                    "required": false,
                    "description": [
                        "Type of alert."
                    ],
                    "choices": [
                        "error",
                        "warning",
                        "info",
                        "success"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of tags to apply to the event."
                    ]
                },
                "text": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The body of the event."
                    ]
                },
                "title": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The event title."
                    ]
                },
                "priority": {
                    "default": "normal",
                    "required": false,
                    "description": [
                        "The priority of the event."
                    ],
                    "choices": [
                        "normal",
                        "low"
                    ]
                },
                "aggregation_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An arbitrary string to use for aggregation."
                    ]
                },
                "api_key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Your DataDog API key."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "datadog_event"
        },
        {
            "short_description": "Manages Datadog monitors",
            "deprecated": null,
            "options": {
                "notify_audit": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A boolean indicating whether tagged users will be notified on changes to this monitor."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the alert."
                    ]
                },
                "silenced": {
                    "default": "",
                    "required": false,
                    "description": [
                        "Dictionary of scopes to timestamps or None. Each scope will be muted until the given POSIX timestamp or forever if the value is None. "
                    ]
                },
                "no_data_timeframe": {
                    "default": "2x timeframe for metric, 2 minutes for service",
                    "required": false,
                    "description": [
                        "The number of minutes before a monitor will notify when data stops reporting. Must be at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks."
                    ]
                },
                "app_key": {
                    "required": true,
                    "description": [
                        "Your DataDog app key."
                    ]
                },
                "notify_no_data": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A boolean indicating whether this monitor will notify when data stops reporting.."
                    ]
                },
                "renotify_interval": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only re-notify if it's not resolved."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "The designated state of the monitor."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "muted",
                        "unmuted"
                    ]
                },
                "escalation_message": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A message to include with a re-notification. Supports the '@username' notification we allow elsewhere. Not applicable if renotify_interval is None"
                    ]
                },
                "query": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The monitor query to notify on with syntax varying depending on what type of monitor you are creating."
                    ]
                },
                "message": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A message to include with notifications for this monitor. Email notifications can be sent to specific users by using the same '@username' notation as events."
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "Your DataDog API key."
                    ]
                },
                "type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of the monitor.",
                        "The 'event alert'is available starting at Ansible 2.1"
                    ],
                    "choices": [
                        "metric alert",
                        "service check",
                        "event alert"
                    ]
                },
                "thresholds": {
                    "default": {
                        "warning": 1,
                        "ok": 1,
                        "critical": 1
                    },
                    "required": false,
                    "description": [
                        "A dictionary of thresholds by status. This option is only available for service checks and metric alerts. Because each of them can have multiple thresholds, we don't define them directly in the query."
                    ]
                },
                "timeout_h": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state."
                    ]
                }
            },
            "module": "datadog_monitor"
        },
        {
            "short_description": "Configure a .deb package",
            "deprecated": null,
            "options": {
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Value to set the configuration to"
                    ],
                    "aliases": [
                        "answer"
                    ]
                },
                "vtype": {
                    "default": null,
                    "choices": [
                        "string",
                        "password",
                        "boolean",
                        "select",
                        "multiselect",
                        "note",
                        "error",
                        "title",
                        "text"
                    ],
                    "required": false,
                    "description": [
                        "The type of the value supplied"
                    ],
                    "aliases": []
                },
                "question": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A debconf configuration setting"
                    ],
                    "aliases": [
                        "setting",
                        "selection"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of package to configure."
                    ],
                    "aliases": [
                        "pkg"
                    ]
                },
                "unseen": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not set 'seen' flag when pre-seeding"
                    ],
                    "aliases": []
                }
            },
            "module": "debconf"
        },
        {
            "short_description": "Print statements during execution",
            "deprecated": null,
            "options": {
                "msg": {
                    "default": "Hello world!",
                    "required": false,
                    "description": [
                        "The customized message that is printed. If omitted, prints a generic message."
                    ]
                },
                "var": {
                    "description": [
                        "A variable name to debug.  Mutually exclusive with the 'msg' option."
                    ]
                },
                "verbosity": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "A number that controls when the debug is run, if you set to 3 it will only run debug when -vvv or above"
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "debug"
        },
        {
            "short_description": "Manages some of the steps common in deploying projects.",
            "deprecated": null,
            "options": {
                "unfinished_filename": {
                    "default": "DEPLOY_UNFINISHED",
                    "required": false,
                    "description": [
                        "the name of the file that indicates a deploy has not finished. All folders in the releases_path that contain this file will be deleted on C(state=finalize) with clean=True, or C(state=clean). This file is automatically deleted from the I(new_release_path) during C(state=finalize)."
                    ]
                },
                "keep_releases": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "the number of old releases to keep when cleaning. Used in C(finalize) and C(clean). Any unfinished builds will be deleted first, so only correct releases will count. The current version will not count."
                    ]
                },
                "current_path": {
                    "default": "current",
                    "required": false,
                    "description": [
                        "the name of the symlink that is created when the deploy is finalized. Used in C(finalize) and C(clean). Returned in the C(deploy_helper.current_path) fact."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "the state of the project. C(query) will only gather facts, C(present) will create the project I(root) folder, and in it the I(releases) and I(shared) folders, C(finalize) will remove the unfinished_filename file, create a symlink to the newly deployed release and optionally clean old releases, C(clean) will remove failed & old releases, C(absent) will remove the project folder (synonymous to the M(file) module with C(state=absent))"
                    ],
                    "choices": [
                        "present",
                        "finalize",
                        "absent",
                        "clean",
                        "query"
                    ]
                },
                "shared_path": {
                    "default": "shared",
                    "required": false,
                    "description": [
                        "the name of the folder that will hold the shared resources. This can be relative to C(path) or absolute. If this is set to an empty string, no shared folder will be created. Returned in the C(deploy_helper.shared_path) fact."
                    ]
                },
                "releases_path": {
                    "default": "releases",
                    "required": false,
                    "description": [
                        "the name of the folder that will hold the releases. This can be relative to C(path) or absolute. Returned in the C(deploy_helper.releases_path) fact."
                    ]
                },
                "clean": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to run the clean procedure in case of C(state=finalize)."
                    ]
                },
                "release": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "the release version that is being deployed. Defaults to a timestamp format %Y%m%d%H%M%S (i.e. '20141119223359'). This parameter is optional during C(state=present), but needs to be set explicitly for C(state=finalize). You can use the generated fact C(release={{ deploy_helper.new_release }})."
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "the root path of the project. Alias I(dest). Returned in the C(deploy_helper.project_path) fact."
                    ],
                    "aliases": [
                        "dest"
                    ]
                }
            },
            "module": "deploy_helper"
        },
        {
            "short_description": "Create/delete a droplet/SSH_key in DigitalOcean",
            "deprecated": null,
            "options": {
                "unique_name": {
                    "default": "no",
                    "description": [
                        "Bool, require unique hostnames.  By default, DigitalOcean allows multiple hosts with the same name.  Setting this to \"yes\" allows only one host per name.  Useful for idempotence."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "virtio": {
                    "default": "yes",
                    "description": [
                        "Bool, turn on virtio driver in droplet for improved network and storage I/O."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region_id": {
                    "description": [
                        "This is the slug of the region you would like your server to be created in."
                    ]
                },
                "backups_enabled": {
                    "default": "no",
                    "description": [
                        "Optional, Boolean, enables backups for your droplet."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "user_data": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "opaque blob of data which is made available to the droplet"
                    ],
                    "version_added": "2.0"
                },
                "image_id": {
                    "description": [
                        "This is the slug of the image you would like the droplet created with."
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "How long before wait gives up, in seconds."
                    ]
                },
                "api_token": {
                    "description": [
                        "DigitalOcean api token."
                    ],
                    "version_added": "1.9.5"
                },
                "ssh_pub_key": {
                    "description": [
                        "The public SSH key you want to add to your account."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "description": [
                        "Wait for the droplet to be in state 'running' before returning.  If wait is \"no\" an ip_address may not be returned."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "description": [
                        "String, this is the name of the droplet - must be formatted by hostname rules, or the name of a SSH key."
                    ]
                },
                "size_id": {
                    "description": [
                        "This is the slug of the size you would like the droplet created with."
                    ]
                },
                "id": {
                    "description": [
                        "Numeric, the droplet id you want to operate on."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the target."
                    ],
                    "choices": [
                        "present",
                        "active",
                        "absent",
                        "deleted"
                    ]
                },
                "command": {
                    "default": "droplet",
                    "description": [
                        "Which target you want to operate on."
                    ],
                    "choices": [
                        "droplet",
                        "ssh"
                    ]
                },
                "ssh_key_ids": {
                    "description": [
                        "Optional, array of of SSH key (numeric) ID that you would like to be added to the server."
                    ]
                },
                "private_networking": {
                    "default": "no",
                    "description": [
                        "Bool, add an additional, private network interface to droplet for inter-droplet communication."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "digital_ocean"
        },
        {
            "short_description": "Create/delete a DNS record in DigitalOcean",
            "deprecated": null,
            "options": {
                "ip": {
                    "description": [
                        "The IP address to point a domain at."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the target."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "api_token": {
                    "description": [
                        "DigitalOcean api token."
                    ],
                    "version_added": "1.9.5"
                },
                "id": {
                    "description": [
                        "Numeric, the droplet id you want to operate on."
                    ]
                },
                "name": {
                    "description": [
                        "String, this is the name of the droplet - must be formatted by hostname rules, or the name of a SSH key, or the name of a domain."
                    ]
                }
            },
            "module": "digital_ocean_domain"
        },
        {
            "short_description": "Create/delete an SSH key in DigitalOcean",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the target."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "description": [
                        "String, this is the name of an SSH key to create or destroy."
                    ]
                },
                "client_id": {
                    "description": [
                        "DigitalOcean manager id."
                    ]
                },
                "api_key": {
                    "description": [
                        "DigitalOcean api key."
                    ]
                },
                "id": {
                    "description": [
                        "Numeric, the SSH key id you want to operate on."
                    ]
                },
                "ssh_pub_key": {
                    "description": [
                        "The public SSH key you want to add to your account."
                    ]
                }
            },
            "module": "digital_ocean_sshkey"
        },
        {
            "short_description": "Manages a Django application.",
            "deprecated": null,
            "options": {
                "virtualenv": {
                    "required": false,
                    "description": [
                        "An optional path to a I(virtualenv) installation to use while running the manage application."
                    ]
                },
                "app_path": {
                    "required": true,
                    "description": [
                        "The path to the root of the Django application where B(manage.py) lives."
                    ]
                },
                "settings": {
                    "required": false,
                    "description": [
                        "The Python path to the application's settings module, such as 'myapp.settings'."
                    ]
                },
                "pythonpath": {
                    "required": false,
                    "description": [
                        "A directory to add to the Python path. Typically used to include the settings module if it is located external to the application directory."
                    ]
                },
                "database": {
                    "required": false,
                    "description": [
                        "The database to target. Used by the 'createcachetable', 'flush', 'loaddata', and 'syncdb' commands."
                    ]
                },
                "apps": {
                    "required": false,
                    "description": [
                        "A list of space-delimited apps to target. Used by the 'test' command."
                    ]
                },
                "cache_table": {
                    "required": false,
                    "description": [
                        "The name of the table used for database-backed caching. Used by the 'createcachetable' command."
                    ]
                },
                "merge": {
                    "required": false,
                    "description": [
                        "Will run out-of-order or missing migrations as they are not rollback migrations, you can only use this parameter with 'migrate' command"
                    ],
                    "version_added": "1.3"
                },
                "command": {
                    "required": true,
                    "description": [
                        "The name of the Django management command to run. Built in commands are cleanup, collectstatic, flush, loaddata, migrate, runfcgi, syncdb, test, and validate.",
                        "Other commands can be entered, but will fail if they're unknown to Django.  Other commands that may prompt for user input should be run with the I(--noinput) flag."
                    ],
                    "choices": [
                        "cleanup",
                        "collectstatic",
                        "flush",
                        "loaddata",
                        "migrate",
                        "runfcgi",
                        "syncdb",
                        "test",
                        "validate"
                    ]
                },
                "skip": {
                    "required": false,
                    "description": [
                        "Will skip over out-of-order missing migrations, you can only use this parameter with I(migrate)"
                    ],
                    "version_added": "1.3"
                },
                "link": {
                    "required": false,
                    "description": [
                        "Will create links to the files instead of copying them, you can only use this parameter with 'collectstatic' command"
                    ],
                    "version_added": "1.3"
                },
                "fixtures": {
                    "required": false,
                    "description": [
                        "A space-delimited list of fixture file names to load in the database. B(Required) by the 'loaddata' command."
                    ]
                },
                "failfast": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Fail the command immediately if a test fails. Used by the 'test' command."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "django_manage"
        },
        {
            "short_description": "Manages packages with the I(dnf) package manager",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to install (C(present), C(latest)), or remove (C(absent)) a package."
                    ],
                    "choices": [
                        "present",
                        "latest",
                        "absent"
                    ]
                },
                "disablerepo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "I(Repoid) of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Package name, or package specifier with version, like C(name-1.0). When using state=latest, this can be '*' which means run: dnf -y update. You can also pass a url or a local path to a rpm file."
                    ],
                    "aliases": []
                },
                "enablerepo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "I(Repoid) of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
                    ],
                    "aliases": []
                },
                "list": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Various (non-idempotent) commands for usage with C(/usr/bin/ansible) and I(not) playbooks. See examples."
                    ]
                },
                "disable_gpg_check": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is I(present) or I(latest)."
                    ],
                    "aliases": []
                },
                "conf_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The remote dnf configuration file to use for the transaction."
                    ],
                    "aliases": []
                }
            },
            "module": "dnf"
        },
        {
            "short_description": "Interface with dnsimple.com (a DNS hosting service).",
            "deprecated": null,
            "options": {
                "solo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Whether the record should be the only one for that record type and record name. Only use with state=present on a record"
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain to work with. Can be the domain name (e.g. \"mydomain.com\") or the numeric ID of the domain in DNSimple. If omitted, a list of domains will be returned.",
                        "If domain is present but the domain doesn't exist, it will be created."
                    ]
                },
                "account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account email. If omitted, the env variables DNSIMPLE_EMAIL and DNSIMPLE_API_TOKEN will be looked for. If those aren't found, a C(.dnsimple) file will be looked for, see: U(https://github.com/mikemaccana/dnsimple-python#getting-started)"
                    ]
                },
                "record_ids": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of records to ensure they either exist or don't exist"
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record value",
                        "Must be specified when trying to ensure a record exists"
                    ]
                },
                "priority": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record priority"
                    ]
                },
                "record": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record to add, if blank a record for the domain will be created, supports the wildcard (*)"
                    ]
                },
                "state": {
                    "default": null,
                    "required": false,
                    "description": [
                        "whether the record should exist or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ttl": {
                    "default": "3600 (one hour)",
                    "required": false,
                    "description": [
                        "The TTL to give the new record"
                    ]
                },
                "type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of DNS record to create"
                    ],
                    "choices": [
                        "A",
                        "ALIAS",
                        "CNAME",
                        "MX",
                        "SPF",
                        "URL",
                        "TXT",
                        "NS",
                        "SRV",
                        "NAPTR",
                        "PTR",
                        "AAAA",
                        "SSHFP",
                        "HINFO",
                        "POOL"
                    ]
                },
                "account_api_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Account API token. See I(account_email) for info."
                    ]
                }
            },
            "module": "dnsimple"
        },
        {
            "short_description": "Interface with dnsmadeeasy.com (a DNS hosting service).",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Domain to work with. Can be the domain name (e.g. \"mydomain.com\") or the numeric ID of the domain in DNS Made Easy (e.g. \"839989\") for faster resolution."
                    ]
                },
                "record_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record name to get/create/delete/update. If record_name is not specified; all records for the domain will be returned in \"result\" regardless of the state argument."
                    ]
                },
                "record_ttl": {
                    "default": 1800,
                    "required": false,
                    "description": [
                        "record's \"Time to live\".  Number of seconds the record remains cached in DNS servers."
                    ]
                },
                "account_secret": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Accout Secret Key."
                    ]
                },
                "account_key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Accout API Key."
                    ]
                },
                "record_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record type."
                    ],
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "HTTPRED",
                        "MX",
                        "NS",
                        "PTR",
                        "SRV",
                        "TXT"
                    ]
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "whether the record should exist or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "record_value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Record value. HTTPRED: <redirection URL>, MX: <priority> <target name>, NS: <name server>, PTR: <target name>, SRV: <priority> <weight> <port> <target name>, TXT: <text value>",
                        "If record_value is not specified; no changes will be made and the record will be returned in 'result' (in other words, this module can be used to fetch a record's current id, type, and ttl)"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "dnsmadeeasy"
        },
        {
            "short_description": "manage docker containers",
            "deprecated": null,
            "options": {
                "publish_all_ports": {
                    "default": false,
                    "description": [
                        "Publish all exposed ports to the host interfaces."
                    ],
                    "version_added": "1.5"
                },
                "tty": {
                    "default": false,
                    "description": [
                        "Allocate a pseudo-tty within the container."
                    ],
                    "version_added": "1.6"
                },
                "log_opt": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Additional options to pass to the logging driver selected above. See Docker `log-driver <https://docs.docker.com/reference/logging/overview/>` documentation for more information. Requires docker >=1.7.0."
                    ],
                    "version_added": "2.0"
                },
                "insecure_registry": {
                    "default": false,
                    "description": [
                        "Use insecure private registry by HTTP instead of HTTPS. Needed for docker-py >= 0.5.0."
                    ],
                    "version_added": "1.9"
                },
                "links": {
                    "default": null,
                    "description": [
                        "List of other containers to link within this container with an optional",
                        "alias. Use docker CLI-style syntax: C(redis:myredis)."
                    ],
                    "version_added": "1.5"
                },
                "memory_limit": {
                    "default": 0,
                    "description": [
                        "RAM allocated to the container as a number of bytes or as a human-readable string like \"512MB\". Leave as \"0\" to specify no limit."
                    ]
                },
                "docker_url": {
                    "default": "${DOCKER_HOST} or unix://var/run/docker.sock",
                    "description": [
                        "URL of the host running the docker daemon. This will default to the env var DOCKER_HOST if unspecified."
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "Container image used to match and launch containers."
                    ]
                },
                "labels": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set container labels. Requires docker >= 1.6 and docker-py >= 1.2.0."
                    ],
                    "version_added": "2.1"
                },
                "pid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Set the PID namespace mode for the container (currently only supports 'host'). Requires docker-py >= 1.0.0 and docker >= 1.5.0"
                    ],
                    "version_added": "1.9",
                    "aliases": []
                },
                "docker_api_version": {
                    "default": "docker-py default remote API version",
                    "description": [
                        "Remote API version to use. This defaults to the current default as specified by docker-py."
                    ],
                    "version_added": "1.8"
                },
                "stop_timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "How many seconds to wait for the container to stop before killing it."
                    ],
                    "version_added": "2.0"
                },
                "tls_client_key": {
                    "default": "${DOCKER_CERT_PATH}/key.pem",
                    "description": [
                        "Path to the PEM-encoded key used to authenticate docker client. If specified tls_client_cert must be valid"
                    ],
                    "version_added": "1.9"
                },
                "privileged": {
                    "default": false,
                    "description": [
                        "Whether the container should run in privileged mode or not."
                    ]
                },
                "env_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Pass in a path to a file with environment variable (FOO=BAR). If a key value is present in both explicitly presented (i.e. as 'env') and in the environment file, the explicit value will override. Requires docker-py >= 1.4.0."
                    ],
                    "version_added": "2.1"
                },
                "read_only": {
                    "default": null,
                    "description": [
                        "Mount the container's root filesystem as read only"
                    ],
                    "version_added": "2.0",
                    "aliases": []
                },
                "use_tls": {
                    "description": [
                        "Whether to use tls to connect to the docker server.  \"no\" means not to use tls (and ignore any other tls related parameters). \"encrypt\" means to use tls to encrypt the connection to the server.  \"verify\" means to also verify that the server's certificate is valid for the server (this both verifies the certificate against the CA and that the certificate was issued for that host. If this is unspecified, tls will only be used if one of the other tls options require it."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "no",
                        "encrypt",
                        "verify"
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Remote API password."
                    ]
                },
                "hostname": {
                    "default": null,
                    "description": [
                        "Container hostname."
                    ]
                },
                "lxc_conf": {
                    "default": null,
                    "description": [
                        "LXC configuration parameters, such as C(lxc.aa_profile:unconfined)."
                    ]
                },
                "tls_ca_cert": {
                    "default": "${DOCKER_CERT_PATH}/ca.pem",
                    "description": [
                        "Path to a PEM-encoded certificate authority to secure the Docker connection. This has no effect if use_tls is encrypt."
                    ],
                    "version_added": "1.9"
                },
                "state": {
                    "default": "started",
                    "required": false,
                    "description": [
                        "Assert the container's desired state. \"present\" only asserts that the matching containers exist. \"started\" asserts that the matching containers both exist and are running, but takes no action if any configuration has changed. \"reloaded\" (added in Ansible 1.9) asserts that all matching containers are running and restarts any that have any images or configuration out of date. \"restarted\" unconditionally restarts (or starts) the matching containers. \"stopped\" and '\"killed\" stop and kill all matching containers. \"absent\" stops and then' removes any matching containers."
                    ],
                    "choices": [
                        "present",
                        "started",
                        "reloaded",
                        "restarted",
                        "stopped",
                        "killed",
                        "absent"
                    ]
                },
                "tls_client_cert": {
                    "default": "${DOCKER_CERT_PATH}/cert.pem",
                    "description": [
                        "Path to the PEM-encoded certificate used to authenticate docker client. If specified tls_client_key must be valid"
                    ],
                    "version_added": "1.9"
                },
                "entrypoint": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Corresponds to ``--entrypoint`` option of ``docker run`` command and ``ENTRYPOINT`` directive of Dockerfile. Used to match and launch containers."
                    ],
                    "version_added": "2.1"
                },
                "env": {
                    "default": null,
                    "description": [
                        "Pass a dict of environment variables to the container."
                    ]
                },
                "volumes_from": {
                    "default": null,
                    "description": [
                        "List of names of containers to mount volumes from."
                    ]
                },
                "net": {
                    "default": false,
                    "description": [
                        "Network mode for the launched container: bridge, none, container:<name|id>",
                        "or host. Requires docker >= 0.11."
                    ],
                    "version_added": "1.8"
                },
                "email": {
                    "default": null,
                    "description": [
                        "Remote API email."
                    ]
                },
                "username": {
                    "default": null,
                    "description": [
                        "Remote API username."
                    ]
                },
                "docker_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username or UID to use within the container"
                    ],
                    "version_added": "2.0"
                },
                "log_driver": {
                    "default": "json-file",
                    "required": false,
                    "description": [
                        "You can specify a different logging driver for the container than for the daemon. \"json-file\" Default logging driver for Docker. Writes JSON messages to file. docker logs command is available only for this logging driver. \"none\" disables any logging for the container. \"syslog\" Syslog logging driver for Docker. Writes log messages to syslog. docker logs command is not available for this logging driver. \"journald\" Journald logging driver for Docker. Writes log messages to \"journald\". \"gelf\" Graylog Extended Log Format (GELF) logging driver for Docker. Writes log messages to a GELF endpoint likeGraylog or Logstash. \"fluentd\" Fluentd logging driver for Docker. Writes log messages to \"fluentd\" (forward input). \"awslogs\" (added in 2.1) Awslogs logging driver for Docker. Writes log messages to AWS Cloudwatch Logs. If not defined explicitly, the Docker daemon's default (\"json-file\") will apply. Requires docker >= 1.6.0."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "json-file",
                        "none",
                        "syslog",
                        "journald",
                        "gelf",
                        "fluentd",
                        "awslogs"
                    ]
                },
                "expose": {
                    "default": null,
                    "description": [
                        "List of additional container ports to expose for port mappings or links. If the port is already exposed using EXPOSE in a Dockerfile, you don't need to expose it again."
                    ],
                    "version_added": "1.5"
                },
                "stdin_open": {
                    "default": false,
                    "description": [
                        "Keep stdin open after a container is launched."
                    ],
                    "version_added": "1.6"
                },
                "tls_hostname": {
                    "default": "Taken from docker_url",
                    "description": [
                        "A hostname to check matches what's supplied in the docker server's certificate.  If unspecified, the hostname is taken from the docker_url."
                    ],
                    "version_added": "1.9"
                },
                "domainname": {
                    "default": null,
                    "description": [
                        "Container domain name."
                    ]
                },
                "registry": {
                    "default": "DockerHub",
                    "description": [
                        "Remote registry URL to pull images from."
                    ],
                    "version_added": "1.8",
                    "aliases": []
                },
                "volumes": {
                    "default": null,
                    "description": [
                        "List of volumes to mount within the container",
                        "Use docker CLI-style syntax: C(/host:/container[:mode])",
                        "You can specify a read mode for the mount with either C(ro) or C(rw). Starting at version 2.1, SELinux hosts can additionally use C(z) or C(Z) mount options to use a shared or private label for the volume."
                    ]
                },
                "detach": {
                    "default": true,
                    "description": [
                        "Enable detached mode to leave the container running in background. If disabled, fail unless the process exits cleanly."
                    ]
                },
                "cpu_set": {
                    "default": null,
                    "required": false,
                    "description": [
                        "CPUs in which to allow execution. Requires docker-py >= 0.6.0."
                    ],
                    "version_added": "2.0"
                },
                "pull": {
                    "default": "missing",
                    "description": [
                        "Control when container images are updated from the C(docker_url) registry. If \"missing,\" images will be pulled only when missing from the host; if '\"always,\" the registry will be checked for a newer version of the image' each time the task executes."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "missing",
                        "always"
                    ]
                },
                "dns": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of custom DNS servers for the container."
                    ]
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name used to match and uniquely name launched containers. Explicit names are used to uniquely identify a single container or to link among containers. Mutually exclusive with a \"count\" other than \"1\"."
                    ],
                    "version_added": "1.5"
                },
                "signal": {
                    "default": "KILL",
                    "required": false,
                    "description": [
                        "With the state \"killed\", you can alter the signal sent to the container."
                    ],
                    "version_added": "2.0"
                },
                "cap_add": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Add capabilities for the container. Requires docker-py >= 0.5.0."
                    ],
                    "version_added": "2.0"
                },
                "restart_policy": {
                    "default": null,
                    "description": [
                        "Container restart policy.",
                        "The 'unless-stopped' choice is only available starting in Ansible 2.1 and for Docker 1.9 and above."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "no",
                        "on-failure",
                        "always",
                        "unless-stopped"
                    ]
                },
                "count": {
                    "default": 1,
                    "description": [
                        "Number of matching containers that should be in the desired state."
                    ]
                },
                "devices": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of host devices to expose to container"
                    ],
                    "version_added": "2.1"
                },
                "extra_hosts": {
                    "description": [
                        "Dict of custom host-to-IP mappings to be defined in the container"
                    ],
                    "version_added": "2.0"
                },
                "command": {
                    "default": null,
                    "description": [
                        "Command used to match and launch containers."
                    ]
                },
                "restart_policy_retry": {
                    "default": 0,
                    "description": [
                        "Maximum number of times to restart a container. Leave as \"0\" for unlimited retries."
                    ],
                    "version_added": "1.9"
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "Docker daemon response timeout in seconds."
                    ],
                    "version_added": "2.1"
                },
                "cap_drop": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Drop capabilities for the container. Requires docker-py >= 0.5.0."
                    ],
                    "version_added": "2.0",
                    "aliases": []
                },
                "ports": {
                    "default": null,
                    "description": [
                        "List containing private to public port mapping specification. Use docker 'CLI-style syntax: C(8000), C(9000:8000), or C(0.0.0.0:9000:8000)' where 8000 is a container port, 9000 is a host port, and 0.0.0.0 is - a host interface. The container ports need to be exposed either in the Dockerfile or via the C(expose) option."
                    ],
                    "version_added": "1.5"
                },
                "ulimits": {
                    "default": null,
                    "required": false,
                    "description": [
                        "ulimits, list ulimits with name, soft and optionally hard limit separated by colons. e.g. nofile:1024:2048 Requires docker-py >= 1.2.0 and docker >= 1.6.0"
                    ],
                    "version_added": "2.1"
                },
                "cpu_shares": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "CPU shares (relative weight). Requires docker-py >= 0.6.0."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "docker"
        },
        {
            "short_description": "manage docker containers",
            "deprecated": null,
            "options": {
                "tty": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Allocate a psuedo-TTY."
                    ]
                },
                "dns_servers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of custom DNS servers."
                    ]
                },
                "image": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Repository path and tag used to create the container. If an image is not found or pull is true, the image will be pulled from the registry. If no tag is included, 'latest' will be used."
                    ]
                },
                "labels": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of key value pairs."
                    ]
                },
                "docker_host": {
                    "default": "unix://var/run/docker.sock",
                    "required": false,
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.168.99.100:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
                    ],
                    "aliases": [
                        "docker_url"
                    ]
                },
                "cpuset_cpus": {
                    "default": null,
                    "required": false,
                    "description": [
                        "CPUs in which to allow execution C(1,3) or C(1-3)."
                    ]
                },
                "force_kill": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use the kill command when stopping a running container."
                    ]
                },
                "pid_mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the PID namespace mode for the container. Currenly only supports 'host'."
                    ]
                },
                "networks": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of networks the container belongs to.",
                        "Each network is a dict with keys C(name), C(ipv4_address), C(ipv6_address), C(links), C(aliases).",
                        "For each network C(name) is required, all other keys are optional.",
                        "If included, C(links) or C(aliases) are lists.",
                        "For examples of the data structure and usage see EXAMPLES below.",
                        "To remove a container from one or more networks, use the C(purge_networks) option."
                    ],
                    "version_added": "2.1.0"
                },
                "cpu_period": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Limit CPU CFS (Completely Fair Scheduler) period"
                    ]
                },
                "capabilities": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of capabilities to add to the container."
                    ]
                },
                "memory_swap": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Total memory limit (memory + swap, format:<number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g."
                    ]
                },
                "mac_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Container MAC address (e.g. 92:d0:c6:0a:29:33)"
                    ]
                },
                "volumes_from": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of container names or Ids to get volumes from."
                    ]
                },
                "log_options": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of options specific to the chosen log_driver. See https://docs.docker.com/engine/admin/logging/overview/ for details."
                    ]
                },
                "recreate": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use with present and started states to force the re-creation of an existing container."
                    ]
                },
                "memory": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Memory limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g"
                    ]
                },
                "memory_swappiness": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100."
                    ]
                },
                "network_mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Connect the container to a network."
                    ],
                    "choices": [
                        "bridge",
                        "container:<name|id>",
                        "host",
                        "none"
                    ]
                },
                "detach": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable detached mode to leave the container running in background. If disabled, the task will reflect the status of the container run (failed if the command failed)."
                    ]
                },
                "published_ports": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of ports to publish from the container to the host.",
                        "Use docker CLI syntax: C(8000), C(9000:8000), or C(0.0.0.0:9000:8000), where 8000 is a container port, 9000 is a host port, and 0.0.0.0 is a host interface.",
                        "Container ports must be exposed either in the Dockerfile or via the C(expose) option.",
                        "A value of ALL will publish all exposed container ports to random host ports, ignoring any other mappings."
                    ],
                    "aliases": [
                        "ports"
                    ]
                },
                "restart": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use with started state to force a matching container to be stopped and restarted."
                    ]
                },
                "pull": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If true, always pull the latest version of an image. Otherwise, will only pull an image when missing."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Assign a name to a new container or match an existing container.",
                        "When identifying an existing container name may be a name or a long or short container ID."
                    ]
                },
                "stop_signal": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Override default signal used to stop the container."
                    ]
                },
                "devices": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of host device bindings to add to the container. Each binding is a mapping expressed in the format: <path_on_host>:<path_in_container>:<cgroup_permissions>"
                    ]
                },
                "uts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the UTS namespace mode for the container."
                    ]
                },
                "blkio_weight": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Block IO (relative weight), between 10 and 1000."
                    ]
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API."
                    ]
                },
                "stop_timeout": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of seconds to wait for the container to stop before sending SIGKILL."
                    ]
                },
                "ulimits": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of ulimit options. A ulimit is specified as C(nofile:262144:262144)"
                    ]
                },
                "interactive": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Keep stdin open after a container is launched, even if not attached."
                    ]
                },
                "links": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of name aliases for linked containers in the format C(container_name:alias)"
                    ]
                },
                "ssl_version": {
                    "default": "1.0",
                    "required": false,
                    "description": [
                        "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
                    ]
                },
                "command": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Command or list of commands to execute in the container when it starts."
                    ]
                },
                "paused": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use with the started state to pause running processes inside the container."
                    ]
                },
                "tls_verify": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
                    ]
                },
                "dns_search_domains": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of custom DNS search domains."
                    ]
                },
                "security_opts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of security options in the form of C(\"label:user:User\")"
                    ]
                },
                "env_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to a file containing environment variables I(FOO=BAR).",
                        "If variable also present in C(env), then C(env) value will override.",
                        "Requires docker-py >= 1.4.0."
                    ],
                    "version_added": "2.1.0"
                },
                "cpu_quota": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Limit CPU CFS (Completely Fair Scheduler) quota"
                    ]
                },
                "read_only": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Mount the container's root file system as read-only."
                    ]
                },
                "cpuset_mems": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Memory nodes (MEMs) in which to allow execution C(0-3) or C(0,1)"
                    ]
                },
                "hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Container hostname."
                    ]
                },
                "state": {
                    "default": "started",
                    "required": false,
                    "description": [
                        "I(absent) - A container matching the specified name will be stopped and removed. Use force_kill to kill the container rather than stopping it. Use keep_volumes to retain volumes associated with the removed container.",
                        "I(present)\" - Asserts the existence of a container matching the name and any provided configuration parameters. If no container matches the name, a container will be created. If a container matches the name but the provided configuration does not match, the container will be updated, if it can be. If it cannot be updated, it will be removed and re-created with the requested config. Image version will be taken into account when comparing configuration. To ignore image version use the ignore_image option. Use the recreate option to force the re-creation of the matching container. Use force_kill to kill the container rather than stopping it. Use keep_volumes to retain volumes associated with a removed container.",
                        "I(started) - Asserts there is a running container matching the name and any provided configuration. If no container matches the name, a container will be created and started. If a container matching the name is found but the configuration does not match, the container will be updated, if it can be. If it cannot be updated, it will be removed and a new container will be created with the requested configuration and started. Image version will be taken into account when comparing configuration. To ignore image version use the ignore_image option. Use recreate to always re-create a matching container, even if it is running. Use restart to force a matching container to be stopped and restarted. Use force_kill to kill a container rather than stopping it. Use keep_volumes to retain volumes associated with a removed container.",
                        "I(stopped) - Asserts that the container is first I(present), and then if the container is running moves it to a stopped state. Use force_kill to kill a container rather than stopping it."
                    ],
                    "choices": [
                        "absent",
                        "present",
                        "stopped",
                        "started"
                    ]
                },
                "entrypoint": {
                    "default": null,
                    "required": false,
                    "description": [
                        "String or list of commands that overwrite the default ENTRYPOINT of the image."
                    ]
                },
                "key_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS key file."
                    ],
                    "aliases": [
                        "tls_client_key"
                    ]
                },
                "env": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary of key,value pairs."
                    ]
                },
                "keep_volumes": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Retain volumes associated with a removed container."
                    ]
                },
                "ipc_mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the IPC mode for the container. Can be one of 'container:<name|id>' to reuse another container's IPC namespace or 'host' to use the host's IPC namespace within the container."
                    ]
                },
                "privileged": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Give extended privileges to the container."
                    ]
                },
                "api_version": {
                    "default": "default provided by docker-py",
                    "required": false,
                    "description": [
                        "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
                    ],
                    "aliases": [
                        "docker_api_version"
                    ]
                },
                "exposed_ports": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of additional container ports to expose for port mappings or links. If the port is already exposed using EXPOSE in a Dockerfile, it does not need to be xposed again."
                    ],
                    "aliases": [
                        "exposed"
                    ]
                },
                "trust_image_content": {
                    "default": false,
                    "requried": false,
                    "description": [
                        "If true, skip image verification."
                    ]
                },
                "cacert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
                    ],
                    "aliases": [
                        "tls_ca_cert"
                    ]
                },
                "log_driver": {
                    "required": false,
                    "defult": "json-file",
                    "description": [
                        "Specify the logging driver."
                    ],
                    "choices": [
                        "json-file",
                        "syslog",
                        "journald",
                        "gelf",
                        "fluentd",
                        "awslogs",
                        "splunk"
                    ]
                },
                "oom_killer": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether or not to disable OOM Killer for the container."
                    ]
                },
                "shm_size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Size of `/dev/shm`. The format is `<number><unit>`. `number` must be greater than `0`. Unit is optional and can be `b` (bytes), `k` (kilobytes), `m` (megabytes), or `g` (gigabytes).",
                        "Ommitting the unit defaults to bytes. If you omit the size entirely, the system uses `64m`."
                    ]
                },
                "kill_signal": {
                    "default null": null,
                    "required": false,
                    "description": [
                        "Override default signal used to kill a running container."
                    ]
                },
                "tls_hostname": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
                    ]
                },
                "volume_driver": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The container's volume driver."
                    ]
                },
                "user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Sets the username or UID used and optionally the groupname or GID for the specified command.",
                        "Can be [ user | user:group | uid | uid:gid | user:gid | uid:group ]"
                    ]
                },
                "groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of additional group names and/or IDs that the container process will run as."
                    ]
                },
                "cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS certificate file."
                    ],
                    "aliases": [
                        "tls_client_cert"
                    ]
                },
                "purge_networks": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove the container from ALL networks not included in C(networks) parameter.",
                        "Any default networks such as I(bridge), if not found in C(networks), will be removed as well."
                    ],
                    "version_added": "2.1.0"
                },
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
                    ]
                },
                "ignore_image": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When C(state) is I(present) or I(started) the module compares the configuration of an existing container to requested configuration. The evaluation includes the image version. If the image vesion in the registry does not match the container, the container will be recreated. Stop this behavior by setting C(ignore_image) to I(True)."
                    ]
                },
                "restart_policy": {
                    "default": "on-failure",
                    "required": false,
                    "description": [
                        "Container restart policy. Place quotes around I(no) option."
                    ],
                    "choices": [
                        "always",
                        false,
                        "on-failure",
                        "unless-stopped"
                    ]
                },
                "kernel_memory": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Kernel memory limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g. Minimum is 4M."
                    ]
                },
                "etc_hosts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dict of host-to-IP mappings, where each host name is a key in the dictionary. Each host name will be added to the container's /etc/hosts file."
                    ]
                },
                "memory_reservation": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Memory soft limit (format: <number>[<unit>]). Number is a positive integer. Unit can be one of b, k, m, or g"
                    ]
                },
                "volumes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of volumes to mount within the container.",
                        "Use docker CLI-style syntax: C(/host:/container[:mode])",
                        "You can specify a read mode for the mount with either C(ro) or C(rw).",
                        "SELinux hosts can additionally use C(z) or C(Z) to use a shared or private label for the volume."
                    ]
                },
                "cpu_shares": {
                    "default": null,
                    "required": false,
                    "description": [
                        "CPU shares (relative weight)."
                    ]
                },
                "restart_retries": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Use with restart policy to control maximum number of restart attempts."
                    ]
                }
            },
            "module": "docker_container"
        },
        {
            "short_description": "Manage docker images.",
            "deprecated": null,
            "options": {
                "archive_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use with state 'present' to archive an image to a .tar file."
                    ],
                    "version_added": "2.1"
                },
                "cacert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
                    ],
                    "aliases": [
                        "tls_ca_cert"
                    ]
                },
                "force": {
                    "default": false,
                    "description": [
                        "Use with absent state to un-tag and remove all images matching the specified name. Use with states 'present' and 'tagged' to take action even when an image already exists."
                    ],
                    "version_added": "2.1"
                },
                "repository": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Full path to a repository. Use with state 'present' to tag the image into the repository."
                    ],
                    "version_added": "2.1"
                },
                "tls_hostname": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
                    ]
                },
                "docker_host": {
                    "default": "unix://var/run/docker.sock",
                    "required": false,
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.168.99.100:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
                    ],
                    "aliases": [
                        "docker_url"
                    ]
                },
                "tag": {
                    "default": "latest",
                    "description": [
                        "Used to select an image when pulling. Will be added to the image when pushing, tagging or building. Defaults to 'latest' when pulling an image."
                    ]
                },
                "cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS certificate file."
                    ],
                    "aliases": [
                        "tls_client_cert"
                    ]
                },
                "path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use with state 'present' to build an image. Will be the path to a directory containing the context and Dockerfile for building an image."
                    ],
                    "aliases": [
                        "build_path"
                    ]
                },
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
                    ]
                },
                "pull": {
                    "default": true,
                    "description": [
                        "When building an image downloads any updates to the FROM image in Dockerfile."
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Image name. Name format will be one of: name, repository/name, registry_server:port/name. When pushing or pulling an image the name can optionally include the tag by appending ':tag_name'."
                    ]
                },
                "nocache": {
                    "default": false,
                    "description": [
                        "Do not use cache when building an image."
                    ]
                },
                "container_limits": {
                    "contains": {
                        "memswap": {
                            "type": "int",
                            "description": "Total memory (memory + swap), -1 to disable swap"
                        },
                        "cpushares": {
                            "type": "int",
                            "description": "CPU shares (relative weight)"
                        },
                        "cpusetcpus": {
                            "type": "str",
                            "description": "CPUs in which to allow execution, e.g., \"0-3\", \"0,1\""
                        },
                        "memory": {
                            "type": "int",
                            "description": "Set memory limit for build"
                        }
                    },
                    "description": [
                        "A dictionary of limits applied to each container created by the build process."
                    ],
                    "version_added": "2.1",
                    "default": null,
                    "required": false,
                    "type": "complex"
                },
                "dockerfile": {
                    "default": "Dockerfile",
                    "description": [
                        "Use with state 'present' to provide an alternate name for the Dockerfile to use when building an image."
                    ],
                    "version_added": "2.0"
                },
                "ssl_version": {
                    "default": "1.0",
                    "required": false,
                    "description": [
                        "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
                    ]
                },
                "use_tls": {
                    "default": false,
                    "description": [
                        "DEPRECATED. Whether to use tls to connect to the docker server. Set to 'no' when TLS will not be used. Set to 'encrypt' to use TLS. And set to 'verify' to use TLS and verify that the server's certificate is valid for the server. NOTE: If you specify this option, it will set the value of the tls or tls_verify parameters."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        false,
                        "encrypt",
                        "verify"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Make assertions about the state of an image.",
                        "When 'absent' an image will be removed. Use the force option to un-tag and remove all images matching the provided name.",
                        "When 'present' check if an image exists using the provided name and tag. If the image is not found or the force option is used, the image will either be pulled, built or loaded. By default the image will be pulled from Docker Hub. To build the image, provide a path value set to a directory containing a context and Dockerfile. To load an image, specify load_path to provide a path to an archive file. To tag an image to a repository, provide a repository path. If the name contains a repository path, it will be pushed.",
                        "NOTE: 'build' is DEPRECATED. Specifying 'build' will behave the same as 'present'."
                    ],
                    "choices": [
                        "absent",
                        "present",
                        "build (DEPRECATED)"
                    ]
                },
                "tls_verify": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
                    ]
                },
                "key_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS key file."
                    ],
                    "aliases": [
                        "tls_client_key"
                    ]
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API."
                    ]
                },
                "rm": {
                    "default": true,
                    "description": [
                        "Remove intermediate containers after build."
                    ],
                    "version_added": "2.1"
                },
                "http_timeout": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Timeout for HTTP requests during the image build operation. Provide a positive integer value for the number of seconds."
                    ],
                    "version_added": "2.1"
                },
                "api_version": {
                    "default": "default provided by docker-py",
                    "required": false,
                    "description": [
                        "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
                    ],
                    "aliases": [
                        "docker_api_version"
                    ]
                }
            },
            "module": "docker_image"
        },
        {
            "short_description": "Inspect docker images",
            "deprecated": null,
            "options": {
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
                    ]
                },
                "cacert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
                    ],
                    "aliases": [
                        "tls_ca_cert"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "An image name or a list of image names. Name format will be name[:tag] or repository/name[:tag], where tag is optional. If a tag is not provided, 'latest' will be used."
                    ]
                },
                "ssl_version": {
                    "default": "1.0",
                    "required": false,
                    "description": [
                        "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
                    ]
                },
                "tls_hostname": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
                    ]
                },
                "docker_host": {
                    "default": "unix://var/run/docker.sock",
                    "required": false,
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.168.99.100:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
                    ],
                    "aliases": [
                        "docker_url"
                    ]
                },
                "tls_verify": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
                    ]
                },
                "key_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS key file."
                    ],
                    "aliases": [
                        "tls_client_key"
                    ]
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API."
                    ]
                },
                "cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS certificate file."
                    ],
                    "aliases": [
                        "tls_client_cert"
                    ]
                },
                "api_version": {
                    "default": "default provided by docker-py",
                    "required": false,
                    "description": [
                        "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
                    ],
                    "aliases": [
                        "docker_api_version"
                    ]
                }
            },
            "module": "docker_image_facts"
        },
        {
            "short_description": "Log into a Docker registry.",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The username for the registry account"
                    ]
                },
                "cacert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
                    ],
                    "aliases": [
                        "tls_ca_cert"
                    ]
                },
                "tls_hostname": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
                    ]
                },
                "docker_host": {
                    "default": "unix://var/run/docker.sock",
                    "required": false,
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.168.99.100:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
                    ],
                    "aliases": [
                        "docker_url"
                    ]
                },
                "tls_verify": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
                    ]
                },
                "cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS certificate file."
                    ],
                    "aliases": [
                        "tls_client_cert"
                    ]
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The plaintext password for the registry account"
                    ]
                },
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
                    ]
                },
                "config_path": {
                    "default": "~/.docker/config.json",
                    "description": [
                        "Custom path to the Docker CLI configuration file."
                    ],
                    "aliases": [
                        "self.config_path",
                        "dockercfg_path"
                    ]
                },
                "ssl_version": {
                    "default": "1.0",
                    "required": false,
                    "description": [
                        "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
                    ]
                },
                "key_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS key file."
                    ],
                    "aliases": [
                        "tls_client_key"
                    ]
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API."
                    ]
                },
                "registry_url": {
                    "default": "https://index.docker.io/v1/",
                    "description": [
                        "The registry URL."
                    ],
                    "aliases": [
                        "registry",
                        "url"
                    ]
                },
                "email": {
                    "default": "None",
                    "description": [
                        "The email address for the registry account. NOTE: private registries may not require this, but Docker Hub requires it."
                    ]
                },
                "api_version": {
                    "default": "default provided by docker-py",
                    "required": false,
                    "description": [
                        "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
                    ],
                    "aliases": [
                        "docker_api_version"
                    ]
                },
                "reauthorize": {
                    "default": false,
                    "description": [
                        "Refresh exiting authentication found in the configuration file."
                    ],
                    "aliases": [
                        "reauth"
                    ]
                }
            },
            "module": "docker_login"
        },
        {
            "short_description": "Manage docker services and containers.",
            "deprecated": null,
            "options": {
                "files": {
                    "required": false,
                    "type": "list",
                    "description": [
                        "List of file names relative to C(project_src). Overrides docker-compose.yml or docker-compose.yaml.",
                        "Files are loaded and merged in the order given."
                    ]
                },
                "project_name": {
                    "required": false,
                    "type": "str",
                    "description": [
                        "Provide a project name. If not provided, the project name is taken from the basename of C(project_src).",
                        "Required when no C(definition) is provided."
                    ]
                },
                "project_src": {
                    "required": false,
                    "type": "path",
                    "description": [
                        "Path to a directory containing a docker-compose.yml or docker-compose.yaml file.",
                        "Mutually exclusive with C(definition).",
                        "Required when no C(definition) is provided."
                    ]
                },
                "hostname_check": {
                    "default": false,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Whether or not to check the Docker daemon's hostname against the name provided in the client certificate."
                    ]
                },
                "recreate": {
                    "default": "smart",
                    "required": false,
                    "type": "str",
                    "description": [
                        "By default containers will be recreated when their configuration differs from the service definition.",
                        "Setting to I(never) ignores configuration differences and leaves existing containers unchanged.",
                        "Setting to I(always) forces recreation of all existing containers."
                    ],
                    "choices": [
                        "always",
                        "never",
                        "smart"
                    ]
                },
                "tls_hostname": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "When verifying the authenticity of the Docker Host server, provide the expected name of the server."
                    ]
                },
                "docker_host": {
                    "default": "unix://var/run/docker.sock",
                    "required": false,
                    "description": [
                        "The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.168.99.100:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'."
                    ],
                    "aliases": [
                        "docker_url"
                    ]
                },
                "dependencies": {
                    "default": true,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "When C(state) is I(present) specify whether or not to include linked services."
                    ]
                },
                "remove_images": {
                    "default": null,
                    "required": false,
                    "type": "str",
                    "description": [
                        "Use with state I(absent) to remove the all images or only local images."
                    ]
                },
                "services": {
                    "required": false,
                    "type": "list",
                    "description": [
                        "When C(state) is I(present) run I(docker-compose up) on a subset of services."
                    ]
                },
                "cert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS certificate file."
                    ],
                    "aliases": [
                        "tls_client_cert"
                    ]
                },
                "tls": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server."
                    ]
                },
                "definition": {
                    "required": false,
                    "type": "complex",
                    "description": [
                        "Provide docker-compose yaml describing one or more services, networks and volumes.",
                        "Mutually exclusive with C(project_src) and C(project_files)."
                    ]
                },
                "scale": {
                    "required": false,
                    "type": "complex",
                    "description": [
                        "When C(sate) is I(present) scale services. Provide a dictionary of key/value pairs where the key is the name of the service and the value is an integer count for the number of containers."
                    ]
                },
                "restarted": {
                    "default": false,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Use with state I(present) to restart all containers."
                    ]
                },
                "ssl_version": {
                    "default": "1.0",
                    "required": false,
                    "description": [
                        "Provide a valid SSL version number. Default value determined by docker-py, currently 1.0."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "type": "str",
                    "description": [
                        "Desired state of the project.",
                        "Specifying I(present) is the same as running I(docker-compose up).",
                        "Specifying I(absent) is the same as running I(docker-compose down)."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "api_version": {
                    "default": "default provided by docker-py",
                    "required": false,
                    "description": [
                        "The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py."
                    ],
                    "aliases": [
                        "docker_api_version"
                    ]
                },
                "remove_volumes": {
                    "default": false,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Use with state I(absent) to remove data volumes."
                    ]
                },
                "tls_verify": {
                    "default": false,
                    "description": [
                        "Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server."
                    ]
                },
                "stopped": {
                    "default": false,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Use with state I(present) to leave the containers in an exited or non-running state."
                    ]
                },
                "build": {
                    "default": true,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Whether or not to build images before starting containers.",
                        "Missing images will always be built.",
                        "If an image is present and C(build) is false, the image will not be built.",
                        "If an image is present and C(build) is true, the image will be built."
                    ]
                },
                "timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "The maximum amount of time in seconds to wait on a response from the API."
                    ]
                },
                "debug": {
                    "default": false,
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Include I(actions) in the return values."
                    ]
                },
                "cacert_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Use a CA certificate when performing server verification by providing the path to a CA certificate file."
                    ],
                    "aliases": [
                        "tls_ca_cert"
                    ]
                },
                "key_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the client's TLS key file."
                    ],
                    "aliases": [
                        "tls_client_key"
                    ]
                }
            },
            "module": "docker_service"
        },
        {
            "short_description": "Dpkg package selection selections",
            "deprecated": null,
            "options": {
                "selection": {
                    "required": true,
                    "description": [
                        "The selection state to set the package to."
                    ],
                    "choices": [
                        "install",
                        "hold",
                        "deinstall",
                        "purge"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the package"
                    ]
                }
            },
            "module": "dpkg_selections"
        },
        {
            "short_description": "Create, update or delete AWS Dynamo DB tables.",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "read_capacity": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Read throughput capacity (units) to provision."
                    ]
                },
                "hash_key_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the hash key.",
                        "Required when C(state=present)."
                    ]
                },
                "range_key_type": {
                    "default": "STRING",
                    "required": false,
                    "description": [
                        "Type of the range key."
                    ],
                    "choices": [
                        "STRING",
                        "NUMBER",
                        "BINARY"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the table."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "write_capacity": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Write throughput capacity (units) to provision."
                    ]
                },
                "indexes": {
                    "default": [],
                    "required": false,
                    "description": [
                        "list of dictionaries describing indexes to add to the table. global indexes can be updated. local indexes don't support updates or have throughput.",
                        "required options: ['name', 'type', 'hash_key_name']",
                        "valid types: ['all', 'global_all', 'global_include', 'global_keys_only', 'include', 'keys_only']",
                        "other options: ['hash_key_type', 'range_key_name', 'range_key_type', 'includes', 'read_capacity', 'write_capacity']"
                    ],
                    "version_added": "2.1"
                },
                "range_key_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the range key."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or delete the table"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "hash_key_type": {
                    "default": "STRING",
                    "required": false,
                    "description": [
                        "Type of the hash key."
                    ],
                    "choices": [
                        "STRING",
                        "NUMBER",
                        "BINARY"
                    ]
                }
            },
            "module": "dynamodb_table"
        },
        {
            "short_description": "Installs Python libraries",
            "deprecated": null,
            "options": {
                "virtualenv": {
                    "default": null,
                    "required": false,
                    "description": [
                        "an optional I(virtualenv) directory path to install into. If the I(virtualenv) does not exist, it is created automatically"
                    ]
                },
                "virtualenv_site_packages": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether the virtual environment will inherit packages from the global site-packages directory.  Note that if this setting is changed on an already existing virtual environment it will not have any effect, the environment must be deleted and newly created."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "virtualenv_command": {
                    "default": "virtualenv",
                    "required": false,
                    "description": [
                        "The command to create the virtual environment with. For example C(pyvenv), C(virtualenv), C(virtualenv2)."
                    ],
                    "version_added": "1.1"
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "A Python library name"
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The desired state of the library. C(latest) ensures that the latest version is installed."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "present",
                        "latest"
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The explicit executable or a pathname to the executable to be used to run easy_install for a specific version of Python installed in the system. For example C(easy_install-3.3), if there are both Python 2.7 and 3.3 installations in the system and you want to run easy_install for the Python 3.3 installation."
                    ],
                    "version_added": "1.3"
                }
            },
            "module": "easy_install"
        },
        {
            "short_description": "create, terminate, start or stop an instance in ec2",
            "deprecated": null,
            "options": {
                "kernel": {
                    "default": null,
                    "required": false,
                    "description": [
                        "kernel I(eki) to use for the instance"
                    ],
                    "aliases": []
                },
                "image": {
                    "default": null,
                    "required": true,
                    "description": [
                        "I(ami) ID to use for the instance"
                    ],
                    "aliases": []
                },
                "monitoring": {
                    "aliases": [],
                    "description": [
                        "enable detailed monitoring (CloudWatch) for instance"
                    ],
                    "version_added": "1.1",
                    "default": null,
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "user_data": {
                    "default": null,
                    "required": false,
                    "description": [
                        "opaque blob of data which is made available to the ec2 instance"
                    ],
                    "version_added": "0.9",
                    "aliases": []
                },
                "termination_protection": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Enable or Disable the Termination Protection"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "private_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the private ip address to assign the instance (from the vpc subnet)"
                    ],
                    "version_added": "1.2",
                    "aliases": []
                },
                "spot_type": {
                    "aliases": [],
                    "description": [
                        "Type of spot request; one of \"one-time\" or \"persistent\". Defaults to \"one-time\" if not supplied."
                    ],
                    "version_added": "2.0",
                    "default": "one-time",
                    "required": false,
                    "choices": [
                        "one-time",
                        "persistent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "source_dest_check": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable or Disable the Source/Destination checks (for NAT instances and Virtual Routers)"
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "spot_wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long to wait for the spot instance request to be fulfilled"
                    ],
                    "version_added": "1.5",
                    "aliases": []
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "security group (or list of groups) to use with the instance"
                    ],
                    "aliases": [
                        "groups"
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS availability zone in which to launch the instance"
                    ],
                    "version_added": "1.2",
                    "aliases": [
                        "aws_zone",
                        "ec2_zone"
                    ]
                },
                "exact_count": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An integer value which indicates how many instances that match the 'count_tag' parameter should be running. Instances are either created or terminated based on this value."
                    ],
                    "version_added": "1.5",
                    "aliases": []
                },
                "ebs_optimized": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "whether instance is using optimized EBS volumes, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html)"
                    ],
                    "version_added": "1.6"
                },
                "state": {
                    "aliases": [],
                    "description": [
                        "create or terminate instances"
                    ],
                    "version_added": "1.3",
                    "default": "present",
                    "required": false,
                    "choices": [
                        "present",
                        "absent",
                        "running",
                        "stopped"
                    ]
                },
                "placement_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "placement group for the instance when using EC2 Clustered Compute"
                    ],
                    "version_added": "1.3",
                    "aliases": []
                },
                "key_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "key pair to use on the instance"
                    ],
                    "aliases": [
                        "keypair"
                    ]
                },
                "ramdisk": {
                    "default": null,
                    "required": false,
                    "description": [
                        "ramdisk I(eri) to use for the instance"
                    ],
                    "aliases": []
                },
                "count_tag": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Used with 'exact_count' to determine how many nodes based on a specific tag criteria should be running.  This can be expressed in multiple ways and is shown in the EXAMPLES section.  For instance, one can request 25 servers that are tagged with \"class=webserver\". The specified tag must already exist or be passed in as the 'instance_tags' option."
                    ],
                    "version_added": "1.5",
                    "aliases": []
                },
                "spot_launch_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Launch group for spot request, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html#spot-launch-group)"
                    ],
                    "version_added": "2.1"
                },
                "vpc_subnet_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the subnet ID in which to launch the instance (VPC)"
                    ],
                    "version_added": "1.1",
                    "aliases": []
                },
                "instance_ids": {
                    "default": null,
                    "required": false,
                    "description": [
                        "list of instance ids, currently used for states: absent, running, stopped"
                    ],
                    "version_added": "1.3",
                    "aliases": [
                        "instance_id"
                    ]
                },
                "tenancy": {
                    "aliases": [],
                    "description": [
                        "An instance with a tenancy of \"dedicated\" runs on single-tenant hardware and can only be launched into a VPC. Note that to use dedicated tenancy you MUST specify a vpc_subnet_id as well. Dedicated tenancy is not available for EC2 \"micro\" instances."
                    ],
                    "version_added": "1.9",
                    "default": "default",
                    "required": false,
                    "choices": [
                        "default",
                        "dedicated"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "assign_public_ip": {
                    "aliases": [],
                    "description": [
                        "when provisioning within vpc, assign a public IP address. Boto library must be 2.13.0+"
                    ],
                    "version_added": "1.5",
                    "default": null,
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "spot_price": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Maximum spot price to bid, If not set a regular on-demand instance is requested. A spot request is made with this maximum bid. When it is filled, the instance is started."
                    ],
                    "version_added": "1.5",
                    "aliases": []
                },
                "wait": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "wait for the instance to be 'running' before returning.  Does not wait for SSH, see 'wait_for' example for details."
                    ],
                    "aliases": []
                },
                "count": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "number of instances to launch"
                    ],
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "instance_profile_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the IAM instance profile to use. Boto library must be 2.5.0+"
                    ],
                    "version_added": "1.3",
                    "aliases": []
                },
                "region": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The AWS region to use.  Must be specified if ec2_url is not used. If not specified then the value of the EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "version_added": "1.2",
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "network_interfaces": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of existing network interfaces to attach to the instance at launch. When specifying existing network interfaces, none of the assign_public_ip, private_ip, vpc_subnet_id, group, or group_id parameters may be used. (Those parameters are for creating a new network interface at launch.)"
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "network_interface"
                    ]
                },
                "instance_type": {
                    "default": null,
                    "required": true,
                    "description": [
                        "instance type to use for the instance, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)"
                    ],
                    "aliases": []
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ],
                    "aliases": []
                },
                "volumes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a list of hash/dictionaries of volumes to add to the new instance; '[{\"key\":\"value\", \"key\":\"value\"}]'; keys allowed are - device_name (str; required), delete_on_termination (bool; False), device_type (deprecated), ephemeral (str), encrypted (bool; False), snapshot (str), volume_type (str), iops (int) - device_type is deprecated use volume_type, iops must be set when volume_type='io1', ephemeral and snapshot are mutually exclusive."
                    ],
                    "version_added": "1.5",
                    "aliases": []
                },
                "instance_tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a hash/dictionary of tags to add to the new instance or for starting/stopping instance by tag; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'"
                    ],
                    "version_added": "1.0",
                    "aliases": []
                },
                "group_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "security group id (or list of ids) to use with the instance"
                    ],
                    "version_added": "1.1",
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2"
        },
        {
            "short_description": "create or destroy an image in ec2",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An optional human-readable string describing the contents and purpose of the AMI."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "delete_snapshot": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether or not to delete snapshots when deregistering AMI."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "launch_permissions": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Users and groups that should be able to launch the ami. Expects dictionary with a key of user_ids and/or group_names. user_ids should be a list of account ids. group_name should be a list of groups, \"all\" is the only acceptable value currently."
                    ],
                    "version_added": "2.0"
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a dictionary of tags to add to the new image; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'"
                    ],
                    "version_added": "2.0"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or deregister/delete image"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the new image to create"
                    ]
                },
                "instance_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "instance id of the image to create"
                    ]
                },
                "image_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Image ID to be deregistered."
                    ]
                },
                "no_reboot": {
                    "default": false,
                    "required": false,
                    "description": [
                        "An optional flag indicating that the bundling process should not attempt to shutdown the instance before bundling. If this flag is True, the responsibility of maintaining file system integrity is left to the owner of the instance. The default choice is \"no\"."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "wait for the AMI to be in state 'available' before returning."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "device_mapping": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An optional list of device hashes/dictionaries with custom configurations (same block-device-mapping parameters)",
                        "Valid properties include: device_name, volume_type, size (in GB), delete_on_termination (boolean), no_device (boolean), snapshot_id, iops (for io1 volume_type)"
                    ],
                    "version_added": "2.0"
                }
            },
            "module": "ec2_ami"
        },
        {
            "short_description": "copies AMI between AWS regions, return new image id",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the new image to copy"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a hash/dictionary of tags to add to the new copied AMI; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'"
                    ]
                },
                "wait_timeout": {
                    "default": 1200,
                    "required": false,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An optional human-readable string describing the contents and purpose of the new AMI."
                    ]
                },
                "source_image_id": {
                    "required": true,
                    "description": [
                        "the id of the image in source region that should be copied"
                    ]
                },
                "source_region": {
                    "required": true,
                    "description": [
                        "the source region that AMI should be copied from"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "wait for the copied AMI to be in state 'available' before returning."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_ami_copy"
        },
        {
            "short_description": "Searches for AMIs to obtain the AMI ID and other information",
            "deprecated": null,
            "options": {
                "sort": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Optional attribute which with to sort the results.",
                        "If specifying 'tag', the 'tag_name' parameter is required.",
                        "Starting at version 2.1, additional sort choices of architecture, block_device_mapping, creationDate, hypervisor, is_public, location, owner_id, platform, root_device_name, root_device_type, state, and virtualization_type are supported."
                    ],
                    "choices": [
                        "name",
                        "description",
                        "tag",
                        "architecture",
                        "block_device_mapping",
                        "creationDate",
                        "hypervisor",
                        "is_public",
                        "location",
                        "owner_id",
                        "platform",
                        "root_device_name",
                        "root_device_type",
                        "state",
                        "virtualization_type"
                    ]
                },
                "no_result_action": {
                    "default": "success",
                    "required": false,
                    "description": [
                        "What to do when no results are found.",
                        "'success' reports success and returns an empty array",
                        "'fail' causes the module to report failure"
                    ],
                    "choices": [
                        "success",
                        "fail"
                    ]
                },
                "sort_end": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Which result to end with (when sorting).",
                        "Corresponds to Python slice notation."
                    ]
                },
                "sort_order": {
                    "default": "ascending",
                    "required": false,
                    "description": [
                        "Order in which to sort results.",
                        "Only used when the 'sort' parameter is specified."
                    ],
                    "choices": [
                        "ascending",
                        "descending"
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Search AMIs owned by the specified owner",
                        "Can specify an AWS account ID, or one of the special IDs 'self', 'amazon' or 'aws-marketplace'",
                        "If not specified, all EC2 AMIs in the specified region will be searched.",
                        "You can include wildcards in many of the search options. An asterisk (*) matches zero or more characters, and a question mark (?) matches exactly one character. You can escape special characters using a backslash (\\) before the character. For example, a value of \\*amazon\\?\\ searches for the literal string *amazon?\\."
                    ]
                },
                "is_public": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Whether or not the image(s) are public."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ami_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An AMI ID to match."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An AMI name to match."
                    ]
                },
                "ami_tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A hash/dictionary of tags to match for the AMI."
                    ]
                },
                "hypervisor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A hypervisor type type to match (e.g. xen)."
                    ]
                },
                "region": {
                    "required": true,
                    "description": [
                        "The AWS region to use."
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "sort_tag": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Tag name with which to sort results.",
                        "Required when specifying 'sort=tag'."
                    ]
                },
                "platform": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Platform type to match."
                    ]
                },
                "state": {
                    "default": "available",
                    "required": false,
                    "description": [
                        "AMI state to match."
                    ]
                },
                "sort_start": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Which result to start with (when sorting).",
                        "Corresponds to Python slice notation."
                    ]
                },
                "architecture": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An architecture type to match (e.g. x86_64)."
                    ]
                },
                "virtualization_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Virtualization type to match (e.g. hvm)."
                    ]
                }
            },
            "module": "ec2_ami_find"
        },
        {
            "short_description": "Create or delete AWS Autoscaling Groups",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "default_cooldown": {
                    "default": "300 seconds",
                    "required": false,
                    "description": [
                        "The number of seconds after a scaling activity completes before another can begin."
                    ],
                    "version_added": "2.0"
                },
                "tags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of tags to add to the Auto Scale Group. Optional key is 'propagate_at_launch', which defaults to true."
                    ],
                    "version_added": "1.7"
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "min_size": {
                    "required": false,
                    "description": [
                        "Minimum number of instances in group, if unspecified then the current group value will be used."
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait instances to become viable when replaced.  Used in concjunction with instance_ids option."
                    ],
                    "version_added": "1.8"
                },
                "health_check_period": {
                    "default": "500 seconds",
                    "required": false,
                    "description": [
                        "Length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health."
                    ],
                    "version_added": "1.7"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "load_balancers": {
                    "required": false,
                    "description": [
                        "List of ELB names to use for the group"
                    ]
                },
                "max_size": {
                    "required": false,
                    "description": [
                        "Maximum number of instances in group, if unspecified then the current group value will be used."
                    ]
                },
                "health_check_type": {
                    "default": "EC2",
                    "required": false,
                    "description": [
                        "The service you want the health status from, Amazon EC2 or Elastic Load Balancer."
                    ],
                    "version_added": "1.7",
                    "choices": [
                        "EC2",
                        "ELB"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "lc_check": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Check to make sure instances that are being replaced with replace_instances do not aready have the current launch_config."
                    ],
                    "version_added": "1.8"
                },
                "availability_zones": {
                    "required": false,
                    "description": [
                        "List of availability zone names in which to create the group.  Defaults to all the availability zones in the region if vpc_zone_identifier is not set."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique name for group to be created or deleted"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "replace_all_instances": {
                    "default": false,
                    "required": false,
                    "description": [
                        "In a rolling fashion, replace all instances with an old launch configuration with one from the current launch configuration."
                    ],
                    "version_added": "1.8"
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "termination_policies": {
                    "default": "Default",
                    "required": false,
                    "description": [
                        "An ordered list of criteria used for selecting instances to be removed from the Auto Scaling group when reducing capacity.",
                        "For 'Default', when used to create a new autoscaling group, the \"Default\" value is used. When used to change an existent autoscaling group, the current termination policies are mantained"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "OldestInstance",
                        "NewestInstance",
                        "OldestLaunchConfiguration",
                        "ClosestToNextInstanceHour",
                        "Default"
                    ]
                },
                "replace_instances": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of instance_ids belonging to the named ASG that you would like to terminate and be replaced with instances matching the current launch configuration."
                    ],
                    "version_added": "1.8"
                },
                "desired_capacity": {
                    "required": false,
                    "description": [
                        "Desired number of instances in group, if unspecified then the current group value will be used."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the instance"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "vpc_zone_identifier": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of VPC subnets to use"
                    ]
                },
                "launch_config_name": {
                    "required": true,
                    "description": [
                        "Name of the Launch configuration to use for the group. See the ec2_lc module for managing these."
                    ]
                },
                "replace_batch_size": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Number of instances you'd like to replace at a time.  Used with replace_all_instances."
                    ],
                    "version_added": "1.8"
                },
                "wait_for_instances": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Wait for the ASG instances to be in a ready state before exiting.  If instances are behind an ELB, it will wait until the ELB determines all instances have a lifecycle_state of  \"InService\" and  a health_status of \"Healthy\"."
                    ],
                    "version_added": "1.9"
                }
            },
            "module": "ec2_asg"
        },
        {
            "short_description": "associate an EC2 elastic IP with an instance.",
            "deprecated": null,
            "options": {
                "release_on_disassociation": {
                    "default": false,
                    "required": false,
                    "description": [
                        "whether or not to automatically release the EIP when it is disassociated"
                    ],
                    "version_added": "2.0"
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "reuse_existing_ip_allowed": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Reuse an EIP that is not associated to an instance (when available), instead of allocating a new one."
                    ],
                    "version_added": "1.6"
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "public_ip": {
                    "required": false,
                    "description": [
                        "The elastic IP address to associate with the instance.",
                        "If absent, allocate a new address"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "If present, associate the IP with the instance.",
                        "If absent, disassociate the IP with the instance."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "in_vpc": {
                    "default": false,
                    "required": false,
                    "description": [
                        "allocate an EIP inside a VPC or not"
                    ],
                    "version_added": "1.4"
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "device_id": {
                    "required": false,
                    "description": [
                        "The id of the device for the EIP. Can be an EC2 Instance id or Elastic Network Interface (ENI) id."
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "instance_id"
                    ]
                }
            },
            "module": "ec2_eip"
        },
        {
            "short_description": "De-registers or registers instances from EC2 ELBs",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "instance_id": {
                    "required": true,
                    "description": [
                        "EC2 Instance ID"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the instance"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Number of seconds to wait for an instance to change state. If 0 then this module may return an error if a transient error occurs. If non-zero then any transient errors are ignored until the timeout is reached. Ignored when wait=no."
                    ],
                    "version_added": "1.6"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "ec2_elbs": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of ELB names, required for registration. The ec2_elbs fact should be used if there was a previous de-register."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "enable_availability_zone": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to enable the availability zone of the instance on the target ELB if the availability zone has not already been enabled. If set to no, the task will fail if the availability zone is not enabled on the ELB."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Wait for instance registration or deregistration to complete successfully before returning."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_elb"
        },
        {
            "short_description": "Gather facts about EC2 Elastic Load Balancers in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "names": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of ELB names to gather facts about. Pass this option to gather facts about a set of ELBs, otherwise, all ELBs are returned."
                    ],
                    "aliases": [
                        "elb_ids",
                        "ec2_elbs"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_elb_facts"
        },
        {
            "short_description": "Creates or destroys Amazon ELB.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "subnets": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of VPC subnets to use when creating ELB. Zones should be empty if using this."
                    ],
                    "version_added": "1.7",
                    "aliases": []
                },
                "health_check": {
                    "default": "None",
                    "require": false,
                    "description": [
                        "An associative array of health check configuration settings (see example)"
                    ]
                },
                "tags": {
                    "required": false,
                    "description": [
                        "An associative array of tags. To delete all tags, supply an empty dict."
                    ],
                    "version_added": "2.1"
                },
                "purge_subnets": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Purge existing subnet on ELB that are not found in subnets"
                    ],
                    "version_added": "1.7"
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "instance_ids": {
                    "default": false,
                    "required": false,
                    "description": [
                        "List of instance ids to attach to this ELB"
                    ],
                    "version_added": "2.1"
                },
                "zones": {
                    "required": false,
                    "description": [
                        "List of availability zones to enable on this ELB"
                    ]
                },
                "idle_timeout": {
                    "required": false,
                    "description": [
                        "ELB connections from clients and to servers are timed out after this amount of time"
                    ],
                    "version_added": "2.0"
                },
                "wait_timeout": {
                    "default": 60,
                    "required": false,
                    "description": [
                        "Used in conjunction with wait. Number of seconds to wait for the elb to be terminated. A maximum of 600 seconds (10 minutes) is allowed."
                    ],
                    "version_added": "2.1"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "cross_az_load_balancing": {
                    "aliases": [],
                    "description": [
                        "Distribute load across all configured Availability Zones"
                    ],
                    "version_added": "1.8",
                    "default": "no",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "security_group_ids": {
                    "default": "None",
                    "require": false,
                    "description": [
                        "A list of security groups to apply to the elb"
                    ],
                    "version_added": "1.6"
                },
                "purge_zones": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Purge existing availability zones on ELB that are not found in zones"
                    ]
                },
                "wait": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When specified, Ansible will check the status of the load balancer to ensure it has been successfully removed from AWS."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "purge_instance_ids": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Purge existing instance ids on ELB that are not found in instance_ids"
                    ],
                    "version_added": "2.1"
                },
                "connection_draining_timeout": {
                    "required": false,
                    "description": [
                        "Wait a specified timeout allowing connections to drain before terminating an instance"
                    ],
                    "version_added": "1.8",
                    "aliases": []
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the ELB"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "listeners": {
                    "required": false,
                    "description": [
                        "List of ports/protocols for this ELB to listen on (see example)"
                    ]
                },
                "access_logs": {
                    "default": "None",
                    "require": false,
                    "description": [
                        "An associative array of access logs configuration settings (see example)"
                    ],
                    "version_added": "2.0"
                },
                "state": {
                    "required": true,
                    "description": [
                        "Create or destroy the ELB"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "security_group_names": {
                    "default": "None",
                    "require": false,
                    "description": [
                        "A list of security group names to apply to the elb"
                    ],
                    "version_added": "2.0"
                },
                "purge_listeners": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Purge existing listeners on ELB that are not found in listeners"
                    ]
                },
                "scheme": {
                    "default": "internet-facing",
                    "required": false,
                    "description": [
                        "The scheme to use when creating the ELB. For a private VPC-visible ELB use 'internal'."
                    ],
                    "version_added": "1.7"
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "stickiness": {
                    "required": false,
                    "description": [
                        "An associative array of stickness policy settings. Policy will be applied to all listeners ( see example )"
                    ],
                    "version_added": "2.0"
                }
            },
            "module": "ec2_elb_lb"
        },
        {
            "short_description": "Create and optionally attach an Elastic Network Interface (ENI) to an instance",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Optional description of the ENI."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "subnet_id": {
                    "required": true,
                    "description": [
                        "ID of subnet in which to create the ENI. Only required when state=present."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "device_index": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "The index of the device for the network interface attachment on the instance."
                    ]
                },
                "force_detach": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Force detachment of the interface. This applies either when explicitly detaching the interface by setting instance_id to None or when deleting an interface with state=absent."
                    ]
                },
                "instance_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Instance ID that you wish to attach ENI to. To detach an ENI from an instance, use 'None'."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or delete ENI."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "security_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of security groups associated with the interface. Only used when state=present."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "private_ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Private IP address."
                    ]
                },
                "eni_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ID of the ENI"
                    ]
                },
                "delete_on_termination": {
                    "required": false,
                    "description": [
                        "Delete the interface when the instance it is attached to is terminated. You can only specify this flag when the interface is being modified, not on creation."
                    ]
                },
                "source_dest_check": {
                    "required": false,
                    "description": [
                        "By default, interfaces perform source/destination checks. NAT instances however need this check to be disabled. You can only specify this flag when the interface is being modified, not on creation."
                    ]
                }
            },
            "module": "ec2_eni"
        },
        {
            "short_description": "Gather facts about ec2 ENI interfaces in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_eni_facts"
        },
        {
            "short_description": "Gathers facts about remote hosts within ec2 (aws)",
            "deprecated": null,
            "options": {
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_facts"
        },
        {
            "short_description": "maintain an ec2 VPC security group.",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "rules_egress": {
                    "required": false,
                    "description": [
                        "List of firewall outbound rules to enforce in this group (see example). If none are supplied, a default all-out rule is assumed. If an empty list is supplied, no outbound rules will be enabled."
                    ],
                    "version_added": "1.6"
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the security group."
                    ]
                },
                "purge_rules": {
                    "default": "true",
                    "required": false,
                    "description": [
                        "Purge existing rules on security group that are not found in rules"
                    ],
                    "version_added": "1.8",
                    "aliases": []
                },
                "rules": {
                    "required": false,
                    "description": [
                        "List of firewall inbound rules to enforce in this group (see example). If none are supplied, a default all-out rule is assumed. If an empty list is supplied, no inbound rules will be enabled."
                    ]
                },
                "description": {
                    "required": true,
                    "description": [
                        "Description of the security group."
                    ]
                },
                "state": {
                    "aliases": [],
                    "description": [
                        "Create or delete a security group"
                    ],
                    "version_added": "1.4",
                    "default": "present",
                    "required": false,
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "required": false,
                    "description": [
                        "ID of the VPC to create the group in."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "purge_rules_egress": {
                    "default": "true",
                    "required": false,
                    "description": [
                        "Purge existing rules_egress on security group that are not found in rules_egress"
                    ],
                    "version_added": "1.8",
                    "aliases": []
                }
            },
            "module": "ec2_group"
        },
        {
            "short_description": "maintain an ec2 key pair.",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the key pair."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "key_material": {
                    "required": false,
                    "description": [
                        "Public key material."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or delete keypair"
                    ],
                    "aliases": []
                },
                "wait_timeout": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "How long before wait gives up, in seconds"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Wait for the specified action to complete before returning."
                    ],
                    "version_added": "1.6",
                    "aliases": []
                }
            },
            "module": "ec2_key"
        },
        {
            "short_description": "Create or delete AWS Autoscaling Launch Configurations",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "kernel_id": {
                    "required": false,
                    "description": [
                        "Kernel id for the EC2 instance"
                    ]
                },
                "key_name": {
                    "required": false,
                    "description": [
                        "The SSH key name to be used for access to managed instances"
                    ]
                },
                "ramdisk_id": {
                    "required": false,
                    "description": [
                        "A RAM disk id for the instances."
                    ],
                    "version_added": "1.8"
                },
                "user_data": {
                    "required": false,
                    "description": [
                        "opaque blob of data which is made available to the ec2 instance"
                    ]
                },
                "image_id": {
                    "required": false,
                    "description": [
                        "The AMI unique identifier to be used for the group"
                    ]
                },
                "assign_public_ip": {
                    "required": false,
                    "description": [
                        "Used for Auto Scaling groups that launch instances into an Amazon Virtual Private Cloud. Specifies whether to assign a public IP address to each instance launched in a Amazon VPC."
                    ],
                    "version_added": "1.8"
                },
                "instance_monitoring": {
                    "default": false,
                    "description": [
                        "whether instances in group are launched with detailed monitoring."
                    ]
                },
                "classic_link_vpc_id": {
                    "required": false,
                    "description": [
                        "Id of ClassicLink enabled VPC"
                    ],
                    "version_added": "2.0"
                },
                "security_groups": {
                    "required": false,
                    "description": [
                        "A list of security groups into which instances should be found"
                    ]
                },
                "classic_link_vpc_security_groups": {
                    "required": false,
                    "description": [
                        "A list of security group id's with which to associate the ClassicLink VPC instances."
                    ],
                    "version_added": "2.0"
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "spot_price": {
                    "required": false,
                    "description": [
                        "The spot price you are bidding. Only applies for an autoscaling group with spot instances."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique name for configuration"
                    ]
                },
                "instance_profile_name": {
                    "required": false,
                    "description": [
                        "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instances."
                    ],
                    "version_added": "1.8"
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "ebs_optimized": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Specifies whether the instance is optimized for EBS I/O (true) or not (false)."
                    ],
                    "version_added": "1.8"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "instance_type": {
                    "default": null,
                    "required": true,
                    "description": [
                        "instance type to use for the instance"
                    ],
                    "aliases": []
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the instance"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "volumes": {
                    "required": false,
                    "description": [
                        "a list of volume dicts, each containing device name and optionally ephemeral id or snapshot id. Size and type (and number of iops for io device type) must be specified for a new volume or a root volume, and may be passed for a snapshot volume. For any volume, a volume size less than 1 will be interpreted as a request not to create the volume."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_lc"
        },
        {
            "short_description": "Create/update or delete AWS Cloudwatch 'metric alarms'",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ok_actions": {
                    "required": false,
                    "description": [
                        "A list of the names of action(s) to take when the alarm is in the 'ok' status"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "A longer description of the alarm"
                    ]
                },
                "evaluation_periods": {
                    "required": false,
                    "description": [
                        "The number of times in which the metric is evaluated before final calculation"
                    ]
                },
                "metric": {
                    "required": false,
                    "description": [
                        "Name of the monitored metric (e.g. CPUUtilization)",
                        "Metric must already exist"
                    ]
                },
                "statistic": {
                    "required": false,
                    "description": [
                        "Operation applied to the metric",
                        "Works in conjunction with period and evaluation_periods to determine the comparison value"
                    ],
                    "options": [
                        "SampleCount",
                        "Average",
                        "Sum",
                        "Minimum",
                        "Maximum"
                    ]
                },
                "period": {
                    "required": false,
                    "description": [
                        "The time (in seconds) between metric evaluations"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "threshold": {
                    "required": false,
                    "description": [
                        "Sets the min/max bound for triggering the alarm"
                    ]
                },
                "unit": {
                    "required": false,
                    "description": [
                        "The threshold's unit of measurement"
                    ],
                    "options": [
                        "Seconds",
                        "Microseconds",
                        "Milliseconds",
                        "Bytes",
                        "Kilobytes",
                        "Megabytes",
                        "Gigabytes",
                        "Terabytes",
                        "Bits",
                        "Kilobits",
                        "Megabits",
                        "Gigabits",
                        "Terabits",
                        "Percent",
                        "Count",
                        "Bytes/Second",
                        "Kilobytes/Second",
                        "Megabytes/Second",
                        "Gigabytes/Second",
                        "Terabytes/Second",
                        "Bits/Second",
                        "Kilobits/Second",
                        "Megabits/Second",
                        "Gigabits/Second",
                        "Terabits/Second",
                        "Count/Second",
                        "None"
                    ]
                },
                "dimensions": {
                    "required": false,
                    "description": [
                        "Describes to what the alarm is applied"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "comparison": {
                    "required": false,
                    "description": [
                        "Determines how the threshold value is compared"
                    ],
                    "options": [
                        "<=",
                        "<",
                        ">",
                        ">="
                    ]
                },
                "alarm_actions": {
                    "required": false,
                    "description": [
                        "A list of the names action(s) taken when the alarm is in the 'alarm' status"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique name for the alarm"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "namespace": {
                    "required": false,
                    "description": [
                        "Name of the appropriate namespace ('AWS/EC2', 'System/Linux', etc.), which determines the category it will appear under in cloudwatch"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the alarm"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "insufficient_data_actions": {
                    "required": false,
                    "description": [
                        "A list of the names of action(s) to take when the alarm is in the 'insufficient_data' status"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_metric_alarm"
        },
        {
            "short_description": "Gather facts about ec2 instances in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_remote_facts"
        },
        {
            "short_description": "Create or delete AWS scaling policies for Autoscaling groups",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique name for the scaling policy"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "asg_name": {
                    "required": true,
                    "description": [
                        "Name of the associated autoscaling group"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "adjustment_type": {
                    "required": false,
                    "description": [
                        "The type of change in capacity of the autoscaling group"
                    ],
                    "choices": [
                        "ChangeInCapacity",
                        "ExactCapacity",
                        "PercentChangeInCapacity"
                    ]
                },
                "min_adjustment_step": {
                    "required": false,
                    "description": [
                        "Minimum amount of adjustment when policy is triggered"
                    ]
                },
                "scaling_adjustment": {
                    "required": false,
                    "description": [
                        "The amount by which the autoscaling group is adjusted by the policy"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "register or deregister the policy"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "cooldown": {
                    "required": false,
                    "description": [
                        "The minimum period of time between which autoscaling actions can take place"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_scaling_policy"
        },
        {
            "short_description": "creates a snapshot from an existing volume",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "description to be applied to the snapshot"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "snapshot_tags": {
                    "required": false,
                    "description": [
                        "a hash/dictionary of tags to add to the snapshot"
                    ],
                    "version_added": "1.6"
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "volume_id": {
                    "required": false,
                    "description": [
                        "volume from which to take the snapshot"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "device_name": {
                    "required": false,
                    "description": [
                        "device name of a mounted volume to be snapshotted"
                    ]
                },
                "instance_id": {
                    "required": false,
                    "description": [
                        "instance that has the required volume to snapshot mounted"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether to add or create a snapshot"
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "wait_timeout": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "how long before wait gives up, in seconds",
                        "specify 0 to wait forever"
                    ],
                    "version_added": "1.5.1"
                },
                "snapshot_id": {
                    "required": false,
                    "description": [
                        "snapshot id to remove"
                    ],
                    "version_added": "1.9"
                },
                "last_snapshot_min_age": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "If the volume's most recent snapshot has started less than `last_snapshot_min_age' minutes ago, a new snapshot will not be created."
                    ],
                    "version_added": "2.0"
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "wait for the snapshot to be ready"
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_snapshot"
        },
        {
            "short_description": "Gather facts about ec2 volume snapshots in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "snapshot_ids": {
                    "default": [],
                    "required": false,
                    "description": [
                        "If you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned."
                    ]
                },
                "filters": {
                    "default": {},
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See       U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter       names and values are case sensitive."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "restorable_by_user_ids": {
                    "default": [],
                    "required": false,
                    "description": [
                        "If you specify a list of restorable users, only snapshots with create snapshot permissions for those users are       returned."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "owner_ids": {
                    "default": [],
                    "required": false,
                    "description": [
                        "If you specify one or more snapshot owners, only snapshots from the specified owners and for which you have       access are returned."
                    ]
                }
            },
            "module": "ec2_snapshot_facts"
        },
        {
            "short_description": "create and remove tag(s) to ec2 resources.",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "resource": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The EC2 resource id."
                    ],
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": true,
                    "description": [
                        "a hash/dictionary of tags to add to the resource; '{\"key\":\"value\"}' and '{\"key\":\"value\",\"key\":\"value\"}'"
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent",
                        "list"
                    ],
                    "required": false,
                    "description": [
                        "Whether the tags should be present or absent on the resource. Use list to interrogate the tags of an instance."
                    ],
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_tag"
        },
        {
            "short_description": "create and attach a volume, return volume id and device map",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "volume Name tag if you wish to attach an existing volume (requires instance)"
                    ],
                    "version_added": "1.6"
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "zone in which to create the volume, if unset uses the zone the instance is in (if set)"
                    ],
                    "aliases": [
                        "aws_zone",
                        "ec2_zone"
                    ]
                },
                "instance": {
                    "default": null,
                    "required": false,
                    "description": [
                        "instance ID if you wish to attach the volume. Since 1.9 you can set to None to detach."
                    ]
                },
                "encrypted": {
                    "default": false,
                    "description": [
                        "Enable encryption at rest for this volume."
                    ],
                    "version_added": "1.8"
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "volume_type": {
                    "default": "standard",
                    "required": false,
                    "description": [
                        "Type of EBS volume; standard (magnetic), gp2 (SSD), io1 (Provisioned IOPS). \"Standard\" is the old EBS default and continues to remain the Ansible default for backwards compatibility."
                    ],
                    "version_added": "1.9"
                },
                "device_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "device id to override device mapping. Assumes /dev/sdf for Linux/UNIX and /dev/xvdf for Windows."
                    ]
                },
                "volume_size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "size of volume (in GB) to create."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether to ensure the volume is present or absent, or to list existing volumes (The C(list) option was added in version 1.8)."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "absent",
                        "present",
                        "list"
                    ]
                },
                "iops": {
                    "default": 100,
                    "required": false,
                    "description": [
                        "the provisioned IOPs you want to associate with this volume (integer)."
                    ],
                    "version_added": "1.3"
                },
                "snapshot": {
                    "default": null,
                    "required": false,
                    "description": [
                        "snapshot ID on which to base the volume"
                    ],
                    "version_added": "1.5"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "volume id if you wish to attach an existing volume (requires instance) or remove an existing volume"
                    ],
                    "version_added": "1.6"
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "delete_on_termination": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When set to \"yes\", the volume will be deleted upon instance termination."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vol"
        },
        {
            "short_description": "Gather facts about ec2 volumes in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vol_facts"
        },
        {
            "short_description": "configure AWS virtual private clouds",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "subnets": {
                    "default": null,
                    "resource_tags": "See resource_tags for VPC below. The main difference is subnet tags not specified here will be deleted.",
                    "required": false,
                    "description": [
                        "A dictionary array of subnets to add of the form: { cidr: ..., az: ... , resource_tags: ... }. Where az is the desired availability zone of the subnet, but it is not required. Tags (i.e.: resource_tags) is also optional and use dictionary form: { \"Environment\":\"Dev\", \"Tier\":\"Web\", ...}. All VPC subnets not in this list will be removed as well. As of 1.8, if the subnets parameter is not specified, no existing subnets will be modified."
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "route_tables": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dictionary array of route tables to add of the form: { subnets: [172.22.2.0/24, 172.22.3.0/24,], routes: [{ dest: 0.0.0.0/0, gw: igw},], resource_tags: ... }. Where the subnets list is those subnets the route table should be associated with, and the routes list is a list of routes to be in the table.  The special keyword for the gw of igw specifies that you should the route should go through the internet gateway attached to the VPC. gw also accepts instance-ids, interface-ids, and vpc-peering-connection-ids in addition igw. resource_tags is optional and uses dictionary form: { \"Name\": \"public\", ... }. This module is currently unable to affect the \"main\" route table due to some limitations in boto, so you must explicitly define the associated subnets or they will be attached to the main table implicitly. As of 1.8, if the route_tables parameter is not specified, no existing routes will be modified."
                    ]
                },
                "dns_support": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "toggles the \"Enable DNS resolution\" flag"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "internet_gateway": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Toggle whether there should be an Internet gateway attached to the VPC"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A VPC id to terminate when state=absent"
                    ]
                },
                "instance_tenancy": {
                    "default": "default",
                    "required": false,
                    "description": [
                        "The supported tenancy options for instances launched into the VPC."
                    ],
                    "choices": [
                        "default",
                        "dedicated"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Create or terminate the VPC"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "dns_hostnames": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "toggles the \"Enable DNS hostname support for instances\" flag"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "resource_tags": {
                    "required": true,
                    "description": [
                        "A dictionary array of resource tags of the form: { tag1: value1, tag2: value2 }.  Tags in this list are used in conjunction with CIDR block to uniquely identify a VPC in lieu of vpc_id. Therefore, if CIDR/Tag combination does not exist, a new VPC will be created.  VPC tags not on this list will be ignored. Prior to 1.7, specifying a resource tag was optional."
                    ],
                    "version_added": "1.6"
                },
                "cidr_block": {
                    "required": false,
                    "description": [
                        "The cidr block representing the VPC, e.g. 10.0.0.0/16, required when I(state) is 'present'."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "wait for the VPC to be in state 'available' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc"
        },
        {
            "short_description": "Manages DHCP Options, and can ensure the DHCP options for the given VPC match what's requested",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "dns_servers": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of hosts to set the DNS servers for the VPC to. (Should be a list of IP addresses rather than host names.)"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Tags to be applied to a VPC options set if a new one is created, or if the resource_id is provided. (options must match)"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "resource_tags"
                    ]
                },
                "ntp_servers": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of hosts to advertise as NTP servers for the VPC."
                    ]
                },
                "domain_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The domain name to set in the DHCP option sets"
                    ]
                },
                "delete_old": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to delete the old VPC DHCP option set when associating a new one. This is primarily useful for debugging/development purposes when you want to quickly roll back to the old option set. Note that this setting will be ignored, and the old DHCP option set will be preserved, if it is in use by any other VPC. (Otherwise, AWS will return an error.)"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create/assign or remove the DHCP options. If state is set to absent, then a DHCP options set matched either by id, or tags and options will be removed if possible."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "netbios_node_type": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "NetBIOS node type to advertise in the DHCP options. The AWS recommendation is to use 2 (when using netbios name services) http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "VPC ID to associate with the requested DHCP option set. If no vpc id is provided, and no matching option set is found then a new DHCP option set is created."
                    ]
                },
                "inherit_existing": {
                    "default": false,
                    "required": false,
                    "description": [
                        "For any DHCP options not specified in these parameters, whether to inherit them from the options set already applied to vpc_id, or to reset them to be empty."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dhcp_options_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The resource_id of an existing DHCP options set. If this is specified, then it will override other settings, except tags (which will be updated to match)"
                    ],
                    "version_added": "2.1"
                },
                "netbios_name_servers": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of hosts to advertise as NetBIOS servers."
                    ]
                }
            },
            "module": "ec2_vpc_dhcp_options"
        },
        {
            "short_description": "Manage an AWS VPC Internet gateway",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or terminate the IGW"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The VPC ID for the VPC in which to manage the Internet Gateway."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc_igw"
        },
        {
            "short_description": "Configure AWS virtual private clouds",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name to give your VPC. This is used in combination with the cidr_block paramater to determine if a VPC already exists."
                    ]
                },
                "dns_support": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to enable AWS DNS support."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "tags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The tags you want attached to the VPC. This is independent of the name value, note if you pass a 'Name' key it would override the Name of the VPC if it's different."
                    ],
                    "aliases": [
                        "resource_tags"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "multi_ok": {
                    "default": false,
                    "required": false,
                    "description": [
                        "By default the module will not create another VPC if there is another VPC with the same name and CIDR block. Specify this as true if you want duplicate VPCs created."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of the VPC. Either absent or present."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "tenancy": {
                    "default": "default",
                    "required": false,
                    "description": [
                        "Whether to be default or dedicated tenancy. This cannot be changed after the VPC has been created."
                    ],
                    "choices": [
                        "default",
                        "dedicated"
                    ]
                },
                "dns_hostnames": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to enable AWS hostname support."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "cidr_block": {
                    "required": true,
                    "description": [
                        "The CIDR of the VPC"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "dhcp_opts_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the id of the DHCP options to use for this vpc"
                    ]
                }
            },
            "module": "ec2_vpc_net"
        },
        {
            "short_description": "Gather facts about ec2 VPCs in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc_net_facts"
        },
        {
            "short_description": "Manage route tables for AWS virtual private clouds",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "subnets": {
                    "required": true,
                    "description": [
                        "An array of subnets to add to this route table. Subnets may be specified by either subnet ID, Name tag, or by a CIDR such as '10.0.0.0/24'."
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dictionary of resource tags of the form: { tag1: value1, tag2: value2 }. Tags are used to uniquely identify route tables within a VPC when the route_table_id is not supplied."
                    ],
                    "aliases": [
                        "resource_tags"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "route_table_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ID of the route table to update or delete."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or destroy the VPC route table"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "lookup": {
                    "default": "tag",
                    "required": false,
                    "description": [
                        "Look up route table by either tags or by route table ID. Non-unique tag lookup will fail. If no tags are specifed then no lookup for an existing route table is performed and a new route table will be created. To change tags of a route table, you must look up by id."
                    ],
                    "choices": [
                        "tag",
                        "id"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "routes": {
                    "required": true,
                    "description": [
                        "List of routes in the route table. Routes are specified as dicts containing the keys 'dest' and one of 'gateway_id', 'instance_id', 'interface_id', or 'vpc_peering_connection_id'. If 'gateway_id' is specified, you can refer to the VPC's IGW by using the value 'igw'."
                    ]
                },
                "vpc_id": {
                    "required": true,
                    "description": [
                        "VPC ID of the VPC in which to create the route table."
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "propagating_vgw_ids": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Enable route propagation from virtual gateways specified by ID."
                    ]
                }
            },
            "module": "ec2_vpc_route_table"
        },
        {
            "short_description": "Gather facts about ec2 VPC route tables in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc_route_table_facts"
        },
        {
            "short_description": "Manage subnets in AWS virtual private clouds",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of tags to apply to the subnet. Any tags currently applied to the subnet and not present here will be removed."
                    ],
                    "aliases": [
                        "resource_tags"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or remove the subnet"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "VPC ID of the VPC in which to create the subnet."
                    ]
                },
                "cidr": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The CIDR block for the subnet. E.g. 10.0.0.0/16. Only required when state=present."
                    ]
                },
                "az": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The availability zone for the subnet. Only required when state=present."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc_subnet"
        },
        {
            "short_description": "Gather facts about ec2 VPC subnets in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dict of filters to apply. Each dict item consists of a filter key and a filter value. See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html) for possible filters."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_vpc_subnet_facts"
        },
        {
            "short_description": "gets the default administrator password for ec2 windows instances",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "instance_id": {
                    "required": true,
                    "description": [
                        "The instance id to get the password data from."
                    ]
                },
                "key_passphrase": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The passphrase for the instance key pair. The key must use DES or 3DES encryption for this module to decrypt it. You can use openssl to convert your password protected keys if they do not use DES or 3DES. ex) openssl rsa -in current_key -out new_key -des3."
                    ],
                    "version_added": "2.0"
                },
                "wait_timeout": {
                    "default": 120,
                    "required": false,
                    "description": [
                        "Number of seconds to wait before giving up."
                    ],
                    "version_added": "2.0"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "key_file": {
                    "required": true,
                    "description": [
                        "Path to the file containing the key pair used on the instance."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether or not to wait for the password to be available before returning."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ec2_win_password"
        },
        {
            "short_description": "create or terminate ecs clusters",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "repeat": {
                    "required": false,
                    "description": [
                        "The number of times to wait for the cluster to have an instance"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The cluster name"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "delay": {
                    "required": false,
                    "description": [
                        "Number of seconds to wait"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "The desired state of the cluster"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "has_instances"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ecs_cluster"
        },
        {
            "short_description": "create, terminate, start or stop a service in ecs",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "repeat": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "The number of times to check that the service is available"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the service"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "desired_count": {
                    "required": false,
                    "description": [
                        "The count of how many instances of the service"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "The desired state of the service"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "deleting"
                    ]
                },
                "delay": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "The time to wait before checking that the service is available"
                    ]
                },
                "cluster": {
                    "required": false,
                    "description": [
                        "The name of the cluster in which the service exists"
                    ]
                },
                "task_definition": {
                    "required": false,
                    "description": [
                        "The task definition the service will run"
                    ]
                },
                "role": {
                    "required": false,
                    "description": [
                        "The name or full Amazon Resource Name (ARN) of the IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf. This parameter is only required if you are using a load balancer with your service."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "load_balancers": {
                    "required": false,
                    "description": [
                        "The list of ELBs defined for this service"
                    ]
                },
                "client_token": {
                    "required": false,
                    "description": [
                        "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ecs_service"
        },
        {
            "short_description": "list or describe services in ecs",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "service": {
                    "required": false,
                    "description": [
                        "The service to get details for (required if details is true)"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "cluster": {
                    "default": "default",
                    "required": false,
                    "description": [
                        "The cluster ARNS in which to list the services."
                    ]
                },
                "details": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "Set this to true if you want detailed information about the services."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ecs_service_facts"
        },
        {
            "short_description": "run, start or stop a task in ecs",
            "deprecated": null,
            "options": {
                "count": {
                    "required": false,
                    "description": [
                        "How many new instances to start"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "task": {
                    "required": false,
                    "description": [
                        "The task to stop"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "overrides": {
                    "required": false,
                    "description": [
                        "A dictionary of values to pass to the new instances"
                    ]
                },
                "started_by": {
                    "required": false,
                    "description": [
                        "A value showing who or what started the task (for informational purposes)"
                    ]
                },
                "cluster": {
                    "required": false,
                    "description": [
                        "The name of the cluster to run the task on"
                    ]
                },
                "task_definition": {
                    "required": false,
                    "description": [
                        "The task definition to start or run"
                    ]
                },
                "container_instances": {
                    "required": false,
                    "description": [
                        "The list of container instances on which to deploy the task"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "operation": {
                    "required": true,
                    "description": [
                        "Which task operation to execute"
                    ],
                    "choices": [
                        "run",
                        "start",
                        "stop"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                }
            },
            "module": "ecs_task"
        },
        {
            "short_description": "register a task definition in ecs",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "family": {
                    "required": false,
                    "description": [
                        "A Name that would be given to the task definition"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "State whether the task definition should exist or be deleted"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "arn": {
                    "required": false,
                    "description": [
                        "The arn of the task description to delete"
                    ]
                },
                "volumes": {
                    "required": false,
                    "type": "list of name",
                    "description": [
                        "A list of names of volumes to be attached"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "containers": {
                    "required": false,
                    "type": "list of dicts with container definitions",
                    "description": [
                        "A list of containers definitions"
                    ]
                },
                "revision": {
                    "required": false,
                    "type": "int",
                    "description": [
                        "A revision number for the task definition"
                    ]
                }
            },
            "module": "ecs_taskdefinition"
        },
        {
            "short_description": "Manages users for ejabberd servers",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "the name of the user to manage"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "the ejabberd host associated with this username"
                    ]
                },
                "password": {
                    "required": false,
                    "description": [
                        "the password to assign to the username"
                    ]
                },
                "logging": {
                    "default": false,
                    "required": false,
                    "description": [
                        "enables or disables the local syslog facility for this module"
                    ],
                    "choices": [
                        "true",
                        "false",
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "describe the desired state of the user to be managed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                }
            },
            "module": "ejabberd_user"
        },
        {
            "short_description": "Manage cache clusters in Amazon Elasticache.",
            "deprecated": null,
            "options": {
                "engine": {
                    "default": "memcached",
                    "required": false,
                    "description": [
                        "Name of the cache engine to be used."
                    ],
                    "choices": [
                        "redis",
                        "memcached"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "cache_port": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The port number on which each of the cache nodes will accept connections"
                    ]
                },
                "cache_parameter_group": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the cache parameter group to associate with this cache cluster. If this argument is omitted, the default cache parameter group for the specified engine will be used."
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "parameter_group"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The cache cluster identifier"
                    ]
                },
                "cache_engine_version": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The version number of the cache engine"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "C(absent) or C(present) are idempotent actions that will create or destroy a cache cluster as needed. C(rebooted) will reboot the cluster, resulting in a momentary outage."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "rebooted"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "node_type": {
                    "default": "cache.m1.small",
                    "required": false,
                    "description": [
                        "The compute and memory capacity of the nodes in the cache cluster"
                    ]
                },
                "num_nodes": {
                    "required": false,
                    "description": [
                        "The initial number of cache nodes that the cache cluster will have. Required when state=present."
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "zone": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The EC2 Availability Zone in which the cache cluster will be created"
                    ]
                },
                "cache_security_groups": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of cache security group names to associate with this cache cluster. Must be an empty list if inside a vpc"
                    ]
                },
                "cache_subnet_group": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The subnet group name to associate with. Only use if inside a vpc. Required if inside a vpc"
                    ],
                    "version_added": "2.0"
                },
                "hard_modify": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to destroy and recreate an existing cache cluster if necessary in order to modify its state"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "security_group_ids": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of vpc security group names to associate with this cache cluster. Only use if inside a vpc"
                    ],
                    "version_added": "1.6"
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Wait for cache cluster result before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "elasticache"
        },
        {
            "short_description": "manage Elasticache subnet groups",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "subnets": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of subnet IDs that make up the Elasticache subnet group."
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Database subnet group identifier."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Specifies whether the subnet should be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Elasticache subnet group description. Only set when a new group is added."
                    ]
                }
            },
            "module": "elasticache_subnet_group"
        },
        {
            "short_description": "Manage Elasticsearch plugins",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the plugin to install. In ES 2.x, the name can be an url or file location"
                    ]
                },
                "proxy_host": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Proxy host to use during plugin installation"
                    ],
                    "version_added": "2.1"
                },
                "url": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Set exact URL to download the plugin from (Only works for ES 1.x)"
                    ]
                },
                "proxy_port": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Proxy port to use during plugin installation"
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Desired state of a plugin."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "version": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Version of the plugin to be installed. If plugin exists with previous version, it will NOT be updated"
                    ]
                },
                "timeout": {
                    "default": "1m",
                    "required": false,
                    "description": [
                        "Timeout setting: 30s, 1m, 1h..."
                    ]
                },
                "plugin_dir": {
                    "default": "/usr/share/elasticsearch/plugins/",
                    "required": false,
                    "description": [
                        "Your configured plugin directory specified in Elasticsearch"
                    ]
                },
                "plugin_bin": {
                    "default": "/usr/share/elasticsearch/bin/plugin",
                    "required": false,
                    "description": [
                        "Location of the plugin binary"
                    ]
                }
            },
            "module": "elasticsearch_plugin"
        },
        {
            "short_description": "Run arbitrary command on EOS device",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should be tried before it is considered failed.  The command is run on the target device every retry and evaluated against the waitfor conditionals"
                    ]
                },
                "commands": {
                    "required": true,
                    "description": [
                        "The commands to send to the remote EOS device over the configured provider.  The resulting output from the command is returned.  If the I(waitfor) argument is provided, the module is not returned until the condition is satisfied or the number of retries has been exceeded."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again."
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.   If the conditional is not true by the configured retries, the task fails.  See examples."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(eos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as eapi.  If the transport argument is not eapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(eapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or eapi."
                    ]
                }
            },
            "module": "eos_command"
        },
        {
            "short_description": "Manage Arista EOS configuration sections",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "after": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a changed needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
                    ]
                },
                "lines": {
                    "required": true,
                    "description": [
                        "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
                    ]
                },
                "replace": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct"
                    ],
                    "choices": [
                        "line",
                        "block"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "parents": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or eapi."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(eos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as eapi.  If the transport argument is not eapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(eapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "match": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  Finally if match is set to I(exact), command lines must be an equal match."
                    ],
                    "choices": [
                        "line",
                        "strict",
                        "exact"
                    ]
                },
                "before": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system"
                    ]
                }
            },
            "module": "eos_config"
        },
        {
            "short_description": "Manage and configure EAPI. Requires EOS v4.12 or greater.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "local_http_port": {
                    "default": 8080,
                    "required": false,
                    "description": [
                        "Port on which the local HTTP server will listen."
                    ]
                },
                "http_port": {
                    "default": 80,
                    "required": false,
                    "description": [
                        "Port on which the HTTP server will listen."
                    ]
                },
                "http": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable HTTP server access."
                    ],
                    "aliases": [
                        "enable_http"
                    ]
                },
                "https_port": {
                    "default": 443,
                    "required": false,
                    "description": [
                        "Port on which the HTTPS server will listen."
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "started",
                    "choices": [
                        "started",
                        "stopped"
                    ],
                    "requred": false,
                    "description": [
                        "Set to started or stopped. A state of started will enable EAPI access, and a state of stopped will disable or shutdown all EAPI access."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or eapi."
                    ]
                },
                "https": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable HTTPS server access."
                    ],
                    "aliases": [
                        "enable_https"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(eos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as eapi.  If the transport argument is not eapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(eapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "local_http": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Enable local HTTP server access."
                    ],
                    "aliases": [
                        "enable_local_http"
                    ]
                },
                "socket": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Enable Unix socket server access."
                    ],
                    "aliases": [
                        "enable_socket"
                    ]
                }
            },
            "module": "eos_eapi"
        },
        {
            "short_description": "Manage Arista EOS device configurations",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "replace": {
                    "default": false,
                    "required": false,
                    "description": [
                        "This argument will cause the provided configuration to be replaced on the destination node.   The use of the replace argument will always cause the task to set changed to true and will implies I(force) is true.  This argument is only valid with I(transport) is eapi."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as eapi.  If the transport argument is not eapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(eapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(eapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or eapi."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "include_defaults": {
                    "default": false,
                    "required": false,
                    "description": [
                        "By default when the M(eos_template) connects to the remote device to retrieve the configuration it will issue the `show running-config` command.  If this option is set to True then the issued command will be `show running-config all`"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(eos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                }
            },
            "module": "eos_template"
        },
        {
            "short_description": "Executes a command and responds to prompts",
            "deprecated": null,
            "options": {
                "creates": {
                    "required": false,
                    "description": [
                        "a filename, when it already exists, this step will B(not) be run."
                    ]
                },
                "chdir": {
                    "required": false,
                    "description": [
                        "cd into this directory before running the command"
                    ]
                },
                "command": {
                    "required": true,
                    "description": [
                        "the command module takes command to run."
                    ]
                },
                "responses": {
                    "required": true,
                    "description": [
                        "Mapping of expected string/regex and string to respond with. If the response is a list, successive matches return successive responses. List functionality is new in 2.1."
                    ]
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Amount of time in seconds to wait for the expected strings"
                    ]
                },
                "removes": {
                    "required": false,
                    "description": [
                        "a filename, when it does not exist, this step will B(not) be run."
                    ]
                },
                "echo": {
                    "default": false,
                    "description": [
                        "Whether or not to echo out your response strings"
                    ]
                }
            },
            "module": "expect"
        },
        {
            "short_description": "Runs the discovery program I(facter) on the remote system",
            "deprecated": null,
            "options": {},
            "module": "facter"
        },
        {
            "short_description": "Fail with custom message",
            "deprecated": null,
            "options": {
                "msg": {
                    "default": "'Failed as requested from task'",
                    "required": false,
                    "description": [
                        "The customized message used for failing execution. If omitted, fail will simple bail out with a generic message."
                    ]
                }
            },
            "module": "fail"
        },
        {
            "short_description": "Fetches a file from remote nodes",
            "deprecated": null,
            "options": {
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "A directory to save the file into. For example, if the I(dest) directory is C(/backup) a I(src) file named C(/etc/profile) on host C(host.example.com), would be saved into C(/backup/host.example.com/etc/profile)"
                    ]
                },
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The file on the remote system to fetch. This I(must) be a file, not a directory. Recursive fetching may be supported in a later release."
                    ],
                    "aliases": []
                },
                "validate_checksum": {
                    "aliases": [
                        "validate_md5"
                    ],
                    "description": [
                        "Verify that the source and destination checksums match after the files are fetched."
                    ],
                    "version_added": "1.4",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "fail_on_missing": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Makes it fails when the source file is missing."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "flat": {
                    "description": [
                        "Allows you to override the default behavior of appending hostname/path/to/file to the destination.  If dest ends with '/', it will use the basename of the source file, similar to the copy module. Obviously this is only handy if the filenames are unique."
                    ],
                    "version_added": "1.2"
                }
            },
            "module": "fetch"
        },
        {
            "short_description": "Sets attributes of files",
            "deprecated": null,
            "options": {
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path of the file to link to (applies only to C(state=link)). Will accept absolute, relative and nonexisting paths. Relative paths are not expanded."
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination exists and is a file (so, we need to unlink the \"path\" file and create symlink to the \"src\" file in place of it)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "recurse": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "recursively set the specified file attributes (applies only to state=directory)"
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "state": {
                    "default": "file",
                    "required": false,
                    "description": [
                        "If C(directory), all immediate subdirectories will be created if they do not exist, since 1.7 they will be created with the supplied permissions. If C(file), the file will NOT be created if it does not exist, see the M(copy) or M(template) module if you want that behavior.  If C(link), the symbolic link will be created or changed. Use C(hard) for hardlinks. If C(absent), directories will be recursively deleted, and files or symlinks will be unlinked. If C(touch) (new in 1.4), an empty file will be created if the C(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way `touch` works from the command line)."
                    ],
                    "choices": [
                        "file",
                        "link",
                        "directory",
                        "hard",
                        "touch",
                        "absent"
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "follow": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This flag indicates that filesystem links, if they exist, should be followed."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "path": {
                    "default": [],
                    "required": true,
                    "description": [
                        "path to the file being managed.  Aliases: I(dest), I(name)"
                    ],
                    "aliases": [
                        "dest",
                        "name"
                    ]
                }
            },
            "module": "file"
        },
        {
            "short_description": "Makes file system on block device",
            "deprecated": null,
            "options": {
                "resizefs": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If yes, if the block device and filessytem size differ, grow the filesystem into the space. Note, XFS Will only grow if mounted."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If yes, allows to create new filesystem on devices that already has filesystem."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dev": {
                    "required": true,
                    "description": [
                        "Target block device."
                    ]
                },
                "opts": {
                    "description": [
                        "List of options to be passed to mkfs command."
                    ]
                },
                "fstype": {
                    "required": true,
                    "description": [
                        "File System type to be created."
                    ]
                }
            },
            "module": "filesystem"
        },
        {
            "short_description": "return a list of files based on specific criteria",
            "deprecated": null,
            "options": {
                "paths": {
                    "required": true,
                    "description": [
                        "List of paths to the file or directory to search. All paths must be fully qualified."
                    ],
                    "aliases": [
                        "name",
                        "path"
                    ]
                },
                "file_type": {
                    "default": "file",
                    "required": false,
                    "description": [
                        "Type of file to select"
                    ],
                    "choices": [
                        "file",
                        "directory"
                    ]
                },
                "age": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Select files whose age is equal to or greater than the specified time. Use a negative age to find files equal to or less than the specified time. You can choose seconds, minutes, hours, days, or weeks by specifying the first letter of any of those words (e.g., \"1w\")."
                    ]
                },
                "contains": {
                    "default": null,
                    "required": false,
                    "description": [
                        "One or more re patterns which should be matched against the file content"
                    ]
                },
                "recurse": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If target is a directory, recursively descend into the directory looking for files."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "age_stamp": {
                    "default": "mtime",
                    "required": false,
                    "description": [
                        "Choose the file property against which we compare age. Default is mtime."
                    ],
                    "choices": [
                        "atime",
                        "mtime",
                        "ctime"
                    ]
                },
                "patterns": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "One or more (shell or regex) patterns, which type is controled by C(use_regex) option.",
                        "The patterns restrict the list of files to be returned to those whose basenames match at least one of the patterns specified. Multiple patterns can be specified using a list."
                    ],
                    "aliases": [
                        "pattern"
                    ]
                },
                "get_checksum": {
                    "default": "False",
                    "required": false,
                    "description": [
                        "Set this to true to retrieve a file's sha1 checksum"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "use_regex": {
                    "default": "False",
                    "required": false,
                    "description": [
                        "If false the patterns are file globs (shell) if true they are python regexes"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "follow": {
                    "default": "False",
                    "required": false,
                    "description": [
                        "Set this to true to follow symlinks in path for systems with python 2.6+"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "hidden": {
                    "default": "False",
                    "required": false,
                    "description": [
                        "Set this to true to include hidden files, otherwise they'll be ignored."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Select files whose size is equal to or greater than the specified size. Use a negative size to find files equal to or less than the specified size. Unqualified values are in bytes, but b, k, m, g, and t can be appended to specify bytes, kilobytes, megabytes, gigabytes, and terabytes, respectively. Size is not evaluated for directories."
                    ]
                }
            },
            "module": "find"
        },
        {
            "short_description": "Manage arbitrary ports/services with firewalld",
            "deprecated": null,
            "options": {
                "zone": {
                    "default": "system-default(public)",
                    "required": false,
                    "description": [
                        "The firewalld zone to add/remove to/from (NOTE: default zone can be configured per system but \"public\" is default from upstream. Available choices can be extended based on per-system configs, listed here are \"out of the box\" defaults)."
                    ],
                    "choices": [
                        "work",
                        "drop",
                        "internal",
                        "external",
                        "trusted",
                        "home",
                        "dmz",
                        "public",
                        "block"
                    ]
                },
                "service": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of a service to add/remove to/from firewalld - service must be listed in /etc/services."
                    ]
                },
                "masquerade": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The masquerade setting you would like to enable/disable to/from zones within firewalld"
                    ],
                    "version_added": "2.1"
                },
                "immediate": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Should this configuration be applied immediately, if set as permanent"
                    ],
                    "version_added": "1.9"
                },
                "source": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The source/network you would like to add/remove to/from firewalld"
                    ],
                    "version_added": "2.0"
                },
                "state": {
                    "required": true,
                    "description": [
                        "Should this port accept(enabled) or reject(disabled) connections."
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "permanent": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Should this configuration be in the running firewalld configuration or persist across reboots."
                    ]
                },
                "timeout": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "The amount of time the rule should be in effect for when non-permanent."
                    ]
                },
                "interface": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The interface you would like to add/remove to/from a zone in firewalld"
                    ],
                    "version_added": "2.1"
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of a port or port range to add/remove to/from firewalld. Must be in the form PORT/PROTOCOL or PORT-PORT/PROTOCOL for port ranges."
                    ]
                },
                "rich_rule": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Rich rule to add/remove to/from firewalld."
                    ]
                }
            },
            "module": "firewalld"
        },
        {
            "short_description": "Send a message to a flowdock",
            "deprecated": null,
            "options": {
                "from_name": {
                    "required": false,
                    "description": [
                        "(inbox only) Name of the message sender"
                    ]
                },
                "from_address": {
                    "required": false,
                    "description": [
                        "(inbox only - required) Email address of the message sender"
                    ]
                },
                "tags": {
                    "required": false,
                    "description": [
                        "tags of the message, separated by commas"
                    ]
                },
                "type": {
                    "required": true,
                    "description": [
                        "Whether to post to 'inbox' or 'chat'"
                    ],
                    "choices": [
                        "inbox",
                        "chat"
                    ]
                },
                "external_user_name": {
                    "required": false,
                    "description": [
                        "(chat only - required) Name of the \"user\" sending the message"
                    ]
                },
                "project": {
                    "required": false,
                    "description": [
                        "(inbox only) Human readable identifier for more detailed message categorization"
                    ]
                },
                "source": {
                    "required": false,
                    "description": [
                        "(inbox only - required) Human readable identifier of the application that uses the Flowdock API"
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token."
                    ]
                },
                "link": {
                    "required": false,
                    "description": [
                        "(inbox only) Link associated with the message. This will be used to link the message subject in Team Inbox."
                    ]
                },
                "reply_to": {
                    "required": false,
                    "description": [
                        "(inbox only) Email address for replies"
                    ]
                },
                "subject": {
                    "required": false,
                    "description": [
                        "(inbox only - required) Subject line of the message"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "msg": {
                    "required": true,
                    "description": [
                        "Content of the message"
                    ]
                }
            },
            "module": "flowdock"
        },
        {
            "short_description": "This module manages objects/buckets in Google Cloud Storage.",
            "deprecated": null,
            "options": {
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The source file path when performing a PUT operation."
                    ]
                },
                "force": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Forces an overwrite either locally on the filesystem or remotely with the object/key. Used with PUT and GET operations."
                    ],
                    "aliases": [
                        "overwrite"
                    ]
                },
                "permission": {
                    "default": "private",
                    "required": false,
                    "description": [
                        "This option let's the user set the canned permissions on the object/bucket that are created. The permissions that can be set are 'private', 'public-read', 'authenticated-read'."
                    ]
                },
                "dest": {
                    "required": false,
                    "description": [
                        "The destination file path when downloading an object/key with a GET operation."
                    ]
                },
                "gs_access_key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "GS access key. If not set then the value of the GS_ACCESS_KEY_ID environment variable is used."
                    ]
                },
                "object": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Keyname of the object inside the bucket. Can be also be used to create \"virtual directories\" (see examples)."
                    ]
                },
                "bucket": {
                    "required": true,
                    "description": [
                        "Bucket name."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Switches the module behaviour between upload, download, get_url (return download url) , get_str (download object as string), create (bucket) and delete (bucket)."
                    ],
                    "choices": [
                        "get",
                        "put",
                        "get_url",
                        "get_str",
                        "delete",
                        "create"
                    ]
                },
                "gs_secret_key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "GS secret key. If not set then the value of the GS_SECRET_ACCESS_KEY environment variable is used."
                    ]
                },
                "expiration": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Time limit (in seconds) for the URL generated and returned by GCA when performing a mode=put or mode=get_url operation. This url is only available when public-read is the acl for the object."
                    ]
                },
                "headers": {
                    "default": "{}",
                    "required": false,
                    "description": [
                        "Headers to attach to object."
                    ],
                    "version_added": "2.0"
                }
            },
            "module": "gc_storage"
        },
        {
            "short_description": "create or terminate GCE instances",
            "deprecated": null,
            "options": {
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a comma-separated list of tags to associate with the instance"
                    ]
                },
                "image": {
                    "default": "debian-7",
                    "required": false,
                    "description": [
                        "image string to use for the instance"
                    ]
                },
                "service_account_permissions": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account permissions (see U(https://cloud.google.com/sdk/gcloud/reference/compute/instances/create), --scopes section for detailed information)"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "bigquery",
                        "cloud-platform",
                        "compute-ro",
                        "compute-rw",
                        "useraccounts-ro",
                        "useraccounts-rw",
                        "datastore",
                        "logging-write",
                        "monitoring",
                        "sql",
                        "sql-admin",
                        "storage-full",
                        "storage-ro",
                        "storage-rw",
                        "taskqueue",
                        "userinfo-email"
                    ]
                },
                "ip_forward": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "set to true if the instance can forward ip packets (useful for gateways)"
                    ],
                    "version_added": "1.9"
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email This option is deprecated. Use 'credentials_file'."
                    ],
                    "version_added": "1.5.1"
                },
                "machine_type": {
                    "default": "n1-standard-1",
                    "required": false,
                    "description": [
                        "machine type to use for the instance, use 'n1-standard-1' by default"
                    ]
                },
                "network": {
                    "default": "default",
                    "required": false,
                    "description": [
                        "name of the network, 'default' will be used if not specified"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "identifier when working with a single instance"
                    ]
                },
                "zone": {
                    "default": "us-central1-a",
                    "required": true,
                    "description": [
                        "the GCE zone to use"
                    ]
                },
                "external_ip": {
                    "default": "ephemeral",
                    "required": false,
                    "description": [
                        "type of external ip, ephemeral by default; alternatively, a list of fixed gce ips or ip names can be given (if there is not enough specified ip, 'ephemeral' will be used)"
                    ],
                    "version_added": "1.9"
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ],
                    "version_added": "1.5.1"
                },
                "disks": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a list of persistent disks to attach to the instance; a string value gives the name of the disk; alternatively, a dictionary value can define 'name' and 'mode' ('READ_ONLY' or 'READ_WRITE'). The first entry will be the boot disk (which must be READ_WRITE)."
                    ],
                    "version_added": "1.7"
                },
                "persistent_boot_disk": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "if set, create the instance with a persistent boot disk"
                    ]
                },
                "disk_auto_delete": {
                    "default": "true",
                    "required": false,
                    "description": [
                        "if set boot disk will be removed after instance destruction"
                    ],
                    "version_added": "1.9"
                },
                "preemptible": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "if set to true, instances will be preemptible and time-limited. (requires libcloud >= 0.20.0)"
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "desired state of the resource"
                    ],
                    "choices": [
                        "active",
                        "present",
                        "absent",
                        "deleted"
                    ]
                },
                "credentials_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the JSON file associated with the service account email"
                    ],
                    "version_added": "2.1.0"
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ],
                    "version_added": "1.5.1"
                },
                "instance_names": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a comma-separated list of instance names to create or destroy"
                    ]
                },
                "metadata": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a hash/dictionary of custom data for the instance; '{\"key\":\"value\", ...}'"
                    ]
                }
            },
            "module": "gce"
        },
        {
            "short_description": "utilize GCE image resources",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the name of the image to create or delete"
                    ]
                },
                "zone": {
                    "default": "us-central1-a",
                    "required": false,
                    "description": [
                        "the zone of the disk specified by source"
                    ]
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ]
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email"
                    ]
                },
                "source": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the source disk or the Google Cloud Storage URI to create the image from"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "desired state of the image"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "timeout for the operation"
                    ],
                    "version_added": "2.0"
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "an optional description"
                    ]
                }
            },
            "module": "gce_img"
        },
        {
            "short_description": "create/destroy GCE load-balancer resources",
            "deprecated": null,
            "options": {
                "httphealthcheck_host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "host header to pass through on HTTP check requests"
                    ]
                },
                "protocol": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "the protocol used for the load-balancer packet forwarding, tcp or udp"
                    ],
                    "choices": [
                        "tcp",
                        "udp"
                    ]
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email This option is deprecated. Use 'credentials_file'."
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "members": {
                    "required": false,
                    "description": [
                        "a list of zone/nodename pairs, e.g ['us-central1-a/www-a', ...]"
                    ],
                    "aliases": [
                        "nodes"
                    ]
                },
                "httphealthcheck_port": {
                    "default": 80,
                    "required": false,
                    "description": [
                        "the TCP port to use for HTTP health checking"
                    ]
                },
                "httphealthcheck_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the name identifier for the HTTP health check"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the load-balancer resource"
                    ]
                },
                "external_ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the external static IPv4 (or auto-assigned) address for the LB"
                    ]
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "region": {
                    "required": false,
                    "description": [
                        "the GCE region where the load-balancer is defined"
                    ]
                },
                "httphealthcheck_unhealthy_count": {
                    "default": 2,
                    "required": false,
                    "description": [
                        "number of consecutive failed checks before marking a node unhealthy"
                    ]
                },
                "httphealthcheck_healthy_count": {
                    "default": 2,
                    "required": false,
                    "description": [
                        "number of consecutive successful checks before marking a node healthy"
                    ]
                },
                "httphealthcheck_path": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "the url path to use for HTTP health checking"
                    ]
                },
                "port_range": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the port (range) to forward, e.g. 80 or 8000-8888 defaults to all ports"
                    ]
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "active",
                        "present",
                        "absent",
                        "deleted"
                    ],
                    "description": [
                        "desired state of the LB"
                    ],
                    "aliases": []
                },
                "httphealthcheck_timeout": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "the timeout in seconds before a request is considered a failed check"
                    ]
                },
                "credentials_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the JSON file associated with the service account email"
                    ],
                    "version_added": "2.1.0"
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "httphealthcheck_interval": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "the duration in seconds between each health check request"
                    ]
                }
            },
            "module": "gce_lb"
        },
        {
            "short_description": "create/destroy GCE networks and firewall rules",
            "deprecated": null,
            "options": {
                "fwname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the firewall rule"
                    ],
                    "aliases": [
                        "fwrule"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the network"
                    ],
                    "aliases": []
                },
                "src_range": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the source IPv4 address range in CIDR notation"
                    ],
                    "aliases": [
                        "src_cidr"
                    ]
                },
                "allowed": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the protocol:ports to allow ('tcp:80' or 'tcp:80,443' or 'tcp:80-800;udp:1-25')"
                    ],
                    "aliases": []
                },
                "ipv4_range": {
                    "required": false,
                    "description": [
                        "the IPv4 address range in CIDR notation for the network this parameter is not mandatory when you specified existing network in name parameter, but when you create new network, this parameter is mandatory"
                    ],
                    "aliases": [
                        "cidr"
                    ]
                },
                "src_tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the source instance tags for creating a firewall rule"
                    ],
                    "aliases": []
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email This option is deprecated. Use 'credentials_file'."
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "active",
                        "present",
                        "absent",
                        "deleted"
                    ],
                    "required": false,
                    "description": [
                        "desired state of the network or firewall"
                    ],
                    "aliases": []
                },
                "credentials_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the JSON file associated with the service account email"
                    ],
                    "version_added": "2.1.0",
                    "aliases": []
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "target_tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the target instance tags for creating a firewall rule"
                    ],
                    "version_added": "1.9",
                    "aliases": []
                }
            },
            "module": "gce_net"
        },
        {
            "short_description": "utilize GCE persistent disk resources",
            "deprecated": null,
            "options": {
                "size_gb": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "whole integer size of disk (in GB) to create, default is 10 GB"
                    ],
                    "aliases": []
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the disk"
                    ],
                    "aliases": []
                },
                "zone": {
                    "default": "us-central1-b",
                    "required": false,
                    "description": [
                        "zone in which to create the disk"
                    ],
                    "aliases": []
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "image": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the source image to use for the disk"
                    ],
                    "version_added": "1.7",
                    "aliases": []
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email This option is deprecated. Use 'credentials_file'."
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "instance_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "instance name if you wish to attach or detach the disk"
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "active",
                        "present",
                        "absent",
                        "deleted"
                    ],
                    "required": false,
                    "description": [
                        "desired state of the persistent disk"
                    ],
                    "aliases": []
                },
                "snapshot": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the source snapshot to use for the disk"
                    ],
                    "version_added": "1.7",
                    "aliases": []
                },
                "detach_only": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "do not destroy the disk, merely detach it from an instance"
                    ],
                    "aliases": []
                },
                "credentials_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the JSON file associated with the service account email"
                    ],
                    "version_added": "2.1.0",
                    "aliases": []
                },
                "disk_type": {
                    "aliases": [],
                    "description": [
                        "type of disk provisioned"
                    ],
                    "version_added": "1.9",
                    "default": "pd-standard",
                    "required": false,
                    "choices": [
                        "pd-standard",
                        "pd-ssd"
                    ]
                },
                "mode": {
                    "default": "READ_ONLY",
                    "choices": [
                        "READ_WRITE",
                        "READ_ONLY"
                    ],
                    "required": false,
                    "description": [
                        "GCE mount mode of disk, READ_ONLY (default) or READ_WRITE"
                    ],
                    "aliases": []
                }
            },
            "module": "gce_pd"
        },
        {
            "short_description": "add or remove tag(s) to/from GCE instance",
            "deprecated": null,
            "options": {
                "instance_name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the name of the GCE instance to add/remove tags"
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "desired state of the tags"
                    ],
                    "aliases": []
                },
                "zone": {
                    "default": "us-central1-a",
                    "required": false,
                    "description": [
                        "the zone of the disk specified by source"
                    ],
                    "aliases": []
                },
                "tags": {
                    "default": null,
                    "required": true,
                    "description": [
                        "comma-separated list of tags to add or remove"
                    ],
                    "aliases": []
                },
                "service_account_email": {
                    "default": null,
                    "required": false,
                    "description": [
                        "service account email"
                    ],
                    "aliases": []
                },
                "project_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "your GCE project ID"
                    ],
                    "aliases": []
                },
                "pem_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to the pem file associated with the service account email"
                    ],
                    "aliases": []
                }
            },
            "module": "gce_tag"
        },
        {
            "short_description": "Manage Ruby gems",
            "deprecated": null,
            "options": {
                "include_dependencies": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether to include dependencies or not."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "executable": {
                    "required": false,
                    "description": [
                        "Override the path to the gem executable"
                    ],
                    "version_added": "1.4"
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the gem to be managed."
                    ]
                },
                "repository": {
                    "required": false,
                    "description": [
                        "The repository from which the gem will be installed"
                    ],
                    "aliases": [
                        "source"
                    ]
                },
                "build_flags": {
                    "required": false,
                    "description": [
                        "Allow adding build flags for gem compilation"
                    ],
                    "version_added": "2.0"
                },
                "include_doc": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Install with or without docs."
                    ],
                    "version_added": "2.0"
                },
                "user_install": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Install gem in user's local gems cache or for all users"
                    ],
                    "version_added": "1.3"
                },
                "pre_release": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Allow installation of pre-release versions of the gem."
                    ],
                    "version_added": "1.6"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The desired state of the gem. C(latest) ensures that the latest version is installed."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "version": {
                    "required": false,
                    "description": [
                        "Version of the gem to be installed/removed."
                    ]
                },
                "gem_source": {
                    "required": false,
                    "description": [
                        "The path to a local gem used as installation source."
                    ]
                }
            },
            "module": "gem"
        },
        {
            "short_description": "Downloads files from HTTP, HTTPS, or FTP to node",
            "deprecated": null,
            "options": {
                "url_password": {
                    "required": false,
                    "description": [
                        "The password for use in HTTP basic authentication. If the C(url_username) parameter is not specified, the C(url_password) parameter will not be used."
                    ],
                    "version_added": "1.6"
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "aliases": [
                        "thirsty"
                    ],
                    "description": [
                        "If C(yes) and C(dest) is not a directory, will download the file every time and replace the file if the contents change. If C(no), the file will only be downloaded if the destination does not exist. Generally should be C(yes) only for small local files. Prior to 0.6, this module behaved as if C(yes) was the default."
                    ],
                    "version_added": "0.7",
                    "default": "no",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "use_proxy": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "if C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "headers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Add custom HTTP headers to a request in the format \"key:value,key:value\""
                    ],
                    "version_added": "2.0"
                },
                "url": {
                    "required": true,
                    "description": [
                        "HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path"
                    ]
                },
                "checksum": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. Format: <algorithm>:<checksum>, e.g.: checksum=\"sha256:D98291AC[...]B6DC7B97\" If you worry about portability, only the sha1 algorithm is available on all platforms and python versions.  The third party hashlib library can be installed for access to additional algorithms. Additionaly, if a checksum is passed to this parameter, and the file exist under the C(dest) location, the destination_checksum would be calculated, and if checksum equals destination_checksum, the file download would be skipped (unless C(force) is true). "
                    ],
                    "version_added": "2.0"
                },
                "force_basic_auth": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "sha256sum": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If a SHA-256 checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. This option is deprecated. Use 'checksum'."
                    ],
                    "version_added": "1.3"
                },
                "dest": {
                    "required": true,
                    "description": [
                        "absolute path of where to download the file to.",
                        "If C(dest) is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, C(force) has no effect. If C(dest) is a directory, the file will always be downloaded (regardless of the force option), but replaced only if the contents changed."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Timeout in seconds for URL request"
                    ],
                    "version_added": "1.8"
                },
                "others": {
                    "required": false,
                    "description": [
                        "all arguments accepted by the M(file) module also work here"
                    ]
                },
                "url_username": {
                    "required": false,
                    "description": [
                        "The username for use in HTTP basic authentication. This parameter can be used without C(url_password) for sites that allow empty passwords."
                    ],
                    "version_added": "1.6"
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "tmp_dest": {
                    "default": "",
                    "required": false,
                    "description": [
                        "absolute path of where temporary file is downloaded to.",
                        "Defaults to TMPDIR, TEMP or TMP env variables or a platform specific value",
                        "https://docs.python.org/2/library/tempfile.html#tempfile.tempdir"
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "get_url"
        },
        {
            "short_description": "a wrapper to the unix getent utility",
            "deprecated": null,
            "options": {
                "fail_key": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If a supplied key is missing this will make the task fail if True"
                    ]
                },
                "split": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "character used to split the database values into lists/arrays such as ':' or '\t', otherwise  it will try to pick one depending on the database"
                    ]
                },
                "key": {
                    "default": "",
                    "required": false,
                    "description": [
                        "key from which to return values from the specified database, otherwise the full contents are returned."
                    ]
                },
                "database": {
                    "required": true,
                    "description": [
                        "the name of a getent database supported by the target system (passwd, group, hosts, etc)."
                    ]
                }
            },
            "module": "getent"
        },
        {
            "short_description": "Deploy software (or files) from git checkouts",
            "deprecated": null,
            "options": {
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), any modified files in the working repository will be discarded.  Prior to 0.7, this was always 'yes' and could not be disabled.  Prior to 1.9, the default was `yes`"
                    ],
                    "version_added": "0.7",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "track_submodules": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "if C(yes), submodules will track the latest commit on their master branch (or other branch specified in .gitmodules).  If C(no), submodules will be kept at the revision specified by the main project. This is equivalent to specifying the --remote flag to git submodule update."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "reference": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Reference repository (see \"git clone --reference ...\")"
                    ],
                    "version_added": "1.4"
                },
                "dest": {
                    "required": true,
                    "description": [
                        "Absolute path of where the repository should be checked out to. This parameter is required, unless C(clone) is set to C(no) This change was made in version 1.8.3. Prior to this version, the C(dest) parameter was always required."
                    ]
                },
                "verify_commit": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "if C(yes), when cloning or checking out a C(version) verify the signature of a GPG signed commit. This requires C(git) version>=2.1.0 to be installed. The commit MUST be signed and the public key MUST be trusted in the GPG trustdb."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "clone": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), do not clone the repository if it does not exist locally"
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "update": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), do not retrieve new revisions from the origin repository"
                    ],
                    "version_added": "1.2",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssh_opts": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Creates a wrapper script and exports the path as GIT_SSH which git then automatically uses to override ssh arguments. An example value could be \"-o StrictHostKeyChecking=no\""
                    ],
                    "version_added": "1.5"
                },
                "repo": {
                    "required": true,
                    "description": [
                        "git, SSH, or HTTP(S) protocol address of the git repository."
                    ],
                    "aliases": [
                        "name"
                    ]
                },
                "bare": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "if C(yes), repository will be created as a bare repo, otherwise it will be a standard repo with a workspace."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "recursive": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "if C(no), repository will be cloned without the --recursive option, skipping sub-modules."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to git executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
                    ],
                    "version_added": "1.4"
                },
                "remote": {
                    "default": "origin",
                    "required": false,
                    "description": [
                        "Name of the remote."
                    ]
                },
                "refspec": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Add an additional refspec to be fetched. If version is set to a I(SHA-1) not reachable from any branch or tag, this option may be necessary to specify the ref containing the I(SHA-1). Uses the same syntax as the 'git fetch' command. An example value could be \"refs/meta/config\"."
                    ],
                    "version_added": "1.9"
                },
                "accept_hostkey": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "if C(yes), adds the hostkey for the repo url if not already added. If ssh_opts contains \"-o StrictHostKeyChecking=no\", this parameter is ignored."
                    ],
                    "version_added": "1.5",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "depth": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Create a shallow clone with a history truncated to the specified number or revisions. The minimum possible value is C(1), otherwise ignored. Needs I(git>=1.9.1) to work correctly."
                    ],
                    "version_added": "1.2"
                },
                "version": {
                    "default": "HEAD",
                    "required": false,
                    "description": [
                        "What version of the repository to check out.  This can be the full 40-character I(SHA-1) hash, the literal string C(HEAD), a branch name, or a tag name."
                    ]
                },
                "key_file": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Specify an optional private key file to use for the checkout."
                    ],
                    "version_added": "1.5"
                }
            },
            "module": "git"
        },
        {
            "short_description": "Read and write git configuration",
            "deprecated": null,
            "options": {
                "repo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to a git repository for reading and writing values from a specific repo."
                    ]
                },
                "scope": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specify which scope to read/set values from. This is required when setting config values. If this is set to local, you must also specify the repo parameter. It defaults to system only when not using I(list_all)=yes."
                    ],
                    "choices": [
                        "local",
                        "global",
                        "system"
                    ]
                },
                "list_all": {
                    "default": false,
                    "required": false,
                    "description": [
                        "List all settings (optionally limited to a given I(scope))"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the setting. If no value is supplied, the value will be read from the config if it has been set."
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When specifying the name of a single setting, supply a value to set that setting to the given value."
                    ]
                }
            },
            "module": "git_config"
        },
        {
            "short_description": "Manages github service hooks.",
            "deprecated": null,
            "options": {
                "repo": {
                    "required": true,
                    "description": [
                        "This is the API url for the repository you want to manage hooks for. It should be in the form of: https://api.github.com/repos/user:/repo:. Note this is different than the normal repo url."
                    ]
                },
                "oauthkey": {
                    "required": true,
                    "description": [
                        "The oauth key provided by github. It can be found/generated on github under \"Edit Your Profile\" >> \"Applications\" >> \"Personal Access Tokens\""
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "Github username."
                    ]
                },
                "content_type": {
                    "default": "json",
                    "required": false,
                    "description": [
                        "Content type to use for requests made to the webhook"
                    ],
                    "choices": [
                        "json",
                        "form"
                    ]
                },
                "action": {
                    "required": true,
                    "description": [
                        "This tells the githooks module what you want it to do."
                    ],
                    "choices": [
                        "create",
                        "cleanall"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target repo will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "hookurl": {
                    "required": false,
                    "description": [
                        "When creating a new hook, this is the url that you want github to post to. It is only required when creating a new hook."
                    ]
                }
            },
            "module": "github_hooks"
        },
        {
            "short_description": "Creates/updates/deletes Gitlab Groups",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the group you want to create."
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab user name."
                    ]
                },
                "login_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab token for logging in."
                    ]
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Gitlab server, with protocol (http or https)."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or delete group.",
                        "Possible values are present and absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab password for login_user"
                    ]
                },
                "path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path of the group you want to create, this will be server_url/group_path",
                        "If not supplied, the group_name will be used."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "When using https if SSL certificate needs to be verified."
                    ],
                    "aliases": [
                        "verify_ssl"
                    ]
                }
            },
            "module": "gitlab_group"
        },
        {
            "short_description": "Creates/updates/deletes Gitlab Projects",
            "deprecated": null,
            "options": {
                "merge_requests_enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If merge requests can be made or not.",
                        "Possible values are true and false."
                    ]
                },
                "import_url": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Git repository which will me imported into gitlab.",
                        "Gitlab server needs read access to this git repository."
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab user name."
                    ]
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Gitlab server, with protocol (http or https)."
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab password for login_user"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the group of which this projects belongs to.",
                        "When not provided, project will belong to user which is configured in 'login_user' or 'login_token'",
                        "When provided with username, project will be created for this user. 'login_user' or 'login_token' needs admin rights."
                    ]
                },
                "wiki_enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If an wiki for this project should be available or not.",
                        "Possible values are true and false."
                    ]
                },
                "visibility_level": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Private. visibility_level is 0. Project access must be granted explicitly for each user.",
                        "Internal. visibility_level is 10. The project can be cloned by any logged in user.",
                        "Public. visibility_level is 20. The project can be cloned without any authentication.",
                        "Possible values are 0, 10 and 20."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An description for the project."
                    ]
                },
                "snippets_enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If creating snippets should be available or not.",
                        "Possible values are true and false."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the project"
                    ]
                },
                "login_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab token for logging in."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or delete project.",
                        "Possible values are present and absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "issues_enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether you want to create issues or not.",
                        "Possible values are true and false."
                    ]
                },
                "path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path of the project you want to create, this will be server_url/<group>/path",
                        "If not supplied, name will be used."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "When using https if SSL certificate needs to be verified."
                    ],
                    "aliases": [
                        "verify_ssl"
                    ]
                },
                "public": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If the project is public available or not.",
                        "Setting this to true is same as setting visibility_level to 20.",
                        "Possible values are true and false."
                    ]
                }
            },
            "module": "gitlab_project"
        },
        {
            "short_description": "Creates/updates/deletes Gitlab Users",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the user."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Add user as an member to this group."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the user you want to create"
                    ]
                },
                "sshkey_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ssh key itself."
                    ]
                },
                "sshkey_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the sshkey"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab user name."
                    ]
                },
                "login_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab token for logging in."
                    ]
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Gitlab server, with protocol (http or https)."
                    ]
                },
                "access_level": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The access level to the group. One of the following can be used.",
                        "guest",
                        "reporter",
                        "developer",
                        "master",
                        "owner"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or delete group.",
                        "Possible values are present and absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gitlab password for login_user"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the user."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "When using https if SSL certificate needs to be verified."
                    ],
                    "aliases": [
                        "verify_ssl"
                    ]
                },
                "email": {
                    "required": true,
                    "description": [
                        "The email that belongs to the user."
                    ]
                }
            },
            "module": "gitlab_user"
        },
        {
            "short_description": "Manage GlusterFS volumes",
            "deprecated": null,
            "options": {
                "force": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If brick is being created in the root partition, module will fail. Set force to true to override this behaviour"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The volume name"
                    ]
                },
                "replicas": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Replica count for volume"
                    ]
                },
                "bricks": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Brick paths on servers. Multiple brick paths can be separated by commas"
                    ],
                    "aliases": [
                        "brick"
                    ]
                },
                "quota": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Quota value for limit-usage (be sure to use 10.0MB instead of 10MB, see quota list)"
                    ]
                },
                "stripes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Stripe count for volume"
                    ]
                },
                "cluster": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of hosts to use for probing and brick setup"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Use present/absent ensure if a volume exists or not, use started/stopped to control it's availability."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "started",
                        "stopped"
                    ]
                },
                "start_on_create": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Controls whether the volume is started after creation or not, defaults to yes"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "directory": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Directory for limit-usage"
                    ]
                },
                "host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Override local hostname (for peer probing purposes)"
                    ]
                },
                "rebalance": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Controls whether the cluster is rebalanced after changes"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "options": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dictionary/hash with options/settings for the volume"
                    ]
                },
                "transport": {
                    "default": "tcp",
                    "required": false,
                    "description": [
                        "Transport type for volume"
                    ],
                    "choices": [
                        "tcp",
                        "rdma",
                        "tcp,rdma"
                    ]
                }
            },
            "module": "gluster_volume"
        },
        {
            "short_description": "Add or remove groups",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the group should be present or not on the remote host."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "gid": {
                    "required": false,
                    "description": [
                        "Optional I(GID) to set for the group."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the group to manage."
                    ]
                },
                "system": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If I(yes), indicates that the group created is a system group."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "group"
        },
        {
            "short_description": "Create Ansible groups based on facts",
            "deprecated": null,
            "options": {
                "key": {
                    "required": true,
                    "description": [
                        "The variables whose values will be used as groups"
                    ]
                }
            },
            "module": "group_by"
        },
        {
            "short_description": "Sends a notification to a grove.io channel",
            "deprecated": null,
            "options": {
                "service": {
                    "default": "ansible",
                    "required": false,
                    "description": [
                        "Name of the service (displayed as the \"user\" in the message)"
                    ]
                },
                "url": {
                    "required": false,
                    "description": [
                        "Service URL for the web client"
                    ]
                },
                "icon_url": {
                    "required": false,
                    "description": [
                        "Icon for the service"
                    ]
                },
                "message": {
                    "required": true,
                    "description": [
                        "Message content"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "channel_token": {
                    "required": true,
                    "description": [
                        "Token of the channel to post to."
                    ]
                }
            },
            "module": "grove"
        },
        {
            "short_description": "Send notification to Hall",
            "deprecated": null,
            "options": {
                "msg": {
                    "required": true,
                    "description": [
                        "The message you wish to deliver as a notifcation"
                    ]
                },
                "room_token": {
                    "required": true,
                    "description": [
                        "Room token provided to you by setting up the Ansible room integation on U(https://hall.com)"
                    ]
                },
                "title": {
                    "required": true,
                    "description": [
                        "The title of the message"
                    ]
                },
                "picture": {
                    "required": false,
                    "description": [
                        "The full URL to the image you wish to use for the Icon of the message. Defaults to U(http://cdn2.hubspot.net/hub/330046/file-769078210-png/Official_Logos/ansible_logo_black_square_small.png?t=1421076128627)"
                    ]
                }
            },
            "module": "hall"
        },
        {
            "short_description": "Enable, disable, and set weights for HAProxy backend servers using socket commands.",
            "deprecated": null,
            "options": {
                "socket": {
                    "default": "/var/run/haproxy.sock",
                    "required": false,
                    "description": [
                        "Path to the HAProxy socket file."
                    ]
                },
                "weight": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The value passed in argument. If the value ends with the `%` sign, then the new weight will be relative to the initially configured weight. Relative weights are only permitted between 0 and 100% and absolute weights are permitted between 0 and 256."
                    ]
                },
                "wait_interval": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "Number of seconds to wait between retries."
                    ],
                    "version_added": "2.0"
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Desired state of the provided backend host."
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "wait": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Wait until the server reports a status of 'UP' when `state=enabled`, or status of 'MAINT' when `state=disabled`."
                    ],
                    "version_added": "2.0"
                },
                "wait_retries": {
                    "default": 25,
                    "required": false,
                    "description": [
                        "Number of times to check for status after changing the state."
                    ],
                    "version_added": "2.0"
                },
                "host": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the backend host to change."
                    ]
                },
                "shutdown_sessions": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When disabling a server, immediately terminate all the sessions attached to the specified server. This can be used to terminate long-running sessions after a server is put into maintenance mode."
                    ]
                },
                "backend": {
                    "default": "auto-detected",
                    "required": false,
                    "description": [
                        "Name of the HAProxy backend pool."
                    ]
                }
            },
            "module": "haproxy"
        },
        {
            "short_description": "Manages Mercurial (hg) repositories.",
            "deprecated": null,
            "options": {
                "purge": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Deletes untracked files. Runs C(hg purge)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "repo": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The repository address."
                    ],
                    "aliases": [
                        "name"
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to hg executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
                    ],
                    "version_added": "1.4"
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Discards uncommitted changes. Runs C(hg update -C).  Prior to 1.9, the default was `yes`."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Absolute path of where the repository should be cloned to."
                    ]
                },
                "update": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), do not retrieve new revisions from the origin repository"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "revision": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Equivalent C(-r) option in hg command which could be the changeset, revision number, branch name or even tag."
                    ],
                    "aliases": [
                        "version"
                    ]
                }
            },
            "module": "hg"
        },
        {
            "short_description": "Send a message to hipchat.",
            "deprecated": null,
            "options": {
                "from": {
                    "default": "Ansible",
                    "required": false,
                    "description": [
                        "Name the message will appear be sent from. max 15 characters. Over 15, will be shorten."
                    ]
                },
                "room": {
                    "required": true,
                    "description": [
                        "ID or name of the room."
                    ]
                },
                "color": {
                    "default": "yellow",
                    "required": false,
                    "description": [
                        "Background color for the message. Default is yellow."
                    ],
                    "choices": [
                        "yellow",
                        "red",
                        "green",
                        "purple",
                        "gray",
                        "random"
                    ]
                },
                "msg_format": {
                    "default": "text",
                    "required": false,
                    "description": [
                        "message format. html or text. Default is text."
                    ],
                    "choices": [
                        "text",
                        "html"
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token."
                    ]
                },
                "api": {
                    "default": "https://api.hipchat.com/v1",
                    "required": false,
                    "description": [
                        "API url if using a self-hosted hipchat server. For hipchat api version 2 use C(/v2) path in URI"
                    ],
                    "version_added": "1.6.0"
                },
                "notify": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "notify or not (change the tab color, play a sound, etc)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "msg": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The message body."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "hipchat"
        },
        {
            "short_description": "Package manager for Homebrew",
            "deprecated": null,
            "options": {
                "install_options": {
                    "default": null,
                    "required": false,
                    "description": [
                        "options flags to install a package"
                    ],
                    "version_added": "1.4"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package"
                    ],
                    "choices": [
                        "head",
                        "latest",
                        "present",
                        "absent",
                        "linked",
                        "unlinked"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "name of package to install/remove"
                    ]
                },
                "update_homebrew": {
                    "default": false,
                    "required": false,
                    "description": [
                        "update homebrew itself first"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "path": {
                    "default": "/usr/local/bin",
                    "required": false,
                    "description": [
                        "':' separated list of paths to search for 'brew' executable. Since A package (I(formula) in homebrew parlance) location is prefixed relative to the actual path of I(brew) command, providing an alternative I(brew) path enables managing different set of packages in an alternative location in the system."
                    ]
                },
                "upgrade_all": {
                    "default": false,
                    "required": false,
                    "description": [
                        "upgrade all homebrew packages"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "homebrew"
        },
        {
            "short_description": "Install/uninstall homebrew casks.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the cask"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of cask to install/remove"
                    ]
                }
            },
            "module": "homebrew_cask"
        },
        {
            "short_description": "Tap a Homebrew repository.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the repository."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "tap": {
                    "required": true,
                    "description": [
                        "The repository to tap."
                    ]
                }
            },
            "module": "homebrew_tap"
        },
        {
            "short_description": "Manage hostname",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the host"
                    ]
                }
            },
            "module": "hostname"
        },
        {
            "short_description": "manage user files for basic authentication",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the user entry should be present or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "User name to add or remove"
                    ],
                    "aliases": [
                        "username"
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "Path to the file that contains the usernames and passwords"
                    ],
                    "aliases": [
                        "dest",
                        "destfile"
                    ]
                },
                "create": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the file will be created if it does not already exist. If set to \"no\", will fail if the file does not exist"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "required": false,
                    "description": [
                        "Password associated with user.",
                        "Must be specified if user does not exist yet."
                    ]
                },
                "crypt_scheme": {
                    "default": "apr_md5_crypt",
                    "required": false,
                    "description": [
                        "Encryption scheme to be used.  As well as the four choices listed here, you can also use any other hash supported by passlib, such as md5_crypt and sha256_crypt, which are linux passwd hashes.  If you do so the password file will not be compatible with Apache or Nginx"
                    ],
                    "choices": [
                        "apr_md5_crypt",
                        "des_crypt",
                        "ldap_sha1",
                        "plaintext"
                    ]
                }
            },
            "module": "htpasswd"
        },
        {
            "short_description": "Manage IAM users, groups, roles and keys",
            "deprecated": null,
            "options": {
                "new_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When state is update, will replace name with new_name on IAM resource"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "update_password": {
                    "default": "always",
                    "required": false,
                    "description": [
                        "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
                    ],
                    "choices": [
                        "always",
                        "on_create"
                    ]
                },
                "new_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When state is update, will replace the path with new_path on the IAM resource"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of IAM resource to create or identify"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "access_key_state": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When type is user, it creates, removes, deactivates or activates a user's access key(s). Note that actions apply only to keys specified."
                    ],
                    "choices": [
                        "create",
                        "remove",
                        "active",
                        "inactive"
                    ]
                },
                "key_count": {
                    "default": "1",
                    "required": false,
                    "description": [
                        "When access_key_state is create it will ensure this quantity of keys are present. Defaults to 1."
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "iam_type": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Type of IAM resource"
                    ],
                    "choices": [
                        "user",
                        "group",
                        "role"
                    ]
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Whether to create, delete or update the IAM resource. Note, roles cannot be updated."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "update"
                    ]
                },
                "access_key_ids": {
                    "description": [
                        "A list of the keys that you want impacted by the access_key_state paramter."
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of groups the user should belong to. When update, will gracefully remove groups not listed."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "path": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "When creating or updating, specify the desired path of the resource. If state is present, it will replace the current path to match what is passed in when they do not match."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When type is user and state is present, define the users login password. Also works with update. Note that always returns changed."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "iam"
        },
        {
            "short_description": "Manage server certificates for use on ELBs and CloudFront",
            "deprecated": null,
            "options": {
                "new_name": {
                    "required": false,
                    "description": [
                        "When present, this will update the name of the cert with the value passed here."
                    ],
                    "aliases": []
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "dup_ok": {
                    "default": false,
                    "required": false,
                    "description": [
                        "By default the module will not upload a certificate that is already uploaded into AWS. If set to True, it will upload the certificate as long as the name is unique."
                    ],
                    "aliases": []
                },
                "new_path": {
                    "required": false,
                    "description": [
                        "When present, this will update the path of the cert with the value passed here."
                    ],
                    "aliases": []
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of certificate to add, update or remove."
                    ],
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": null,
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": true,
                    "description": [
                        "Whether to create, delete certificate. When present is specified it will attempt to make an update if new_path or new_name is specified."
                    ],
                    "aliases": []
                },
                "cert": {
                    "required": false,
                    "description": [
                        "The path to the certificate body in PEM encoded format."
                    ],
                    "aliases": []
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "key": {
                    "description": [
                        "The path to the private key of the certificate in PEM encoded format."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "path": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "When creating or updating, specify the desired path of the certificate"
                    ],
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "cert_chain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the CA certificate chain in PEM encoded format."
                    ],
                    "aliases": []
                }
            },
            "module": "iam_cert"
        },
        {
            "short_description": "Manage IAM policies for users, groups, and roles",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "policy_document": {
                    "required": false,
                    "description": [
                        "The path to the properly json formatted policy file (mutually exclusive with C(policy_json))"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "iam_name": {
                    "required": true,
                    "description": [
                        "Name of IAM resource you wish to target for policy actions. In other words, the user name, group name or role name."
                    ]
                },
                "iam_type": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Type of IAM resource"
                    ],
                    "choices": [
                        "user",
                        "group",
                        "role"
                    ]
                },
                "policy_name": {
                    "required": true,
                    "description": [
                        "The name label for the policy to create or remove."
                    ]
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Whether to create or delete the IAM policy."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "policy_json": {
                    "required": false,
                    "description": [
                        "A properly json formatted policy as string (mutually exclusive with C(policy_document), see https://github.com/ansible/ansible/issues/7005#issuecomment-42894813 on how to use it properly)"
                    ]
                },
                "skip_duplicates": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "By default the module looks for any policies that match the document you pass in, if there is a match it will not make a new policy object with the same rules. You can override this by specifying false which would allow for two policy objects with different names but same rules."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "iam_policy"
        },
        {
            "short_description": "Load variables from files, dynamically within a task.",
            "deprecated": null,
            "options": {
                "free-form": {
                    "required": true,
                    "description": [
                        "The file name from which variables should be loaded, if called from a role it will look for the file in vars/ subdirectory of the role, otherwise the path would be relative to playbook. An absolute path can also be provided."
                    ]
                }
            },
            "module": "include_vars"
        },
        {
            "short_description": "Manage InfluxDB databases",
            "deprecated": null,
            "options": {
                "username": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "Username that will be used to authenticate against InfluxDB server"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Determines if the database should be created or destroyed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "password": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "Password that will be used to authenticate against InfluxDB server"
                    ]
                },
                "database_name": {
                    "required": true,
                    "description": [
                        "Name of the database that will be created/destroyed"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address on which InfluxDB server is listening"
                    ]
                },
                "port": {
                    "default": 8086,
                    "required": false,
                    "description": [
                        "The port on which InfluxDB server is listening"
                    ]
                }
            },
            "module": "influxdb_database"
        },
        {
            "short_description": "Manage InfluxDB retention policies",
            "deprecated": null,
            "options": {
                "username": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "Username that will be used to authenticate against InfluxDB server"
                    ]
                },
                "default": {
                    "required": true,
                    "description": [
                        "Sets the retention policy as default retention policy"
                    ]
                },
                "database_name": {
                    "required": true,
                    "description": [
                        "Name of the database where retention policy will be created"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address on which InfluxDB server is listening"
                    ]
                },
                "policy_name": {
                    "required": true,
                    "description": [
                        "Name of the retention policy"
                    ]
                },
                "replication": {
                    "required": true,
                    "description": [
                        "Determines how many independent copies of each point are stored in the cluster"
                    ]
                },
                "duration": {
                    "required": true,
                    "description": [
                        "Determines how long InfluxDB should keep the data"
                    ]
                },
                "password": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "Password that will be used to authenticate against InfluxDB server"
                    ]
                },
                "port": {
                    "default": 8086,
                    "required": false,
                    "description": [
                        "The port on which InfluxDB server is listening"
                    ]
                }
            },
            "module": "influxdb_retention_policy"
        },
        {
            "short_description": "Tweak settings in INI files",
            "deprecated": null,
            "options": {
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "option": {
                    "default": null,
                    "required": false,
                    "description": [
                        "if set (required for changing a I(value)), this is the name of the option.",
                        "May be omitted if adding/removing a whole I(section)."
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Path to the INI-style file; this file is created if required"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "section": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Section name in INI file. This is added if C(state=present) automatically when a single value is being set."
                    ]
                },
                "no_extra_spaces": {
                    "default": false,
                    "required": false,
                    "description": [
                        "do not insert spaces before and after '=' symbol"
                    ],
                    "version_added": "2.1"
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the string value to be associated with an I(option). May be omitted when removing an I(option)."
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "If set to C(absent) the option or section will be removed if present instead of created."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "others": {
                    "required": false,
                    "description": [
                        "all arguments accepted by the M(file) module also work here"
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ini_file"
        },
        {
            "short_description": "Run arbitrary commands on ios devices.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the waitfor conditions."
                    ]
                },
                "commands": {
                    "required": true,
                    "description": [
                        "List of commands to send to the remote ios device over the configured provider. The resulting output from the command is returned. If the I(waitfor) argument is provided, the module is not returned until the condition is satisfied or the number of retires as expired."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of conditions to evaluate against the output of the command. The task will wait for a each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies idle timeout for the connection. Useful if the console freezes before continuing. For example when saving configurations."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "ios_command"
        },
        {
            "short_description": "Manage Cisco IOS configuration sections",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "after": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a changed needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
                    ]
                },
                "lines": {
                    "required": true,
                    "description": [
                        "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
                    ]
                },
                "replace": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct"
                    ],
                    "choices": [
                        "line",
                        "block"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "parents": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies idle timeout for the connection. Useful if the console freezes before continuing. For example when saving configurations."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                },
                "match": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  Finally if match is set to I(exact), command lines must be an equal match."
                    ],
                    "choices": [
                        "line",
                        "strict",
                        "exact"
                    ]
                },
                "before": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system"
                    ]
                }
            },
            "module": "ios_config"
        },
        {
            "short_description": "Manage Cisco IOS device configurations over SSH",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will first search for the source file in role or playbook root folder in templates unless a full path to the file is given."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module not to consider the current device running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "include_defaults": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The module, by default, will collect the current device running-config to use as a base for comparision to the commands in I(src).  Setting this value to true will cause the command issued to add any necessary flags to collect all defaults as well as the device configuration.  If the destination device does not support such a flag, this argument is silently ignored."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies idle timeout for the connection. Useful if the console freezes before continuing. For example when saving configurations."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "ios_template"
        },
        {
            "short_description": "Run arbitrary commands on ios devices.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the waitfor conditions."
                    ]
                },
                "commands": {
                    "required": true,
                    "description": [
                        "List of commands to send to the remote ios device over the configured provider. The resulting output from the command is returned. If the I(waitfor) argument is provided, the module is not returned until the condition is satisfied or the number of retires as expired."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of conditions to evaluate against the output of the command. The task will wait for a each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(iosxr) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "iosxr_command"
        },
        {
            "short_description": "Manage Cisco IOS XR configuration sections",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "after": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a changed needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
                    ]
                },
                "lines": {
                    "required": true,
                    "description": [
                        "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
                    ]
                },
                "replace": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct"
                    ],
                    "choices": [
                        "line",
                        "block"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "parents": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies idle timeout for the connection. Useful if the console freezes before continuing. For example when saving configurations."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                },
                "match": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  Finally if match is set to I(exact), command lines must be an equal match."
                    ],
                    "choices": [
                        "line",
                        "strict",
                        "exact"
                    ]
                },
                "before": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system"
                    ]
                }
            },
            "module": "iosxr_config"
        },
        {
            "short_description": "Manage Cisco IOSXR device configurations over SSH",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will first search for the source file in role or playbook root folder in templates unless a full path to the file is given."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module not to consider the current device running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "auth_pass": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTH_PASS will be used instead."
                    ]
                },
                "authorize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Instructs the module to enter priviledged mode on the remote device before sending any commands.  If not specified, the device will attempt to excecute all commands in non-priviledged mode. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_AUTHORIZE will be used instead."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies idle timeout for the connection. Useful if the console freezes before continuing. For example when saving configurations."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "iosxr_template"
        },
        {
            "short_description": "Retrieve the public IP of your internet gateway.",
            "deprecated": null,
            "options": {
                "api_url": {
                    "default": "https://api.ipify.org",
                    "required": false,
                    "description": [
                        "URL of the ipify.org API service.",
                        "C(?format=json) will be appended per default."
                    ]
                }
            },
            "module": "ipify_facts"
        },
        {
            "short_description": "Modify the systems iptables",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This specifies a comment that will be added to the rule"
                    ]
                },
                "protocol": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The protocol of the rule or of the packet to check. The specified protocol can be one of tcp, udp, udplite, icmp, esp, ah, sctp or the special keyword \"all\", or it can be a numeric value, representing one of these protocols or a different one. A protocol name from /etc/protocols is also allowed. A \"!\" argument before the protocol inverts the test.  The number zero is equivalent to all. \"all\" will match with all protocols and is taken as default when this option is omitted."
                    ]
                },
                "goto": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This specifies that the processing should continue in a user specified chain. Unlike the jump argument return will not continue processing in this chain but instead in the chain that called us via jump."
                    ]
                },
                "chain": {
                    "required": true,
                    "description": [
                        "Chain to operate on. This option can either be the name of a user defined chain or any of the builtin chains: 'INPUT', 'FORWARD', 'OUTPUT', 'PREROUTING', 'POSTROUTING', 'SECMARK', 'CONNSECMARK'"
                    ]
                },
                "fragment": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This means that the rule only refers to second and further fragments of fragmented packets. Since there is no way to tell the source or destination ports of such a packet (or ICMP type), such a packet will not match any rules which specify them. When the \"!\" argument precedes fragment argument, the rule will only match head fragments, or unfragmented packets."
                    ]
                },
                "out_interface": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an interface via which a packet is going to be sent (for packets entering the FORWARD, OUTPUT and POSTROUTING chains). When the \"!\" argument is used before the interface name, the sense is inverted. If the interface name ends in a \"+\", then any interface which begins with this name will match. If this option is omitted, any interface name will match."
                    ]
                },
                "limit_burst": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the maximum burst before the above limit kicks in."
                    ],
                    "version_added": "2.1"
                },
                "ctstate": {
                    "default": [],
                    "required": false,
                    "description": [
                        "ctstate is a list of the connection states to match in the conntrack module. Possible states are: 'INVALID', 'NEW', 'ESTABLISHED', 'RELATED', 'UNTRACKED', 'SNAT', 'DNAT'"
                    ]
                },
                "jump": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This specifies the target of the rule; i.e., what to do if the packet matches it. The target can be a user-defined chain (other than the one this rule is in), one of the special builtin targets which decide the fate of the packet immediately, or an extension (see EXTENSIONS below).  If this option is omitted in a rule (and the goto paramater is not used), then matching the rule will have no effect on the packet's fate, but the counters on the rule will be incremented."
                    ]
                },
                "source_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Source port or port range specification. This can either be a service name or a port number. An inclusive range can also be specified, using the format first:last. If the first port is omitted, '0' is assumed; if the last is omitted, '65535' is assumed. If the first port is greater than the second one they will be swapped."
                    ]
                },
                "to_ports": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This specifies a destination port or range of ports to use: without this, the destination port is never altered. This is only valid if the rule also specifies one of the following protocols: tcp, udp, dccp or sctp."
                    ]
                },
                "table": {
                    "default": "filter",
                    "required": false,
                    "description": [
                        "This option specifies the packet matching table which the command should operate on. If the kernel is configured with automatic module loading, an attempt will be made to load the appropriate module for that table if it is not already there."
                    ],
                    "choices": [
                        "filter",
                        "nat",
                        "mangle",
                        "raw",
                        "security"
                    ]
                },
                "destination_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Destination port or port range specification. This can either be a service name or a port number. An inclusive range can also be specified, using the format first:last. If the first port is omitted, '0' is assumed; if the last is omitted, '65535' is assumed. If the first port is greater than the second one they will be swapped."
                    ]
                },
                "to_destination": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This specifies a destination address to use with DNAT: without this, the destination address is never altered."
                    ],
                    "version_added": "2.1"
                },
                "uid_owner": {
                    "required": false,
                    "description": [
                        "Specifies the UID or username to use in match by owner rule."
                    ],
                    "version_added": "2.1"
                },
                "set_dscp_mark_class": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This allows specifying a predefined DiffServ class which will be translated to the corresponding DSCP mark. Mutually exclusive with C(set_dscp_mark)."
                    ],
                    "version_added": "2.1"
                },
                "destination": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Destination specification. Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address. Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea. The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A \"!\" argument before the address specification inverts the sense of the address.Source specification. Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address. Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea. The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A \"!\" argument before the address specification inverts the sense of the address."
                    ]
                },
                "set_dscp_mark": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This allows specifying a DSCP mark to be added to packets. It takes either an integer or hex value. Mutually exclusive with C(set_dscp_mark_class)."
                    ],
                    "version_added": "2.1"
                },
                "reject_with": {
                    "required": false,
                    "description": [
                        "Specifies the error packet type to return while rejecting."
                    ],
                    "version_added": "2.1"
                },
                "source": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Source specification. Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address. Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea. The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A \"!\" argument before the address specification inverts the sense of the address.Source specification. Address can be either a network name, a hostname, a network IP address (with /mask), or a plain IP address.  Hostnames will be resolved once only, before the rule is submitted to the kernel. Please note that specifying any name to be resolved with a remote query such as DNS is a really bad idea. The mask can be either a network mask or a plain number, specifying the number of 1's at the left side of the network mask. Thus, a mask of 24 is equivalent to 255.255.255.0. A \"!\" argument before the address specification inverts the sense of the address."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the rule should be absent or present."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "limit": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the maximum average number of matches to allow per second. The number can specify units explicitly, using `/second', `/minute', `/hour' or `/day', or parts of them (so `5/second' is the same as `5/s')."
                    ]
                },
                "ip_version": {
                    "default": "ipv4",
                    "required": false,
                    "description": [
                        "Which version of the IP protocol this rule should apply to."
                    ],
                    "choices": [
                        "ipv4",
                        "ipv6"
                    ]
                },
                "set_counters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "This enables the administrator to initialize the packet and byte counters of a rule (during INSERT, APPEND, REPLACE operations)."
                    ]
                },
                "in_interface": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of an interface via which a packet was received (only for packets entering the INPUT, FORWARD and PREROUTING chains). When the \"!\" argument is used before the interface name, the sense is inverted. If the interface name ends in a \"+\", then any interface which begins with this name will match. If this option is omitted, any interface name will match."
                    ]
                },
                "match": {
                    "default": [],
                    "required": false,
                    "description": [
                        "Specifies a match to use, that is, an extension module that tests for a specific property. The set of matches make up the condition under which a target is invoked. Matches are evaluated first to last if specified as an array and work in short-circuit fashion, i.e. if one extension yields false, evaluation will stop."
                    ]
                }
            },
            "module": "iptables"
        },
        {
            "short_description": "Send a message to an IRC channel",
            "deprecated": null,
            "options": {
                "style": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Text style for the message. Note italic does not work on some clients"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "bold",
                        "underline",
                        "reverse",
                        "italic"
                    ]
                },
                "key": {
                    "required": false,
                    "description": [
                        "Channel key"
                    ],
                    "version_added": "1.7"
                },
                "passwd": {
                    "required": false,
                    "description": [
                        "Server password"
                    ]
                },
                "color": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Text color for the message. (\"none\" is a valid option in 1.6 or later, in 1.6 and prior, the default color is black, not \"none\"). Added 11 more colors in version 2.0."
                    ],
                    "choices": [
                        "none",
                        "white",
                        "black",
                        "blue",
                        "green",
                        "red",
                        "brown",
                        "purple",
                        "orange",
                        "yellow",
                        "light_green",
                        "teal",
                        "light_cyan",
                        "light_blue",
                        "pink",
                        "gray",
                        "light_gray"
                    ]
                },
                "server": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "IRC server name/address"
                    ]
                },
                "topic": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set the channel topic"
                    ],
                    "version_added": "2.0"
                },
                "nick": {
                    "default": "ansible",
                    "required": false,
                    "description": [
                        "Nickname to send the message from. May be shortened, depending on server's NICKLEN setting."
                    ]
                },
                "part": {
                    "default": true,
                    "description": [
                        "Designates whether user should part from channel after sending message or not. Useful for when using a faux bot and not wanting join/parts between messages."
                    ],
                    "version_added": "2.0"
                },
                "nick_to": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of nicknames to send the message to. One of nick_to or channel needs to be set.  When both are defined, the message will be sent to both of them."
                    ],
                    "version_added": "2.0"
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "Timeout to use while waiting for successful registration and join messages, this is to prevent an endless loop"
                    ],
                    "version_added": "1.5"
                },
                "msg": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The message body."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "description": [
                        "Designates whether TLS/SSL should be used when connecting to the IRC server"
                    ],
                    "version_added": "1.8"
                },
                "port": {
                    "default": 6667,
                    "required": false,
                    "description": [
                        "IRC server port number"
                    ]
                },
                "channel": {
                    "required": true,
                    "description": [
                        "Channel name.  One of nick_to or channel needs to be set.  When both are set, the message will be sent to both of them."
                    ]
                }
            },
            "module": "irc"
        },
        {
            "short_description": "Send a message to jabber user or chat room",
            "deprecated": null,
            "options": {
                "to": {
                    "required": true,
                    "description": [
                        "user ID or name of the room, when using room use a slash to indicate your nick."
                    ]
                },
                "host": {
                    "required": false,
                    "description": [
                        "host to connect, overrides user info"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "User as which to connect"
                    ]
                },
                "encoding": {
                    "required": false,
                    "description": [
                        "message encoding"
                    ]
                },
                "msg": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The message body."
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "password for user to connect"
                    ]
                },
                "port": {
                    "default": 5222,
                    "required": false,
                    "description": [
                        "port to connect to, overrides default"
                    ]
                }
            },
            "module": "jabber"
        },
        {
            "short_description": "deploy applications to JBoss",
            "deprecated": null,
            "options": {
                "src": {
                    "required": false,
                    "description": [
                        "The remote path of the application ear or war to deploy"
                    ]
                },
                "deploy_path": {
                    "default": "/var/lib/jbossas/standalone/deployments",
                    "required": false,
                    "description": [
                        "The location in the filesystem where the deployment scanner listens"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the application should be deployed or undeployed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "deployment": {
                    "required": true,
                    "description": [
                        "The name of the deployment"
                    ]
                }
            },
            "module": "jboss"
        },
        {
            "short_description": "create and modify issues in a JIRA instance",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username to log-in with."
                    ]
                },
                "comment": {
                    "required": false,
                    "description": [
                        "The comment text to add."
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "The issue description, where appropriate."
                    ]
                },
                "fields": {
                    "required": false,
                    "description": [
                        "This is a free-form data structure that can contain arbitrary data. This is passed directly to the JIRA REST API (possibly after merging with other required data, as when passed to create). See examples for more information, and the JIRA REST API for the structure required for various fields."
                    ]
                },
                "uri": {
                    "required": true,
                    "description": [
                        "Base URI for the JIRA instance"
                    ]
                },
                "summary": {
                    "required": false,
                    "description": [
                        "The issue summary, where appropriate."
                    ]
                },
                "project": {
                    "required": false,
                    "description": [
                        "The project for this operation. Required for issue creation."
                    ],
                    "aliases": [
                        "prj"
                    ]
                },
                "assignee": {
                    "required": false,
                    "description": [
                        "Sets the assignee on create or transition operations. Note not all transitions will allow this."
                    ]
                },
                "status": {
                    "required": false,
                    "description": [
                        "The desired status; only relevant for the transition operation."
                    ]
                },
                "issuetype": {
                    "required": false,
                    "description": [
                        "The issue type, for issue creation."
                    ]
                },
                "operation": {
                    "aliases": [
                        "command"
                    ],
                    "required": true,
                    "description": [
                        "The operation to perform."
                    ],
                    "choices": [
                        "create",
                        "comment",
                        "edit",
                        "fetch",
                        "transition"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password to log-in with."
                    ]
                },
                "issue": {
                    "required": false,
                    "description": [
                        "An existing issue key to operate on."
                    ]
                }
            },
            "module": "jira"
        },
        {
            "short_description": "Execute arbitrary commands on a remote device running Junos",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed.  The command is run on the target device every retry and evaluated against the waitfor conditionals"
                    ]
                },
                "commands": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An ordered set of CLI commands to be executed on the remote device.  The output from the commands is then returned to the playbook in the task results."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again."
                    ]
                },
                "rpcs": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(rpcs) argument accepts a list of RPCs to be executed over a netconf session and the results from the RPC execution is return to the playbook via the modules results dictionary."
                    ]
                },
                "format": {
                    "default": "xml",
                    "required": false,
                    "description": [
                        "Configures the encoding scheme to use when serializing output from the device.  This handles how to properly understand the output and apply the conditionals path to the result set."
                    ],
                    "choices": [
                        "xml",
                        "text"
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional or set of considitonals to be true before moving forward.   If the conditional is not true by the configured retries, the task fails.  See examples."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_command"
        },
        {
            "short_description": "Manage configuration on remote devices running Junos",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": "configured by junos_config",
                    "required": false,
                    "description": [
                        "The C(comment) argument specifies a text string to be used when committing the configuration.  If the C(confirm) argument is set to False, this argument is silently ignored."
                    ]
                },
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "rollback": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(rollback) argument instructs the module to rollback the current configuration to the identifier specified in the argument.  If the specified rollback identifier does not exist on the remote device, the module will fail.  To rollback to the most recent commit, set the C(rollback) argument to 0"
                    ]
                },
                "confirm": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "The C(confirm) argument will configure a time out value for the commit to be confirmed before it is automatically rolled back.  If the C(confirm) argument is set to False, this argument is silently ignored.  If the value for this argument is set to 0, the commit is confirmed immediately."
                    ]
                },
                "lines": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
                    ]
                },
                "replace": {
                    "default": false,
                    "required": true,
                    "description": [
                        "The C(replace) argument will instruct the remote device to replace the current configuration hierarchy with the one specified in the corresponding hierarchy of the source configuraiton loaded from this module."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "zeroize": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(zeroize) argument is used to completely ssantaize the remote device configuration back to initial defaults.  This argument will effectively remove all current configuration statements on the remote device"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_config"
        },
        {
            "short_description": "Collect facts from remove device running Junos",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "config_format": {
                    "default": "text",
                    "required": false,
                    "description": [
                        "The C(config_format) argument is used to specify the desired format of the configuration file.  Devices support three configuration file formats.  By default, the configuration from the device is returned as text.  The other options include set and xml.  If the xml option is choosen, the configuration file is returned as both xml and json."
                    ],
                    "choices": [
                        "xml",
                        "text",
                        "set"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(config) argument instructs the fact module to collect the configuration from the remote device.  The configuration is then included in return facts.  By default, the configuration is returned as text.  The C(config_format) can be used to return different Junos configuration formats."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_facts"
        },
        {
            "short_description": "Configures the Junos Netconf system service",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Specifies the state of the M(junos_netconf) resource on the remote device.  If the O(state) argument is set to I(present) the netconf service will be configured.  If the O(state) argument is set to I(absent) the netconf service will be removed from the configuration."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "listens_on": {
                    "default": 830,
                    "required": true,
                    "description": [
                        "This argument specifies the port the netconf service should listen on for SSH connections.  The default port as defined in RFC 6242 is 830."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_netconf"
        },
        {
            "short_description": "Installs packages on remote devices running Junos",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The O(src) argument specifies the path to the source package to be installed on the remote device in the advent of a version mismatch. The O(src) argument can be either a localized path or a full path to the package file to install"
                    ],
                    "aliases": [
                        "package"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "require": true,
                    "description": [
                        "The O(force) argument instructs the module to bypass the package version check and install the packaged identified in O(src) on the remote device."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "no_copy": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The O(no_copy) arugment is responsible for instructing the remote device on where to isntall the package from.  When enabled, the package is transferred to the remote device prior to installing."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "reboot": {
                    "default": true,
                    "required": true,
                    "description": [
                        "In order for a package to take effect, the remote device must be restarted.  When enabled, this argument will instruct the module to reboot the device once the updated package has been installed. If disabled or the remote package does not need to be changed, the device will not be started."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The O(version) argument can be used to explicitly specify the version of the package that should be installed on the remote device.  If the O(version) argument is not specified, then the version is extracts from the O(src) filename"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_package"
        },
        {
            "short_description": "Manage configuration on remote devices running Junos",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": "configured by junos_template",
                    "required": false,
                    "description": [
                        "The C(comment) argument specifies a text string to be used when committing the configuration.  If the C(confirm) argument is set to False, this argument is silently ignored."
                    ]
                },
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   The value of I(ssh_keyfile) is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "confirm": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "The C(confirm) argument will configure a time out value for the commit to be confirmed before it is automatically rolled back.  If the C(confirm) argument is set to False, this argument is silently ignored.  If the value for this argument is set to 0, the commit is confirmed immediately."
                    ]
                },
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(ios) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "action": {
                    "default": "merge",
                    "required": false,
                    "description": [
                        "The C(action) argument specifies how the module will apply changes."
                    ],
                    "version_added": "2.2",
                    "choices": [
                        "merge",
                        "overwrite",
                        "replace"
                    ]
                },
                "config_format": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(format) argument specifies the format of the configuration template specified in C(src).  If the format argument is not specified, the module will attempt to infer the configuration format based of file extension.  Files that end in I(xml) will set the format to xml.  Files that end in I(set) will set the format to set and all other files will default the format to text."
                    ],
                    "choices": [
                        "text",
                        "xml",
                        "set"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   The value of I(password) is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the configuration from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "port": {
                    "default": 22,
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  The port value will default to the well known SSH port of 22"
                    ]
                }
            },
            "module": "junos_template"
        },
        {
            "short_description": "Blacklist kernel modules",
            "deprecated": null,
            "options": {
                "blacklist_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If specified, use this blacklist file instead of C(/etc/modprobe.d/blacklist-ansible.conf)."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the module should be present in the blacklist or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of kernel module to black- or whitelist."
                    ]
                }
            },
            "module": "kernel_blacklist"
        },
        {
            "short_description": "Add or remove a host from the C(known_hosts) file",
            "deprecated": null,
            "options": {
                "path": {
                    "default": "(homedir)+/.ssh/known_hosts",
                    "required": false,
                    "description": [
                        "The known_hosts file to edit"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "I(present) to add the host, I(absent) to remove it."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The host to add or remove (must match a host specified in key)"
                    ],
                    "aliases": [
                        "host"
                    ]
                },
                "key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The SSH public host key, as a string (required if state=present, optional when state=absent, in which case all keys for the host are removed)"
                    ]
                }
            },
            "module": "known_hosts"
        },
        {
            "short_description": "Manage Kubernetes resources.",
            "deprecated": null,
            "options": {
                "url_password": {
                    "default": null,
                    "description": [
                        "The HTTP Basic Auth password for the API I(endpoint). This should be set unless using the C('insecure') option."
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "certificate_authority_data": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Certificate Authority data for Kubernetes server. Should be in either standard PEM format or base64 encoded PEM data. Note that certificate verification is broken until ansible supports a version of 'match_hostname' that can match the IP address against the CA data."
                    ]
                },
                "inline_data": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The Kubernetes YAML data to send to the API I(endpoint). This option is mutually exclusive with C('file_reference')."
                    ]
                },
                "insecure": {
                    "description": [
                        "Reverts the connection to using HTTP instead of HTTPS. This option should only be used when execuing the M('kubernetes') module local to the Kubernetes cluster using the insecure local port (locahost:8080 by default)."
                    ]
                },
                "file_reference": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specify full path to a Kubernets YAML file to send to API I(endpoint). This option is mutually exclusive with C('inline_data')."
                    ]
                },
                "api_endpoint": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The IPv4 API endpoint of the Kubernetes cluster."
                    ],
                    "aliases": [
                        "endpoint"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "The desired action to take on the Kubernetes data."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "update",
                        "replace"
                    ]
                },
                "url_username": {
                    "default": "admin",
                    "description": [
                        "The HTTP Basic Auth username for the API I(endpoint). This should be set unless using the C('insecure') option."
                    ],
                    "aliases": [
                        "username"
                    ]
                },
                "validate_certs": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Enable/disable certificate validation. Note that this is set to C(false) until Ansible can support IP address based certificate hostname matching (exists in >= python3.5.0)."
                    ]
                }
            },
            "module": "kubernetes"
        },
        {
            "short_description": "Manage Gentoo overlays",
            "deprecated": null,
            "options": {
                "list_url": {
                    "required": false,
                    "description": [
                        "An URL of the alternative overlays list that defines the overlay to install. This list will be fetched and saved under C(${overlay_defs})/${name}.xml), where C(overlay_defs) is readed from the Layman's configuration."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be set to C(no) when no other option exists.  Prior to 1.9.3 the code defaulted to C(no)."
                    ],
                    "version_added": "1.9.3",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The overlay id to install, synchronize, or uninstall. Use 'ALL' to sync all of the installed overlays (can be used only when C(state=updated))."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to install (C(present)), sync (C(updated)), or uninstall (C(absent)) the overlay."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "updated"
                    ]
                }
            },
            "module": "layman"
        },
        {
            "short_description": "create an annotation in librato",
            "deprecated": null,
            "options": {
                "description": {
                    "required": false,
                    "description": [
                        "The description contains extra meta-data about a particular annotation",
                        "The description should contain specifics on the individual annotation e.g. Deployed 9b562b2 shipped new feature foo!"
                    ]
                },
                "links": {
                    "required": true,
                    "description": [
                        "See examples"
                    ]
                },
                "title": {
                    "required": true,
                    "description": [
                        "The title of an annotation is a string and may contain spaces",
                        "The title should be a short, high-level summary of the annotation e.g. v45 Deployment"
                    ]
                },
                "start_time": {
                    "required": false,
                    "description": [
                        "The unix timestamp indicating the the time at which the event referenced by this annotation started"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "The annotation stream name",
                        "If the annotation stream does not exist, it will be created automatically"
                    ]
                },
                "source": {
                    "required": false,
                    "description": [
                        "A string which describes the originating source of an annotation when that annotation is tracked across multiple members of a population"
                    ]
                },
                "end_time": {
                    "required": false,
                    "description": [
                        "The unix timestamp indicating the the time at which the event referenced by this annotation ended",
                        "For events that have a duration, this is a useful way to annotate the duration of the event"
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "Librato account api key"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "Librato account username"
                    ]
                }
            },
            "module": "librato_annotation"
        },
        {
            "short_description": "Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression.",
            "deprecated": null,
            "options": {
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "insertbefore": {
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the line will be inserted before the last match of specified regular expression. A value is available; C(BOF) for inserting the line at the beginning of the file. If specified regular expression has no matches, the line will be inserted at the end of the file.  May not be used with C(backrefs)."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "BOF",
                        "*regex*"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "The file to modify."
                    ],
                    "aliases": [
                        "name",
                        "destfile"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "create": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the file will be created if it does not already exist. By default it will fail if the file is missing."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "backrefs": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If set, line can contain backreferences (both positional and named) that will get populated if the C(regexp) matches. This flag changes the operation of the module slightly; C(insertbefore) and C(insertafter) will be ignored, and if the C(regexp) doesn't match anywhere in the file, the file will be left unchanged. If the C(regexp) does match, the last matching line will be replaced by the expanded line parameter."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "Whether the line should be there or not."
                    ],
                    "aliases": []
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "others": {
                    "required": false,
                    "description": [
                        "All arguments accepted by the M(file) module also work here."
                    ]
                },
                "insertafter": {
                    "default": "EOF",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the line will be inserted after the last match of specified regular expression. A special value is available; C(EOF) for inserting the line at the end of the file. If specified regular expression has no matches, EOF will be used instead. May not be used with C(backrefs)."
                    ],
                    "choices": [
                        "EOF",
                        "*regex*"
                    ]
                },
                "regexp": {
                    "required": false,
                    "description": [
                        "The regular expression to look for in every line of the file. For C(state=present), the pattern to replace if found; only the last line found will be replaced. For C(state=absent), the pattern of the line to remove.  Uses Python regular expressions; see U(http://docs.python.org/2/library/re.html)."
                    ],
                    "version_added": 1.7
                },
                "line": {
                    "required": false,
                    "description": [
                        "Required for C(state=present). The line to insert/replace into the file. If C(backrefs) is set, may contain backreferences that will get expanded with the C(regexp) capture groups if the regexp matches."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                }
            },
            "module": "lineinfile"
        },
        {
            "short_description": "create / delete / stop / restart an instance in Linode Public Cloud",
            "deprecated": null,
            "options": {
                "datacenter": {
                    "default": null,
                    "type": "integer",
                    "description": [
                        "datacenter to create an instance in (Linode Datacenter)"
                    ]
                },
                "swap": {
                    "default": 512,
                    "type": "integer",
                    "description": [
                        "swap size in MB"
                    ]
                },
                "api_key": {
                    "default": null,
                    "description": [
                        "Linode API key"
                    ]
                },
                "name": {
                    "default": null,
                    "type": "string",
                    "description": [
                        "Name to give the instance (alphanumeric, dashes, underscore)",
                        "To keep sanity on the Linode Web Console, name is prepended with LinodeID_"
                    ]
                },
                "payment_term": {
                    "default": 1,
                    "type": "integer",
                    "description": [
                        "payment term to use for the instance (payment term in months)"
                    ],
                    "choices": [
                        1,
                        12,
                        24
                    ]
                },
                "linode_id": {
                    "default": null,
                    "type": "integer",
                    "description": [
                        "Unique ID of a linode server"
                    ],
                    "aliases": [
                        "lid"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "active",
                        "started",
                        "absent",
                        "deleted",
                        "stopped",
                        "restarted"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "plan": {
                    "default": null,
                    "type": "integer",
                    "description": [
                        "plan to use for the instance (Linode plan)"
                    ]
                },
                "distribution": {
                    "default": null,
                    "type": "integer",
                    "description": [
                        "distribution to use for the instance (Linode Distribution)"
                    ]
                },
                "password": {
                    "default": null,
                    "type": "string",
                    "description": [
                        "root password to apply to a new server (auto generated if missing)"
                    ]
                },
                "ssh_pub_key": {
                    "default": null,
                    "type": "string",
                    "description": [
                        "SSH public key applied to root user"
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "linode"
        },
        {
            "short_description": "get details reported by lldp",
            "deprecated": null,
            "options": {},
            "module": "lldp"
        },
        {
            "short_description": "Creates or removes locales.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the locale shall be present."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name and encoding of the locale, such as \"en_GB.UTF-8\"."
                    ],
                    "aliases": []
                }
            },
            "module": "locale_gen"
        },
        {
            "short_description": "Module for tracking logs via logentries.com",
            "deprecated": null,
            "options": {
                "path": {
                    "required": true,
                    "description": [
                        "path to a log file"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "following state of the log"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "name of the log"
                    ]
                },
                "logtype": {
                    "required": false,
                    "description": [
                        "type of the log"
                    ]
                }
            },
            "module": "logentries"
        },
        {
            "short_description": "Configure LVM volume groups",
            "deprecated": null,
            "options": {
                "vg_options": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Additional options to pass to C(vgcreate) when creating the volume group."
                    ],
                    "version_added": "1.6"
                },
                "pvs": {
                    "required": false,
                    "description": [
                        "List of comma-separated devices to use as physical devices in this volume group. Required when creating or resizing volume group.",
                        "The module will take care of running pvcreate if needed."
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If yes, allows to remove volume group with logical volumes."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "vg": {
                    "required": true,
                    "description": [
                        "The name of the volume group."
                    ]
                },
                "pesize": {
                    "default": 4,
                    "required": false,
                    "description": [
                        "The size of the physical extent in megabytes. Must be a power of 2."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Control if the volume group exists."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                }
            },
            "module": "lvg"
        },
        {
            "short_description": "Configure LVM logical volumes",
            "deprecated": null,
            "options": {
                "lv": {
                    "required": true,
                    "description": [
                        "The name of the logical volume."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Control if the logical volume exists. If C(present) the C(size) option is required."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Shrink or remove operations of volumes requires this switch. Ensures that that filesystems get never corrupted/destroyed by mistake."
                    ],
                    "version_added": "1.5",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "vg": {
                    "required": true,
                    "description": [
                        "The volume group this logical volume is part of."
                    ]
                },
                "snapshot": {
                    "required": false,
                    "description": [
                        "The name of the snapshot volume"
                    ],
                    "version_added": "2.1"
                },
                "opts": {
                    "description": [
                        "Free-form options to be passed to the lvcreate command"
                    ],
                    "version_added": "2.0"
                },
                "size": {
                    "description": [
                        "The size of the logical volume, according to lvcreate(8) --size, by default in megabytes or optionally with one of [bBsSkKmMgGtTpPeE] units; or according to lvcreate(8) --extents as a percentage of [VG|PVS|FREE]; Float values must begin with a digit. Resizing using percentage values was not supported prior to 2.1."
                    ]
                }
            },
            "module": "lvol"
        },
        {
            "short_description": "Manage LXC Containers",
            "deprecated": null,
            "options": {
                "archive_path": {
                    "default": null,
                    "description": [
                        "Path the save the archived container. If the path does not exist the archive method will attempt to create it."
                    ]
                },
                "zfs_root": {
                    "required": false,
                    "description": [
                        "Create zfs under given zfsroot."
                    ]
                },
                "container_log_level": {
                    "default": "INFO",
                    "required": false,
                    "description": [
                        "Set the log level for a container where *container_log* was set."
                    ],
                    "choices": [
                        "INFO",
                        "ERROR",
                        "DEBUG"
                    ]
                },
                "template_options": {
                    "required": false,
                    "description": [
                        "Template options when building the container."
                    ]
                },
                "container_command": {
                    "required": false,
                    "description": [
                        "Run a command within a container."
                    ]
                },
                "clone_name": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Name of the new cloned server. This is only used when state is clone."
                    ],
                    "version_added": "2.0"
                },
                "lxc_path": {
                    "required": false,
                    "description": [
                        "Place container under PATH"
                    ]
                },
                "container_config": {
                    "required": false,
                    "description": [
                        "list of 'key=value' options to use when configuring a container."
                    ]
                },
                "fs_type": {
                    "default": "ext4",
                    "required": false,
                    "description": [
                        "Create fstype TYPE."
                    ]
                },
                "archive": {
                    "default": false,
                    "description": [
                        "Create an archive of a container. This will create a tarball of the running container."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "vg_name": {
                    "default": "lxc",
                    "required": false,
                    "description": [
                        "If Backend store is lvm, specify the name of the volume group."
                    ]
                },
                "clone_snapshot": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Create a snapshot a container when cloning. This is not supported by all container storage backends. Enabling this may fail if the backing store does not support snapshots."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        true,
                        false
                    ]
                },
                "container_log": {
                    "default": false,
                    "description": [
                        "Enable a container log for host actions to the container."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of a container."
                    ]
                },
                "lv_name": {
                    "default": "$CONTAINER_NAME",
                    "required": false,
                    "description": [
                        "Name of the logical volume, defaults to the container name."
                    ]
                },
                "fs_size": {
                    "default": "5G",
                    "required": false,
                    "description": [
                        "File system Size."
                    ]
                },
                "archive_compression": {
                    "default": "gzip",
                    "description": [
                        "Type of compression to use when creating an archive of a running container."
                    ],
                    "choices": [
                        "gzip",
                        "bzip2",
                        "none"
                    ]
                },
                "backing_store": {
                    "default": "dir",
                    "required": false,
                    "description": [
                        "Backend storage type for the container."
                    ],
                    "choices": [
                        "dir",
                        "lvm",
                        "loop",
                        "btrfs",
                        "overlayfs",
                        "zfs"
                    ]
                },
                "state": {
                    "default": "started",
                    "required": false,
                    "description": [
                        "Define the state of a container. If you clone a container using `clone_name` the newly cloned container created in a stopped state. The running container will be stopped while the clone operation is happening and upon completion of the clone the original container state will be restored."
                    ],
                    "choices": [
                        "started",
                        "stopped",
                        "restarted",
                        "absent",
                        "frozen"
                    ]
                },
                "thinpool": {
                    "required": false,
                    "description": [
                        "Use LVM thin pool called TP."
                    ]
                },
                "template": {
                    "default": "ubuntu",
                    "required": false,
                    "description": [
                        "Name of the template to use within an LXC create."
                    ]
                },
                "directory": {
                    "required": false,
                    "description": [
                        "Place rootfs directory under DIR."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the LXC configuration file."
                    ]
                }
            },
            "module": "lxc_container"
        },
        {
            "short_description": "Package manager for MacPorts",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "active",
                        "inactive"
                    ]
                },
                "update_cache": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "update the package db first"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of package to install/remove"
                    ]
                }
            },
            "module": "macports"
        },
        {
            "short_description": "Send an email",
            "deprecated": null,
            "options": {
                "body": {
                    "default": "$subject",
                    "required": false,
                    "description": [
                        "The body of the email being sent."
                    ]
                },
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If SMTP requires username"
                    ],
                    "version_added": "1.9"
                },
                "from": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "The email-address the mail is sent from. May contain address and phrase."
                    ]
                },
                "to": {
                    "default": "root",
                    "required": false,
                    "description": [
                        "The email-address(es) the mail is being sent to. This is a comma-separated list, which may contain address and phrase portions."
                    ]
                },
                "headers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A vertical-bar-separated list of headers which should be added to the message. Each individual header is specified as C(header=value) (see example below)."
                    ],
                    "version_added": "1.0"
                },
                "cc": {
                    "required": false,
                    "description": [
                        "The email-address(es) the mail is being copied to. This is a comma-separated list, which may contain address and phrase portions."
                    ]
                },
                "charset": {
                    "default": "us-ascii",
                    "required": false,
                    "description": [
                        "The character set of email being sent"
                    ]
                },
                "bcc": {
                    "required": false,
                    "description": [
                        "The email-address(es) the mail is being 'blind' copied to. This is a comma-separated list, which may contain address and phrase portions."
                    ]
                },
                "attach": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A space-separated list of pathnames of files to attach to the message. Attached files will have their content-type set to C(application/octet-stream)."
                    ],
                    "version_added": "1.0"
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "The mail server"
                    ]
                },
                "subtype": {
                    "default": "plain",
                    "required": false,
                    "description": [
                        "The minor mime type, can be either text or html. The major type is always text."
                    ],
                    "version_added": "2.0"
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If SMTP requires password"
                    ],
                    "version_added": "1.9"
                },
                "port": {
                    "default": "25",
                    "required": false,
                    "description": [
                        "The mail server port"
                    ],
                    "version_added": "1.0"
                },
                "subject": {
                    "required": true,
                    "description": [
                        "The subject of the email being sent."
                    ]
                }
            },
            "module": "mail"
        },
        {
            "short_description": "Run targets in a Makefile",
            "deprecated": null,
            "options": {
                "chdir": {
                    "required": true,
                    "description": [
                        "cd into this directory before running make"
                    ]
                },
                "params": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Any extra parameters to pass to make"
                    ]
                },
                "target": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "The target to run"
                    ]
                }
            },
            "module": "make"
        },
        {
            "short_description": "Downloads an Artifact from a Maven Repository",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username to authenticate as to the Maven Repository"
                    ]
                },
                "group_id": {
                    "required": true,
                    "description": [
                        "The Maven groupId coordinate"
                    ]
                },
                "artifact_id": {
                    "required": true,
                    "description": [
                        "The maven artifactId coordinate"
                    ]
                },
                "extension": {
                    "default": "jar",
                    "required": false,
                    "description": [
                        "The maven type/extension coordinate"
                    ]
                },
                "dest": {
                    "default": false,
                    "required": true,
                    "description": [
                        "The path where the artifact should be written to"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "The desired state of the artifact"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "version": {
                    "default": "latest",
                    "required": false,
                    "description": [
                        "The maven version coordinate"
                    ]
                },
                "repository_url": {
                    "default": "http://repo1.maven.org/maven2",
                    "required": false,
                    "description": [
                        "The URL of the Maven Repository to download from"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password to authenticate with to the Maven Repository"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be set to C(no) when no other option exists."
                    ],
                    "version_added": "1.9.3",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "classifier": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The maven classifier coordinate"
                    ]
                }
            },
            "module": "maven_artifact"
        },
        {
            "short_description": "Add or remove kernel modules",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the module should be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "params": {
                    "default": "",
                    "required": false,
                    "description": [
                        "Modules parameters."
                    ],
                    "version_added": "1.6"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of kernel module to manage."
                    ]
                }
            },
            "module": "modprobe"
        },
        {
            "short_description": "Change an administrative parameter on a MongoDB server.",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 27017,
                    "required": false,
                    "description": [
                        "The port to connect to"
                    ]
                },
                "database": {
                    "required": true,
                    "description": [
                        "The name of the database to add/remove the user from"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "The host running the database"
                    ]
                },
                "login_database": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The database where login credentials are stored"
                    ]
                },
                "param": {
                    "required": true,
                    "description": [
                        "MongoDB administrative parameter to modify"
                    ]
                },
                "ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to use an SSL connection when connecting to the database"
                    ]
                },
                "param_type": {
                    "default": "str",
                    "required": false,
                    "description": [
                        "Define the parameter value (str, int)"
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "MongoDB administrative parameter value to set"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "replica_set": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Replica set to connect to (automatically connects to primary for writes)"
                    ]
                }
            },
            "module": "mongodb_parameter"
        },
        {
            "short_description": "Adds or removes a user from a MongoDB database.",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 27017,
                    "required": false,
                    "description": [
                        "The port to connect to"
                    ]
                },
                "update_password": {
                    "default": "always",
                    "required": false,
                    "description": [
                        "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "always",
                        "on_create"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The name of the user to add or remove"
                    ],
                    "aliases": [
                        "user"
                    ]
                },
                "roles": {
                    "default": "readWrite",
                    "required": false,
                    "description": [
                        "The database user roles valid values could either be one or more of the following strings: 'read', 'readWrite', 'dbAdmin', 'userAdmin', 'clusterAdmin', 'readAnyDatabase', 'readWriteAnyDatabase', 'userAdminAnyDatabase', 'dbAdminAnyDatabase'",
                        "Or the following dictionary '{ db: DATABASE_NAME, role: ROLE_NAME }'.",
                        "This param requires pymongo 2.5+. If it is a string, mongodb 2.4+ is also required. If it is a dictionary, mongo 2.6+  is required."
                    ],
                    "version_added": "1.3"
                },
                "database": {
                    "required": true,
                    "description": [
                        "The name of the database to add/remove the user from"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "The host running the database"
                    ]
                },
                "login_database": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The database where login credentials are stored"
                    ],
                    "version_added": "2.0"
                },
                "ssl": {
                    "default": false,
                    "description": [
                        "Whether to use an SSL connection when connecting to the database"
                    ],
                    "version_added": "1.8"
                },
                "state": {
                    "default": "present",
                    "state": null,
                    "required": false,
                    "description": [
                        "The database user state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password to use for the user"
                    ]
                },
                "replica_set": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Replica set to connect to (automatically connects to primary for writes)"
                    ],
                    "version_added": "1.6"
                }
            },
            "module": "mongodb_user"
        },
        {
            "short_description": "Manage the state of a program monitored via Monit",
            "deprecated": null,
            "options": {
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The state of service"
                    ],
                    "choices": [
                        "present",
                        "started",
                        "stopped",
                        "restarted",
                        "monitored",
                        "unmonitored",
                        "reloaded"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The name of the I(monit) program/process to manage"
                    ]
                },
                "timeout": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "If there are pending actions for the service monitored by monit, then Ansible will check for up to this many seconds to verify the the requested action has been performed. Ansible will sleep for five seconds between each check."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "monit"
        },
        {
            "short_description": "Control active and configured mount points",
            "deprecated": null,
            "options": {
                "src": {
                    "required": true,
                    "description": [
                        "device to be mounted on I(name)."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "path to the mount point, eg: C(/mnt/files)"
                    ]
                },
                "dump": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "dump (see fstab(5)), Note that if nulled, C(state=present) will cease to work and duplicate entries will be made with subsequent runs."
                    ]
                },
                "fstab": {
                    "default": "/etc/fstab",
                    "required": false,
                    "description": [
                        "file to use instead of C(/etc/fstab). You shouldn't use that option unless you really know what you are doing. This might be useful if you need to configure mountpoints in a chroot environment."
                    ]
                },
                "passno": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "passno (see fstab(5)), Note that if nulled, C(state=present) will cease to work and duplicate entries will be made with subsequent runs."
                    ]
                },
                "fstype": {
                    "required": true,
                    "description": [
                        "file-system type"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "If C(mounted) or C(unmounted), the device will be actively mounted or unmounted as needed and appropriately configured in I(fstab).",
                        "C(absent) and C(present) only deal with I(fstab) but will not affect current mounting.",
                        "If specifying C(mounted) and the mount point is not present, the mount point will be created. Similarly.",
                        "Specifying C(absent) will remove the mount point directory."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "mounted",
                        "unmounted"
                    ]
                },
                "opts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mount options (see fstab(5))"
                    ]
                }
            },
            "module": "mount"
        },
        {
            "short_description": "Publish a message on an MQTT topic for the IoT",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Username to authenticate against the broker."
                    ]
                },
                "qos": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "QoS (Quality of Service)"
                    ],
                    "choices": [
                        "0",
                        "1",
                        "2"
                    ]
                },
                "port": {
                    "default": 1883,
                    "required": false,
                    "description": [
                        "MQTT broker port number"
                    ]
                },
                "server": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "MQTT broker address/name"
                    ]
                },
                "topic": {
                    "default": null,
                    "required": true,
                    "description": [
                        "MQTT topic name"
                    ]
                },
                "client_id": {
                    "default": "hostname + pid",
                    "required": false,
                    "description": [
                        "MQTT client identifier"
                    ]
                },
                "retain": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Setting this flag causes the broker to retain (i.e. keep) the message so that applications that subsequently subscribe to the topic can received the last retained message immediately."
                    ]
                },
                "password": {
                    "required": false,
                    "description": [
                        "Password for C(username) to authenticate against the broker."
                    ]
                },
                "payload": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Payload. The special string C(\"None\") may be used to send a NULL (i.e. empty) payload which is useful to simply notify with the I(topic) or to clear previously retained messages."
                    ]
                }
            },
            "module": "mqtt"
        },
        {
            "short_description": "Add or remove MySQL databases from a remote host.",
            "deprecated": null,
            "options": {
                "ssl_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the client private key."
                    ],
                    "version_added": "2.0"
                },
                "config_file": {
                    "default": "~/.my.cnf",
                    "required": false,
                    "description": [
                        "Specify a config file from which user and password are to be read"
                    ],
                    "version_added": "2.0"
                },
                "encoding": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Encoding mode to use, examples include C(utf8) or C(latin1_swedish_ci)"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Unix domain socket for local connections"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "collation": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Collation mode (sorting). This only applies to new table/databases and does not update existing ones, this is a limitation of MySQL."
                    ]
                },
                "ssl_ca": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as used by the server."
                    ],
                    "version_added": "2.0"
                },
                "single_transaction": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Execute the dump in a single transaction"
                    ],
                    "version_added": "2.1"
                },
                "login_port": {
                    "default": 3306,
                    "required": false,
                    "description": [
                        "Port of the MySQL server. Requires login_host be defined as other then localhost if login_port is used"
                    ]
                },
                "ssl_cert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a client public key certificate."
                    ],
                    "version_added": "2.0"
                },
                "target": {
                    "required": false,
                    "description": [
                        "Location, on the remote host, of the dump file to read from or write to. Uncompressed SQL files (C(.sql)) as well as bzip2 (C(.bz2)), gzip (C(.gz)) and xz (Added in 2.0) compressed files are supported."
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the database to add or remove",
                        "name=all May only be provided if I(state) is C(dump) or C(import).",
                        "if name=all Works like --all-databases option for mysqldump (Added in 2.0)"
                    ],
                    "aliases": [
                        "db"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The database state"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "dump",
                        "import"
                    ]
                },
                "quick": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Option used for dumping large tables"
                    ],
                    "version_added": "2.1"
                },
                "connect_timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "The connection timeout when connecting to the MySQL server."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "mysql_db"
        },
        {
            "short_description": "Manage MySQL replication",
            "deprecated": null,
            "options": {
                "master_ssl_cert": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_auto_position": {
                    "default": null,
                    "required": false,
                    "description": [
                        "does the host uses GTID based replication or not"
                    ],
                    "version_added": "2.0"
                },
                "config_file": {
                    "default": "~/.my.cnf",
                    "required": false,
                    "description": [
                        "Specify a config file from which user and password are to be read"
                    ],
                    "version_added": "2.0"
                },
                "master_password": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_host": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "master_ssl_capath": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_ssl_ca": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Unix domain socket for local connections"
                    ]
                },
                "master_connect_retry": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_user": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_port": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_log_file": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "master_ssl_cipher": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "relay_log_file": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "login_port": {
                    "default": 3306,
                    "required": false,
                    "description": [
                        "Port of the MySQL server. Requires login_host be defined as other then localhost if login_port is used"
                    ]
                },
                "ssl_cert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a client public key certificate."
                    ],
                    "version_added": "2.0"
                },
                "master_ssl": {
                    "description": [
                        "same as mysql variable"
                    ],
                    "choices": [
                        0,
                        1
                    ]
                },
                "ssl_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the client private key."
                    ],
                    "version_added": "2.0"
                },
                "ssl_ca": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as used by the server."
                    ],
                    "version_added": "2.0"
                },
                "master_ssl_key": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "mode": {
                    "default": "getslave",
                    "required": false,
                    "description": [
                        "module operating mode. Could be getslave (SHOW SLAVE STATUS), getmaster (SHOW MASTER STATUS), changemaster (CHANGE MASTER TO), startslave (START SLAVE), stopslave (STOP SLAVE), resetslave (RESET SLAVE), resetslaveall (RESET SLAVE ALL)"
                    ],
                    "choices": [
                        "getslave",
                        "getmaster",
                        "changemaster",
                        "stopslave",
                        "startslave",
                        "resetslave",
                        "resetslaveall"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "master_log_pos": {
                    "description": [
                        "same as mysql variable"
                    ]
                },
                "connect_timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "The connection timeout when connecting to the MySQL server."
                    ],
                    "version_added": "2.1"
                },
                "relay_log_pos": {
                    "description": [
                        "same as mysql variable"
                    ]
                }
            },
            "module": "mysql_replication"
        },
        {
            "short_description": "Adds or removes a user from a MySQL database.",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 3306,
                    "required": false,
                    "description": [
                        "Port of the MySQL server. Requires login_host be defined as other then localhost if login_port is used"
                    ]
                },
                "update_password": {
                    "default": "always",
                    "required": false,
                    "description": [
                        "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "always",
                        "on_create"
                    ]
                },
                "ssl_cert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a client public key certificate."
                    ],
                    "version_added": "2.0"
                },
                "config_file": {
                    "default": "~/.my.cnf",
                    "required": false,
                    "description": [
                        "Specify a config file from which user and password are to be read"
                    ],
                    "version_added": "2.0"
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the user (role) to add or remove"
                    ]
                },
                "ssl_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the client private key."
                    ],
                    "version_added": "2.0"
                },
                "encrypted": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Indicate that the 'password' field is a `mysql_native_password` hash"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                },
                "append_privs": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Append the privileges defined by priv to the existing ones for this user instead of overwriting existing ones."
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "sql_log_bin": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether binary logging should be enabled or disabled for the connection."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host_all": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "override the host option, making ansible apply changes to all hostnames for a given user.  This option cannot be used when creating users"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssl_ca": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as used by the server."
                    ],
                    "version_added": "2.0"
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Unix domain socket for local connections"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the user should exist.  When C(absent), removes the user."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "the 'host' part of the MySQL username"
                    ]
                },
                "check_implicit_admin": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Check if mysql allows login as root/nopassword before trying supplied credentials."
                    ],
                    "version_added": "1.3",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "set the user's password."
                    ]
                },
                "connect_timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "The connection timeout when connecting to the MySQL server."
                    ],
                    "version_added": "2.1"
                },
                "priv": {
                    "default": null,
                    "required": false,
                    "description": [
                        "MySQL privileges string in the format: C(db.table:priv1,priv2)"
                    ]
                }
            },
            "module": "mysql_user"
        },
        {
            "short_description": "Manage MySQL global variables",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 3306,
                    "required": false,
                    "description": [
                        "Port of the MySQL server. Requires login_host be defined as other then localhost if login_port is used"
                    ]
                },
                "ssl_cert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a client public key certificate."
                    ],
                    "version_added": "2.0"
                },
                "config_file": {
                    "default": "~/.my.cnf",
                    "required": false,
                    "description": [
                        "Specify a config file from which user and password are to be read"
                    ],
                    "version_added": "2.0"
                },
                "ssl_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the client private key."
                    ],
                    "version_added": "2.0"
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                },
                "value": {
                    "required": false,
                    "description": [
                        "If set, then sets variable value to this"
                    ]
                },
                "ssl_ca": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Certificate Authority (CA) certificate. This option, if used, must specify the same certificate as used by the server."
                    ],
                    "version_added": "2.0"
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a Unix domain socket for local connections"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "variable": {
                    "required": true,
                    "description": [
                        "Variable name to operate"
                    ]
                },
                "connect_timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "The connection timeout when connecting to the MySQL server."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "mysql_variables"
        },
        {
            "short_description": "Perform common tasks in Nagios related to downtime and notifications.",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": "Scheduling downtime",
                    "required": false,
                    "description": [
                        "Comment for C(downtime) action."
                    ],
                    "version_added": "2.0"
                },
                "servicegroup": {
                    "description": [
                        "The Servicegroup we want to set downtimes/alerts for. B(Required) option when using the C(servicegroup_service_downtime) amd C(servicegroup_host_downtime)."
                    ],
                    "version_added": "2.0"
                },
                "author": {
                    "default": "Ansible",
                    "required": false,
                    "description": [
                        "Author to leave downtime comments as. Only usable with the C(downtime) action."
                    ]
                },
                "action": {
                    "required": true,
                    "description": [
                        "Action to take.",
                        "servicegroup options were added in 2.0."
                    ],
                    "choices": [
                        "downtime",
                        "enable_alerts",
                        "disable_alerts",
                        "silence",
                        "unsilence",
                        "silence_nagios",
                        "unsilence_nagios",
                        "command",
                        "servicegroup_service_downtime",
                        "servicegroup_host_downtime"
                    ]
                },
                "host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Host to operate on in Nagios."
                    ]
                },
                "command": {
                    "required": true,
                    "description": [
                        "The raw command to send to nagios, which should not include the submitted time header or the line-feed B(Required) option when using the C(command) action."
                    ]
                },
                "services": {
                    "required": true,
                    "description": [
                        "What to manage downtime/alerts for. Separate multiple services with commas. C(service) is an alias for C(services). B(Required) option when using the C(downtime), C(enable_alerts), and C(disable_alerts) actions."
                    ],
                    "aliases": [
                        "service"
                    ]
                },
                "minutes": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "Minutes to schedule downtime for.",
                        "Only usable with the C(downtime) action."
                    ]
                },
                "cmdfile": {
                    "default": "auto-detected",
                    "required": false,
                    "description": [
                        "Path to the nagios I(command file) (FIFO pipe). Only required if auto-detection fails."
                    ]
                }
            },
            "module": "nagios"
        },
        {
            "short_description": "Manages Citrix NetScaler entities",
            "deprecated": null,
            "options": {
                "name": {
                    "default": "hostname",
                    "required": true,
                    "description": [
                        "name of the entity"
                    ],
                    "aliases": []
                },
                "type": {
                    "default": "server",
                    "choices": [
                        "server",
                        "service"
                    ],
                    "required": false,
                    "description": [
                        "type of the entity"
                    ],
                    "aliases": []
                },
                "nsc_protocol": {
                    "default": "https",
                    "required": false,
                    "description": [
                        "protocol used to access netscaler"
                    ],
                    "aliases": []
                },
                "nsc_host": {
                    "default": null,
                    "required": true,
                    "description": [
                        "hostname or ip of your netscaler"
                    ],
                    "aliases": []
                },
                "user": {
                    "default": null,
                    "required": true,
                    "description": [
                        "username"
                    ],
                    "aliases": []
                },
                "action": {
                    "default": "disable",
                    "choices": [
                        "enable",
                        "disable"
                    ],
                    "required": false,
                    "description": [
                        "the action you want to perform on the entity"
                    ],
                    "aliases": []
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "password"
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "netscaler"
        },
        {
            "short_description": "Notify newrelic about app deployments",
            "deprecated": null,
            "options": {
                "application_id": {
                    "required": false,
                    "description": [
                        "(one of app_name or application_id are required) The application id, found in the URL when viewing the application in RPM"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "Text annotation for the deployment - notes for you"
                    ]
                },
                "changelog": {
                    "required": false,
                    "description": [
                        "A list of changes for this deployment"
                    ]
                },
                "appname": {
                    "required": false,
                    "description": [
                        "Name of the application"
                    ]
                },
                "environment": {
                    "required": false,
                    "description": [
                        "The environment for this deployment"
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "API token, to place in the x-api-key header."
                    ]
                },
                "user": {
                    "required": false,
                    "description": [
                        "The name of the user/process that triggered this deployment"
                    ]
                },
                "revision": {
                    "required": false,
                    "description": [
                        "A revision number (e.g., git commit SHA)"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "app_name": {
                    "required": false,
                    "description": [
                        "(one of app_name or application_id are required) The value of app_name in the newrelic.yml file used by the application"
                    ]
                }
            },
            "module": "newrelic_deployment"
        },
        {
            "short_description": "Send a SMS via nexmo",
            "deprecated": null,
            "options": {
                "src": {
                    "required": true,
                    "description": [
                        "Nexmo Number to send from"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "Phone number(s) to send SMS message to"
                    ]
                },
                "api_secret": {
                    "required": true,
                    "description": [
                        "Nexmo API Secret"
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "Nexmo API Key"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "msg": {
                    "required": true,
                    "description": [
                        "Message to text to send. Messages longer than 160 characters will be split into multiple messages"
                    ]
                }
            },
            "module": "nexmo"
        },
        {
            "short_description": "Manage Networking",
            "deprecated": null,
            "options": {
                "conn_name": {
                    "required": true,
                    "description": [
                        "Where conn_name will be the name used to call the connection. when not provided a default name is generated: <type>[-<ifname>][-<num>]"
                    ]
                },
                "ingress": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with VLAN - VLAN ingress priority mapping"
                    ]
                },
                "slavepriority": {
                    "default": 32,
                    "required": false,
                    "description": [
                        "This is only used with 'bridge-slave' - [<0-63>] - STP priority of this slave"
                    ]
                },
                "path_cost": {
                    "default": 100,
                    "required": false,
                    "description": [
                        "This is only used with 'bridge-slave' - [<1-65535>] - STP port cost for destinations via this slave"
                    ]
                },
                "vlandev": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with VLAN - parent device this VLAN is on, can use ifname"
                    ]
                },
                "forwarddelay": {
                    "default": 15,
                    "required": false,
                    "description": [
                        "This is only used with bridge - [forward-delay <2-30>] STP forwarding delay, in seconds"
                    ]
                },
                "primary": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bond and is the primary interface name (for \"active-backup\" mode), this is the usually the 'ifname'"
                    ]
                },
                "hairpin": {
                    "default": true,
                    "required": false,
                    "description": [
                        "This is only used with 'bridge-slave' - 'hairpin mode' for the slave, which allows frames to be sent back out through the slave the frame was received on."
                    ]
                },
                "egress": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with VLAN - VLAN egress priority mapping"
                    ]
                },
                "ageingtime": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "This is only used with bridge - [ageing-time <0-1000000>] the Ethernet MAC address aging time, in seconds"
                    ]
                },
                "dns4": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of upto 3 dns servers, ipv4 format e.g. To add two IPv4 DNS server addresses: [\"8.8.8.8 8.8.4.4\"]"
                    ]
                },
                "arp_ip_target": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bond - ARP IP target"
                    ]
                },
                "maxage": {
                    "default": 20,
                    "required": false,
                    "description": [
                        "This is only used with bridge - [max-age <6-42>] STP maximum message age, in seconds"
                    ]
                },
                "vlanid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with VLAN - VLAN ID in range <0-4095>"
                    ]
                },
                "priority": {
                    "default": 128,
                    "required": false,
                    "description": [
                        "This is only used with 'bridge' - sets STP priority"
                    ]
                },
                "gw4": {
                    "required": false,
                    "description": [
                        "The IPv4 gateway for this interface using this format ie: \"192.168.100.1\""
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Whether the device should exist or not, taking action if the state is different from what is stated."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "gw6": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The IPv6 gateway for this interface using this format ie: \"2001:db8::1\""
                    ]
                },
                "master": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "master <master (ifname, or connection UUID or conn_name) of bridge, team, bond master connection profile."
                    ]
                },
                "stp": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bridge and controls whether Spanning Tree Protocol (STP) is enabled for this bridge"
                    ]
                },
                "ifname": {
                    "default": "conn_name",
                    "required": false,
                    "description": [
                        "Where IFNAME will be the what we call the interface name.",
                        "interface to bind the connection to. The connection will only be applicable to this interface name.",
                        "A special value of \"*\" can be used for interface-independent connections.",
                        "The ifname argument is mandatory for all connection types except bond, team, bridge and vlan."
                    ]
                },
                "type": {
                    "required": false,
                    "description": [
                        "This is the type of device or network connection that you wish to create."
                    ],
                    "choices": [
                        "ethernet",
                        "team",
                        "team-slave",
                        "bond",
                        "bond-slave",
                        "bridge",
                        "vlan"
                    ]
                },
                "miimon": {
                    "default": 100,
                    "required": false,
                    "description": [
                        "This is only used with bond - miimon"
                    ]
                },
                "hellotime": {
                    "default": 2,
                    "required": false,
                    "description": [
                        "This is only used with bridge - [hello-time <1-10>] STP hello time, in seconds"
                    ]
                },
                "downdelay": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bond - downdelay"
                    ]
                },
                "mac": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bridge - MAC address of the bridge (note: this requires a recent kernel feature, originally introduced in 3.15 upstream kernel)"
                    ]
                },
                "ip6": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The IPv6 address to this interface using this format ie: \"abbe::cafe\""
                    ]
                },
                "ip4": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The IPv4 address to this interface using this format ie: \"192.168.1.24/24\""
                    ]
                },
                "autoconnect": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether the connection should start on boot.",
                        "Whether the connection profile can be automatically activated"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dns6": {
                    "required": false,
                    "description": [
                        "A list of upto 3 dns servers, ipv6 format e.g. To add two IPv6 DNS server addresses: [\"2001:4860:4860::8888 2001:4860:4860::8844\"]"
                    ]
                },
                "mtu": {
                    "default": 1500,
                    "required": false,
                    "description": [
                        "The connection MTU, e.g. 9000. This can't be applied when creating the interface and is done once the interface has been created.",
                        "Can be used when modifying Team, VLAN, Ethernet (Future plans to implement wifi, pppoe, infiniband)"
                    ]
                },
                "arp_interval": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bond - ARP interval"
                    ]
                },
                "flags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with VLAN - flags"
                    ]
                },
                "mode": {
                    "default": "balence-rr",
                    "required": false,
                    "description": [
                        "This is the type of device or network connection that you wish to create for a bond, team or bridge."
                    ],
                    "choices": [
                        "balance-rr",
                        "active-backup",
                        "balance-xor",
                        "broadcast",
                        "802.3ad",
                        "balance-tlb",
                        "balance-alb"
                    ]
                },
                "updelay": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "This is only used with bond - updelay"
                    ]
                }
            },
            "module": "nmcli"
        },
        {
            "short_description": "Manage node.js packages with npm",
            "deprecated": null,
            "options": {
                "executable": {
                    "required": false,
                    "description": [
                        "The executable location for npm.",
                        "This is useful if you are using a version manager, such as nvm"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "The name of a node.js library to install"
                    ]
                },
                "global": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Install the node.js library globally"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ignore_scripts": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Use the --ignore-scripts flag when installing."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of the node.js library"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "production": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Install dependencies in production mode, excluding devDependencies"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "registry": {
                    "required": false,
                    "description": [
                        "The registry to install modules from."
                    ],
                    "version_added": "1.6"
                },
                "version": {
                    "required": false,
                    "description": [
                        "The version to be installed"
                    ]
                },
                "path": {
                    "required": false,
                    "description": [
                        "The base path where to install the node.js libraries"
                    ]
                }
            },
            "module": "npm"
        },
        {
            "short_description": "Run arbitrary command on Cisco NXOS devices",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed.  The command is run on the target device every retry and evaluated against the waitfor conditionals"
                    ]
                },
                "commands": {
                    "required": true,
                    "description": [
                        "The commands to send to the remote NXOS device over the configured provider.  The resulting output from the command is returned.  If the I(waitfor) argument is provided, the module is not returned until the condition is satisfied or the number of retires as expired."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command.  If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again."
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.   If the conditional is not true by the configured retries, the task fails.  See examples."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_command"
        },
        {
            "short_description": "Manage Cisco NXOS configuration sections",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "after": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a changed needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
                    ]
                },
                "lines": {
                    "required": true,
                    "description": [
                        "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
                    ]
                },
                "replace": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct"
                    ],
                    "choices": [
                        "line",
                        "block"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "parents": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "match": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  Finally if match is set to I(exact), command lines must be an equal match."
                    ],
                    "choices": [
                        "line",
                        "strict",
                        "exact"
                    ]
                },
                "before": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system"
                    ]
                }
            },
            "module": "nxos_config"
        },
        {
            "short_description": "Gets facts about NX-OS switches",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_facts"
        },
        {
            "short_description": "Manage features in NX-OS switches",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "feature": {
                    "required": true,
                    "description": [
                        "Name of feature"
                    ]
                },
                "state": {
                    "default": "enabled",
                    "required": false,
                    "description": [
                        "Desired state of the feature"
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_feature"
        },
        {
            "short_description": "Manages physical attributes of interfaces",
            "deprecated": null,
            "options": {
                "interface": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Full name of interface, i.e. Ethernet1/1, port-channel10."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Specify desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "default"
                    ]
                },
                "admin_state": {
                    "default": "up",
                    "required": false,
                    "description": [
                        "Administrative state of the interface"
                    ],
                    "choices": [
                        "up",
                        "down"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Interface description"
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Manage Layer 2 or Layer 3 state of the interface"
                    ],
                    "choices": [
                        "layer2",
                        "layer3"
                    ]
                }
            },
            "module": "nxos_interface"
        },
        {
            "short_description": "Manages L3 attributes for IPv4 and IPv6 interfaces",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "addr": {
                    "default": null,
                    "required": false,
                    "description": [
                        "IPv4 or IPv6 Address"
                    ]
                },
                "mask": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Subnet mask for IPv4 or IPv6 Address in decimal format"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "interface": {
                    "required": true,
                    "description": [
                        "Full name of interface, i.e. Ethernet1/1, vlan10"
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_ip_interface"
        },
        {
            "short_description": "Manage NXAPI configuration on an NXOS device.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "http_port": {
                    "default": 80,
                    "required": false,
                    "description": [
                        "Port on which the HTTP server will listen."
                    ]
                },
                "http": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable/disable HTTP server."
                    ],
                    "aliases": [
                        "enable_http"
                    ]
                },
                "https_port": {
                    "default": 443,
                    "required": false,
                    "description": [
                        "Port on which the HTTPS server will listen."
                    ]
                },
                "sandbox": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable/disable NXAPI web based UI for entering commands."
                    ],
                    "aliases": [
                        "enable_sandbox"
                    ]
                },
                "state": {
                    "default": "started",
                    "choices": [
                        "started",
                        "stopped"
                    ],
                    "requred": false,
                    "description": [
                        "Set to started or stopped. A state of started will enable NXAPI access, and a state of stopped will disable or shutdown all NXAPI access."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "https": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable/disable HTTPS server."
                    ],
                    "aliases": [
                        "enable_https"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_nxapi"
        },
        {
            "short_description": "Tests reachability using ping from Nexus switch",
            "deprecated": null,
            "options": {
                "count": {
                    "default": 2,
                    "required": false,
                    "description": [
                        "Number of packets to send"
                    ]
                },
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "IP address or hostname (resolvable by switch) of remote node"
                    ]
                },
                "source": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Source IP Address"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "vrf": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Outgoing VRF"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_ping"
        },
        {
            "short_description": "Manages Layer 2 switchport interfaces",
            "deprecated": null,
            "options": {
                "native_vlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "if mode=trunk, used as the trunk native vlan id"
                    ]
                },
                "access_vlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "if mode=access, used as the access vlan id"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "trunk_vlans": {
                    "default": null,
                    "required": false,
                    "description": [
                        "if mode=trunk, used as the vlan range to ADD or REMOVE from the trunk"
                    ]
                },
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Manage the state of the resource."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "unconfigured"
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Mode for the Layer 2 port"
                    ],
                    "choices": [
                        "access",
                        "trunk"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "interface": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Full name of the interface, i.e. Ethernet1/1"
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_switchport"
        },
        {
            "short_description": "Manage Cisco NXOS device configurations",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "include_defaults": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The module, by default, will collect the current device running-config to use as a base for comparision to the commands in I(src).  Setting this value to true will cause the module to issue the command `show running-config all` to include all device settings."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_template"
        },
        {
            "short_description": "Manages VLAN resources and attributes",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "vlan_state": {
                    "default": "active",
                    "required": false,
                    "description": [
                        "Manage the vlan operational state of the VLAN (equivalent to state {active | suspend} command"
                    ],
                    "choices": [
                        "active",
                        "suspend"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of VLAN"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Manage the state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "admin_state": {
                    "default": "up",
                    "required": false,
                    "description": [
                        "Manage the vlan admin state of the VLAN equivalent to shut/no shut in vlan config mode"
                    ],
                    "choices": [
                        "up",
                        "down"
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "vlan_range": {
                    "default": null,
                    "required": false,
                    "description": [
                        "range of VLANs such as 2-10 or 2,5,10-15, etc."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "vlan_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "single vlan id"
                    ]
                }
            },
            "module": "nxos_vlan"
        },
        {
            "short_description": "Manages global VRF configuration",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the VRF"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Manages desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "admin_state": {
                    "default": "up",
                    "required": false,
                    "description": [
                        "Administrative state of the VRF"
                    ],
                    "choices": [
                        "up",
                        "down"
                    ]
                },
                "vrf": {
                    "required": true,
                    "description": [
                        "Name of VRF to be managed"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_vrf"
        },
        {
            "short_description": "Manages interface specific VRF configuration",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Manages desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "vrf": {
                    "required": true,
                    "description": [
                        "Name of VRF to be managed"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "interface": {
                    "required": true,
                    "description": [
                        "Full name of interface to be managed, i.e. Ethernet1/1"
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_vrf_interface"
        },
        {
            "short_description": "Manages VRRP configuration on NX-OS switches",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "group": {
                    "required": true,
                    "description": [
                        "vrrp group number"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "vip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "hsrp virtual IP address"
                    ]
                },
                "authentication": {
                    "default": null,
                    "required": false,
                    "description": [
                        "clear text authentication string"
                    ]
                },
                "priority": {
                    "default": null,
                    "required": false,
                    "description": [
                        "vrrp priority"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "interface": {
                    "required": true,
                    "description": [
                        "Full name of interface that is being managed for vrrp"
                    ]
                },
                "use_ssl": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as nxapi.  If the transport argument is not nxapi, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
                    ]
                },
                "transport": {
                    "default": "cli",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
                    ]
                }
            },
            "module": "nxos_vrrp"
        },
        {
            "short_description": "Returns inventory data from I(Ohai)",
            "deprecated": null,
            "options": {},
            "module": "ohai"
        },
        {
            "short_description": "Manage iscsi targets with open-iscsi",
            "deprecated": null,
            "options": {
                "auto_node_startup": {
                    "aliases": [
                        "automatic"
                    ],
                    "required": false,
                    "description": [
                        "whether the target node should be automatically connected at startup"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "target": {
                    "required": false,
                    "description": [
                        "the iscsi target name"
                    ],
                    "aliases": [
                        "name",
                        "targetname"
                    ]
                },
                "show_nodes": {
                    "required": false,
                    "description": [
                        "whether the list of nodes in the persistent iscsi database should be returned by the module"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "node_auth": {
                    "default": "CHAP",
                    "required": false,
                    "description": [
                        "discovery.sendtargets.auth.authmethod"
                    ]
                },
                "node_pass": {
                    "required": false,
                    "description": [
                        "discovery.sendtargets.auth.password"
                    ]
                },
                "discover": {
                    "required": false,
                    "description": [
                        "whether the list of target nodes on the portal should be (re)discovered and added to the persistent iscsi database. Keep in mind that iscsiadm discovery resets configurtion, like node.startup to manual, hence combined with auto_node_startup=yes will allways return a changed state."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "portal": {
                    "required": false,
                    "description": [
                        "the ip address of the iscsi target"
                    ],
                    "aliases": [
                        "ip"
                    ]
                },
                "login": {
                    "required": false,
                    "description": [
                        "whether the target node should be connected"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "node_user": {
                    "required": false,
                    "description": [
                        "discovery.sendtargets.auth.username"
                    ]
                },
                "port": {
                    "default": 3260,
                    "required": false,
                    "description": [
                        "the port on which the iscsi target process listens"
                    ]
                }
            },
            "module": "open_iscsi"
        },
        {
            "short_description": "Manage packages on OpenBSD.",
            "deprecated": null,
            "options": {
                "build": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Build the package from source instead of downloading and installing a binary. Requires that the port source tree is already installed. Automatically builds and installs the 'sqlports' package, if it is not already installed."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        true,
                        false
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "C(present) will make sure the package is installed. C(latest) will make sure the latest version of the package is installed. C(absent) will make sure the specified package is not installed."
                    ],
                    "choices": [
                        "present",
                        "latest",
                        "absent"
                    ]
                },
                "ports_dir": {
                    "default": "/usr/ports",
                    "required": false,
                    "description": [
                        "When used in combination with the 'build' option, allows overriding the default ports source directory."
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the package."
                    ]
                }
            },
            "module": "openbsd_pkg"
        },
        {
            "short_description": "Manage Open vSwitch bridges",
            "deprecated": null,
            "options": {
                "bridge": {
                    "required": true,
                    "description": [
                        "Name of bridge to manage"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the bridge should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "fail_mode": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Set bridge fail-mode. The default value (None) is a No-op."
                    ],
                    "version_added": 2.0,
                    "choices": [
                        "secure",
                        "standalone"
                    ]
                },
                "external_ids": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A dictionary of external-ids. Omitting this parameter is a No-op. To  clear all external-ids pass an empty value."
                    ],
                    "version_added": 2.0
                },
                "timeout": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "How long to wait for ovs-vswitchd to respond"
                    ]
                }
            },
            "module": "openvswitch_bridge"
        },
        {
            "short_description": "Configure open vswitch database.",
            "deprecated": null,
            "options": {
                "record": {
                    "required": true,
                    "description": [
                        "Identifies the recoard in the table."
                    ]
                },
                "timeout": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "How long to wait for ovs-vswitchd to respond"
                    ]
                },
                "key": {
                    "required": true,
                    "description": [
                        "Identifies the key in the record column"
                    ]
                },
                "column": {
                    "required": true,
                    "description": [
                        "Identifies the column in the record."
                    ]
                },
                "table": {
                    "required": true,
                    "description": [
                        "Identifies the table in the database."
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "Expected value for the table, record, column and key."
                    ]
                }
            },
            "module": "openvswitch_db"
        },
        {
            "short_description": "Manage Open vSwitch ports",
            "deprecated": null,
            "options": {
                "bridge": {
                    "required": true,
                    "description": [
                        "Name of bridge to manage"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the port should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "set": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Set a single property on a port."
                    ],
                    "version_added": 2.0
                },
                "timeout": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "How long to wait for ovs-vswitchd to respond"
                    ]
                },
                "external_ids": {
                    "default": {},
                    "required": false,
                    "description": [
                        "Dictionary of external_ids applied to a port."
                    ],
                    "version_added": 2.0
                },
                "port": {
                    "required": true,
                    "description": [
                        "Name of port to manage on the bridge"
                    ]
                }
            },
            "module": "openvswitch_port"
        },
        {
            "short_description": "Package manager for OpenWrt",
            "deprecated": null,
            "options": {
                "force": {
                    "default": "absent",
                    "required": false,
                    "description": [
                        "opkg --force parameter used"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "",
                        "depends",
                        "maintainer",
                        "reinstall",
                        "overwrite",
                        "downgrade",
                        "space",
                        "postinstall",
                        "remove",
                        "checksum",
                        "removal-of-dependent-packages"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "update_cache": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "update the package db first"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of package to install/remove"
                    ]
                }
            },
            "module": "opkg"
        },
        {
            "short_description": "Run arbitrary commands on OpenSwitch devices.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the waitfor conditions."
                    ]
                },
                "commands": {
                    "required": true,
                    "description": [
                        "List of commands to send to the remote ops device over the configured provider. The resulting output from the command is returned. If the I(waitfor) argument is provided, the module is not returned until the condition is satisfied or the number of retires as expired."
                    ]
                },
                "interval": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
                    ]
                },
                "waitfor": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of conditions to evaluate against the output of the command. The task will wait for a each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not rest, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I().  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
                    ]
                },
                "transport": {
                    "default": "ssh",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
                    ],
                    "choices": [
                        "ssh",
                        "cli",
                        "rest"
                    ]
                }
            },
            "module": "ops_command"
        },
        {
            "short_description": "Manage OpenSwitch configuration using CLI",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "after": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to append to the end of the command stack if a changed needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
                    ]
                },
                "lines": {
                    "required": true,
                    "description": [
                        "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
                    ]
                },
                "replace": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct"
                    ],
                    "choices": [
                        "line",
                        "block"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
                    ]
                },
                "parents": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
                    ]
                },
                "transport": {
                    "default": "ssh",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
                    ],
                    "choices": [
                        "ssh",
                        "cli",
                        "rest"
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not rest, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I().  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
                    ]
                },
                "match": {
                    "default": "line",
                    "required": false,
                    "description": [
                        "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  Finally if match is set to I(exact), command lines must be an equal match."
                    ],
                    "choices": [
                        "line",
                        "strict",
                        "exact"
                    ]
                },
                "before": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system"
                    ]
                }
            },
            "module": "ops_config"
        },
        {
            "short_description": "Collect device specific facts from OpenSwitch",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not rest, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "endpoints": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Accepts a list of endpoints to retrieve from the remote device using the REST API.  The endpoints should be valid endpoints availble on the device.  This argument is only valid when the transport is C(rest)."
                    ]
                },
                "config": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When enabled, this argument will collect the current running configuration from the remote device.  If the transport is C(rest) then the collected configuration will be the full system configuration."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I().  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
                    ]
                },
                "transport": {
                    "default": "ssh",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
                    ],
                    "choices": [
                        "ssh",
                        "cli",
                        "rest"
                    ]
                }
            },
            "module": "ops_facts"
        },
        {
            "short_description": "Push configuration to OpenSwitch",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Configures the usename to use to authenticate the connection to the remote device.  The value of I(username) is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_USERNAME will be used instead."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
                    ]
                },
                "ssh_keyfile": {
                    "required": false,
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_SSH_KEYFILE will be used instead."
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backups/ in the root of the playbook directory."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
                    ]
                },
                "provider": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Convience method that allows all M(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
                    ]
                },
                "use_ssl": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not rest, this value is ignored"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable ANSIBLE_NET_PASSWORD will be used instead."
                    ]
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuruation to use as the base config for comparision."
                    ]
                },
                "port": {
                    "default": "0 (use common port)",
                    "required": false,
                    "description": [
                        "Specifies the port to use when buiding the connection to the remote device.  This value applies to either I(cli) or I().  The port value will default to the approriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
                    ]
                },
                "transport": {
                    "default": "ssh",
                    "required": true,
                    "description": [
                        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
                    ],
                    "choices": [
                        "ssh",
                        "cli",
                        "rest"
                    ]
                }
            },
            "module": "ops_template"
        },
        {
            "short_description": "Retrieve an auth token",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "os_auth"
        },
        {
            "short_description": "Get OpenStack Client config",
            "deprecated": null,
            "options": {
                "clouds": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of clouds to limit the return list to. No value means return information on all configured clouds"
                    ]
                }
            },
            "module": "os_client_config"
        },
        {
            "short_description": "Retrieve facts about one or more flavors",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "ram": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A string used for filtering flavors based on the amount of RAM (in MB) desired. This string accepts the following special values: 'MIN' (return flavors with the minimum amount of RAM), and 'MAX' (return flavors with the maximum amount of RAM).",
                        "A specific amount of RAM may also be specified. Any flavors with this exact amount of RAM will be returned.",
                        "A range of acceptable RAM may be given using a special syntax. Simply prefix the amount of RAM with one of these acceptable range values: '<', '>', '<=', '>='. These values represent less than, greater than, less than or equal to, and greater than or equal to, respectively."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A flavor name. Cannot be used with I(ram) or I(vcpus)."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "vcpus": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A string used for filtering flavors based on the number of virtual CPUs desired. Format is the same as the I(ram) parameter."
                    ]
                },
                "limit": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Limits the number of flavors returned. All matching flavors are returned by default."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_flavor_facts"
        },
        {
            "short_description": "Add/Remove floating IP from an instance",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "reuse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When I(state) is present, and I(floating_ip_address) is not present, this parameter can be used to specify whether we should try to reuse a floating IP address already allocated to the project."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "floating_ip_address": {
                    "required": false,
                    "description": [
                        "A floating IP address to attach or to detach. Required only if I(state) is absent. When I(state) is present can be used to specify a IP address to attach."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "fixed_address": {
                    "required": false,
                    "description": [
                        "To which fixed IP of server the floating IP address should be attached to."
                    ]
                },
                "network": {
                    "required": false,
                    "description": [
                        "The name or ID of a neutron external network or a nova pool name."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "The name or ID of the instance to which the IP address should be assigned."
                    ]
                },
                "purge": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When I(state) is absent, indicates whether or not to delete the floating IP completely, or only detach it from the server. Default is to detach only."
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_floating_ip"
        },
        {
            "short_description": "Manage OpenStack Identity Groups",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Group description"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Group name"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_group"
        },
        {
            "short_description": "Add/Delete images from OpenStack Cloud",
            "deprecated": null,
            "options": {
                "ramdisk": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of an existing ramdisk image that will be associated with this image"
                    ]
                },
                "kernel": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of an existing kernel image that will be associated with this image"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "container_format": {
                    "default": "bare",
                    "required": false,
                    "description": [
                        "The format of the container"
                    ]
                },
                "min_ram": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The minimum ram (in MB) required to boot this image"
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "min_disk": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The minimum disk space (in GB) required to boot this image"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "owner": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The owner of the image"
                    ]
                },
                "is_public": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Whether the image can be accessed publicly. Note that publicizing an image requires admin role by default."
                    ]
                },
                "properties": {
                    "default": {},
                    "required": false,
                    "description": [
                        "Additional properties to be associated with this image"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name that has to be given to the image"
                    ]
                },
                "disk_format": {
                    "default": "qcow2",
                    "required": false,
                    "description": [
                        "The format of the disk that is getting uploaded"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "filename": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The path to the file which has to be uploaded"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_image"
        },
        {
            "short_description": "Retrieve facts about an image within OpenStack.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "Name or ID of the image"
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "os_image_facts"
        },
        {
            "short_description": "Create/Delete Bare Metal Resources from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "driver": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The name of the Ironic Driver to use with this node."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "properties": {
                    "description": [
                        "Definition of the physical characteristics of this server, used for scheduling purposes"
                    ],
                    "suboptions": {
                        "cpu_arch": {
                            "default": "x86_64",
                            "description": [
                                "CPU architecture (x86_64, i686, ...)"
                            ]
                        },
                        "ram": {
                            "default": 1,
                            "description": [
                                "amount of RAM this machine has, in MB"
                            ]
                        },
                        "disk_size": {
                            "default": 1,
                            "description": [
                                "size of first storage device in this machine (typically /dev/sda), in GB"
                            ]
                        },
                        "cpus": {
                            "default": 1,
                            "description": [
                                "Number of CPU cores this machine has"
                            ]
                        }
                    }
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "unique name identifier to be given to the resource."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "uuid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "globally unique identifier (UUID) to be given to the resource. Will be auto-generated if not specified, and name is specified.",
                        "Definition of a UUID will always take precedence to a name value."
                    ]
                },
                "driver_info": {
                    "description": [
                        "Information for this server's driver. Will vary based on which driver is in use. Any sub-field which is populated will be validated during creation."
                    ],
                    "suboptions": {
                        "management": {
                            "required": true,
                            "description": [
                                "Information necessary to interact with this server's management interface. May be shared by power_info in some cases."
                            ]
                        },
                        "console": {
                            "description": [
                                "Information necessary to connect to this server's serial console.  Not all drivers support this."
                            ]
                        },
                        "power": {
                            "required": true,
                            "description": [
                                "Information necessary to turn this server on / off. This often includes such things as IPMI username, password, and IP address."
                            ]
                        },
                        "deploy": {
                            "description": [
                                "Information necessary to deploy this server directly, without using Nova. THIS IS NOT RECOMMENDED."
                            ]
                        }
                    }
                },
                "nics": {
                    "required": true,
                    "description": [
                        "A list of network interface cards, eg, \" - mac: aa:bb:cc:aa:bb:cc\""
                    ]
                },
                "ironic_url": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with \"auth\" and \"auth_type\" settings set to None."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicates desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "chassis_uuid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Associate the node with a pre-defined chassis."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "skip_update_of_driver_password": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Allows the code that would assert changes to nodes to skip the update if the change is a single line consisting of the password field.  As of Kilo, by default, passwords are always masked to API requests, which means the logic as a result always attempts to re-assert the password field."
                    ]
                }
            },
            "module": "os_ironic"
        },
        {
            "short_description": "Explicitly triggers baremetal node introspection in ironic.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "mac": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "unique mac address that is used to attempt to identify the host."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "uuid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "globally unique identifier (UUID) to identify the host."
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "unique name identifier to identify the host in Ironic."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "ironic_url": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API. Use with \"auth\" and \"auth_type\" settings set to None."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_ironic_inspect"
        },
        {
            "short_description": "Activate/Deactivate Bare Metal Resources from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "power": {
                    "default": "present",
                    "description": [
                        "A setting to allow power state to be asserted allowing nodes that are not yet deployed to be powered on, and nodes that are deployed to be powered off."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "deploy": {
                    "default": true,
                    "description": [
                        "Indicates if the resource should be deployed. Allows for deployment logic to be disengaged and control of the node power or maintenance state to be changed."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "maintenance_reason": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A string expression regarding the reason a node is in a maintenance mode."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "uuid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "globally unique identifier (UUID) to be given to the resource."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "ironic_url": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with \"auth\" and \"auth_type\" settings set to None."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicates desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "maintenance": {
                    "default": false,
                    "required": false,
                    "description": [
                        "A setting to allow the direct control if a node is in maintenance mode."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "instance_info": {
                    "description": [
                        "Definition of the instance information which is used to deploy the node.  This information is only required when an instance is set to present."
                    ],
                    "suboptions": {
                        "image_disk_format": {
                            "description": [
                                "The type of image that has been requested to be deployed."
                            ]
                        },
                        "image_source": {
                            "description": [
                                "An HTTP(S) URL where the image can be retrieved from."
                            ]
                        },
                        "image_checksum": {
                            "description": [
                                "The checksum of image_source."
                            ]
                        }
                    }
                },
                "config_drive": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A configdrive file or HTTP(S) URL that will be passed along to the node."
                    ]
                }
            },
            "module": "os_ironic_node"
        },
        {
            "short_description": "Add/Delete a keypair from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "public_key_file": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Path to local file containing ssh public key. Mutually exclusive with public_key."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "public_key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The public key that would be uploaded to nova and injected into VMs upon creation."
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "Name that has to be given to the key pair"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_keypair"
        },
        {
            "short_description": "Manage OpenStack Identity Domains",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Description of the domain"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name that has to be given to the instance"
                    ]
                },
                "enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Is the domain enabled"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_keystone_domain"
        },
        {
            "short_description": "Retrieve facts about one or more OpenStack domains",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name or ID of the domain"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                }
            },
            "module": "os_keystone_domain_facts"
        },
        {
            "short_description": "Manage OpenStack Identity Roles",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Role Name"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                }
            },
            "module": "os_keystone_role"
        },
        {
            "short_description": "Creates/removes networks from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "provider_network_type": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The type of physical network that maps to this network resource."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "flat",
                        "vlan",
                        "vxlan",
                        "gre"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "provider_physical_network": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The physical network where this network object is implemented."
                    ],
                    "version_added": "2.1"
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "external": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether this network is externally accessible."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name to be assigned to the network."
                    ]
                },
                "admin_state_up": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether the state should be marked as up or down."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "project": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Project name or ID containing the network (name admin-only)"
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the resource."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "provider_segmentation_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "An isolated segment on the physical network. The I(network_type) attribute defines the segmentation model. For example, if the I(network_type) value is vlan, this ID is a vlan identifier. If the I(network_type) value is gre, this ID is a gre key."
                    ],
                    "version_added": "2.1"
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "shared": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether this network is shared or not."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_network"
        },
        {
            "short_description": "Retrieve facts about one or more OpenStack networks.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "Name or ID of the Network"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                }
            },
            "module": "os_networks_facts"
        },
        {
            "short_description": "Manage OpenStack compute flavors",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "ram": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Amount of memory, in MB."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "rxtx_factor": {
                    "default": 1.0,
                    "required": false,
                    "description": [
                        "RX/TX factor."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "is_public": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Make flavor accessible to the public."
                    ]
                },
                "disk": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Size of local disk, in GB."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "flavorid": {
                    "default": "auto",
                    "required": false,
                    "description": [
                        "ID for the flavor. This is optional as a unique UUID will be assigned if a value is not specified."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Flavor name."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "ephemeral": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Ephemeral space size, in GB."
                    ]
                },
                "vcpus": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of virtual CPUs."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the resource. When I(state) is 'present', then I(ram), I(vcpus), and I(disk) are all required. There are no default values for those parameters."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "swap": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Swap space size, in MB."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_nova_flavor"
        },
        {
            "short_description": "Create or Delete objects and containers from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "container": {
                    "required": true,
                    "description": [
                        "The name of the container in which to create the object"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "Name to be give to the object. If omitted, operations will be on the entire container"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "filename": {
                    "required": false,
                    "description": [
                        "Path to local file to be uploaded."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "container_access": {
                    "default": "private",
                    "required": false,
                    "description": [
                        "desired container access level."
                    ],
                    "choices": [
                        "private",
                        "public"
                    ]
                }
            },
            "module": "os_object"
        },
        {
            "short_description": "Add/Update/Delete ports from an OpenStack cloud.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "allowed_address_pairs": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Allowed address pairs list.  Allowed address pairs are supported with dictionary structure. e.g.  allowed_address_pairs: - ip_address: 10.1.0.12 mac_address: ab:cd:ef:12:34:56 - ip_address: ..."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "extra_dhcp_opts": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Extra dhcp options to be assigned to this port.  Extra options are supported with dictionary structure. e.g.  extra_dhcp_opts: - opt_name: opt name1 opt_value: value1 - opt_name: ..."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "device_owner": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The ID of the entity that uses this port."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "fixed_ips": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Desired IP and/or subnet for this port.  Subnet is referenced by subnet_id and IP is referenced by ip_address."
                    ]
                },
                "security_groups": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Security group(s) ID(s) or name(s) associated with the port (comma separated string or YAML list)"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name that has to be given to the port."
                    ]
                },
                "network": {
                    "required": true,
                    "description": [
                        "Network ID or name this port belongs to."
                    ]
                },
                "admin_state_up": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Sets admin state."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "no_security_groups": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not associate a security group with this port."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "mac_address": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "MAC address of this port."
                    ]
                },
                "device_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Device ID of device using this port."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_port"
        },
        {
            "short_description": "Retrieve facts about ports within OpenStack.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering. Elements of this dictionary will be matched against the returned port dictionaries. Matching is currently limited to strings within the port dictionary, or strings within nested dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Unique name or ID of a port."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "os_port_facts"
        },
        {
            "short_description": "Manage OpenStack Projects",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Description for the project"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "domain_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Domain id to create the project in if the cloud supports domains"
                    ],
                    "aliases": [
                        "domain"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name for the project"
                    ]
                },
                "enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Is the project enabled"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_project"
        },
        {
            "short_description": "Retrieve facts about one or more OpenStack projects",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "domain": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name or ID of the domain containing the project if the cloud supports domains"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name or ID of the project"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_project_facts"
        },
        {
            "short_description": "Create or delete routers from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "enable_snat": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Enable Source NAT (SNAT) attribute."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "interfaces": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of subnets to attach to the router internal interface."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name to be give to the router"
                    ]
                },
                "network": {
                    "default": "None",
                    "required": false,
                    "type": "string",
                    "description": [
                        "Unique name or ID of the external gateway network.",
                        "required I(interfaces) or I(enable_snat) are provided."
                    ]
                },
                "admin_state_up": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Desired admin state of the created or existing router."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "external_fixed_ips": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The IP address parameters for the external gateway network. Each is a dictionary with the subnet name or ID (subnet) and the IP address to assign on the subnet (ip). If no IP is specified, one is automatically assigned from that subnet."
                    ]
                }
            },
            "module": "os_router"
        },
        {
            "short_description": "Add/Delete security groups from an OpenStack cloud.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Long description of the purpose of the security group"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name that has to be given to the security group. This module requires that security group names be unique."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_security_group"
        },
        {
            "short_description": "Add/Delete rule from an existing security group",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "direction": {
                    "default": "ingress",
                    "description": [
                        "The direction in which the security group rule is applied. Not all providers support egress."
                    ],
                    "choices": [
                        "egress",
                        "ingress"
                    ]
                },
                "protocol": {
                    "default": "None",
                    "description": [
                        "IP protocol"
                    ],
                    "choices": [
                        "tcp",
                        "udp",
                        "icmp",
                        "None"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "port_range_max": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Ending port"
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "remote_ip_prefix": {
                    "required": false,
                    "description": [
                        "Source IP address(es) in CIDR notation (exclusive with remote_group)"
                    ]
                },
                "remote_group": {
                    "required": false,
                    "description": [
                        "Name or ID of the Security group to link (exclusive with remote_ip_prefix)"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "port_range_min": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Starting port"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "ethertype": {
                    "default": "IPv4",
                    "description": [
                        "Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules. Not all providers support IPv6."
                    ],
                    "choices": [
                        "IPv4",
                        "IPv6"
                    ]
                },
                "security_group": {
                    "required": true,
                    "description": [
                        "Name or ID of the security group"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_security_group_rule"
        },
        {
            "short_description": "Create/Delete Compute Instances from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "volumes": {
                    "default": [],
                    "required": false,
                    "description": [
                        "A list of preexisting volumes names or ids to attach to the instance"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name that has to be given to the instance"
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "key_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The key pair name to be used when creating a instance"
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "The name or id of the base image to boot."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "image_exclude": {
                    "description": [
                        "Text to use to filter image names, for the case, such as HP, where there are multiple image names matching the common identifying portions. image_exclude is a negative match filter - it is text that may not exist in the image name. Defaults to \"(deprecated)\""
                    ]
                },
                "boot_volume": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Volume name or id to use as the volume to boot from. Implies boot_from_volume. Mutually exclusive with image and boot_from_volume."
                    ],
                    "aliases": [
                        "root_volume"
                    ]
                },
                "flavor_include": {
                    "description": [
                        "Text to use to filter flavor names, for the case, such as Rackspace, where there are multiple flavors that have the same ram count. flavor_include is a positive match filter - it must exist in the flavor name."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "meta": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of key value pairs that should be provided as a metadata to the new instance or a string containing a list of key-value pairs. Eg:  meta: \"key1=value1,key2=value2\""
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "terminate_volume": {
                    "default": false,
                    "description": [
                        "If true, delete volume when deleting instance (if booted from volume)"
                    ]
                },
                "flavor": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The name or id of the flavor in which the new instance has to be created. Mutually exclusive with flavor_ram"
                    ]
                },
                "security_groups": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Names of the security groups to which the instance should be added. This may be a YAML list or a comma separated string."
                    ]
                },
                "scheduler_hints": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Arbitrary key/value pairs to the scheduler for custom use"
                    ],
                    "version_added": "2.1"
                },
                "boot_from_volume": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Should the instance boot from a persistent volume created based on the image given. Mututally exclusive with boot_volume."
                    ]
                },
                "userdata": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Opaque blob of data which is made available to the instance"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "network": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name or ID of a network to attach this instance to. A simpler version of the nics parameter, only one of network or nics should be supplied."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "nics": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of networks to which the instance's interface should be attached. Networks may be referenced by net-id/net-name/port-id or port-name.",
                        "Also this accepts a string containing a list of (net/port)-(id/name) Eg: nics: \"net-id=uuid-1,port-name=myport\" Only one of network or nics should be supplied."
                    ]
                },
                "floating_ips": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "list of valid floating IPs that pre-exist to assign to this node"
                    ]
                },
                "flavor_ram": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The minimum amount of ram in MB that the flavor in which the new instance has to be created must have. Mutually exclusive with flavor."
                    ]
                },
                "volume_size": {
                    "description": [
                        "The size of the volume to create in GB if booting from volume based on an image."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "auto_ip": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Ensure instance has public ip however the cloud wants to do that"
                    ],
                    "aliases": [
                        "auto_floating_ip",
                        "public_ip"
                    ]
                },
                "config_drive": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether to boot the server with config drive enabled"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "floating_ip_pools": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name of floating IP pool from which to choose a floating IP"
                    ]
                }
            },
            "module": "os_server"
        },
        {
            "short_description": "Perform actions on Compute Instances from OpenStack",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "Name or ID of the instance"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "action": {
                    "default": "present",
                    "description": [
                        "Perform the given action. The lock and unlock actions always return changed as the servers API does not provide lock status."
                    ],
                    "choices": [
                        "stop",
                        "start",
                        "pause",
                        "unpause",
                        "lock",
                        "unlock",
                        "suspend",
                        "resume"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_server_actions"
        },
        {
            "short_description": "Retrieve facts about one or more compute instances",
            "deprecated": null,
            "options": {
                "detailed": {
                    "default": false,
                    "required": false,
                    "description": [
                        "when true, return additional detail about servers at the expense of additional API calls."
                    ]
                },
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "server": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "restrict results to servers with names matching this glob expression (e.g., C<web*>)."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "os_server_facts"
        },
        {
            "short_description": "Attach/Detach Volumes from OpenStack VM's",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "volume": {
                    "required": true,
                    "description": [
                        "Name or id of volume you want to attach to a server"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "device": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Device you want to attach. Defaults to auto finding a device name."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "Name or ID of server you want to attach a volume to"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_server_volume"
        },
        {
            "short_description": "Add/Remove subnet to an OpenStack network",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "ipv6_ra_mode": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "IPv6 router advertisement mode"
                    ],
                    "choices": [
                        "dhcpv6-stateful",
                        "dhcpv6-stateless",
                        "slaac"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "host_routes": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A list of host route dictionaries for the subnet."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "ipv6_address_mode": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "IPv6 address mode"
                    ],
                    "choices": [
                        "dhcpv6-stateful",
                        "dhcpv6-stateless",
                        "slaac"
                    ]
                },
                "cidr": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The CIDR representation of the subnet that should be assigned to the subnet. Required when I(state) is 'present'"
                    ]
                },
                "network_name": {
                    "required": false,
                    "description": [
                        "Name of the network to which the subnet should be attached",
                        "requried when I(state) is 'present'"
                    ]
                },
                "allocation_pool_end": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "From the subnet pool the last IP that should be assigned to the virtual machines."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the subnet that should be created. Although Neutron allows for non-unique subnet names, this module enforces subnet name uniqueness."
                    ]
                },
                "enable_dhcp": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether DHCP should be enabled for this subnet."
                    ]
                },
                "dns_nameservers": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of DNS nameservers for this subnet."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "project": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Project name or ID containing the subnet (name admin-only)"
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "allocation_pool_start": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "From the subnet pool the starting address from which the IP should be allocated."
                    ]
                },
                "gateway_ip": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The ip that would be assigned to the gateway for this subnet"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "ip_version": {
                    "default": 4,
                    "required": false,
                    "description": [
                        "The IP version of the subnet 4 or 6"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_subnet"
        },
        {
            "short_description": "Retrieve facts about one or more OpenStack subnets.",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "subnet": {
                    "required": false,
                    "description": [
                        "Name or ID of the subnet"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "os_subnets_facts"
        },
        {
            "short_description": "Manage OpenStack Identity Users",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "domain": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Domain to create the user in if the cloud supports domains"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Password for the user",
                        "Required when I(state) is present"
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "default_project": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Project name or ID that the user should be associated with by default"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Username for the user"
                    ]
                },
                "enabled": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Is the user enabled"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                },
                "email": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Email address for the user"
                    ]
                }
            },
            "module": "os_user"
        },
        {
            "short_description": "Retrieve facts about one or more OpenStack users",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "domain": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Name or ID of the domain containing the user if the cloud supports domains"
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "filters": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name or ID of the user"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_user_facts"
        },
        {
            "short_description": "Associate OpenStack Identity users and groups",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "Name or id for the user"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "group": {
                    "required": true,
                    "description": [
                        "Name or id for the group."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the user be present or absent in the group"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_user_group"
        },
        {
            "short_description": "Associate OpenStack Identity users and roles",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "ID of the domain to scope the role association to. Valid only with keystone version 3, and required if I(project) is not specified."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or ID for the user. If I(user) is not specified, then I(group) is required. Both may not be specified."
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or ID for the group. Valid only with keystone version 3. If I(group) is not specified, then I(user) is required. Both may not be specified."
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "project": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name or ID of the project to scope the role assocation to. If you are using keystone version 2, then this value is required."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the roles be present or absent on the user."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "role": {
                    "required": true,
                    "description": [
                        "Name or ID for the role."
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_user_role"
        },
        {
            "short_description": "Create/Delete Cinder Volumes",
            "deprecated": null,
            "options": {
                "auth_type": {
                    "default": "password",
                    "required": false,
                    "description": [
                        "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
                    ]
                },
                "region_name": {
                    "required": false,
                    "description": [
                        "Name of the region."
                    ]
                },
                "availability_zone": {
                    "required": false,
                    "description": [
                        "Name of the availability zone."
                    ]
                },
                "image": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Image name or id for boot from volume"
                    ]
                },
                "api_timeout": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
                    ]
                },
                "auth": {
                    "required": false,
                    "description": [
                        "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
                    ]
                },
                "endpoint_type": {
                    "default": "public",
                    "required": false,
                    "description": [
                        "Endpoint URL type to fetch from the service catalog."
                    ],
                    "choices": [
                        "public",
                        "internal",
                        "admin"
                    ]
                },
                "volume_type": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Volume type for volume"
                    ]
                },
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client key to use as part of the SSL transaction"
                    ]
                },
                "snapshot_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Volume snapshot id to create from"
                    ]
                },
                "cacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
                    ]
                },
                "cloud": {
                    "required": false,
                    "description": [
                        "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
                    ]
                },
                "size": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Size of volume in GB. This parameter is required when the I(state) parameter is 'present'."
                    ]
                },
                "display_name": {
                    "required": true,
                    "description": [
                        "Name of volume"
                    ]
                },
                "cert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A path to a client certificate to use as part of the SSL transaction"
                    ]
                },
                "display_description": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "String describing the volume"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Should the resource be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 180,
                    "required": false,
                    "description": [
                        "How long should ansible wait for the requested resource."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Should ansible wait until the requested resource is complete."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether or not SSL API requests should be verified."
                    ],
                    "aliases": [
                        "verify"
                    ]
                }
            },
            "module": "os_volume"
        },
        {
            "short_description": "osx_defaults allows users to read, write, and delete Mac OS X user defaults from Ansible",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": "NSGlobalDomain",
                    "required": false,
                    "description": [
                        "The domain is a domain name of the form com.companyname.appname."
                    ]
                },
                "array_add": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Add new elements to the array for a key which has an array as its value."
                    ],
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "key": {
                    "required": true,
                    "description": [
                        "The key of the user preference"
                    ]
                },
                "host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The host on which the preference should apply. The special value \"currentHost\" corresponds to the \"-currentHost\" switch of the defaults commandline tool."
                    ],
                    "version_added": "2.1"
                },
                "type": {
                    "default": "string",
                    "required": false,
                    "description": [
                        "The type of value to write."
                    ],
                    "choices": [
                        "array",
                        "bool",
                        "boolean",
                        "date",
                        "float",
                        "int",
                        "integer",
                        "string"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of the user defaults"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The value to write. Only required when state = present."
                    ]
                }
            },
            "module": "osx_defaults"
        },
        {
            "short_description": "Makes an OSX computer to speak.",
            "deprecated": null,
            "options": {
                "msg": {
                    "required": true,
                    "description": "What to say"
                },
                "voice": {
                    "required": false,
                    "description": "What voice to use"
                }
            },
            "module": "osx_say"
        },
        {
            "short_description": "oVirt/RHEV platform management",
            "deprecated": null,
            "options": {
                "instance_mem": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the instance's amount of memory in MB"
                    ],
                    "aliases": [
                        "vmmem"
                    ]
                },
                "instance_cores": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "define the instance's number of cores"
                    ],
                    "aliases": [
                        "vmcores"
                    ]
                },
                "instance_cpus": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "the instance's number of cpu's"
                    ],
                    "aliases": [
                        "vmcpus"
                    ]
                },
                "image": {
                    "default": null,
                    "required": false,
                    "description": [
                        "template to use for the instance"
                    ],
                    "aliases": []
                },
                "instance_hostname": {
                    "required": false,
                    "description": [
                        "define the instance's Hostname"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "hostname"
                    ]
                },
                "instance_disksize": {
                    "default": null,
                    "required": false,
                    "description": [
                        "size of the instance's disk in GB"
                    ],
                    "aliases": [
                        "vm_disksize"
                    ]
                },
                "instance_nic": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the network interface in oVirt/RHEV"
                    ],
                    "aliases": [
                        "vmnic"
                    ]
                },
                "user": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the user to authenticate with"
                    ],
                    "aliases": []
                },
                "instance_network": {
                    "default": "rhevm",
                    "required": false,
                    "description": [
                        "the logical network the machine should belong to"
                    ],
                    "aliases": [
                        "vmnetwork"
                    ]
                },
                "instance_type": {
                    "default": "server",
                    "aliases": [
                        "vmtype"
                    ],
                    "required": false,
                    "description": [
                        "define if the instance is a server or desktop"
                    ],
                    "choices": [
                        "server",
                        "desktop"
                    ]
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "password of the user to authenticate with"
                    ],
                    "aliases": []
                },
                "sdomain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the Storage Domain where you want to create the instance's disk on."
                    ],
                    "aliases": []
                },
                "instance_os": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type of Operating System"
                    ],
                    "aliases": [
                        "vmos"
                    ]
                },
                "instance_ip": {
                    "required": false,
                    "description": [
                        "define the instance's IP"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "ip"
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "deploy the image to this oVirt cluster"
                    ],
                    "aliases": []
                },
                "disk_alloc": {
                    "default": "thin",
                    "aliases": [],
                    "required": false,
                    "description": [
                        "define if disk is thin or preallocated"
                    ],
                    "choices": [
                        "thin",
                        "preallocated"
                    ]
                },
                "url": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the url of the oVirt instance"
                    ],
                    "aliases": []
                },
                "region": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the oVirt/RHEV datacenter where you want to deploy to"
                    ],
                    "aliases": []
                },
                "instance_dns": {
                    "required": false,
                    "description": [
                        "define the instance's Primary DNS server"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "dns"
                    ]
                },
                "instance_name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the name of the instance to use"
                    ],
                    "aliases": [
                        "vmname"
                    ]
                },
                "instance_netmask": {
                    "required": false,
                    "description": [
                        "define the instance's Netmask"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "netmask"
                    ]
                },
                "state": {
                    "default": "present",
                    "aliases": [],
                    "required": false,
                    "description": [
                        "create, terminate or remove instances"
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "shutdown",
                        "started",
                        "restarted"
                    ]
                },
                "instance_key": {
                    "required": false,
                    "description": [
                        "define the instance's Authorized key"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "key"
                    ]
                },
                "instance_domain": {
                    "required": false,
                    "description": [
                        "define the instance's Domain"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "domain"
                    ]
                },
                "instance_rootpw": {
                    "required": false,
                    "description": [
                        "define the instance's Root password"
                    ],
                    "version_added": "2.1",
                    "aliases": [
                        "rootpw"
                    ]
                },
                "resource_type": {
                    "default": null,
                    "aliases": [],
                    "required": false,
                    "description": [
                        "whether you want to deploy an image or create an instance from scratch."
                    ],
                    "choices": [
                        "new",
                        "template"
                    ]
                },
                "disk_int": {
                    "default": "virtio",
                    "aliases": [],
                    "required": false,
                    "description": [
                        "interface type of the disk"
                    ],
                    "choices": [
                        "virtio",
                        "ide"
                    ]
                }
            },
            "module": "ovirt"
        },
        {
            "short_description": "Generic OS package manager",
            "deprecated": null,
            "options": {
                "state": {
                    "required": true,
                    "description": [
                        "Whether to install (C(present), C(latest)), or remove (C(absent)) a package."
                    ]
                },
                "use": {
                    "default": "auto",
                    "required": false,
                    "description": [
                        "The required package manager module to use (yum, apt, etc). The default 'auto' will use existing facts or try to autodetect it.",
                        "You should only use this field if the automatic selection is not working for some reason."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Package name, or package specifier with version, like C(name-1.0).",
                        "Be aware that packages are not always named the same and this module will not 'translate' them per distro."
                    ]
                }
            },
            "module": "package"
        },
        {
            "short_description": "Manage packages with I(pacman)",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Desired state of the package."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether or not to upgrade whole system"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When removing package - force remove package, without any checks. When update_cache - force redownload repo databases."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the package to install, upgrade, or remove."
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether or not to refresh the master package lists. This can be run as part of a package installation or as a separate step."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "recurse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When removing a package, also remove its dependencies, provided that they are not required by other packages and were not explicitly installed by a user."
                    ],
                    "version_added": "1.3",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "pacman"
        },
        {
            "short_description": "Create PagerDuty maintenance windows",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "PagerDuty unique subdomain."
                    ],
                    "aliases": []
                },
                "service": {
                    "default": null,
                    "choices": [],
                    "required": false,
                    "description": [
                        "A comma separated list of PagerDuty service IDs."
                    ],
                    "aliases": [
                        "services"
                    ]
                },
                "passwd": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "PagerDuty user password."
                    ],
                    "aliases": []
                },
                "minutes": {
                    "aliases": [],
                    "description": [
                        "Maintenance window in minutes (this is added to the hours)."
                    ],
                    "version_added": "1.8",
                    "default": 0,
                    "required": false,
                    "choices": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "running",
                        "started",
                        "ongoing",
                        "absent"
                    ],
                    "required": true,
                    "description": [
                        "Create a maintenance window or get a list of ongoing windows."
                    ],
                    "aliases": []
                },
                "hours": {
                    "default": 1,
                    "choices": [],
                    "required": false,
                    "description": [
                        "Length of maintenance window in hours."
                    ],
                    "aliases": []
                },
                "token": {
                    "aliases": [],
                    "description": [
                        "A pagerduty token, generated on the pagerduty site. Can be used instead of user/passwd combination."
                    ],
                    "version_added": "1.8",
                    "default": null,
                    "required": true,
                    "choices": []
                },
                "user": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "PagerDuty user ID."
                    ],
                    "aliases": []
                },
                "requester_id": {
                    "aliases": [],
                    "description": [
                        "ID of user making the request. Only needed when using a token and creating a maintenance_window."
                    ],
                    "version_added": "1.8",
                    "default": null,
                    "required": true,
                    "choices": []
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "desc": {
                    "default": "Created by Ansible",
                    "choices": [],
                    "required": false,
                    "description": [
                        "Short description of maintenance window."
                    ],
                    "aliases": []
                }
            },
            "module": "pagerduty"
        },
        {
            "short_description": "Trigger, acknowledge or resolve PagerDuty incidents",
            "deprecated": null,
            "options": {
                "client_url": {
                    "required": false,
                    "description": [
                        "The URL of the monitoring client that is triggering this event."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "PagerDuty unique subdomain."
                    ]
                },
                "incident_key": {
                    "required": false,
                    "description": [
                        "Identifies the incident to which this I(state) should be applied.",
                        "For C(triggered) I(state) - If there's no open (i.e. unresolved) incident with this key, a new one will be created. If there's already an open incident with a matching key, this event will be appended to that incident's log. The event key provides an easy way to \"de-dup\" problem reports.",
                        "For C(acknowledged) or C(resolved) I(state) - This should be the incident_key you received back when the incident was first opened by a trigger event. Acknowledge events referencing resolved or nonexistent incidents will be discarded."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Type of event to be sent."
                    ],
                    "choices": [
                        "triggered",
                        "acknowledged",
                        "resolved"
                    ]
                },
                "client": {
                    "required": false,
                    "description": [
                        "The name of the monitoring client that is triggering this event."
                    ]
                },
                "service_key": {
                    "required": true,
                    "description": [
                        "The GUID of one of your \"Generic API\" services.",
                        "This is the \"service key\" listed on a Generic API's service detail page."
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "The pagerduty API key (readonly access), generated on the pagerduty site."
                    ]
                },
                "desc": {
                    "default": "Created via Ansible",
                    "required": false,
                    "description": [
                        "For C(triggered) I(state) - Required. Short description of the problem that led to this trigger. This field (or a truncated version) will be used when generating phone calls, SMS messages and alert emails. It will also appear on the incidents tables in the PagerDuty UI. The maximum length is 1024 characters.",
                        "For C(acknowledged) or C(resolved) I(state) - Text that will appear in the incident's log associated with this event."
                    ]
                }
            },
            "module": "pagerduty_alert"
        },
        {
            "short_description": "Modify Linux PAM limits",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": "",
                    "required": false,
                    "description": [
                        "Comment associated with the limit."
                    ]
                },
                "use_max": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set to C(yes), the maximal value will be used or conserved. If the specified value is superior to the value in the file, file content is replaced with the new value, else content is not modified."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "domain": {
                    "required": true,
                    "description": [
                        "A username, @groupname, wildcard, uid/gid range."
                    ]
                },
                "dest": {
                    "default": "/etc/security/limits.conf",
                    "required": false,
                    "description": [
                        "Modify the limits.conf path."
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "The value of the limit."
                    ]
                },
                "use_min": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set to C(yes), the minimal value will be used or conserved. If the specified value is inferior to the value in the file, file content is replaced with the new value, else content is not modified."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "limit_item": {
                    "required": true,
                    "description": [
                        "The limit to be set"
                    ],
                    "choices": [
                        "core",
                        "data",
                        "fsize",
                        "memlock",
                        "nofile",
                        "rss",
                        "stack",
                        "cpu",
                        "nproc",
                        "as",
                        "maxlogins",
                        "maxsyslogins",
                        "priority",
                        "locks",
                        "sigpending",
                        "msgqueue",
                        "nice",
                        "rtprio",
                        "chroot"
                    ]
                },
                "limit_type": {
                    "required": true,
                    "description": [
                        "Limit type, see C(man limits) for an explanation"
                    ],
                    "choices": [
                        "hard",
                        "soft",
                        "-"
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "pam_limits"
        },
        {
            "short_description": "Apply patch files using the GNU patch tool.",
            "deprecated": null,
            "options": {
                "strip": {
                    "default": "0",
                    "required": false,
                    "type": "int",
                    "description": [
                        "Number that indicates the smallest prefix containing leading slashes that will be stripped from each file name found in the patch file. For more information see the strip parameter of the GNU patch tool."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "Path of the patch file as accepted by the GNU patch tool. If C(remote_src) is 'no', the patch source file is looked up from the module's \"files\" directory."
                    ],
                    "aliases": [
                        "patchfile"
                    ]
                },
                "remote_src": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(no), it will search for src at originating/master machine, if C(yes) it will go to the remote/target machine for the src. Default is C(no)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dest": {
                    "required": false,
                    "description": [
                        "Path of the file on the remote machine to be patched.",
                        "The names of the files to be patched are usually taken from the patch file, but if there's just one file to be patched it can specified with this option."
                    ],
                    "aliases": [
                        "originalfile"
                    ]
                },
                "binary": {
                    "default": "no",
                    "required": false,
                    "type": "bool",
                    "description": [
                        "Setting to C(yes) will disable patch's heuristic for transforming CRLF line endings into LF. Line endings of src and dest must match. If set to C(no), patch will replace CRLF in src files on POSIX."
                    ],
                    "version_added": "2.0"
                },
                "basedir": {
                    "required": false,
                    "description": [
                        "Path of a base directory in which the patch file will be applied. May be ommitted when C(dest) option is specified, otherwise required."
                    ]
                },
                "backup": {
                    "default": "no",
                    "description": [
                        "passes --backup --version-control=numbered to patch, producing numbered backup copies"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "patch"
        },
        {
            "short_description": "Pause playbook execution",
            "deprecated": null,
            "options": {
                "seconds": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of seconds to pause for."
                    ]
                },
                "minutes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of minutes to pause for."
                    ]
                },
                "prompt": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Optional text to use for the prompt message."
                    ]
                }
            },
            "module": "pause"
        },
        {
            "short_description": "Manage pear/pecl packages",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Desired state of the package."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the package to install, upgrade, or remove."
                    ]
                }
            },
            "module": "pear"
        },
        {
            "short_description": "Try to connect to host, verify a usable python and return C(pong) on success.",
            "deprecated": null,
            "options": {},
            "module": "ping"
        },
        {
            "short_description": "Pause/unpause Pingdom alerts",
            "deprecated": null,
            "options": {
                "checkid": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Pingdom ID of the check."
                    ],
                    "aliases": []
                },
                "passwd": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Pingdom user password."
                    ],
                    "aliases": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "running",
                        "paused"
                    ],
                    "required": true,
                    "description": [
                        "Define whether or not the check should be running or paused."
                    ],
                    "aliases": []
                },
                "uid": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Pingdom user ID."
                    ],
                    "aliases": []
                },
                "key": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Pingdom API key."
                    ],
                    "aliases": []
                }
            },
            "module": "pingdom"
        },
        {
            "short_description": "Manages Python library dependencies.",
            "deprecated": null,
            "options": {
                "virtualenv": {
                    "default": null,
                    "required": false,
                    "description": [
                        "An optional path to a I(virtualenv) directory to install into. It cannot be specified together with the 'executable' parameter (added in 2.1)."
                    ]
                },
                "virtualenv_site_packages": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether the virtual environment will inherit packages from the global site-packages directory.  Note that if this setting is changed on an already existing virtual environment it will not have any effect, the environment must be deleted and newly created."
                    ],
                    "version_added": "1.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "virtualenv_command": {
                    "default": "virtualenv",
                    "required": false,
                    "description": [
                        "The command or a pathname to the command to create the virtual environment with. For example C(pyvenv), C(virtualenv), C(virtualenv2), C(~/bin/virtualenv), C(/usr/local/bin/virtualenv)."
                    ],
                    "version_added": "1.1"
                },
                "chdir": {
                    "default": null,
                    "required": false,
                    "description": [
                        "cd into this directory before running the command"
                    ],
                    "version_added": "1.3"
                },
                "requirements": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path to a pip requirements file, which should be local to the remote system. File can be specified as a relative path if using the chdir option."
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of a Python library to install or the url of the remote package."
                    ]
                },
                "virtualenv_python": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The Python executable used for creating the virtual environment. For example C(python3.4), C(python2.7). When not specified, the system Python version is used."
                    ],
                    "version_added": "2.0"
                },
                "editable": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Pass the editable flag for versioning URLs."
                    ],
                    "version_added": "2.0"
                },
                "umask": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The system umask to apply before installing the pip package. This is useful, for example, when installing on systems that have a very restrictive umask by default (e.g., 0077) and you want to pip install packages which are to be used by all users. Note that this requires you to specify desired umask mode in octal, with a leading 0 (e.g., 0077)."
                    ],
                    "version_added": "2.1"
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The explicit executable or a pathname to the executable to be used to run pip for a specific version of Python installed in the system. For example C(pip-3.3), if there are both Python 2.7 and 3.3 installations in the system and you want to run pip for the Python 3.3 installation. It cannot be specified together with the 'virtualenv' parameter (added in 2.1)."
                    ],
                    "version_added": "1.3"
                },
                "extra_args": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Extra arguments passed to pip."
                    ],
                    "version_added": "1.0"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of module",
                        "The 'forcereinstall' option is only available in Ansible 2.1 and above."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest",
                        "forcereinstall"
                    ]
                },
                "version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The version number to install of the Python library specified in the I(name) parameter"
                    ]
                }
            },
            "module": "pip"
        },
        {
            "short_description": "Manages packages with the Solaris 11 Image Packaging System",
            "deprecated": null,
            "options": {
                "accept_licenses": {
                    "default": false,
                    "choices": [
                        true,
                        false
                    ],
                    "required": false,
                    "description": [
                        "Accept any licences."
                    ],
                    "aliases": [
                        "accept_licences",
                        "accept"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to install (I(present), I(latest)), or remove (I(absent)) a package."
                    ],
                    "choices": [
                        "present",
                        "latest",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "An FRMI of the package(s) to be installed/removed/updated.",
                        "Multiple packages may be specified, separated by C(,)."
                    ]
                }
            },
            "module": "pkg5"
        },
        {
            "short_description": "Manages Solaris 11 Image Packaging System publishers",
            "deprecated": null,
            "options": {
                "origin": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A path or URL to the repository.",
                        "Multiple values may be provided."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to ensure that a publisher is present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The publisher's name."
                    ],
                    "aliases": [
                        "publisher"
                    ]
                },
                "mirror": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A path or URL to the repository mirror.",
                        "Multiple values may be provided."
                    ]
                },
                "enabled": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Is the repository enabled or disabled?"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "sticky": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Packages installed from a sticky repository can only receive updates from that repository."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "pkg5_publisher"
        },
        {
            "short_description": "Package manager for SmartOS, NetBSD, et al.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Intended state of the package"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Upgrade main packages to their newer versions"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Force package reinstall"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of package to install/remove;",
                        "multiple names may be given, separated by commas"
                    ]
                },
                "full_upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Upgrade all packages to their newer versions"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Update repository database. Can be run with other steps or on it's own."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "clean": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Clean packages cache"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "pkgin"
        },
        {
            "short_description": "Package manager for FreeBSD >= 9.0",
            "deprecated": null,
            "options": {
                "rootdir": {
                    "required": false,
                    "description": [
                        "for pkgng versions 1.5 and later, pkg will install all packages within the specified root directory",
                        "can not be used together with 'chroot' option"
                    ]
                },
                "chroot": {
                    "required": false,
                    "description": [
                        "pkg will chroot in the specified environment",
                        "can not be used together with 'rootdir' option"
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of package to install/remove"
                    ]
                },
                "cached": {
                    "default": false,
                    "required": false,
                    "description": [
                        "use local package base or try to fetch an updated one"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "pkgsite": {
                    "required": false,
                    "description": [
                        "for pkgng versions before 1.1.4, specify packagesite to use for downloading packages, if not specified, use settings from /usr/local/etc/pkg.conf for newer pkgng versions, specify a the name of a repository configured in /usr/local/etc/pkg/repos"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "annotation": {
                    "required": false,
                    "description": [
                        "a comma-separated list of keyvalue-pairs of the form <+/-/:><key>[=<value>]. A '+' denotes adding an annotation, a '-' denotes removing an annotation, and ':' denotes modifying an annotation. If setting or modifying annotations, a value must be provided."
                    ],
                    "version_added": "1.6"
                }
            },
            "module": "pkgng"
        },
        {
            "short_description": "Manage CSW-Packages on Solaris",
            "deprecated": null,
            "options": {
                "site": {
                    "required": false,
                    "description": [
                        "Specifies the repository path to install the package from.",
                        "Its global definition is done in C(/etc/opt/csw/pkgutil.conf)."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Whether to install (C(present)), or remove (C(absent)) a package.",
                        "The upgrade (C(latest)) operation will update/install the package to the latest version available.",
                        "Note: The module has a limitation that (C(latest)) only works for one package, not lists of them."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "update_catalog": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If you want to refresh your catalog from the mirror, set this to (C(yes))."
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Package name, e.g. (C(CSWnrpe))"
                    ]
                }
            },
            "module": "pkgutil"
        },
        {
            "short_description": "Package manager for Gentoo",
            "deprecated": null,
            "options": {
                "nodeps": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Only merge packages but not their dependencies (--nodeps)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "onlydeps": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Only merge packages' dependencies but not the packages (--onlydeps)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "newuse": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Include installed packages where USE flags have changed (--newuse)"
                    ],
                    "choices": [
                        "yes"
                    ]
                },
                "oneshot": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not add the packages to the world file (--oneshot)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "update": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Update packages to the best version available (--update)"
                    ],
                    "choices": [
                        "yes"
                    ]
                },
                "deep": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Consider the entire dependency tree of packages (--deep)"
                    ],
                    "choices": [
                        "yes"
                    ]
                },
                "sync": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Sync package repositories first",
                        "If yes, perform \"emerge --sync\"",
                        "If web, perform \"emerge-webrsync\""
                    ],
                    "choices": [
                        "yes",
                        "web",
                        "no"
                    ]
                },
                "depclean": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove packages not needed by explicitly merged packages (--depclean)",
                        "If no package is specified, clean up the world's dependencies",
                        "Otherwise, --depclean serves as a dependency aware version of --unmerge"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "noreplace": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not re-emerge installed packages (--noreplace)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "verbose": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Run emerge in verbose mode (--verbose)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "getbinpkg": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Prefer packages specified at PORTAGE_BINHOST in make.conf"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "package": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Package atom or set, e.g. C(sys-apps/foo) or C(>foo-2.13) or C(@world)"
                    ]
                },
                "quiet": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Run emerge in quiet mode (--quiet)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the package atom"
                    ],
                    "choices": [
                        "present",
                        "installed",
                        "emerged",
                        "absent",
                        "removed",
                        "unmerged"
                    ]
                },
                "changed_use": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Include installed packages where USE flags have changed, except when",
                        "flags that the user has not enabled are added or removed",
                        "(--changed-use)"
                    ],
                    "version_added": 1.8,
                    "choices": [
                        "yes"
                    ]
                },
                "usepkgonly": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Merge only binaries (no compiling). This sets getbinpkg=yes."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "portage"
        },
        {
            "short_description": "Installing packages from FreeBSD's ports system",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "use_packages": {
                    "default": true,
                    "required": false,
                    "description": [
                        "use packages instead of ports whenever available"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of package to install/remove"
                    ]
                }
            },
            "module": "portinstall"
        },
        {
            "short_description": "Add or remove PostgreSQL databases from a remote host.",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the database to add or remove"
                    ]
                },
                "encoding": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Encoding of the database"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "lc_collate": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Collation order (LC_COLLATE) to use in the database. Must match collation order of template database unless C(template0) is used as template."
                    ]
                },
                "lc_ctype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Character classification (LC_CTYPE) to use in the database (e.g. lower, upper, ...) Must match LC_CTYPE of template database unless C(template0) is used as template."
                    ]
                },
                "port": {
                    "default": 5432,
                    "required": false,
                    "description": [
                        "Database port to connect to."
                    ]
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to a Unix domain socket for local connections"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The database state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "template": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Template used to create the database"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the role to set as owner of the database"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                }
            },
            "module": "postgresql_db"
        },
        {
            "short_description": "Add or remove PostgreSQL extensions from a database.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The database extension state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the extension to add or remove"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with"
                    ]
                },
                "login_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The username used to authenticate with"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running the database"
                    ]
                },
                "db": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the database to add or remove the extension to/from"
                    ]
                },
                "port": {
                    "default": 5432,
                    "required": false,
                    "description": [
                        "Database port to connect to."
                    ]
                }
            },
            "module": "postgresql_ext"
        },
        {
            "short_description": "Adds, removes or changes procedural languages with a PostgreSQL database.",
            "deprecated": null,
            "options": {
                "lang": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the procedural language to add, remove or change"
                    ]
                },
                "force_trust": {
                    "default": false,
                    "required": false,
                    "description": [
                        "marks the language as trusted, even if it's marked as untrusted in pg_pltemplate.",
                        "use with care!"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "login_user": {
                    "default": "postgres",
                    "required": false,
                    "description": [
                        "User used to authenticate with PostgreSQL"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running PostgreSQL where you want to execute the actions."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of database where the language will be added, removed or changed"
                    ]
                },
                "cascade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "when dropping a language, also delete object that depend on this language.",
                        "only used when C(state=absent)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The state of the language for the selected database"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password used to authenticate with PostgreSQL (must match C(login_user))"
                    ]
                },
                "trust": {
                    "default": false,
                    "required": false,
                    "description": [
                        "make this language trusted for the selected db"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "fail_on_drop": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "if C(yes), fail when removing a language. Otherwise just log and continue",
                        "in some cases, it is not possible to remove a language (used by the db-system). When         dependencies block the removal, consider using C(cascade)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "port": {
                    "default": 5432,
                    "required": false,
                    "description": [
                        "Database port to connect to."
                    ]
                }
            },
            "module": "postgresql_lang"
        },
        {
            "short_description": "Grant or revoke privileges on PostgreSQL database objects.",
            "deprecated": null,
            "options": {
                "objs": {
                    "required": false,
                    "description": [
                        "Comma separated list of database objects to set privileges on.",
                        "If I(type) is C(table) or C(sequence), the special value C(ALL_IN_SCHEMA) can be provided instead to specify all database objects of type I(type) in the schema specified via I(schema). (This also works with PostgreSQL < 9.0.)",
                        "If I(type) is C(database), this parameter can be omitted, in which case privileges are set for the database specified via I(database).",
                        "If I(type) is I(function), colons (\":\") in object names will be replaced with commas (needed to specify function signatures, see examples)",
                        "Alias: I(obj)"
                    ]
                },
                "roles": {
                    "required": true,
                    "description": [
                        "Comma separated list of role (user/group) names to set permissions for.",
                        "The special value C(PUBLIC) can be provided instead to set permissions for the implicitly defined PUBLIC group.",
                        "Alias: I(role)"
                    ]
                },
                "privs": {
                    "required": false,
                    "description": [
                        "Comma separated list of privileges to grant/revoke.",
                        "Alias: I(priv)"
                    ]
                },
                "database": {
                    "required": true,
                    "description": [
                        "Name of database to connect to.",
                        "Alias: I(db)"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "If C(present), the specified privileges are granted, if C(absent) they are revoked."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to a Unix domain socket for local connections.",
                        "Alias: I(login_unix_socket)"
                    ]
                },
                "host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Database host address. If unspecified, connect via Unix socket.",
                        "Alias: I(login_host)"
                    ]
                },
                "login": {
                    "default": "postgres",
                    "description": [
                        "The username to authenticate with.",
                        "Alias: I(login_user)"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password to authenticate with.",
                        "Alias: I(login_password))"
                    ]
                },
                "type": {
                    "default": "table",
                    "required": false,
                    "description": [
                        "Type of database object to set privileges on."
                    ],
                    "choices": [
                        "table",
                        "sequence",
                        "function",
                        "database",
                        "schema",
                        "language",
                        "tablespace",
                        "group"
                    ]
                },
                "port": {
                    "default": 5432,
                    "required": false,
                    "description": [
                        "Database port to connect to."
                    ]
                },
                "grant_option": {
                    "required": false,
                    "description": [
                        "Whether C(role) may grant/revoke the specified privileges/group memberships to others.",
                        "Set to C(no) to revoke GRANT OPTION, leave unspecified to make no changes.",
                        "I(grant_option) only has an effect if I(state) is C(present).",
                        "Alias: I(admin_option)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "schema": {
                    "required": false,
                    "description": [
                        "Schema that contains the database objects specified via I(objs).",
                        "May only be provided if I(type) is C(table), C(sequence) or C(function). Defaults to  C(public) in these cases."
                    ]
                }
            },
            "module": "postgresql_privs"
        },
        {
            "short_description": "Adds or removes a users (roles) from a PostgreSQL database.",
            "deprecated": null,
            "options": {
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password used to authenticate with PostgreSQL"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the user (role) to add or remove"
                    ]
                },
                "no_password_changes": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "if C(yes), don't inspect database for password changes. Effective when C(pg_authid) is not accessible (such as AWS RDS). Otherwise, make password changes as necessary."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "login_user": {
                    "default": "postgres",
                    "required": false,
                    "description": [
                        "User (role) used to authenticate with PostgreSQL"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Host running PostgreSQL."
                    ]
                },
                "expires": {
                    "default": null,
                    "required": false,
                    "description": [
                        "sets the user's password expiration."
                    ],
                    "version_added": "1.4"
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of database where permissions will be granted"
                    ]
                },
                "port": {
                    "default": 5432,
                    "required": false,
                    "description": [
                        "Database port to connect to."
                    ]
                },
                "login_unix_socket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to a Unix domain socket for local connections"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "The user (role) state"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "encrypted": {
                    "default": false,
                    "required": false,
                    "description": [
                        "whether the password is stored hashed in the database. boolean. Passwords can be passed already hashed or unhashed, and postgresql ensures the stored password is hashed when encrypted is set."
                    ],
                    "version_added": "1.4"
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "set the user's password, before 1.4 this was required.",
                        "When passing an encrypted password, the encrypted parameter must also be true, and it must be generated with the format C('str[\"md5\"] + md5[ password + username ]'), resulting in a total of 35 characters.  An easy way to do this is: C(echo \"md5`echo -n \"verysecretpasswordJOE\" | md5`\"). Note that if encrypted is set, the stored password will be hashed whether or not it is pre-encrypted."
                    ]
                },
                "role_attr_flags": {
                    "default": "",
                    "required": false,
                    "description": [
                        "PostgreSQL role attributes string in the format: CREATEDB,CREATEROLE,SUPERUSER"
                    ],
                    "choices": [
                        "[NO]SUPERUSER",
                        "[NO]CREATEROLE",
                        "[NO]CREATEUSER",
                        "[NO]CREATEDB",
                        "[NO]INHERIT",
                        "[NO]LOGIN",
                        "[NO]REPLICATION"
                    ]
                },
                "fail_on_user": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "if C(yes), fail when user can't be removed. Otherwise just log and continue"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "priv": {
                    "default": null,
                    "required": false,
                    "description": [
                        "PostgreSQL privileges string in the format: C(table:priv1,priv2)"
                    ]
                }
            },
            "module": "postgresql_user"
        },
        {
            "short_description": "Create, destroy, start, stop, and reboot a ProfitBricks virtual machine.",
            "deprecated": null,
            "options": {
                "lan": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The ID of the LAN you wish to add the servers to."
                    ]
                },
                "auto_increment": {
                    "default": true,
                    "description": [
                        "Whether or not to increment a single number in the name for created virtual machines."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "The system image ID for creating the virtual machine, e.g. a3eae284-a2fe-11e4-b187-5f1f641608c8."
                    ]
                },
                "ram": {
                    "default": 2048,
                    "required": false,
                    "description": [
                        "The amount of memory to allocate to the virtual machine."
                    ]
                },
                "instance_ids": {
                    "required": false,
                    "description": [
                        "list of instance ids, currently only used when state='absent' to remove instances."
                    ]
                },
                "subscription_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "THe ProfitBricks password. Overrides the PB_PASSWORD environement variable."
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "assign_public_ip": {
                    "default": false,
                    "required": false,
                    "description": [
                        "This will assign the machine to the public LAN. If no LAN exists with public Internet access it is created."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "count": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The number of virtual machines to create."
                    ]
                },
                "datacenter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The Datacenter to provision this virtual machine."
                    ]
                },
                "remove_boot_volume": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "remove the bootVolume of the virtual machine you're destroying."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the virtual machine."
                    ]
                },
                "subscription_user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environement variable."
                    ]
                },
                "volume_size": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "The size in GB of the boot volume."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or terminate instances"
                    ],
                    "choices": [
                        "running",
                        "stopped",
                        "absent",
                        "present"
                    ]
                },
                "location": {
                    "default": "us/las",
                    "required": false,
                    "description": [
                        "The datacenter location. Use only if you want to create the Datacenter or else this value is ignored."
                    ],
                    "choices": [
                        "us/las",
                        "us/lasdev",
                        "de/fra",
                        "de/fkb"
                    ]
                },
                "bus": {
                    "default": "VIRTIO",
                    "required": false,
                    "description": [
                        "The bus type for the volume."
                    ],
                    "choices": [
                        "IDE",
                        "VIRTIO"
                    ]
                },
                "cores": {
                    "default": 2,
                    "required": false,
                    "description": [
                        "The number of CPU cores to allocate to the virtual machine."
                    ]
                }
            },
            "module": "profitbricks"
        },
        {
            "short_description": "Create or destroy a ProfitBricks Virtual Datacenter.",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "The name of the virtual datacenter."
                    ]
                },
                "subscription_user": {
                    "required": false,
                    "description": [
                        "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environement variable."
                    ]
                },
                "subscription_password": {
                    "required": false,
                    "description": [
                        "THe ProfitBricks password. Overrides the PB_PASSWORD environement variable."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or terminate datacenters"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "location": {
                    "default": "us/las",
                    "required": false,
                    "description": [
                        "The datacenter location."
                    ],
                    "choices": [
                        "us/las",
                        "us/lasdev",
                        "de/fra",
                        "de/fkb"
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "wait for the datacenter to be created before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "The description of the virtual datacenter."
                    ]
                }
            },
            "module": "profitbricks_datacenter"
        },
        {
            "short_description": "Create or Remove a NIC.",
            "deprecated": null,
            "options": {
                "datacenter": {
                    "required": true,
                    "description": [
                        "The datacenter in which to operate."
                    ]
                },
                "lan": {
                    "required": true,
                    "description": [
                        "The LAN to place the NIC on. You can pass a LAN that doesn't exist and it will be created. Required on create."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name or ID of the NIC. This is only required on deletes, but not on create."
                    ]
                },
                "subscription_user": {
                    "required": false,
                    "description": [
                        "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environement variable."
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "The server name or ID."
                    ]
                },
                "subscription_password": {
                    "required": false,
                    "description": [
                        "THe ProfitBricks password. Overrides the PB_PASSWORD environement variable."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "wait for the operation to complete before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "profitbricks_nic"
        },
        {
            "short_description": "Create or destroy a volume.",
            "deprecated": null,
            "options": {
                "count": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "The number of volumes you wish to create."
                    ]
                },
                "datacenter": {
                    "required": true,
                    "description": [
                        "The datacenter in which to create the volumes."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the volumes. You can enumerate the names using auto_increment."
                    ]
                },
                "subscription_user": {
                    "required": false,
                    "description": [
                        "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environement variable."
                    ]
                },
                "licence_type": {
                    "default": "UNKNOWN",
                    "required": false,
                    "description": [
                        "The licence type for the volume. This is used when the image is non-standard."
                    ],
                    "choices": [
                        "LINUX",
                        "WINDOWS",
                        "UNKNOWN",
                        "OTHER"
                    ]
                },
                "bus": {
                    "default": "VIRTIO",
                    "required": false,
                    "description": [
                        "The bus type."
                    ],
                    "choices": [
                        "IDE",
                        "VIRTIO"
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "The system image ID for the volume, e.g. a3eae284-a2fe-11e4-b187-5f1f641608c8. This can also be a snapshot image ID."
                    ]
                },
                "size": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "The size of the volume."
                    ]
                },
                "instance_ids": {
                    "required": false,
                    "description": [
                        "list of instance ids, currently only used when state='absent' to remove instances."
                    ]
                },
                "subscription_password": {
                    "required": false,
                    "description": [
                        "THe ProfitBricks password. Overrides the PB_PASSWORD environement variable."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "create or terminate datacenters"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "auto_increment": {
                    "default": true,
                    "description": [
                        "Whether or not to increment a single number in the name for created virtual machines."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "disk_type": {
                    "default": "HDD",
                    "required": false,
                    "description": [
                        "The disk type. Currently only HDD."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "wait for the datacenter to be created before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "profitbricks_volume"
        },
        {
            "short_description": "Attach or detach a volume.",
            "deprecated": null,
            "options": {
                "datacenter": {
                    "required": true,
                    "description": [
                        "The datacenter in which to operate."
                    ]
                },
                "subscription_user": {
                    "required": false,
                    "description": [
                        "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environement variable."
                    ]
                },
                "server": {
                    "required": true,
                    "description": [
                        "The name of the server you wish to detach or attach the volume."
                    ]
                },
                "volume": {
                    "required": true,
                    "description": [
                        "The volume name or ID."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "subscription_password": {
                    "required": false,
                    "description": [
                        "THe ProfitBricks password. Overrides the PB_PASSWORD environement variable."
                    ]
                },
                "wait": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "wait for the operation to complete before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "profitbricks_volume_attachments"
        },
        {
            "short_description": "management of instances in Proxmox VE cluster",
            "deprecated": null,
            "options": {
                "node": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Proxmox VE node, when new VM will be created",
                        "required only for C(state=present)",
                        "for another states will be autodiscovered"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "type": "boolean",
                    "description": [
                        "forcing operations",
                        "can be used only with states C(present), C(stopped), C(restarted)",
                        "with C(state=present) force option allow to overwrite existing container",
                        "with states C(stopped) , C(restarted) allow to force stop instance"
                    ]
                },
                "cpuunits": {
                    "default": 1000,
                    "required": false,
                    "type": "integer",
                    "description": [
                        "CPU weight for a VM"
                    ]
                },
                "vmid": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the instance id"
                    ]
                },
                "api_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the password to authenticate with",
                        "you can use PROXMOX_PASSWORD environment variable"
                    ]
                },
                "cpus": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "numbers of allocated cpus for instance"
                    ]
                },
                "ostemplate": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the template for VM creating",
                        "required only for C(state=present)"
                    ]
                },
                "disk": {
                    "default": 3,
                    "required": false,
                    "description": [
                        "hard disk size in GB for instance"
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "type": "string",
                    "description": [
                        "specifies the address the container will be assigned"
                    ]
                },
                "api_host": {
                    "required": true,
                    "description": [
                        "the host of the Proxmox VE cluster"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the instance root password",
                        "required only for C(state=present)"
                    ]
                },
                "searchdomain": {
                    "default": null,
                    "required": false,
                    "type": "string",
                    "description": [
                        "sets DNS search domain for a container"
                    ]
                },
                "netif": {
                    "default": null,
                    "required": false,
                    "type": "A hash/dictionary defining interfaces",
                    "description": [
                        "specifies network interfaces for the container"
                    ]
                },
                "api_user": {
                    "required": true,
                    "description": [
                        "the user to authenticate with"
                    ]
                },
                "hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the instance hostname",
                        "required only for C(state=present)"
                    ]
                },
                "storage": {
                    "default": "local",
                    "required": false,
                    "type": "string",
                    "description": [
                        "target storage"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the instance"
                    ],
                    "choices": [
                        "present",
                        "started",
                        "absent",
                        "stopped",
                        "restarted"
                    ]
                },
                "swap": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "swap memory size in MB for instance"
                    ]
                },
                "timeout": {
                    "default": 30,
                    "required": false,
                    "type": "integer",
                    "description": [
                        "timeout for operations"
                    ]
                },
                "memory": {
                    "default": 512,
                    "required": false,
                    "description": [
                        "memory size in MB for instance"
                    ]
                },
                "nameserver": {
                    "default": null,
                    "required": false,
                    "type": "string",
                    "description": [
                        "sets DNS server IP address for a container"
                    ]
                },
                "validate_certs": {
                    "default": false,
                    "required": false,
                    "type": "boolean",
                    "description": [
                        "enable / disable https certificate verification"
                    ]
                },
                "onboot": {
                    "default": false,
                    "required": false,
                    "type": "boolean",
                    "description": [
                        "specifies whether a VM will be started during system bootup"
                    ]
                }
            },
            "module": "proxmox"
        },
        {
            "short_description": "management of OS templates in Proxmox VE cluster",
            "deprecated": null,
            "options": {
                "node": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Proxmox VE node, when you will operate with template"
                    ]
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to uploaded file",
                        "required only for C(state=present)"
                    ],
                    "aliases": [
                        "path"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "type": "boolean",
                    "description": [
                        "can be used only with C(state=present), exists template will be overwritten"
                    ]
                },
                "api_host": {
                    "required": true,
                    "description": [
                        "the host of the Proxmox VE cluster"
                    ]
                },
                "api_user": {
                    "required": true,
                    "description": [
                        "the user to authenticate with"
                    ]
                },
                "api_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the password to authenticate with",
                        "you can use PROXMOX_PASSWORD environment variable"
                    ]
                },
                "storage": {
                    "default": "local",
                    "required": false,
                    "type": "string",
                    "description": [
                        "target storage"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the template"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "content_type": {
                    "default": "vztmpl",
                    "required": false,
                    "description": [
                        "content type",
                        "required only for C(state=present)"
                    ],
                    "choices": [
                        "vztmpl",
                        "iso"
                    ]
                },
                "timeout": {
                    "default": 30,
                    "required": false,
                    "type": "integer",
                    "description": [
                        "timeout for operations"
                    ]
                },
                "validate_certs": {
                    "default": false,
                    "required": false,
                    "type": "boolean",
                    "description": [
                        "enable / disable https certificate verification"
                    ]
                },
                "template": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the template name",
                        "required only for states C(absent), C(info)"
                    ]
                }
            },
            "module": "proxmox_template"
        },
        {
            "short_description": "Runs puppet",
            "deprecated": null,
            "options": {
                "logdest": {
                    "default": "stdout",
                    "required": false,
                    "description": [
                        "Where the puppet logs should go, if puppet apply is being used"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "stdout",
                        "syslog"
                    ]
                },
                "execute": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Execute a specific piece of Puppet code. It has no effect with a puppetmaster."
                    ],
                    "version_added": "2.1"
                },
                "facter_basename": {
                    "default": "ansible",
                    "required": false,
                    "description": [
                        "Basename of the facter output file"
                    ]
                },
                "tags": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A comma-separated list of puppet tags to be used."
                    ],
                    "version_added": "2.1"
                },
                "puppetmaster": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The hostname of the puppetmaster to contact."
                    ]
                },
                "certname": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name to use when handling certificates."
                    ],
                    "version_added": "2.1"
                },
                "manifest": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Path to the manifest file to run puppet apply on."
                    ]
                },
                "environment": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Puppet environment to be used."
                    ]
                },
                "timeout": {
                    "default": "30m",
                    "required": false,
                    "description": [
                        "How long to wait for I(puppet) to finish."
                    ]
                },
                "facts": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "A dict of values to pass in as persistent external facter facts"
                    ]
                }
            },
            "module": "puppet"
        },
        {
            "short_description": "Sends notifications to Pushbullet",
            "deprecated": null,
            "options": {
                "body": {
                    "required": false,
                    "description": [
                        "Body of the notification, e.g. Details of the fault you're alerting."
                    ]
                },
                "title": {
                    "required": true,
                    "description": [
                        "Title of the notification."
                    ]
                },
                "device": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The device NAME you wish to send a push notification, as seen on the Pushbullet main page."
                    ]
                },
                "push_type": {
                    "default": "note",
                    "required": false,
                    "description": [
                        "Thing you wish to push."
                    ],
                    "choices": [
                        "note",
                        "link"
                    ]
                },
                "api_key": {
                    "required": true,
                    "description": [
                        "Push bullet API token"
                    ]
                },
                "channel": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The channel TAG you wish to broadcast a push notification, as seen on the \"My Channels\" > \"Edit your channel\" at Pushbullet page."
                    ]
                }
            },
            "module": "pushbullet"
        },
        {
            "short_description": "Send notifications via U(https://pushover.net)",
            "deprecated": null,
            "options": {
                "msg": {
                    "required": true,
                    "description": [
                        "What message you wish to send."
                    ]
                },
                "user_key": {
                    "required": true,
                    "description": [
                        "Pushover issued authentication key for your user."
                    ]
                },
                "app_token": {
                    "required": true,
                    "description": [
                        "Pushover issued token identifying your pushover app."
                    ]
                },
                "pri": {
                    "required": false,
                    "description": [
                        "Message priority (see U(https://pushover.net) for details.)"
                    ]
                }
            },
            "module": "pushover"
        },
        {
            "short_description": "This module manages rabbitMQ bindings",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 15672,
                    "required": false,
                    "description": [
                        "rabbitMQ management api port"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "source exchange to create binding on"
                    ],
                    "aliases": [
                        "src",
                        "source"
                    ]
                },
                "login_user": {
                    "default": "guest",
                    "required": false,
                    "description": [
                        "rabbitMQ user for connection"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "rabbitMQ host for connection"
                    ]
                },
                "destination": {
                    "required": true,
                    "description": [
                        "destination exchange or queue for the binding"
                    ],
                    "aliases": [
                        "dst",
                        "dest"
                    ]
                },
                "routing_key": {
                    "default": "#",
                    "required": false,
                    "description": [
                        "routing key for the binding",
                        "default is"
                    ]
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "rabbitMQ virtual host",
                        "default vhost is /"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the exchange should be present or absent",
                        "Only present implemented atm"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "arguments": {
                    "default": {},
                    "required": false,
                    "description": [
                        "extra arguments for exchange. If defined this argument is a key/value dictionary"
                    ]
                },
                "login_password": {
                    "default": false,
                    "required": false,
                    "description": [
                        "rabbitMQ password for connection"
                    ]
                },
                "destination_type": {
                    "choices": [
                        "queue",
                        "exchange"
                    ],
                    "required": true,
                    "description": [
                        "Either queue or exchange"
                    ],
                    "aliases": [
                        "type",
                        "dest_type"
                    ]
                }
            },
            "module": "rabbitmq_binding"
        },
        {
            "short_description": "This module manages rabbitMQ exchanges",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 15672,
                    "required": false,
                    "description": [
                        "rabbitMQ management api port"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the exchange to create"
                    ]
                },
                "login_user": {
                    "default": "guest",
                    "required": false,
                    "description": [
                        "rabbitMQ user for connection"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "rabbitMQ host for connection"
                    ]
                },
                "durable": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether exchange is durable or not"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "exchange_type": {
                    "default": "direct",
                    "choices": [
                        "fanout",
                        "direct",
                        "headers",
                        "topic"
                    ],
                    "required": false,
                    "description": [
                        "type for the exchange"
                    ],
                    "aliases": [
                        "type"
                    ]
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "rabbitMQ virtual host"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the exchange should be present or absent",
                        "Only present implemented atm"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "internal": {
                    "default": false,
                    "required": false,
                    "description": [
                        "exchange is available only for other exchanges"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "arguments": {
                    "default": {},
                    "required": false,
                    "description": [
                        "extra arguments for exchange. If defined this argument is a key/value dictionary"
                    ]
                },
                "login_password": {
                    "default": false,
                    "required": false,
                    "description": [
                        "rabbitMQ password for connection"
                    ]
                },
                "auto_delete": {
                    "default": false,
                    "required": false,
                    "description": [
                        "if the exchange should delete itself after all queues/exchanges unbound from it"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rabbitmq_exchange"
        },
        {
            "short_description": "Adds or removes parameters to RabbitMQ",
            "deprecated": null,
            "options": {
                "node": {
                    "default": "rabbit",
                    "required": false,
                    "description": [
                        "erlang node name of the rabbit we wish to configure"
                    ],
                    "version_added": "1.2"
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "vhost to apply access privileges."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify if user is to be added or removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the parameter being set"
                    ]
                },
                "component": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the component of which the parameter is being set"
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Value of the parameter, as a JSON term"
                    ]
                }
            },
            "module": "rabbitmq_parameter"
        },
        {
            "short_description": "Adds or removes plugins to RabbitMQ",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "enabled",
                    "required": false,
                    "description": [
                        "Specify if plugins are to be enabled or disabled"
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "new_only": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Only enable missing plugins",
                        "Does not disable plugins that are not in the names list"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "prefix": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specify a custom install prefix to a Rabbit"
                    ],
                    "version_added": "1.3"
                },
                "names": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Comma-separated list of plugin names"
                    ],
                    "aliases": [
                        "name"
                    ]
                }
            },
            "module": "rabbitmq_plugin"
        },
        {
            "short_description": "Manage the state of policies in RabbitMQ.",
            "deprecated": null,
            "options": {
                "node": {
                    "default": "rabbit",
                    "required": false,
                    "description": [
                        "Erlang node name of the rabbit we wish to configure."
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The name of the policy to manage."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": true,
                    "description": [
                        "A dict or string describing the policy."
                    ]
                },
                "pattern": {
                    "default": null,
                    "required": true,
                    "description": [
                        "A regex of queues to apply the policy to."
                    ]
                },
                "priority": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "The priority of the policy."
                    ]
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "The name of the vhost to apply to."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "The state of the policy."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "apply_to": {
                    "default": "all",
                    "required": false,
                    "description": [
                        "What the policy applies to. Requires RabbitMQ 3.2.0 or later."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "all",
                        "exchanges",
                        "queues"
                    ]
                }
            },
            "module": "rabbitmq_policy"
        },
        {
            "short_description": "This module manages rabbitMQ queues",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 15672,
                    "required": false,
                    "description": [
                        "rabbitMQ management api port"
                    ]
                },
                "dead_letter_exchange": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Optional name of an exchange to which messages will be republished if they",
                        "are rejected or expire"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the queue to create"
                    ]
                },
                "durable": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether queue is durable or not"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "login_user": {
                    "default": "guest",
                    "required": false,
                    "description": [
                        "rabbitMQ user for connection"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "rabbitMQ host for connection"
                    ]
                },
                "login_password": {
                    "default": false,
                    "required": false,
                    "description": [
                        "rabbitMQ password for connection"
                    ]
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "rabbitMQ virtual host"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the queue should be present or absent",
                        "Only present implemented atm"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "max_length": {
                    "default": "no limit",
                    "required": false,
                    "description": [
                        "How many messages can the queue contain before it starts rejecting"
                    ]
                },
                "arguments": {
                    "default": {},
                    "required": false,
                    "description": [
                        "extra arguments for queue. If defined this argument is a key/value dictionary"
                    ]
                },
                "message_ttl": {
                    "default": "forever",
                    "required": false,
                    "description": [
                        "How long a message can live in queue before it is discarded (milliseconds)"
                    ]
                },
                "auto_expires": {
                    "default": "forever",
                    "required": false,
                    "description": [
                        "How long a queue can be unused before it is automatically deleted (milliseconds)"
                    ]
                },
                "dead_letter_routing_key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Optional replacement routing key to use when a message is dead-lettered.",
                        "Original routing key will be used if unset"
                    ]
                },
                "auto_delete": {
                    "default": false,
                    "required": false,
                    "description": [
                        "if the queue should delete itself after all queues/queues unbound from it"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rabbitmq_queue"
        },
        {
            "short_description": "Adds or removes users to RabbitMQ",
            "deprecated": null,
            "options": {
                "node": {
                    "default": "rabbit",
                    "required": false,
                    "description": [
                        "erlang node name of the rabbit we wish to configure"
                    ],
                    "version_added": "1.2"
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Deletes and recreates the user."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "User tags specified as comma delimited"
                    ]
                },
                "read_priv": {
                    "default": "^$",
                    "required": false,
                    "description": [
                        "Regular expression to restrict configure actions on a resource for the specified vhost.",
                        "By default all actions are restricted.",
                        "This option will be ignored when permissions option is used."
                    ]
                },
                "write_priv": {
                    "default": "^$",
                    "required": false,
                    "description": [
                        "Regular expression to restrict configure actions on a resource for the specified vhost.",
                        "By default all actions are restricted.",
                        "This option will be ignored when permissions option is used."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify if user is to be added or removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "user": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of user to add"
                    ],
                    "aliases": [
                        "username",
                        "name"
                    ]
                },
                "configure_priv": {
                    "default": "^$",
                    "required": false,
                    "description": [
                        "Regular expression to restrict configure actions on a resource for the specified vhost.",
                        "By default all actions are restricted.",
                        "This option will be ignored when permissions option is used."
                    ]
                },
                "vhost": {
                    "default": "/",
                    "required": false,
                    "description": [
                        "vhost to apply access privileges.",
                        "This option will be ignored when permissions option is used."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password of user to add.",
                        "To change the password of an existing user, you must also specify C(force=yes)."
                    ]
                },
                "permissions": {
                    "default": [],
                    "required": false,
                    "description": [
                        "a list of dicts, each dict contains vhost, configure_priv, write_priv, and read_priv, and represents a permission rule for that vhost.",
                        "This option should be preferable when you care about all permissions of the user.",
                        "You should use vhost, configure_priv, write_priv, and read_priv options instead if you care about permissions for just some vhosts."
                    ]
                }
            },
            "module": "rabbitmq_user"
        },
        {
            "short_description": "Manage the state of a virtual host in RabbitMQ",
            "deprecated": null,
            "options": {
                "node": {
                    "default": "rabbit",
                    "required": false,
                    "description": [
                        "erlang node name of the rabbit we wish to configure"
                    ],
                    "version_added": "1.2"
                },
                "tracing": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "description": [
                        "Enable/disable tracing for a vhost"
                    ],
                    "aliases": [
                        "trace"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "The state of vhost"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The name of the vhost to manage"
                    ],
                    "aliases": [
                        "vhost"
                    ]
                }
            },
            "module": "rabbitmq_vhost"
        },
        {
            "short_description": "Executes a low-down and dirty SSH command",
            "deprecated": null,
            "options": {
                "free_form": {
                    "required": true,
                    "description": [
                        "the raw module takes a free form command to run"
                    ]
                },
                "executable": {
                    "required": false,
                    "description": [
                        "change the shell used to execute the command. Should be an absolute path to the executable.",
                        "when using privilege escalation (C(become)), a default shell will be assigned if one is not provided as privilege escalation requires a shell."
                    ],
                    "version_added": "1.0"
                }
            },
            "module": "raw"
        },
        {
            "short_description": "create / delete an instance in Rackspace Public Cloud",
            "deprecated": null,
            "options": {
                "files": {
                    "default": null,
                    "description": [
                        "Files to insert into the instance. remotefilename:localcontent"
                    ]
                },
                "boot_volume_terminate": {
                    "default": false,
                    "description": [
                        "Whether the I(boot_volume) or newly created volume from I(image) will be terminated when the server is terminated"
                    ],
                    "version_added": 1.9
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "auto_increment": {
                    "default": true,
                    "description": [
                        "Whether or not to increment a single number with the name of the created servers. Only applicable when used with the I(group) attribute or meta key."
                    ],
                    "version_added": 1.5,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "image": {
                    "default": null,
                    "description": [
                        "image to use for the instance. Can be an C(id), C(human_id) or C(name). With I(boot_from_volume), a Cloud Block Storage volume will be created with this image"
                    ]
                },
                "user_data": {
                    "description": [
                        "Data to be uploaded to the servers config drive. This option implies I(config_drive). Can be a file path or a string"
                    ],
                    "version_added": 1.7
                },
                "boot_volume": {
                    "description": [
                        "Cloud Block Storage ID or Name to use as the boot volume of the instance"
                    ],
                    "version_added": 1.9
                },
                "count_offset": {
                    "default": 1,
                    "description": [
                        "number count to start at"
                    ],
                    "version_added": 1.4
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of metadata to associate with the instance"
                    ]
                },
                "instance_ids": {
                    "description": [
                        "list of instance ids, currently only used when state='absent' to remove instances"
                    ],
                    "version_added": 1.4
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "flavor": {
                    "default": null,
                    "description": [
                        "flavor to use for the instance"
                    ]
                },
                "networks": {
                    "default": [
                        "public",
                        "private"
                    ],
                    "description": [
                        "The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces. Can be C(id) or C(label)."
                    ],
                    "version_added": 1.4
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "boot_from_volume": {
                    "default": "no",
                    "description": [
                        "Whether or not to boot the instance from a Cloud Block Storage volume. If C(yes) and I(image) is specified a new volume will be created at boot time. I(boot_volume_size) is required with I(image) to create a new volume at boot time."
                    ],
                    "version_added": 1.9,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "group": {
                    "description": [
                        "host group to assign to server, is also used for idempotent operations to ensure a specific number of instances"
                    ],
                    "version_added": 1.4
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name to give the instance"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "extra_client_args": {
                    "description": [
                        "A hash of key/value pairs to be used when creating the cloudservers client. This is considered an advanced option, use it wisely and with caution."
                    ],
                    "version_added": 1.6
                },
                "exact_count": {
                    "default": false,
                    "description": [
                        "Explicitly ensure an exact count of instances, used with state=active/present. If specified as C(yes) and I(count) is less than the servers matched, servers will be deleted to match the count. If the number of matched servers is fewer than specified in I(count) additional servers will be added."
                    ],
                    "version_added": 1.4,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "disk_config": {
                    "default": "auto",
                    "description": [
                        "Disk partitioning strategy"
                    ],
                    "version_added": "1.4",
                    "choices": [
                        "auto",
                        "manual"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "count": {
                    "default": 1,
                    "description": [
                        "number of instances to launch"
                    ],
                    "version_added": 1.4
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "key_name": {
                    "default": null,
                    "description": [
                        "key pair to use on the instance"
                    ],
                    "aliases": [
                        "keypair"
                    ]
                },
                "boot_volume_size": {
                    "default": 100,
                    "description": [
                        "Size of the volume to create in Gigabytes. This is only required with I(image) and I(boot_from_volume)."
                    ],
                    "version_added": 1.9
                },
                "extra_create_args": {
                    "description": [
                        "A hash of key/value pairs to be used when creating a new server. This is considered an advanced option, use it wisely and with caution."
                    ],
                    "version_added": 1.6
                },
                "config_drive": {
                    "default": false,
                    "description": [
                        "Attach read-only configuration drive to server as label config-2"
                    ],
                    "version_added": 1.7,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rax"
        },
        {
            "short_description": "Manipulate Rackspace Cloud Block Storage Volumes",
            "deprecated": null,
            "options": {
                "size": {
                    "default": 100,
                    "required": true,
                    "description": [
                        "Size of the volume to create in Gigabytes"
                    ]
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "description": {
                    "default": null,
                    "description": [
                        "Description to give the volume being created"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "image": {
                    "default": null,
                    "description": [
                        "image to use for bootable volumes. Can be an C(id), C(human_id) or C(name). This option requires C(pyrax>=1.9.3)"
                    ],
                    "version_added": 1.9
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "volume_type": {
                    "default": "SATA",
                    "required": true,
                    "description": [
                        "Type of the volume being created"
                    ],
                    "choices": [
                        "SATA",
                        "SSD"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of metadata to associate with the volume"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "snapshot_id": {
                    "default": null,
                    "description": [
                        "The id of the snapshot to create the volume from"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the volume to be in state 'available' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name to give the volume being created"
                    ]
                }
            },
            "module": "rax_cbs"
        },
        {
            "short_description": "Manipulate Rackspace Cloud Block Storage Volume Attachments",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "volume": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name or id of the volume to attach/detach"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "device": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The device path to attach the volume to, e.g. /dev/xvde"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the volume to be in 'in-use'/'available' state before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "server": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name or id of the server to attach/detach"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                }
            },
            "module": "rax_cbs_attachments"
        },
        {
            "short_description": "create/delete or resize a Rackspace Cloud Databases instance",
            "deprecated": null,
            "options": {
                "cdb_type": {
                    "default": "MySQL",
                    "description": [
                        "type of instance (i.e. MySQL, MariaDB, Percona)"
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "type"
                    ]
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name of the databases server instance"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "cdb_version": {
                    "choices": [
                        "5.1",
                        "5.6",
                        "10"
                    ],
                    "description": [
                        "version of database (MySQL supports 5.1 and 5.6, MariaDB supports 10, Percona supports 5.6)"
                    ],
                    "version_added": "2.0",
                    "aliases": [
                        "version"
                    ]
                },
                "volume": {
                    "default": 2,
                    "description": [
                        "Volume size of the database 1-150GB"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "flavor": {
                    "default": 1,
                    "description": [
                        "flavor to use for the instance 1 to 6 (i.e. 512MB to 16GB)"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the instance to be in state 'running' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rax_cdb"
        },
        {
            "short_description": "create / delete a database in the Cloud Databases",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name to give to the database"
                    ]
                },
                "cdb_id": {
                    "default": null,
                    "description": [
                        "The databases server UUID"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "collate": {
                    "default": "utf8_general_ci",
                    "description": [
                        "Set of rules for comparing characters in a character set"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "character_set": {
                    "default": "utf8",
                    "description": [
                        "Set of symbols and encodings"
                    ]
                }
            },
            "module": "rax_cdb_database"
        },
        {
            "short_description": "create / delete a Rackspace Cloud Database",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "db_password": {
                    "default": null,
                    "description": [
                        "Database user password"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "databases": {
                    "default": [],
                    "description": [
                        "Name of the databases that the user can access"
                    ]
                },
                "host": {
                    "default": "%",
                    "description": [
                        "Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or \"%\" to allow connecting from any host"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "db_username": {
                    "default": null,
                    "description": [
                        "Name of the database user"
                    ]
                },
                "cdb_id": {
                    "default": null,
                    "description": [
                        "The databases server UUID"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                }
            },
            "module": "rax_cdb_user"
        },
        {
            "short_description": "create / delete a load balancer in Rackspace Public Cloud",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "protocol": {
                    "default": "HTTP",
                    "description": [
                        "Protocol for the balancer being created"
                    ],
                    "choices": [
                        "DNS_TCP",
                        "DNS_UDP",
                        "FTP",
                        "HTTP",
                        "HTTPS",
                        "IMAPS",
                        "IMAPv4",
                        "LDAP",
                        "LDAPS",
                        "MYSQL",
                        "POP3",
                        "POP3S",
                        "SMTP",
                        "TCP",
                        "TCP_CLIENT_FIRST",
                        "UDP",
                        "UDP_STREAM",
                        "SFTP"
                    ]
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name to give the load balancer"
                    ]
                },
                "algorithm": {
                    "default": "LEAST_CONNECTIONS",
                    "description": [
                        "algorithm for the balancer being created"
                    ],
                    "choices": [
                        "RANDOM",
                        "LEAST_CONNECTIONS",
                        "ROUND_ROBIN",
                        "WEIGHTED_LEAST_CONNECTIONS",
                        "WEIGHTED_ROUND_ROBIN"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "vip_id": {
                    "description": [
                        "Virtual IP ID to use when creating the load balancer for purposes of sharing an IP with another load balancer of another protocol"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of metadata to associate with the instance"
                    ]
                },
                "timeout": {
                    "default": 30,
                    "description": [
                        "timeout for communication between the balancer and the node"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "type": {
                    "default": "PUBLIC",
                    "description": [
                        "type of interface for the balancer being created"
                    ],
                    "choices": [
                        "PUBLIC",
                        "SERVICENET"
                    ]
                },
                "port": {
                    "default": 80,
                    "description": [
                        "Port for the balancer being created"
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the balancer to be in state 'running' before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rax_clb"
        },
        {
            "short_description": "add, modify and remove nodes from a Rackspace Cloud Load Balancer",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "weight": {
                    "required": false,
                    "description": [
                        "Weight of node"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "load_balancer_id": {
                    "required": true,
                    "type": "integer",
                    "description": [
                        "Load balancer id"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicate desired state of the node"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 30,
                    "required": false,
                    "type": "integer",
                    "description": [
                        "How long to wait before giving up and returning an error"
                    ]
                },
                "condition": {
                    "required": false,
                    "description": [
                        "Condition for the node, which determines its role within the load balancer"
                    ],
                    "choices": [
                        "enabled",
                        "disabled",
                        "draining"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "address": {
                    "required": false,
                    "description": [
                        "IP address or domain name of the node"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "type": {
                    "required": false,
                    "description": [
                        "Type of node"
                    ],
                    "choices": [
                        "primary",
                        "secondary"
                    ]
                },
                "port": {
                    "required": false,
                    "type": "integer",
                    "description": [
                        "Port number of the load balanced service on the node"
                    ]
                },
                "node_id": {
                    "required": false,
                    "type": "integer",
                    "description": [
                        "Node id"
                    ]
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Wait for the load balancer to become active before returning"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rax_clb_nodes"
        },
        {
            "short_description": "Manage SSL termination for a Rackspace Cloud Load Balancer.",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "private_key": {
                    "description": [
                        "The private SSL key as a string in PEM format."
                    ]
                },
                "certificate": {
                    "description": [
                        "The public SSL certificates as a string in PEM format."
                    ]
                },
                "enabled": {
                    "default": true,
                    "description": [
                        "If set to \"false\", temporarily disable SSL termination without discarding",
                        "existing credentials."
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "https_redirect": {
                    "description": [
                        "If \"true\", the load balancer will redirect HTTP traffic to HTTPS.",
                        "Requires \"secure_traffic_only\" to be true. Incurs an implicit wait if SSL",
                        "termination is also applied or removed."
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "If set to \"present\", SSL termination will be added to this load balancer.",
                        "If \"absent\", SSL termination will be removed instead."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "How long before \"wait\" gives up, in seconds."
                    ]
                },
                "intermediate_certificate": {
                    "description": [
                        "One or more intermediate certificate authorities as a string in PEM",
                        "format, concatenated into a single string."
                    ]
                },
                "secure_traffic_only": {
                    "default": false,
                    "description": [
                        "If \"true\", the load balancer will *only* accept secure traffic."
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "secure_port": {
                    "default": 443,
                    "description": [
                        "The port to listen for secure traffic."
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "loadbalancer": {
                    "required": true,
                    "description": [
                        "Name or ID of the load balancer on which to manage SSL termination."
                    ]
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Wait for the balancer to be in state \"running\" before turning."
                    ]
                }
            },
            "module": "rax_clb_ssl"
        },
        {
            "short_description": "Manage domains on Rackspace Cloud DNS",
            "deprecated": null,
            "options": {
                "comment": {
                    "description": [
                        "Brief description of the domain. Maximum length of 160 characters"
                    ]
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "name": {
                    "description": [
                        "Domain name to create"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "ttl": {
                    "default": 3600,
                    "description": [
                        "Time to live of domain in seconds"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "email": {
                    "description": [
                        "Email address of the domain administrator"
                    ]
                }
            },
            "module": "rax_dns"
        },
        {
            "short_description": "Manage DNS records on Rackspace Cloud DNS",
            "deprecated": null,
            "options": {
                "comment": {
                    "description": [
                        "Brief description of the domain. Maximum length of 160 characters"
                    ]
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "domain": {
                    "description": [
                        "Domain name to create the record in. This is an invalid option when type=PTR"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "FQDN record name to create"
                    ]
                },
                "data": {
                    "required": true,
                    "description": [
                        "IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "server": {
                    "description": [
                        "Server ID to create a PTR record for. Only used with type=PTR"
                    ],
                    "version_added": 1.7
                },
                "priority": {
                    "description": [
                        "Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer from 0 to 65535."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "loadbalancer": {
                    "description": [
                        "Load Balancer ID to create a PTR record for. Only used with type=PTR"
                    ],
                    "version_added": 1.7
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "ttl": {
                    "default": 3600,
                    "description": [
                        "Time to live of record in seconds"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "type": {
                    "required": true,
                    "description": [
                        "DNS record type"
                    ],
                    "choices": [
                        "A",
                        "AAAA",
                        "CNAME",
                        "MX",
                        "NS",
                        "SRV",
                        "TXT",
                        "PTR"
                    ]
                },
                "overwrite": {
                    "default": true,
                    "description": [
                        "Add new records if data doesn't match, instead of updating existing record with matching name. If there are already multiple records with matching name and overwrite=true, this module will fail."
                    ],
                    "version_added": 2.1
                }
            },
            "module": "rax_dns_record"
        },
        {
            "short_description": "Gather facts for Rackspace Cloud Servers",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "name": {
                    "default": null,
                    "description": [
                        "Server name to retrieve facts for"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "address": {
                    "description": [
                        "Server IP address to retrieve facts for, will match any IP assigned to the server"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "id": {
                    "description": [
                        "Server ID to retrieve facts for"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_facts"
        },
        {
            "short_description": "Manipulate Rackspace Cloud Files Containers",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "web_index": {
                    "description": [
                        "Sets an object to be presented as the HTTP index page when accessed by the CDN URL"
                    ]
                },
                "container": {
                    "required": true,
                    "description": [
                        "The container to use for container or metadata operations."
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "private": {
                    "description": [
                        "Used to set a container as private, removing it from the CDN.  B(Warning!) Private containers, if previously made public, can have live objects available until the TTL on cached objects expires"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "clear_meta": {
                    "default": "no",
                    "description": [
                        "Optionally clear existing metadata when applying metadata to existing containers. Selecting this option is only appropriate when setting type=meta"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "meta": {
                    "description": [
                        "A hash of items to set as metadata values on a container"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "ttl": {
                    "description": [
                        "In seconds, set a container-wide TTL for all objects cached on CDN edge nodes. Setting a TTL is only appropriate for containers that are public"
                    ]
                },
                "web_error": {
                    "description": [
                        "Sets an object to be presented as the HTTP error page when accessed by the CDN URL"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "type": {
                    "default": "file",
                    "description": [
                        "Type of object to do work on, i.e. metadata object or a container object"
                    ],
                    "choices": [
                        "file",
                        "meta"
                    ]
                },
                "public": {
                    "description": [
                        "Used to set a container as public, available via the Cloud Files CDN"
                    ]
                }
            },
            "module": "rax_files"
        },
        {
            "short_description": "Upload, download, and delete objects in Rackspace Cloud Files",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "src": {
                    "default": null,
                    "description": [
                        "Source from which to upload files.  Used to specify a remote object as a source for an operation, i.e. a file name, \"file1\", or a comma-separated list of remote objects, \"file1,file2,file17\".  src and dest are mutually exclusive on remote-only object operations"
                    ]
                },
                "container": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The container to use for file object operations."
                    ]
                },
                "dest": {
                    "description": [
                        "The destination of a \"get\" operation; i.e. a local directory, \"/home/user/myfolder\". Used to specify the destination of an operation on a remote object; i.e. a file name, \"file1\", or a comma-separated list of remote objects, \"file1,file2,file17\""
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "expires": {
                    "default": null,
                    "description": [
                        "Used to set an expiration on a file or folder uploaded to Cloud Files. Requires an integer, specifying expiration in seconds"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "clear_meta": {
                    "default": "no",
                    "description": [
                        "Optionally clear existing metadata when applying metadata to existing objects. Selecting this option is only appropriate when setting type=meta"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of items to set as metadata values on an uploaded file or folder"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "type": {
                    "default": "file",
                    "description": [
                        "Type of object to do work on",
                        "Metadata object or a file object"
                    ],
                    "choices": [
                        "file",
                        "meta"
                    ]
                },
                "method": {
                    "default": "get",
                    "description": [
                        "The method of operation to be performed.  For example, put to upload files to Cloud Files, get to download files from Cloud Files or delete to delete remote objects in Cloud Files"
                    ],
                    "choices": [
                        "get",
                        "put",
                        "delete"
                    ]
                },
                "structure": {
                    "default": "yes",
                    "description": [
                        "Used to specify whether to maintain nested directory structure when downloading objects from Cloud Files.  Setting to false downloads the contents of a container to a single, flat directory"
                    ],
                    "choices": [
                        true,
                        "no"
                    ]
                }
            },
            "module": "rax_files_objects"
        },
        {
            "short_description": "Load Rackspace Cloud Identity",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_identity"
        },
        {
            "short_description": "Create a keypair for use with Rackspace Cloud Servers",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "public_key": {
                    "default": null,
                    "description": [
                        "Public Key string to upload. Can be a file path or string"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of keypair"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_keypair"
        },
        {
            "short_description": "Manipulate metadata for Rackspace Cloud Servers",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "name": {
                    "default": null,
                    "description": [
                        "Server name to modify metadata for"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of metadata to associate with the instance"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "address": {
                    "description": [
                        "Server IP address to modify metadata for, will match any IP assigned to the server"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "id": {
                    "description": [
                        "Server ID to modify metadata for"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_meta"
        },
        {
            "short_description": "Create or delete a Rackspace Cloud Monitoring alarm.",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "entity_id": {
                    "required": true,
                    "description": [
                        "ID of the entity this alarm is attached to. May be acquired by registering the value of a rax_mon_entity task."
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "notification_plan_id": {
                    "required": true,
                    "description": [
                        "ID of the notification plan to trigger if this alarm fires. May be acquired by registering the value of a rax_mon_notification_plan task."
                    ]
                },
                "check_id": {
                    "required": true,
                    "description": [
                        "ID of the check that should be alerted on. May be acquired by registering the value of a rax_mon_check task."
                    ]
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "required": true,
                    "description": [
                        "Friendly name for this alarm, used to achieve idempotence. Must be a String between 1 and 255 characters long."
                    ]
                },
                "disabled": {
                    "description": [
                        "If yes, create this alarm, but leave it in an inactive state. Defaults to no."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Ensure that the alarm with this C(label) exists or does not exist."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "criteria": {
                    "description": [
                        "Alarm DSL that describes alerting conditions and their output states. Must be between 1 and 16384 characters long. See http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/alerts-language.html for a reference on the alerting language."
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "metadata": {
                    "description": [
                        "Arbitrary key/value pairs to accompany the alarm. Must be a hash of String keys and values between 1 and 255 characters long."
                    ]
                }
            },
            "module": "rax_mon_alarm"
        },
        {
            "short_description": "Create or delete a Rackspace Cloud Monitoring check for an existing entity.",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "entity_id": {
                    "required": true,
                    "description": [
                        "ID of the rax_mon_entity to target with this check."
                    ]
                },
                "check_type": {
                    "required": true,
                    "description": [
                        "The type of check to create. C(remote.) checks may be created on any rax_mon_entity. C(agent.) checks may only be created on rax_mon_entities that have a non-null C(agent_id)."
                    ],
                    "choices": [
                        "remote.dns",
                        "remote.ftp-banner",
                        "remote.http",
                        "remote.imap-banner",
                        "remote.mssql-banner",
                        "remote.mysql-banner",
                        "remote.ping",
                        "remote.pop3-banner",
                        "remote.postgresql-banner",
                        "remote.smtp-banner",
                        "remote.smtp",
                        "remote.ssh",
                        "remote.tcp",
                        "remote.telnet-banner",
                        "agent.filesystem",
                        "agent.memory",
                        "agent.load_average",
                        "agent.cpu",
                        "agent.disk",
                        "agent.network",
                        "agent.plugin"
                    ]
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "period": {
                    "description": [
                        "The number of seconds between each time the check is performed. Must be greater than the minimum period set on your account."
                    ]
                },
                "disabled": {
                    "description": [
                        "If \"yes\", ensure the check is created, but don't actually use it yet."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "target_hostname": {
                    "description": [
                        "One of `target_hostname` and `target_alias` is required for remote.* checks, but prohibited for agent.* checks. The hostname this check should target. Must be a valid IPv4, IPv6, or FQDN."
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "target_alias": {
                    "description": [
                        "One of `target_alias` and `target_hostname` is required for remote.* checks, but prohibited for agent.* checks. Use the corresponding key in the entity's `ip_addresses` hash to resolve an IP address to target."
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "required": true,
                    "description": [
                        "Defines a label for this check, between 1 and 64 characters long."
                    ]
                },
                "state": {
                    "description": [
                        "Ensure that a check with this C(label) exists or does not exist."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "details": {
                    "description": [
                        "Additional details specific to the check type. Must be a hash of strings between 1 and 255 characters long, or an array or object containing 0 to 256 items."
                    ]
                },
                "timeout": {
                    "description": [
                        "The number of seconds this check will wait when attempting to collect results. Must be less than the period."
                    ]
                },
                "monitoring_zones_poll": {
                    "description": [
                        "Comma-separated list of the names of the monitoring zones the check should run from. Available monitoring zones include mzdfw, mzhkg, mziad, mzlon, mzord and mzsyd. Required for remote.* checks; prohibited for agent.* checks."
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "metadata": {
                    "description": [
                        "Hash of arbitrary key-value pairs to accompany this check if it fires. Keys and values must be strings between 1 and 255 characters long."
                    ]
                }
            },
            "module": "rax_mon_check"
        },
        {
            "short_description": "Create or delete a Rackspace Cloud Monitoring entity",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "required": true,
                    "description": [
                        "Defines a name for this entity. Must be a non-empty string between 1 and 255 characters long."
                    ]
                },
                "state": {
                    "description": [
                        "Ensure that an entity with this C(name) exists or does not exist."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "agent_id": {
                    "description": [
                        "Rackspace monitoring agent on the target device to which this entity is bound. Necessary to collect C(agent.) rax_mon_checks against this entity."
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "named_ip_addresses": {
                    "description": [
                        "Hash of IP addresses that may be referenced by name by rax_mon_checks added to this entity. Must be a dictionary of with keys that are names between 1 and 64 characters long, and values that are valid IPv4 or IPv6 addresses."
                    ]
                },
                "metadata": {
                    "description": [
                        "Hash of arbitrary C(name), C(value) pairs that are passed to associated rax_mon_alarms. Names and values must all be between 1 and 255 characters long."
                    ]
                }
            },
            "module": "rax_mon_entity"
        },
        {
            "short_description": "Create or delete a Rackspace Cloud Monitoring notification.",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "required": true,
                    "description": [
                        "Defines a friendly name for this notification. String between 1 and 255 characters long."
                    ]
                },
                "state": {
                    "description": [
                        "Ensure that the notification with this C(label) exists or does not exist."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "details": {
                    "required": true,
                    "description": [
                        "Dictionary of key-value pairs used to initialize the notification. Required keys and meanings vary with notification type. See http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/ service-notification-types-crud.html for details."
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "notification_type": {
                    "required": true,
                    "description": [
                        "A supported notification type."
                    ],
                    "choices": [
                        "webhook",
                        "email",
                        "pagerduty"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_mon_notification"
        },
        {
            "short_description": "Create or delete a Rackspace Cloud Monitoring notification plan.",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "warning_state": {
                    "description": [
                        "Notification list to use when the alarm state is WARNING. Must be an array of valid rax_mon_notification ids."
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "critical_state": {
                    "description": [
                        "Notification list to use when the alarm state is CRITICAL. Must be an array of valid rax_mon_notification ids."
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "required": true,
                    "description": [
                        "Defines a friendly name for this notification plan. String between 1 and 255 characters long."
                    ]
                },
                "ok_state": {
                    "description": [
                        "Notification list to use when the alarm state is OK. Must be an array of valid rax_mon_notification ids."
                    ]
                },
                "state": {
                    "description": [
                        "Ensure that the notification plan with this C(label) exists or does not exist."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_mon_notification_plan"
        },
        {
            "short_description": "create / delete an isolated network in Rackspace Public Cloud",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "identity_type": {
                    "default": "rackspace",
                    "description": [
                        "Authentication machanism to use, such as rackspace or keystone"
                    ],
                    "version_added": 1.5
                },
                "tenant_id": {
                    "description": [
                        "The tenant ID used for authentication"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "label": {
                    "default": null,
                    "description": [
                        "Label (name) to give the network"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "tenant_name": {
                    "description": [
                        "The tenant name used for authentication"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "cidr": {
                    "default": null,
                    "description": [
                        "cidr of the network being created"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "auth_endpoint": {
                    "default": "https://identity.api.rackspacecloud.com/v2.0/",
                    "description": [
                        "The URI of the authentication service"
                    ],
                    "version_added": 1.5
                }
            },
            "module": "rax_network"
        },
        {
            "short_description": "create / delete a queue in Rackspace Public Cloud",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "name": {
                    "default": null,
                    "description": [
                        "Name to give the queue"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                }
            },
            "module": "rax_queue"
        },
        {
            "short_description": "Manipulate Rackspace Cloud Autoscale Groups",
            "deprecated": null,
            "options": {
                "files": {
                    "default": null,
                    "description": [
                        "Files to insert into the instance. Hash of C(remotepath: localpath)"
                    ]
                },
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "key_name": {
                    "default": null,
                    "description": [
                        "key pair to use on the instance"
                    ]
                },
                "image": {
                    "required": true,
                    "description": [
                        "image to use for the instance. Can be an C(id), C(human_id) or C(name)"
                    ]
                },
                "user_data": {
                    "description": [
                        "Data to be uploaded to the servers config drive. This option implies I(config_drive). Can be a file path or a string"
                    ],
                    "version_added": 1.8
                },
                "min_entities": {
                    "required": true,
                    "description": [
                        "The minimum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "cooldown": {
                    "description": [
                        "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "flavor": {
                    "required": true,
                    "description": [
                        "flavor to use for the instance"
                    ]
                },
                "networks": {
                    "default": [
                        "public",
                        "private"
                    ],
                    "description": [
                        "The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces. Can be C(id) or C(label)."
                    ]
                },
                "wait": {
                    "default": "no",
                    "description": [
                        "wait for the scaling group to finish provisioning the minimum amount of servers"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "max_entities": {
                    "required": true,
                    "description": [
                        "The maximum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name to give the scaling group"
                    ]
                },
                "server_name": {
                    "required": true,
                    "description": [
                        "The base name for servers created by Autoscale"
                    ]
                },
                "loadbalancers": {
                    "description": [
                        "List of load balancer C(id) and C(port) hashes"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "disk_config": {
                    "default": "auto",
                    "description": [
                        "Disk partitioning strategy"
                    ],
                    "choices": [
                        "auto",
                        "manual"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "meta": {
                    "default": null,
                    "description": [
                        "A hash of metadata to associate with the instance"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "config_drive": {
                    "default": false,
                    "description": [
                        "Attach read-only configuration drive to server as label config-2"
                    ],
                    "version_added": 1.8,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "rax_scaling_group"
        },
        {
            "short_description": "Manipulate Rackspace Cloud Autoscale Scaling Policy",
            "deprecated": null,
            "options": {
                "username": {
                    "description": [
                        "Rackspace username (overrides I(credentials))"
                    ]
                },
                "is_percent": {
                    "default": false,
                    "description": [
                        "Whether the value in I(change) is a percent value"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name to give the policy"
                    ]
                },
                "scaling_group": {
                    "required": true,
                    "description": [
                        "Name of the scaling group that this policy will be added to"
                    ]
                },
                "env": {
                    "description": [
                        "Environment as configured in ~/.pyrax.cfg, see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)"
                    ],
                    "version_added": 1.5
                },
                "region": {
                    "default": "DFW",
                    "description": [
                        "Region to create an instance in"
                    ]
                },
                "verify_ssl": {
                    "description": [
                        "Whether or not to require SSL validation of API endpoints"
                    ],
                    "version_added": 1.5
                },
                "cron": {
                    "description": [
                        "The time when the policy will be executed, as a cron entry. For example, if this is parameter is set to C(1 0 * * *)"
                    ]
                },
                "desired_capacity": {
                    "description": [
                        "The desired server capacity of the scaling the group; that is, how many servers should be in the scaling group."
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the resource"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "cooldown": {
                    "description": [
                        "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
                    ]
                },
                "at": {
                    "description": [
                        "The UTC time when this policy will be executed. The time must be formatted according to C(yyyy-MM-dd'T'HH:mm:ss.SSS) such as C(2013-05-19T08:07:08Z)"
                    ]
                },
                "policy_type": {
                    "required": true,
                    "description": [
                        "The type of policy that will be executed for the current release."
                    ],
                    "choices": [
                        "webhook",
                        "schedule"
                    ]
                },
                "credentials": {
                    "default": null,
                    "description": [
                        "File to find the Rackspace credentials in (ignored if I(api_key) and I(username) are provided)"
                    ],
                    "aliases": [
                        "creds_file"
                    ]
                },
                "api_key": {
                    "description": [
                        "Rackspace API key (overrides I(credentials))"
                    ],
                    "aliases": [
                        "password"
                    ]
                },
                "change": {
                    "description": [
                        "The change, either as a number of servers or as a percentage, to make in the scaling group. If this is a percentage, you must set I(is_percent) to C(true) also."
                    ]
                }
            },
            "module": "rax_scaling_policy"
        },
        {
            "short_description": "create, delete, or modify an Amazon rds instance",
            "deprecated": null,
            "options": {
                "db_engine": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of database.  Used only when command=create."
                    ],
                    "choices": [
                        "MySQL",
                        "oracle-se1",
                        "oracle-se",
                        "oracle-ee",
                        "sqlserver-ee",
                        "sqlserver-se",
                        "sqlserver-ex",
                        "sqlserver-web",
                        "postgres"
                    ]
                },
                "iops": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the number of IOPS for the instance.  Used only when command=create or command=modify. Must be an integer greater than 1000."
                    ]
                },
                "backup_window": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Backup window in format of hh24:mi-hh24:mi.  If not specified then a random backup window is assigned. Used only when command=create or command=modify."
                    ]
                },
                "backup_retention": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of days backups are retained.  Set to 0 to disable backups.  Default is 1 day.  Valid range: 0-35. Used only when command=create or command=modify."
                    ]
                },
                "port": {
                    "default": "3306 for mysql, 1521 for Oracle, 1433 for SQL Server, 5432 for PostgreSQL.",
                    "required": false,
                    "description": [
                        "Port number that the DB instance uses for connections. Used only when command=create or command=replicate.",
                        "Prior to 2.0 it always defaults to null and the API would use 3306, it had to be set to other DB default values when not using MySql. Starting at 2.0 it auotmaticaly defaults to what is expected for each c(db_engine)."
                    ]
                },
                "security_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of one or more security groups.  Used only when command=create or command=modify."
                    ]
                },
                "size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Size in gigabytes of the initial storage for the DB instance. Used only when command=create or command=modify."
                    ]
                },
                "aws_secret_key": {
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "subnet": {
                    "default": null,
                    "required": false,
                    "description": [
                        "VPC subnet group.  If specified then a VPC instance is created. Used only when command=create."
                    ]
                },
                "vpc_security_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of one or more vpc security group ids. Also requires `subnet` to be specified. Used only when command=create or command=modify."
                    ]
                },
                "upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Indicates that minor version upgrades should be applied automatically. Used only when command=create or command=replicate."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "availability zone in which to launch the instance. Used only when command=create, command=replicate or command=restore."
                    ],
                    "aliases": [
                        "aws_zone",
                        "ec2_zone"
                    ]
                },
                "instance_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The instance type of the database.  Must be specified when command=create. Optional when command=replicate, command=modify or command=restore. If not specified then the replica inherits the same instance type as the source instance."
                    ]
                },
                "source_instance": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the database to replicate. Used only when command=replicate."
                    ]
                },
                "parameter_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the DB parameter group to associate with this instance.  If omitted then the RDS default DBParameterGroup will be used. Used only when command=create or command=modify."
                    ]
                },
                "command": {
                    "required": true,
                    "description": [
                        "Specifies the action to take. The 'reboot' option is available starting at version 2.0"
                    ],
                    "choices": [
                        "create",
                        "replicate",
                        "delete",
                        "facts",
                        "modify",
                        "promote",
                        "snapshot",
                        "reboot",
                        "restore"
                    ]
                },
                "multi_zone": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies if this is a Multi-availability-zone deployment. Can not be used in conjunction with zone parameter. Used only when command=create or command=modify."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "new_instance_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name to rename an instance to. Used only when command=modify."
                    ],
                    "version_added": "1.5"
                },
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Master database username. Used only when command=create."
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "tags dict to apply to a resource. Used with command=create, command=replicate, command=restore. Requires boto >= 2.26.0"
                    ],
                    "version_added": "1.9"
                },
                "db_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of a database to create within the instance.  If not specified then no database is created. Used only when command=create."
                    ]
                },
                "license_model": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The license model for this DB instance. Used only when command=create or command=restore."
                    ],
                    "choices": [
                        "license-included",
                        "bring-your-own-license",
                        "general-public-license",
                        "postgresql-license"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password for the master database username. Used only when command=create or command=modify."
                    ]
                },
                "apply_immediately": {
                    "default": false,
                    "description": [
                        "Used only when command=modify.  If enabled, the modifications will be applied as soon as possible rather than waiting for the next preferred maintenance window."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When command=create, replicate, modify or restore then wait for the database to enter the 'available' state.  When command=delete wait for the database to be terminated."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "character_set_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Associate the DB instance with a specified character set. Used with command=create."
                    ],
                    "version_added": "1.9"
                },
                "region": {
                    "required": true,
                    "description": [
                        "The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used."
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "option_group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The name of the option group to use.  If not specified then the default option group is used. Used only when command=create."
                    ]
                },
                "engine_version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Version number of the database engine to use. Used only when command=create. If not specified then the current Amazon RDS default engine version is used."
                    ]
                },
                "instance_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Database instance identifier. Required except when using command=facts or command=delete on just a snapshot"
                    ]
                },
                "force_failover": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Used only when command=reboot.  If enabled, the reboot is done using a MultiAZ failover."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "wait_timeout": {
                    "default": 300,
                    "description": [
                        "how long before wait gives up, in seconds"
                    ]
                },
                "snapshot": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of snapshot to take. When command=delete, if no snapshot name is provided then no snapshot is taken. If used with command=delete with no instance_name, the snapshot is deleted. Used with command=facts, command=delete or command=snapshot."
                    ]
                },
                "publicly_accessible": {
                    "default": null,
                    "required": false,
                    "description": [
                        "explicitly set whether the resource should be publicly accessible or not. Used with command=create, command=replicate. Requires boto >= 2.26.0"
                    ],
                    "version_added": "1.9"
                },
                "maint_window": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Maintenance window in format of ddd:hh24:mi-ddd:hh24:mi.  (Example: Mon:22:00-Mon:23:15) If not specified then a random maintenance window is assigned. Used only when command=create or command=modify."
                    ]
                }
            },
            "module": "rds"
        },
        {
            "short_description": "manage RDS parameter groups",
            "deprecated": null,
            "options": {
                "engine": {
                    "default": null,
                    "aliases": [],
                    "required": false,
                    "description": [
                        "The type of database for this group. Required for state=present."
                    ],
                    "choices": [
                        "aurora5.6",
                        "mariadb10.0",
                        "mysql5.1",
                        "mysql5.5",
                        "mysql5.6",
                        "oracle-ee-11.2",
                        "oracle-ee-12.1",
                        "oracle-se-11.2",
                        "oracle-se-12.1",
                        "oracle-se1-11.2",
                        "oracle-se1-12.1",
                        "postgres9.3",
                        "postgres9.4",
                        "sqlserver-ee-10.5",
                        "sqlserver-ee-11.0",
                        "sqlserver-ex-10.5",
                        "sqlserver-ex-11.0",
                        "sqlserver-ex-12.0",
                        "sqlserver-se-10.5",
                        "sqlserver-se-11.0",
                        "sqlserver-se-12.0",
                        "sqlserver-web-10.5",
                        "sqlserver-web-11.0",
                        "sqlserver-web-12.0"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Database parameter group identifier."
                    ],
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "immediate": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Whether to apply the changes immediately, or after the next reboot of any associated instances."
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "aliases": [],
                    "required": true,
                    "description": [
                        "Specifies whether the group should be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "params": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Map of parameter names and values. Numeric values may be represented as K for kilo (1024), M for mega (1024^2), G for giga (1024^3), or T for tera (1024^4), and these values will be expanded into the appropriate number before being set in the parameter group."
                    ],
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Database parameter group description. Only set when a new group is added."
                    ],
                    "aliases": []
                }
            },
            "module": "rds_param_group"
        },
        {
            "short_description": "manage RDS database subnet groups",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "subnets": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of subnet IDs that make up the database subnet group."
                    ],
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Database subnet group identifier."
                    ],
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "aliases": [],
                    "required": true,
                    "description": [
                        "Specifies whether the subnet should be present or absent."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Database subnet group description. Only set when a new group is added."
                    ],
                    "aliases": []
                }
            },
            "module": "rds_subnet_group"
        },
        {
            "short_description": "Manage Red Hat Network registration and subscriptions using the C(subscription-manager) command",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Red Hat Network username"
                    ]
                },
                "server_hostname": {
                    "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
                    "required": false,
                    "description": [
                        "Specify an alternative Red Hat Network server"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Red Hat Network password"
                    ]
                },
                "consumer_type": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of unit to register, defaults to system"
                    ],
                    "version_added": "2.1"
                },
                "org_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Organisation ID to use in conjunction with activationkey"
                    ],
                    "version_added": "2.0"
                },
                "consumer_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "References an existing consumer ID to resume using a previous registration for this system. If the  system's identity certificate is lost or corrupted, this option allows it to resume using its previous identity and subscriptions. The default is to not specify a consumer ID so a new ID is created."
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether to register and subscribe (C(present)), or unregister (C(absent)) a system"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "autosubscribe": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Upon successful registration, auto-consume available subscriptions"
                    ]
                },
                "activationkey": {
                    "default": null,
                    "required": false,
                    "description": [
                        "supply an activation key for use with registration"
                    ]
                },
                "server_insecure": {
                    "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
                    "required": false,
                    "description": [
                        "Enable or disable https server certificate verification when connecting to C(server_hostname)"
                    ]
                },
                "consumer_name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the system to register, defaults to the hostname"
                    ],
                    "version_added": "2.1"
                },
                "rhsm_baseurl": {
                    "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
                    "required": false,
                    "description": [
                        "Specify CDN baseurl"
                    ]
                },
                "pool": {
                    "default": "^$",
                    "required": false,
                    "description": [
                        "Specify a subscription pool name to consume.  Regular expressions accepted."
                    ]
                }
            },
            "module": "redhat_subscription"
        },
        {
            "short_description": "Various redis commands, slave and flush",
            "deprecated": null,
            "options": {
                "login_port": {
                    "default": 6379,
                    "required": false,
                    "description": [
                        "The port to connect to"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A redis config key."
                    ],
                    "version_added": 1.6
                },
                "flush_mode": {
                    "default": "all",
                    "required": false,
                    "description": [
                        "Type of flush (all the dbs in a redis instance or a specific one) [flush command]"
                    ],
                    "choices": [
                        "all",
                        "db"
                    ]
                },
                "master_host": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The host of the master instance [slave command]"
                    ]
                },
                "login_host": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "The host running the database"
                    ]
                },
                "master_port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The port of the master instance [slave command]"
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The database to flush (used in db mode) [flush command]"
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A redis config value."
                    ],
                    "version_added": 1.6
                },
                "command": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The selected redis command"
                    ],
                    "choices": [
                        "slave",
                        "flush",
                        "config"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with (usually not used)"
                    ]
                },
                "slave_mode": {
                    "default": "slave",
                    "required": false,
                    "description": [
                        "the mode of the redis instance [slave command]"
                    ],
                    "choices": [
                        "master",
                        "slave"
                    ]
                }
            },
            "module": "redis"
        },
        {
            "short_description": "Replace all instances of a particular string in a file using a back-referenced regular expression.",
            "deprecated": null,
            "options": {
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "The file to modify."
                    ],
                    "aliases": [
                        "name",
                        "destfile"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "regexp": {
                    "required": true,
                    "description": [
                        "The regular expression to look for in the contents of the file. Uses Python regular expressions; see U(http://docs.python.org/2/library/re.html). Uses multiline mode, which means C(^) and C($) match the beginning and end respectively of I(each line) of the file."
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "replace": {
                    "required": false,
                    "description": [
                        "The string to replace regexp matches. May contain backreferences that will get expanded with the regexp capture groups if the regexp matches. If not set, matches are removed entirely."
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "others": {
                    "required": false,
                    "description": [
                        "All arguments accepted by the M(file) module also work here."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "follow": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This flag indicates that filesystem links, if they exist, should be followed."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "replace"
        },
        {
            "short_description": "Adds or removes Red Hat software channels",
            "deprecated": null,
            "options": {
                "sysname": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the system as it is known in RHN/Satellite"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether the channel should be present or not"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the software channel"
                    ]
                },
                "url": {
                    "required": true,
                    "description": [
                        "The full url to the RHN/Satellite api"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "the user's password"
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "RHN/Satellite user"
                    ]
                }
            },
            "module": "rhn_channel"
        },
        {
            "short_description": "Manage Red Hat Network registration using the C(rhnreg_ks) command",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Red Hat Network username"
                    ]
                },
                "systemorgid": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "supply an organizational id for use with registration"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "default": "Current value of I(serverURL) from C(/etc/sysconfig/rhn/up2date) is the default",
                    "required": false,
                    "description": [
                        "Specify an alternative Red Hat Network server URL"
                    ]
                },
                "channels": {
                    "default": [],
                    "required": false,
                    "description": [
                        "Optionally specify a list of comma-separated channels to subscribe to upon successful registration."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "whether to register (C(present)), or unregister (C(absent)) a system"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "sslcacert": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "supply a custom ssl CA certificate file for use with registration"
                    ],
                    "version_added": "2.1"
                },
                "activationkey": {
                    "default": null,
                    "required": false,
                    "description": [
                        "supply an activation key for use with registration"
                    ]
                },
                "profilename": {
                    "default": null,
                    "required": false,
                    "description": [
                        "supply an profilename for use with registration"
                    ],
                    "version_added": "2.0"
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Red Hat Network password"
                    ]
                }
            },
            "module": "rhn_register"
        },
        {
            "short_description": "This module handles some common Riak operations",
            "deprecated": null,
            "options": {
                "target_node": {
                    "default": "riak@127.0.0.1",
                    "required": false,
                    "description": [
                        "The target node for certain operations (join, ping)"
                    ],
                    "aliases": []
                },
                "config_dir": {
                    "default": "/etc/riak",
                    "required": false,
                    "description": [
                        "The path to the riak configuration directory"
                    ],
                    "aliases": []
                },
                "wait_for_service": {
                    "default": "None",
                    "aliases": [],
                    "required": false,
                    "description": [
                        "Waits for a riak service to come online before continuing."
                    ],
                    "choices": [
                        "kv"
                    ]
                },
                "http_conn": {
                    "default": "127.0.0.1:8098",
                    "required": false,
                    "description": [
                        "The ip address and port that is listening for Riak HTTP queries"
                    ],
                    "aliases": []
                },
                "wait_for_ring": {
                    "default": null,
                    "required": false,
                    "type": "int",
                    "description": [
                        "Number of seconds to wait for all nodes to agree on the ring."
                    ],
                    "aliases": []
                },
                "wait_for_handoffs": {
                    "default": null,
                    "required": false,
                    "type": "int",
                    "description": [
                        "Number of seconds to wait for handoffs to complete."
                    ],
                    "aliases": []
                },
                "command": {
                    "default": null,
                    "aliases": [],
                    "required": false,
                    "description": [
                        "The command you would like to perform against the cluster."
                    ],
                    "choices": [
                        "ping",
                        "kv_test",
                        "join",
                        "plan",
                        "commit"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "version_added": "1.5.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "riak"
        },
        {
            "short_description": "Notify Rollbar about app deployments",
            "deprecated": null,
            "options": {
                "comment": {
                    "required": false,
                    "description": [
                        "Deploy comment (e.g. what is being deployed)."
                    ]
                },
                "rollbar_user": {
                    "required": false,
                    "description": [
                        "Rollbar username of the user who deployed."
                    ]
                },
                "url": {
                    "default": "https://api.rollbar.com/api/1/deploy/",
                    "required": false,
                    "description": [
                        "Optional URL to submit the notification to."
                    ]
                },
                "environment": {
                    "required": true,
                    "description": [
                        "Name of the environment being deployed, e.g. 'production'."
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "Your project access token."
                    ]
                },
                "user": {
                    "required": false,
                    "description": [
                        "User who deployed."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "revision": {
                    "required": true,
                    "description": [
                        "Revision number/sha being deployed."
                    ]
                }
            },
            "module": "rollbar_deployment"
        },
        {
            "short_description": "add or delete entries in Amazons Route53 DNS service",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "health_check": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Health check to associate with this record"
                    ],
                    "version_added": "2.0"
                },
                "weight": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Weighted resource record sets only. Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location."
                    ],
                    "version_added": "2.0"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "hosted_zone_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The Hosted Zone ID of the DNS zone to modify"
                    ],
                    "version_added": "2.0"
                },
                "wait_timeout": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "How long to wait for the changes to be replicated, in seconds."
                    ],
                    "version_added": "2.1"
                },
                "ttl": {
                    "default": "3600 (one hour)",
                    "required": false,
                    "description": [
                        "The TTL to give the new record"
                    ]
                },
                "overwrite": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Whether an existing record should be overwritten on create if values do not match"
                    ]
                },
                "wait": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Wait until the changes have been replicated to all Amazon Route 53 DNS servers."
                    ],
                    "version_added": "2.1"
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "alias_hosted_zone_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The hosted zone identifier."
                    ],
                    "version_added": "1.9"
                },
                "zone": {
                    "required": true,
                    "description": [
                        "The DNS zone to modify"
                    ]
                },
                "record": {
                    "required": true,
                    "description": [
                        "The full DNS record to create or delete"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "region": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Latency-based resource record sets only Among resource record sets that have the same combination of DNS name and type, a value that determines which region this should be associated with for the latency-based routing"
                    ],
                    "version_added": "2.0"
                },
                "retry_interval": {
                    "default": 500,
                    "required": false,
                    "description": [
                        "In the case that route53 is still servicing a prior request, this module will wait and try again after this many seconds. If you have many domain names, the default of 500 seconds may be too long."
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The new value when creating a DNS record.  Multiple comma-spaced values are allowed for non-alias records.  When deleting a record all values for the record must be specified or Route53 will not delete it."
                    ]
                },
                "alias": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Indicates if this is an alias record."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "private_zone": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set to true, the private zone matching the requested name within the domain will be used if there are both public and private zones. The default is to use the public zone."
                    ],
                    "version_added": "1.9"
                },
                "alias_evaluate_target_health": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether or not to evaluate an alias target health. Useful for aliases to Elastic Load Balancers."
                    ],
                    "version_added": "2.1"
                },
                "command": {
                    "required": true,
                    "description": [
                        "Specifies the action to take."
                    ],
                    "choices": [
                        "get",
                        "create",
                        "delete"
                    ]
                },
                "vpc_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When used in conjunction with private_zone: true, this will only modify records in the private hosted zone attached to this VPC.",
                        "This allows you to have multiple private hosted zones, all with the same name, attached to different VPCs."
                    ],
                    "version_added": "2.0"
                },
                "identifier": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Have to be specified for Weighted, latency-based and failover resource record sets only. An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type."
                    ],
                    "version_added": "2.0"
                },
                "type": {
                    "required": true,
                    "description": [
                        "The type of DNS record to create"
                    ],
                    "choices": [
                        "A",
                        "CNAME",
                        "MX",
                        "AAAA",
                        "TXT",
                        "PTR",
                        "SRV",
                        "SPF",
                        "NS",
                        "SOA"
                    ]
                },
                "failover": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Failover resource record sets only. Whether this is the primary or secondary resource record set. Allowed values are PRIMARY and SECONDARY"
                    ],
                    "version_added": "2.0"
                }
            },
            "module": "route53"
        },
        {
            "short_description": "Retrieves route53 details using AWS methods",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "start_record_name": {
                    "required": false,
                    "description": [
                        "The first name in the lexicographic ordering of domain names that you want the list_command: record_sets to start listing from"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "resource_id": {
                    "required": false,
                    "description": [
                        "The ID/s of the specified resource/s"
                    ],
                    "aliases": [
                        "resource_ids"
                    ]
                },
                "hosted_zone_method": {
                    "default": "list",
                    "required": false,
                    "description": [
                        "This is used in conjunction with query: hosted_zone. It allows for listing details, counts or tags of various hosted zone details."
                    ],
                    "choices": [
                        "details",
                        "list",
                        "list_by_name",
                        "count",
                        "tags"
                    ]
                },
                "dns_name": {
                    "required": false,
                    "description": [
                        "The first name in the lexicographic ordering of domain names that you want the list_command to start listing from"
                    ]
                },
                "health_check_method": {
                    "default": "list",
                    "required": false,
                    "description": [
                        "This is used in conjunction with query: health_check. It allows for listing details, counts or tags of various health check details."
                    ],
                    "choices": [
                        "list",
                        "details",
                        "status",
                        "failure_reason",
                        "count",
                        "tags"
                    ]
                },
                "delegation_set_id": {
                    "required": false,
                    "description": [
                        "The DNS Zone delegation set ID"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "max_items": {
                    "required": false,
                    "description": [
                        "Maximum number of items to return for various get/list requests"
                    ]
                },
                "hosted_zone_id": {
                    "required": false,
                    "description": [
                        "The Hosted Zone ID of the DNS zone"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "health_check_id": {
                    "required": false,
                    "description": [
                        "The ID of the health check"
                    ]
                },
                "change_id": {
                    "required": false,
                    "description": [
                        "The ID of the change batch request. The value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request."
                    ]
                },
                "query": {
                    "required": true,
                    "description": [
                        "specifies the query action to take"
                    ],
                    "choices": [
                        "change",
                        "checker_ip_range",
                        "health_check",
                        "hosted_zone",
                        "record_sets",
                        "reusable_delegation_set"
                    ]
                },
                "next_marker": {
                    "required": false,
                    "description": [
                        "Some requests such as list_command: hosted_zones will return a maximum number of entries - EG 100. If the number of entries exceeds this maximum another request can be sent using the NextMarker entry from the first response to get the next page of results"
                    ]
                },
                "type": {
                    "required": false,
                    "description": [
                        "The type of DNS record"
                    ],
                    "choices": [
                        "A",
                        "CNAME",
                        "MX",
                        "AAAA",
                        "TXT",
                        "PTR",
                        "SRV",
                        "SPF",
                        "NS"
                    ]
                }
            },
            "module": "route53_facts"
        },
        {
            "short_description": "add or delete health-checks in Amazons Route53 DNS service",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "request_interval": {
                    "default": 30,
                    "required": true,
                    "description": [
                        "The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request."
                    ],
                    "choices": [
                        10,
                        30
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "type": {
                    "required": true,
                    "description": [
                        "The type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy."
                    ],
                    "choices": [
                        "HTTP",
                        "HTTPS",
                        "HTTP_STR_MATCH",
                        "HTTPS_STR_MATCH",
                        "TCP"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "fqdn": {
                    "required": false,
                    "description": [
                        "Domain name of the endpoint to check. Either this or `ip_address` has to be provided. When both are given the `fqdn` is used in the `Host:` header of the HTTP request."
                    ]
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The port on the endpoint on which you want Amazon Route 53 to perform health checks. Required for TCP checks."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Specifies the action to take."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "resource_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html.",
                        "Required for all checks except TCP.",
                        "The path must begin with a /",
                        "Maximum 255 characters."
                    ]
                },
                "failure_threshold": {
                    "default": 3,
                    "required": true,
                    "description": [
                        "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa."
                    ],
                    "choices": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ]
                },
                "ip_address": {
                    "default": null,
                    "required": false,
                    "description": [
                        "IP address of the end-point to check. Either this or `fqdn` has to be provided."
                    ]
                },
                "string_match": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If the check type is HTTP_STR_MATCH or HTTP_STR_MATCH, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the first 5120 bytes of the response body, Amazon Route 53 considers the resource healthy."
                    ]
                }
            },
            "module": "route53_health_check"
        },
        {
            "short_description": "add or delete Route53 zones",
            "deprecated": null,
            "options": {
                "comment": {
                    "default": "",
                    "required": false,
                    "description": [
                        "Comment associated with the zone"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "vpc_region": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The VPC Region the zone should be a part of (if this is going to be a private zone)"
                    ]
                },
                "zone": {
                    "required": true,
                    "description": [
                        "The DNS zone record (eg: foo.com.)"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": true,
                    "required": false,
                    "description": [
                        "whether or not the zone should exist or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "vpc_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The VPC ID the zone should be a part of (if this is going to be a private zone)"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "route53_zone"
        },
        {
            "short_description": "Adds or removes a gpg key from the rpm db",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Wheather the key will be imported or removed from the rpm db."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no) and the C(key) is a url starting with https, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Key that will be modified. Can be a url, a file, or a keyid if the key already exists in the database."
                    ],
                    "aliases": []
                }
            },
            "module": "rpm_key"
        },
        {
            "short_description": "manage objects in S3.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "permission": {
                    "default": "private",
                    "required": false,
                    "description": [
                        "This option lets the user set the canned permissions on the object/bucket that are created. The permissions that can be set are 'private', 'public-read', 'public-read-write', 'authenticated-read'. Multiple permissions can be specified as a list."
                    ],
                    "version_added": "2.0"
                },
                "dest": {
                    "required": false,
                    "description": [
                        "The destination file path when downloading an object/key with a GET operation."
                    ],
                    "version_added": "1.3",
                    "aliases": []
                },
                "object": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Keyname of the object inside the bucket. Can be used to create \"virtual directories\", see examples."
                    ]
                },
                "prefix": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Limits the response to keys that begin with the specified prefix for list mode"
                    ],
                    "version_added": "2.0"
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "marker": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies the key to start with when using list mode. Object keys are returned in alphabetical order, starting with key after the marker in order."
                    ],
                    "version_added": "2.0"
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The source file path when performing a PUT operation."
                    ],
                    "version_added": "1.3",
                    "aliases": []
                },
                "overwrite": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Force overwrite either locally on the filesystem or remotely with the object/key. Used with PUT and GET operations. Boolean or one of [Always, Never, Different], new in 2.0"
                    ],
                    "version_added": "1.2"
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "retries": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "On recoverable failure, how many times to retry before actually failing."
                    ],
                    "version_added": "2.0"
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "encrypt": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When set for PUT mode, asks for server-side encryption"
                    ],
                    "version_added": "2.0"
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "headers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Custom headers for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
                    ],
                    "version_added": "2.0"
                },
                "region": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS region to create the bucket in. If not set then the value of the AWS_REGION and EC2_REGION environment variables are checked, followed by the aws_region and ec2_region settings in the Boto config file.  If none of those are set the region defaults to the S3 Location: US Standard.  Prior to ansible 1.8 this parameter could be specified but had no effect."
                    ],
                    "version_added": "1.8"
                },
                "bucket": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Bucket name."
                    ],
                    "aliases": []
                },
                "max_keys": {
                    "default": 1000,
                    "required": false,
                    "description": [
                        "Max number of results to return in list mode, set this if you want to retrieve fewer than the default 1000 keys."
                    ],
                    "version_added": "2.0"
                },
                "version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Version ID of the object inside the bucket. Can be used to get a specific version of a file if versioning is enabled in the target bucket."
                    ],
                    "version_added": "2.0",
                    "aliases": []
                },
                "mode": {
                    "required": true,
                    "description": [
                        "Switches the module behaviour between put (upload), get (download), geturl (return download url, Ansible 1.3+), getstr (download object as string (1.3+)), list (list keys, Ansible 2.0+), create (bucket), delete (bucket), and delobj (delete object, Ansible 2.0+)."
                    ],
                    "choices": [
                        "get",
                        "put",
                        "delete",
                        "create",
                        "geturl",
                        "getstr",
                        "delobj",
                        "list"
                    ]
                },
                "s3_url": {
                    "default": null,
                    "description": [
                        "S3 URL endpoint for usage with Eucalypus, fakes3, etc.  Otherwise assumes AWS"
                    ],
                    "aliases": [
                        "S3_URL"
                    ]
                },
                "metadata": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Metadata for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
                    ],
                    "version_added": "1.6"
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "expiration": {
                    "default": 600,
                    "required": false,
                    "description": [
                        "Time limit (in seconds) for the URL generated and returned by S3/Walrus when performing a mode=put or mode=geturl operation."
                    ],
                    "aliases": []
                }
            },
            "module": "s3"
        },
        {
            "short_description": "Manage s3 buckets in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "When trying to delete a bucket, delete all keys in the bucket first (an s3 bucket must be empty for a successful deletion)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the s3 bucket"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "tags dict to apply to bucket"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or remove the s3 bucket"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "policy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The JSON policy as a string."
                    ]
                },
                "requester_pays": {
                    "default": false,
                    "required": false,
                    "description": [
                        "With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data download from the bucket."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "s3_url": {
                    "default": null,
                    "description": [
                        "S3 URL endpoint for usage with Eucalypus, fakes3, etc.  Otherwise assumes AWS"
                    ],
                    "aliases": [
                        "S3_URL"
                    ]
                },
                "versioning": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "s3_bucket"
        },
        {
            "short_description": "Manage s3 bucket lifecycle rules in AWS",
            "deprecated": null,
            "options": {
                "status": {
                    "default": "enabled",
                    "required": false,
                    "description": [
                        "If 'enabled', the rule is currently being applied. If 'disabled', the rule is not currently being applied."
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "transition_days": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Indicates when, in days, an object transitions to a different storage class. If transition_date is not specified, this parameter is required."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the s3 bucket"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "expiration_date": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Indicates the lifetime of the objects that are subject to the rule by the date they will expire. The value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified."
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "prefix": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Prefix identifying one or more objects to which the rule applies.  If no prefix is specified, the rule will apply to the whole bucket."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or remove the lifecycle rule"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "storage_class": {
                    "default": "glacier",
                    "required": false,
                    "description": [
                        "The storage class to transition to. Currently there is only one valid value - 'glacier'."
                    ],
                    "choices": [
                        "glacier"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "expiration_days": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer."
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "rule_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Unique identifier for the rule. The value cannot be longer than 255 characters. A unique value for the rule will be generated if no value is provided."
                    ]
                },
                "transition_date": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Indicates the lifetime of the objects that are subject to the rule by the date they will transition to a different storage class. The value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified. If transition_days is not specified, this parameter is required."
                    ]
                }
            },
            "module": "s3_lifecycle"
        },
        {
            "short_description": "Manage logging facility of an s3 bucket in AWS",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the s3 bucket."
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "target_prefix": {
                    "default": "",
                    "required": false,
                    "description": [
                        "The prefix that should be prepended to the generated log files written to the target_bucket."
                    ]
                },
                "target_bucket": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The bucket to log to. Required when state=present."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Enable or disable logging."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "s3_logging"
        },
        {
            "short_description": "Runs a local script on a remote node after transferring it",
            "deprecated": null,
            "options": {
                "creates": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename, when it already exists, this step will B(not) be run."
                    ],
                    "version_added": "1.5"
                },
                "free_form": {
                    "default": null,
                    "required": true,
                    "description": [
                        "path to the local script file followed by optional arguments."
                    ],
                    "aliases": []
                },
                "removes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename, when it does not exist, this step will B(not) be run."
                    ],
                    "version_added": "1.5"
                }
            },
            "module": "script"
        },
        {
            "short_description": "Toggles SELinux booleans.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Desired boolean value"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the boolean to configure"
                    ]
                },
                "persistent": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Set to C(yes) if the boolean setting should survive a reboot"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "seboolean"
        },
        {
            "short_description": "Change policy and state of SELinux",
            "deprecated": null,
            "options": {
                "policy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the SELinux policy to use (example: C(targeted)) will be required if state is not C(disabled)"
                    ]
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The SELinux mode"
                    ],
                    "choices": [
                        "enforcing",
                        "permissive",
                        "disabled"
                    ]
                },
                "conf": {
                    "default": "/etc/selinux/config",
                    "required": false,
                    "description": [
                        "path to the SELinux configuration file, if non-standard"
                    ]
                }
            },
            "module": "selinux"
        },
        {
            "short_description": "Change permissive domain in SELinux policy",
            "deprecated": null,
            "options": {
                "domain": {
                    "required": true,
                    "description": [
                        "the domain that will be added or removed from the list of permissive domains"
                    ]
                },
                "no_reload": {
                    "default": false,
                    "required": false,
                    "description": [
                        "automatically reload the policy after a change",
                        "default is set to 'false' as that's what most people would want after changing one domain",
                        "Note that this doesn't work on older version of the library (example EL 6), the module will silently ignore it in this case"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "store": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the SELinux policy store to use"
                    ]
                },
                "permissive": {
                    "required": true,
                    "description": [
                        "indicate if the domain should or should not be set as permissive"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                }
            },
            "module": "selinux_permissive"
        },
        {
            "short_description": "Sends an email with the SendGrid API",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "username for logging into the SendGrid account"
                    ]
                },
                "to_addresses": {
                    "required": true,
                    "description": [
                        "a list with one or more recipient email addresses"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "password that corresponds to the username"
                    ]
                },
                "from_address": {
                    "required": true,
                    "description": [
                        "the address in the \"from\" field for the email"
                    ]
                },
                "subject": {
                    "required": true,
                    "description": [
                        "the desired subject for the email"
                    ]
                }
            },
            "module": "sendgrid"
        },
        {
            "short_description": "Manage Sensu checks",
            "deprecated": null,
            "options": {
                "interval": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Check interval in seconds"
                    ]
                },
                "handle": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether the check should be handled or not"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "subscribers": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of subscribers/channels this check should run for",
                        "See sensu_subscribers to subscribe a machine to a channel"
                    ]
                },
                "metric": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether the check is a metric"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "subdue_begin": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When to disable handling of check failures"
                    ]
                },
                "dependencies": {
                    "default": [],
                    "required": false,
                    "description": [
                        "Other checks this check depends on, if dependencies fail,",
                        "handling of this check will be disabled"
                    ]
                },
                "occurrences": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Number of event occurrences before the handler should take action"
                    ]
                },
                "low_flap_threshold": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The low threshhold for flap detection"
                    ]
                },
                "aggregate": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Classifies the check as an aggregate check,",
                        "making it available via the aggregate API"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "path": {
                    "default": "/etc/sensu/conf.d/checks.json",
                    "required": false,
                    "description": [
                        "Path to the json file of the check to be added/removed.",
                        "Will be created if it does not exist (unless I(state=absent)).",
                        "The parent folders need to exist when I(state=present), otherwise an error will be thrown"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the check",
                        "This is the key that is used to determine whether a check exists"
                    ]
                },
                "standalone": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether the check should be scheduled by the sensu client or server",
                        "This option obviates the need for specifying the I(subscribers) option"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "backup": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Create a backup file (if yes), including the timestamp information so",
                        "you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "handlers": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of handlers to notify when the check fails"
                    ]
                },
                "publish": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether the check should be scheduled at all.",
                        "You can still issue it via the sensu api"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "custom": {
                    "default": {},
                    "required": false,
                    "description": [
                        "A hash/dictionary of custom parameters for mixing to the configuration.",
                        "You can't rewrite others module parameters using this"
                    ],
                    "version_added": "2.1"
                },
                "source": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The check source, used to create a JIT Sensu client for an external resource (e.g. a network switch)."
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the check should be present or not"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "command": {
                    "required": true,
                    "description": [
                        "Path to the sensu check to run (not required when I(state=absent))"
                    ]
                },
                "high_flap_threshold": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The low threshhold for flap detection"
                    ]
                },
                "timeout": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Timeout for the check"
                    ]
                },
                "subdue_end": {
                    "default": null,
                    "required": false,
                    "description": [
                        "When to enable handling of check failures"
                    ]
                },
                "refresh": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Number of seconds handlers should wait before taking second action"
                    ]
                }
            },
            "module": "sensu_check"
        },
        {
            "short_description": "Manages SELinux network port type definitions",
            "deprecated": null,
            "options": {
                "reload": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Reload SELinux policy after commit."
                    ]
                },
                "setype": {
                    "default": null,
                    "required": true,
                    "description": [
                        "SELinux type for the specified port."
                    ]
                },
                "proto": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Protocol for the specified port."
                    ],
                    "choices": [
                        "tcp",
                        "udp"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "Desired boolean value."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ports": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Ports or port ranges, separated by a comma"
                    ]
                }
            },
            "module": "seport"
        },
        {
            "short_description": "Manage services.",
            "deprecated": null,
            "options": {
                "state": {
                    "required": false,
                    "description": [
                        "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service.  C(reloaded) will always reload. B(At least one of state and enabled are required.)"
                    ],
                    "choices": [
                        "started",
                        "stopped",
                        "restarted",
                        "reloaded"
                    ]
                },
                "sleep": {
                    "required": false,
                    "description": [
                        "If the service is being C(restarted) then sleep this many seconds between the stop and start command. This helps to workaround badly behaving init scripts that exit immediately after signaling a process to stop."
                    ],
                    "version_added": "1.3"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the service."
                    ]
                },
                "runlevel": {
                    "default": "default",
                    "required": false,
                    "description": [
                        "For OpenRC init scripts (ex: Gentoo) only.  The runlevel that this service belongs to."
                    ]
                },
                "pattern": {
                    "required": false,
                    "description": [
                        "If the service does not respond to the status command, name a substring to look for as would be found in the output of the I(ps) command as a stand-in for a status result.  If the string is found, the service will be assumed to be running."
                    ],
                    "version_added": "0.7"
                },
                "enabled": {
                    "required": false,
                    "description": [
                        "Whether the service should start on boot. B(At least one of state and enabled are required.)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "arguments": {
                    "description": [
                        "Additional arguments provided on the command line"
                    ],
                    "aliases": [
                        "args"
                    ]
                }
            },
            "module": "service"
        },
        {
            "short_description": "Set host facts from a task",
            "deprecated": null,
            "options": {
                "key_value": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The C(set_fact) module takes key=value pairs as variables to set in the playbook scope. Or alternatively, accepts complex arguments using the C(args:) statement."
                    ]
                }
            },
            "module": "set_fact"
        },
        {
            "short_description": "Gathers facts about remote hosts",
            "deprecated": null,
            "options": {
                "filter": {
                    "default": "*",
                    "required": false,
                    "description": [
                        "if supplied, only return facts that match this shell-style (fnmatch) wildcard."
                    ],
                    "version_added": "1.1"
                },
                "gather_subset": {
                    "default": "all",
                    "required": false,
                    "description": [
                        "if supplied, restrict the additional facts collected to the given subset. Possible values: all, hardware, network, virtual, ohai, and facter Can specify a list of values to specify a larger subset. Values can also be used with an initial C(!) to specify that that specific subset should not be collected.  For instance: !hardware, !network, !virtual, !ohai, !facter.  Note that a few facts are always collected.  Use the filter parameter if you do not want to display those."
                    ],
                    "version_added": "2.1"
                },
                "fact_path": {
                    "default": "/etc/ansible/facts.d",
                    "required": false,
                    "description": [
                        "path used for local ansible facts (*.fact) - files in this dir will be run (if executable) and their results be added to ansible_local facts if a file is not executable it is read. Check notes for Windows options. (from 2.1 on) File/results format can be json or ini-format"
                    ],
                    "version_added": "1.3"
                }
            },
            "module": "setup"
        },
        {
            "short_description": "Execute commands in nodes.",
            "deprecated": null,
            "options": {
                "warn": {
                    "default": true,
                    "required": false,
                    "description": [
                        "if command warnings are on in ansible.cfg, do not warn about this particular line if set to no/false."
                    ],
                    "version_added": "1.8"
                },
                "creates": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename, when it already exists, this step will B(not) be run."
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "change the shell used to execute the command. Should be an absolute path to the executable."
                    ],
                    "version_added": "0.9"
                },
                "chdir": {
                    "default": null,
                    "required": false,
                    "description": [
                        "cd into this directory before running the command"
                    ],
                    "version_added": "0.6"
                },
                "removes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename, when it does not exist, this step will B(not) be run."
                    ],
                    "version_added": "0.8"
                },
                "free_form": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The shell module takes a free form command to run, as a string.  There's not an actual option named \"free form\".  See the examples!"
                    ]
                }
            },
            "module": "shell"
        },
        {
            "short_description": "create or cancel a virtual instance in SoftLayer",
            "deprecated": null,
            "options": {
                "domain": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Domain name to be provided to a virtual instance"
                    ]
                },
                "disks": {
                    "default": [
                        25
                    ],
                    "required": true,
                    "description": [
                        "List of disk sizes to be assigned to new virtual instance"
                    ]
                },
                "tags": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Tag or list of tags to be provided to a virtual instance"
                    ]
                },
                "dedicated": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Falg to determine if the instance should be deployed in dedicated space"
                    ]
                },
                "private": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Flag to determine if the instance should be private only"
                    ]
                },
                "cpus": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Count of cpus to be assigned to new virtual instance"
                    ]
                },
                "image_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Image Template to be used for new virtual instance"
                    ]
                },
                "nic_speed": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "NIC Speed to be assigned to new virtual instance"
                    ]
                },
                "private_vlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "VLAN by its Id to be assigned to the private NIC"
                    ]
                },
                "datacenter": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Datacenter for the virtual instance to be deployed"
                    ]
                },
                "public_vlan": {
                    "default": null,
                    "required": false,
                    "description": [
                        "VLAN by its Id to be assigned to the public NIC"
                    ]
                },
                "wait": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Flag used to wait for active status before returning"
                    ]
                },
                "hourly": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Flag to determine if the instance should be hourly billed"
                    ]
                },
                "ssh_keys": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of ssh keys by their Id to be assigned to a virtual instance"
                    ]
                },
                "hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Hostname to be provided to a virtual instance"
                    ]
                },
                "os_code": {
                    "default": null,
                    "required": false,
                    "description": [
                        "OS Code to be used for new virtual instance"
                    ]
                },
                "instance_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Instance Id of the virtual instance to perform action option"
                    ]
                },
                "local_disk": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Flag to determine if local disk should be used for the new instance"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create, or cancel a virtual instance. Specify \"present\" for create, \"absent\" to cancel."
                    ]
                },
                "wait_timeout": {
                    "default": 600,
                    "required": false,
                    "description": [
                        "time in seconds before wait returns"
                    ]
                },
                "post_uri": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL of a post provisioning script ot be loaded and exectued on virtual instance"
                    ]
                },
                "memory": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Amount of memory to be assigned to new virtual instance"
                    ]
                }
            },
            "module": "sl_vm"
        },
        {
            "short_description": "Send Slack notifications",
            "deprecated": null,
            "options": {
                "username": {
                    "default": "Ansible",
                    "required": false,
                    "description": [
                        "This is the sender of the message."
                    ]
                },
                "domain": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Slack (sub)domain for your environment without protocol. (i.e. C(future500.slack.com)) In 1.8 and beyond, this is deprecated and may be ignored.  See token documentation for information."
                    ]
                },
                "attachments": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Define a list of attachments. This list mirrors the Slack JSON API. For more information, see https://api.slack.com/docs/attachments"
                    ]
                },
                "color": {
                    "default": "normal",
                    "required": false,
                    "description": [
                        "Allow text to use default colors - use the default of 'normal' to not send a custom color bar at the start of the message"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "normal",
                        "good",
                        "warning",
                        "danger"
                    ]
                },
                "icon_url": {
                    "required": false,
                    "description": [
                        "Url for the message sender's icon (default C(http://www.ansible.com/favicon.ico))"
                    ]
                },
                "parse": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Setting for the message parser at Slack"
                    ],
                    "choices": [
                        "full",
                        "none"
                    ]
                },
                "token": {
                    "required": true,
                    "description": [
                        "Slack integration token.  This authenticates you to the slack service. Prior to 1.8, a token looked like C(3Ffe373sfhRE6y42Fg3rvf4GlK).  In 1.8 and above, ansible adapts to the new slack API where tokens look like C(G922VJP24/D921DW937/3Ffe373sfhRE6y42Fg3rvf4GlK).  If tokens are in the new format then slack will ignore any value of domain.  If the token is in the old format the domain is required.  Ansible has no control of when slack will get rid of the old API.  When slack does that the old format will stop working."
                    ]
                },
                "icon_emoji": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Emoji for the message sender. See Slack documentation for options. (if I(icon_emoji) is set, I(icon_url) will not be used)"
                    ]
                },
                "link_names": {
                    "default": 1,
                    "required": false,
                    "description": [
                        "Automatically create links for channels and usernames in I(msg)."
                    ],
                    "choices": [
                        1,
                        0
                    ]
                },
                "msg": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Message to send."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "channel": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Channel to send the message to. If absent, the message goes to the channel selected for the I(token)."
                    ]
                }
            },
            "module": "slack"
        },
        {
            "short_description": "Package manager for Slackware >= 12.2",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "state of the package, you can use \"installed\" as an alias for C(present) and removed as one for c(absent)."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "latest"
                    ]
                },
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "update the package database first"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of package to install/remove"
                    ]
                }
            },
            "module": "slackpkg"
        },
        {
            "short_description": "Slurps a file from remote nodes",
            "deprecated": null,
            "options": {
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The file on the remote system to fetch. This I(must) be a file, not a directory."
                    ],
                    "aliases": []
                }
            },
            "module": "slurp"
        },
        {
            "short_description": "Retrieve facts for a device using SNMP.",
            "deprecated": null,
            "options": {
                "username": {
                    "required": false,
                    "description": [
                        "Username for SNMPv3, required if version is v3"
                    ]
                },
                "level": {
                    "required": false,
                    "description": [
                        "Authentication level, required if version is v3"
                    ],
                    "choices": [
                        "authPriv",
                        "authNoPriv"
                    ]
                },
                "privacy": {
                    "required": false,
                    "description": [
                        "Encryption algoritm, required if level is authPriv"
                    ],
                    "choices": [
                        "des",
                        "aes"
                    ]
                },
                "community": {
                    "required": false,
                    "description": [
                        "The SNMP community string, required if version is v2/v2c"
                    ]
                },
                "authkey": {
                    "required": false,
                    "description": [
                        "Authentication key, required if version is v3"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Set to target snmp server (normally {{inventory_hostname}})"
                    ]
                },
                "version": {
                    "required": true,
                    "description": [
                        "SNMP Version to use, v2/v2c or v3"
                    ],
                    "choices": [
                        "v2",
                        "v2c",
                        "v3"
                    ]
                },
                "integrity": {
                    "required": false,
                    "description": [
                        "Hashing algoritm, required if version is v3"
                    ],
                    "choices": [
                        "md5",
                        "sha"
                    ]
                },
                "privkey": {
                    "required": false,
                    "description": [
                        "Encryption key, required if version is authPriv"
                    ]
                }
            },
            "module": "snmp_facts"
        },
        {
            "short_description": "Send Amazon Simple Notification Service (SNS) messages",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "aws_access_key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "http": {
                    "required": false,
                    "description": [
                        "Message to send to HTTP-only subscription"
                    ]
                },
                "sqs": {
                    "required": false,
                    "description": [
                        "Message to send to SQS-only subscription"
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used."
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "sms": {
                    "required": false,
                    "description": [
                        "Message to send to SMS-only subscription"
                    ]
                },
                "topic": {
                    "required": true,
                    "description": [
                        "The topic you want to publish to."
                    ]
                },
                "https": {
                    "required": false,
                    "description": [
                        "Message to send to HTTPS-only subscription"
                    ]
                },
                "msg": {
                    "required": true,
                    "description": [
                        "Default message to send."
                    ],
                    "aliases": [
                        "default"
                    ]
                },
                "email": {
                    "required": false,
                    "description": [
                        "Message to send to email-only subscription"
                    ]
                },
                "subject": {
                    "required": false,
                    "description": [
                        "Subject line for email delivery."
                    ]
                }
            },
            "module": "sns"
        },
        {
            "short_description": "Manages AWS SNS topics and subscriptions",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "display_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Display name of the topic"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name or ARN of the SNS topic to converge"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "subscriptions": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of subscriptions to apply to the topic. Note that AWS requires subscriptions to be confirmed, so you will need to confirm any new subscriptions."
                    ]
                },
                "delivery_policy": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Delivery policy to apply to the SNS topic"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create or destroy an SNS topic"
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "policy": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Policy to apply to the SNS topic"
                    ]
                },
                "purge_subscriptions": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to purge any subscriptions not listed here. NOTE: AWS does not allow you to purge any PendingConfirmation subscriptions, so if any exist and would be purged, they are silently skipped. This means that somebody could come back later and confirm the subscription. Sorry. Blame Amazon."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "sns_topic"
        },
        {
            "short_description": "Manage Solaris zones",
            "deprecated": null,
            "options": {
                "install_options": {
                    "default": "empty string",
                    "required": false,
                    "description": [
                        "Extra options to the zoneadm(1M) install command. To automate Solaris 11 zone creation, use this to specify the profile XML file, e.g. install_options=\"-c sc_profile.xml\""
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Zone name."
                    ]
                },
                "sparse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to create a sparse (C(true)) or whole root (C(false)) zone."
                    ]
                },
                "create_options": {
                    "default": "empty string",
                    "required": false,
                    "description": [
                        "Extra options to the zonecfg(1M) create command."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "C(present), configure and install the zone.",
                        "C(installed), synonym for C(present).",
                        "C(running), if the zone already exists, boot it, otherwise, configure and install the zone first, then boot it.",
                        "C(started), synonym for C(running).",
                        "C(stopped), shutdown a zone.",
                        "C(absent), destroy the zone.",
                        "C(configured), configure the ready so that it's to be attached.",
                        "C(attached), attach a zone, but do not boot it.",
                        "C(detached), shutdown and detach a zone"
                    ],
                    "choices": [
                        "present",
                        "installed",
                        "started",
                        "running",
                        "stopped",
                        "absent",
                        "configured",
                        "attached",
                        "detached"
                    ]
                },
                "root_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password hash for the root account. If not specified, the zone's root account will not have a password."
                    ]
                },
                "timeout": {
                    "default": 600,
                    "required": false,
                    "description": [
                        "Timeout, in seconds, for zone to boot."
                    ]
                },
                "path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The path where the zone will be created. This is required when the zone is created, but not used otherwise."
                    ]
                },
                "config": {
                    "default": "empty string",
                    "required": false,
                    "description": [
                        "The zonecfg configuration commands for this zone. See zonecfg(1M) for the valid options and syntax. Typically this is a list of options separated by semi-colons or new lines, e.g. \"set auto-boot=true;add net;set physical=bge0;set address=10.1.1.1;end\""
                    ]
                },
                "attach_options": {
                    "default": "empty string",
                    "required": false,
                    "description": [
                        "Extra options to the zoneadm attach command. For example, this can be used to specify whether a minimum or full update of packages is required and if any packages need to be deleted. For valid values, see zoneadm(1M)"
                    ]
                }
            },
            "module": "solaris_zone"
        },
        {
            "short_description": "Creates or deletes AWS SQS queues.",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "message_retention_period": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The message retention period in seconds."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the queue."
                    ]
                },
                "delivery_delay": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The delivery delay in seconds."
                    ]
                },
                "default_visibility_timeout": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The default visibility timeout in seconds."
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or delete the queue"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "maximum_message_size": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The maximum message size in bytes."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "policy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The json dict policy to attach to queue"
                    ],
                    "version_added": "2.1"
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "receive_message_wait_time": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The receive message wait time in seconds."
                    ]
                }
            },
            "module": "sqs_queue"
        },
        {
            "short_description": "Send code deploy and annotation events to stackdriver",
            "deprecated": null,
            "options": {
                "repository": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The repository (or project) deployed"
                    ]
                },
                "level": {
                    "default": "INFO",
                    "required": false,
                    "description": [
                        "one of INFO/WARN/ERROR, defaults to INFO if not supplied.  May affect display."
                    ],
                    "choices": [
                        "INFO",
                        "WARN",
                        "ERROR"
                    ]
                },
                "annotated_by": {
                    "default": "Ansible",
                    "required": false,
                    "description": [
                        "The person or robot who the annotation should be attributed to."
                    ]
                },
                "deployed_to": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The environment code was deployed to. (ie: development, staging, production)"
                    ]
                },
                "deployed_by": {
                    "default": "Ansible",
                    "required": false,
                    "description": [
                        "The person or robot responsible for deploying the code"
                    ]
                },
                "instance_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "id of an EC2 instance that this event should be attached to, which will limit the contexts where this event is shown"
                    ]
                },
                "key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "API key."
                    ]
                },
                "msg": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The contents of the annotation message, in plain text.  Limited to 256 characters. Required for annotation."
                    ]
                },
                "event_epoch": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Unix timestamp of where the event should appear in the timeline, defaults to now. Be careful with this."
                    ]
                },
                "revision_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The revision of the code that was deployed. Required for deploy events"
                    ]
                },
                "event": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The type of event to send, either annotation or deploy"
                    ],
                    "choices": [
                        "annotation",
                        "deploy"
                    ]
                }
            },
            "module": "stackdriver"
        },
        {
            "short_description": "retrieve file or file system status",
            "deprecated": null,
            "options": {
                "mime": {
                    "aliases": [
                        "mime_type",
                        "mime-type"
                    ],
                    "description": [
                        "Use file magic and return data about the nature of the file. this uses the 'file' utility found on most Linux/Unix systems.",
                        "This will add both `mime_type` and 'charset' fields to the return, if possible."
                    ],
                    "version_added": "2.1",
                    "default": false,
                    "required": false,
                    "choices": [
                        true,
                        false
                    ]
                },
                "get_checksum": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to return a checksum of the file (default sha1)"
                    ],
                    "version_added": "1.8"
                },
                "follow": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Whether to follow symlinks"
                    ]
                },
                "checksum_algorithm": {
                    "aliases": [
                        "checksum_algo",
                        "checksum"
                    ],
                    "description": [
                        "Algorithm to determine checksum of file. Will throw an error if the host is unable to use specified algorithm."
                    ],
                    "version_added": "2.0",
                    "default": "sha1",
                    "required": false,
                    "choices": [
                        "sha1",
                        "sha224",
                        "sha256",
                        "sha384",
                        "sha512"
                    ]
                },
                "path": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The full path of the file/object to get the facts of"
                    ]
                },
                "get_md5": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to return the md5 sum of the file.  Will return None if we're unable to use md5 (Common for FIPS-140 compliant systems)"
                    ]
                }
            },
            "module": "stat"
        },
        {
            "short_description": "Assume a role using AWS Security Token Service and obtain temporary credentials",
            "deprecated": null,
            "options": {
                "aws_secret_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_secret_key",
                        "secret_key"
                    ]
                },
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "uses a boto profile. Only works with boto >= 2.24.0"
                    ],
                    "version_added": "1.6",
                    "aliases": []
                },
                "aws_access_key": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
                    ],
                    "aliases": [
                        "ec2_access_key",
                        "access_key"
                    ]
                },
                "role_arn": {
                    "required": true,
                    "description": [
                        "The Amazon Resource Name (ARN) of the role that the caller is assuming (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs)"
                    ]
                },
                "security_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
                    ],
                    "version_added": "1.6",
                    "aliases": [
                        "access_token"
                    ]
                },
                "duration_seconds": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds."
                    ]
                },
                "validate_certs": {
                    "aliases": [],
                    "description": [
                        "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
                    ],
                    "version_added": "1.5",
                    "default": "yes",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "mfa_serial_number": {
                    "default": null,
                    "required": false,
                    "description": [
                        "he identification number of the MFA device that is associated with the user who is making the AssumeRole call."
                    ]
                },
                "role_session_name": {
                    "required": true,
                    "description": [
                        "Name of the role's session - will be used by CloudTrail"
                    ]
                },
                "mfa_token": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The value provided by the MFA device, if the trust policy of the role being assumed requires MFA."
                    ]
                },
                "ec2_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Ignored for modules where region is required.  Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
                    ],
                    "aliases": []
                },
                "policy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Supplemental policy to use in addition to assumed role's policies."
                    ]
                },
                "external_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A unique identifier that is used by third parties to assume a role in their customers' accounts."
                    ]
                },
                "region": {
                    "required": false,
                    "description": [
                        "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
                    ],
                    "aliases": [
                        "aws_region",
                        "ec2_region"
                    ]
                }
            },
            "module": "sts_assume_role"
        },
        {
            "short_description": "Deploys a subversion repository.",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "--username parameter passed to svn."
                    ]
                },
                "executable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to svn executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
                    ],
                    "version_added": "1.4"
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), modified files will be discarded. If C(no), module will fail if it encounters modified files. Prior to 1.9 the default was `yes`."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Absolute path where the repository should be deployed."
                    ]
                },
                "repo": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The subversion URL to the repository."
                    ],
                    "aliases": [
                        "name",
                        "repository"
                    ]
                },
                "switch": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), do not call svn switch before update."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "export": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), do export instead of checkout/update."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "--password parameter passed to svn."
                    ]
                },
                "revision": {
                    "default": "HEAD",
                    "required": false,
                    "description": [
                        "Specific revision to checkout."
                    ],
                    "aliases": [
                        "version"
                    ]
                }
            },
            "module": "subversion"
        },
        {
            "short_description": "Manage the state of a program or group of programs running via supervisord",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "username to use for authentication"
                    ],
                    "version_added": "1.3"
                },
                "state": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The desired state of program/group."
                    ],
                    "choices": [
                        "present",
                        "started",
                        "stopped",
                        "restarted",
                        "absent"
                    ]
                },
                "supervisorctl_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path to supervisorctl executable"
                    ],
                    "version_added": "1.4"
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The name of the supervisord program or group to manage.",
                        "The name will be taken as group name when it ends with a colon I(:)",
                        "Group support is only available in Ansible version 1.6 or later."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "password to use for authentication"
                    ],
                    "version_added": "1.3"
                },
                "config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The supervisor configuration file path"
                    ],
                    "version_added": "1.3"
                },
                "server_url": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL on which supervisord server is listening"
                    ],
                    "version_added": "1.3"
                }
            },
            "module": "supervisorctl"
        },
        {
            "short_description": "Manage daemontools services.",
            "deprecated": null,
            "options": {
                "service_dir": {
                    "default": "/service",
                    "required": false,
                    "description": [
                        "directory svscan watches for services"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the service to manage."
                    ]
                },
                "downed": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Should a 'down' file exist or not, if it exists it disables auto startup. defaults to no. Downed does not imply stopped."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "enabled": {
                    "required": false,
                    "description": [
                        "Wheater the service is enabled or not, if disabled it also implies stopped. Make note that a service can be enabled and downed (no auto restart)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "required": false,
                    "description": [
                        "C(Started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the svc (svc -t) and C(killed) will always bounce the svc (svc -k). C(reloaded) will send a sigusr1 (svc -1). C(once) will run a normally downed svc once (svc -o), not really an idempotent operation."
                    ],
                    "choices": [
                        "started",
                        "stopped",
                        "restarted",
                        "reloaded",
                        "once"
                    ]
                },
                "service_src": {
                    "required": false,
                    "description": [
                        "directory where services are defined, the source of symlinks to service_dir."
                    ]
                }
            },
            "module": "svc"
        },
        {
            "short_description": "Manage Solaris SVR4 packages",
            "deprecated": null,
            "options": {
                "category": {
                    "required": false,
                    "description": [
                        "Install/Remove category instead of a single package."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "true",
                        "false"
                    ]
                },
                "src": {
                    "description": [
                        "Specifies the location to install the package from. Required when C(state=present).",
                        "Can be any path acceptable to the C(pkgadd) command's C(-d) option. e.g.: C(somefile.pkg), C(/dir/with/pkgs), C(http:/server/mypkgs.pkg).",
                        "If using a file or directory, they must already be accessible by the host. See the M(copy) module for a way to get them there."
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Whether to install (C(present)), or remove (C(absent)) a package.",
                        "If the package is to be installed, then I(src) is required.",
                        "The SVR4 package system doesn't provide an upgrade operation. You need to uninstall the old, then install the new package."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Package name, e.g. C(SUNWcsr)"
                    ]
                },
                "zone": {
                    "default": "all",
                    "required": false,
                    "description": [
                        "Whether to install the package only in the current zone, or install it into all zones.",
                        "The installation into all zones works only if you are working with the global zone."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "current",
                        "all"
                    ]
                },
                "response_file": {
                    "required": false,
                    "description": [
                        "Specifies the location of a response file to be used if package expects input on install. (added in Ansible 1.4)"
                    ]
                },
                "proxy": {
                    "description": [
                        "HTTP[s] proxy to be used if C(src) is a URL."
                    ]
                }
            },
            "module": "svr4pkg"
        },
        {
            "short_description": "Manage packages with swdepot package manager (HP-UX)",
            "deprecated": null,
            "options": {
                "state": {
                    "aliases": [],
                    "description": [
                        "whether to install (C(present), C(latest)), or remove (C(absent)) a package."
                    ],
                    "version_added": 1.4,
                    "default": null,
                    "required": true,
                    "choices": [
                        "present",
                        "latest",
                        "absent"
                    ]
                },
                "depot": {
                    "aliases": [],
                    "description": [
                        "The source repository from which install or upgrade a package."
                    ],
                    "version_added": 1.4,
                    "default": null,
                    "required": false,
                    "choices": []
                },
                "name": {
                    "aliases": [],
                    "description": [
                        "package name."
                    ],
                    "version_added": 1.4,
                    "default": null,
                    "required": true,
                    "choices": []
                }
            },
            "module": "swdepot"
        },
        {
            "short_description": "Uses rsync to make synchronizing file paths in your playbooks quick and easy.",
            "deprecated": null,
            "options": {
                "dirs": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Transfer directories without recursing"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "partial": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Tells rsync to keep the partial file which should make a subsequent transfer of the rest of the file much faster."
                    ],
                    "version_added": "2.0"
                },
                "links": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Copy symlinks as symlinks."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "copy_links": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "perms": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Preserve permissions."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "compress": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Compress file data during the transfer. In most cases, leave this enabled unless it causes problems."
                    ],
                    "version_added": "1.7",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "rsync_timeout": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Specify a --timeout for the rsync command in seconds."
                    ]
                },
                "rsync_opts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specify additional rsync options by passing in an array."
                    ],
                    "version_added": "1.6"
                },
                "owner": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Preserve owner (super user only)"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "set_remote_user": {
                    "default": true,
                    "description": [
                        "put user@ for the remote paths. If you have a custom ssh config to define the remote user for a host that does not match the inventory user, you should set this parameter to \"no\"."
                    ]
                },
                "times": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Preserve modification times"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "rsync_path": {
                    "required": false,
                    "description": [
                        "Specify the rsync command to run on the remote host. See C(--rsync-path) on the rsync man page."
                    ]
                },
                "dest_port": {
                    "default": "Value of ansible_ssh_port for this host, remote_port config setting, or 22 if none of those are set",
                    "description": [
                        "Port number for ssh on the destination host. Prior to ansible 2.0, the ansible_ssh_port inventory var took precedence over this value."
                    ],
                    "version_added": "1.5"
                },
                "src": {
                    "required": true,
                    "description": [
                        "Path on the source host that will be synchronized to the destination; The path can be absolute or relative."
                    ]
                },
                "group": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Preserve group"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "existing_only": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Skip creating new files on receiver."
                    ],
                    "version_added": "1.5",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "recursive": {
                    "default": "the value of the archive option",
                    "required": false,
                    "description": [
                        "Recurse into directories."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "archive": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Mirrors the rsync archive flag, enables recursive, links, perms, times, owner, group flags and -D."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "Path on the destination host that will be synchronized from the source; The path can be absolute or relative."
                    ]
                },
                "mode": {
                    "default": "push",
                    "required": false,
                    "description": [
                        "Specify the direction of the synchronization. In push mode the localhost or delegate is the source; In pull mode the remote host in context is the source."
                    ],
                    "choices": [
                        "push",
                        "pull"
                    ]
                },
                "checksum": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Skip based on checksum, rather than mod-time & size; Note that that \"archive\" option is still enabled by default - the \"checksum\" option will not disable it."
                    ],
                    "version_added": "1.6",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "verify_host": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Verify destination host key."
                    ],
                    "version_added": "2.0"
                },
                "use_ssh_args": {
                    "default": "no",
                    "description": [
                        "Use the ssh_args specified in ansible.cfg"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "delete": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Delete files that don't exist (after transfer, not before) in the C(src) path. This option requires C(recursive=yes)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "synchronize"
        },
        {
            "short_description": "Manage entries in sysctl.conf.",
            "deprecated": null,
            "options": {
                "reload": {
                    "default": "yes",
                    "description": [
                        "If C(yes), performs a I(/sbin/sysctl -p) if the C(sysctl_file) is updated. If C(no), does not reload I(sysctl) even if the C(sysctl_file) is updated."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Whether the entry should be present or absent in the sysctl file."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The dot-separated path (aka I(key)) specifying the sysctl variable."
                    ],
                    "aliases": [
                        "key"
                    ]
                },
                "sysctl_set": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Verify token value with the sysctl command and set with -w if necessary"
                    ],
                    "version_added": 1.5,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ignoreerrors": {
                    "default": false,
                    "description": [
                        "Use this option to ignore errors about unknown keys."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "sysctl_file": {
                    "default": "/etc/sysctl.conf",
                    "required": false,
                    "description": [
                        "Specifies the absolute path to C(sysctl.conf), if not C(/etc/sysctl.conf)."
                    ]
                },
                "value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Desired value of the sysctl key."
                    ],
                    "aliases": [
                        "val"
                    ]
                }
            },
            "module": "sysctl"
        },
        {
            "short_description": "Creates/deletes an issue in a Taiga Project Management Platform",
            "deprecated": null,
            "options": {
                "status": {
                    "default": "New",
                    "required": false,
                    "description": [
                        "The issue status. Must exist previously."
                    ]
                },
                "project": {
                    "required": true,
                    "description": [
                        "Name of the project containing the issue. Must exist previously."
                    ]
                },
                "severity": {
                    "default": "Normal",
                    "required": false,
                    "description": [
                        "The issue severity. Must exist previously."
                    ]
                },
                "tags": {
                    "default": [],
                    "required": false,
                    "description": [
                        "A lists of tags to be assigned to the issue."
                    ]
                },
                "priority": {
                    "default": "Normal",
                    "required": false,
                    "description": [
                        "The issue priority. Must exist previously."
                    ]
                },
                "taiga_host": {
                    "default": "https://api.taiga.io",
                    "required": false,
                    "description": [
                        "The hostname of the Taiga instance."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the issue should be present or not."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "attachment": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Path to a file to be attached to the issue."
                    ]
                },
                "issue_type": {
                    "required": true,
                    "description": [
                        "The issue type. Must exist previously."
                    ]
                },
                "subject": {
                    "required": true,
                    "description": [
                        "The issue subject."
                    ]
                },
                "attachment_description": {
                    "default": "",
                    "required": false,
                    "description": [
                        "A string describing the file to be attached to the issue."
                    ]
                },
                "description": {
                    "default": "",
                    "required": false,
                    "description": [
                        "The issue description."
                    ]
                }
            },
            "module": "taiga_issue"
        },
        {
            "short_description": "Templates a file out to a remote server.",
            "deprecated": null,
            "options": {
                "src": {
                    "required": true,
                    "description": [
                        "Path of a Jinja2 formatted template on the Ansible controller. This can be a relative or absolute path."
                    ]
                },
                "force": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "the default is C(yes), which will replace the remote file when contents are different than the source.  If C(no), the file will only be transferred if the destination does not exist."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "Location to render the template to on the remote machine."
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "template"
        },
        {
            "short_description": "Sends a text message to a mobile phone through Twilio.",
            "deprecated": null,
            "options": {
                "from_number": {
                    "required": true,
                    "description": "the Twilio number to send the text message from, format +15551112222"
                },
                "msg": {
                    "required": true,
                    "description": "the body of the text message"
                },
                "auth_token": {
                    "required": true,
                    "description": "user's Twilio authentication token"
                },
                "media_url": {
                    "required": false,
                    "description": "a URL with a picture, video or sound clip to send with an MMS (multimedia message) instead of a plain SMS"
                },
                "to_number": {
                    "required": true,
                    "description": "one or more phone numbers to send the text message to, format +15551112222"
                },
                "account_sid": {
                    "required": true,
                    "description": "user's Twilio account token found on the account page"
                }
            },
            "module": "twilio"
        },
        {
            "short_description": "Send a message to typetalk",
            "deprecated": null,
            "options": {
                "topic": {
                    "required": true,
                    "description": [
                        "topic id to post message"
                    ]
                },
                "client_secret": {
                    "required": true,
                    "description": [
                        "OAuth2 client secret"
                    ]
                },
                "client_id": {
                    "required": true,
                    "description": [
                        "OAuth2 client ID"
                    ]
                },
                "msg": {
                    "required": true,
                    "description": [
                        "message body"
                    ]
                }
            },
            "module": "typetalk"
        },
        {
            "short_description": "Manage firewall with UFW",
            "deprecated": null,
            "options": {
                "direction": {
                    "required": false,
                    "description": [
                        "Select direction for a rule or default policy command."
                    ],
                    "choices": [
                        "in",
                        "out",
                        "incoming",
                        "outgoing",
                        "routed"
                    ]
                },
                "from_port": {
                    "required": false,
                    "description": [
                        "Source port."
                    ]
                },
                "to_ip": {
                    "default": "any",
                    "required": false,
                    "description": [
                        "Destination IP address."
                    ],
                    "aliases": [
                        "to",
                        "dest"
                    ]
                },
                "to_port": {
                    "required": false,
                    "description": [
                        "Destination port."
                    ],
                    "aliases": [
                        "port"
                    ]
                },
                "from_ip": {
                    "default": "any",
                    "required": false,
                    "description": [
                        "Source IP address."
                    ],
                    "aliases": [
                        "from",
                        "src"
                    ]
                },
                "interface": {
                    "required": false,
                    "description": [
                        "Specify interface for rule."
                    ],
                    "aliases": [
                        "if"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "Use profile located in C(/etc/ufw/applications.d)"
                    ],
                    "aliases": [
                        "app"
                    ]
                },
                "insert": {
                    "required": false,
                    "description": [
                        "Insert the corresponding rule as rule number NUM"
                    ]
                },
                "logging": {
                    "required": false,
                    "description": [
                        "Toggles logging. Logged packets use the LOG_KERN syslog facility."
                    ],
                    "choices": [
                        "on",
                        "off",
                        "low",
                        "medium",
                        "high",
                        "full"
                    ]
                },
                "log": {
                    "required": false,
                    "description": [
                        "Log new connections matched to this rule"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "proto": {
                    "required": false,
                    "description": [
                        "TCP/IP protocol."
                    ],
                    "choices": [
                        "any",
                        "tcp",
                        "udp",
                        "ipv6",
                        "esp",
                        "ah"
                    ]
                },
                "route": {
                    "required": false,
                    "description": [
                        "Apply the rule to routed/forwarded packets."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "rule": {
                    "required": false,
                    "description": [
                        "Add firewall rule"
                    ],
                    "choices": [
                        "allow",
                        "deny",
                        "reject",
                        "limit"
                    ]
                },
                "state": {
                    "required": false,
                    "description": [
                        "C(enabled) reloads firewall and enables firewall on boot.",
                        "C(disabled) unloads firewall and disables firewall on boot.",
                        "C(reloaded) reloads firewall.",
                        "C(reset) disables and resets firewall to installation defaults."
                    ],
                    "choices": [
                        "enabled",
                        "disabled",
                        "reloaded",
                        "reset"
                    ]
                },
                "policy": {
                    "alias": "default",
                    "required": false,
                    "description": [
                        "Change the default policy for incoming or outgoing traffic."
                    ],
                    "choices": [
                        "allow",
                        "deny",
                        "reject"
                    ]
                },
                "delete": {
                    "required": false,
                    "description": [
                        "Delete rule."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "ufw"
        },
        {
            "short_description": "Unpacks an archive after (optionally) copying it from the local machine.",
            "deprecated": null,
            "options": {
                "src": {
                    "default": null,
                    "required": true,
                    "description": [
                        "If copy=yes (default), local path to archive file to copy to the target server; can be absolute or relative. If copy=no, path on the target server to existing archive file to unpack.",
                        "If copy=no and src contains ://, the remote machine will download the file from the url first. (version_added 2.0)"
                    ]
                },
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Remote absolute path where the archive should be unpacked"
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "list_files": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set to True, return the list of files that are contained in the tarball."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "keep_newer": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Do not replace existing files that are newer than files from the archive."
                    ],
                    "version_added": "2.1"
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "creates": {
                    "default": null,
                    "required": false,
                    "description": [
                        "a filename, when it already exists, this step will B(not) be run."
                    ],
                    "version_added": "1.6"
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "exclude": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List the directory and file entries that you would like to exclude from the unarchive action."
                    ],
                    "version_added": "2.1"
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "extra_opts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specify additional options by passing in an array."
                    ],
                    "version_added": "2.1"
                },
                "copy": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look for src archive at the target machine."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "unarchive"
        },
        {
            "short_description": "Pause and start Uptime Robot monitoring",
            "deprecated": null,
            "options": {
                "monitorid": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "ID of the monitor to check."
                    ],
                    "aliases": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "started",
                        "paused"
                    ],
                    "required": true,
                    "description": [
                        "Define whether or not the monitor should be running or paused."
                    ],
                    "aliases": []
                },
                "apikey": {
                    "default": null,
                    "choices": [],
                    "required": true,
                    "description": [
                        "Uptime Robot API key."
                    ],
                    "aliases": []
                }
            },
            "module": "uptimerobot"
        },
        {
            "short_description": "Interacts with webservices",
            "deprecated": null,
            "options": {
                "body": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The body of the http request/response to the web service. If C(body_format) is set to 'json' it will take an already formated JSON string or convert a data structure into JSON."
                    ]
                },
                "dest": {
                    "default": null,
                    "required": false,
                    "description": [
                        "path of where to download the file to (if desired). If I(dest) is a directory, the basename of the file on the remote server will be used."
                    ]
                },
                "follow_redirects": {
                    "default": "safe",
                    "required": false,
                    "description": [
                        "Whether or not the URI module should follow redirects. C(all) will follow all redirects. C(safe) will follow only \"safe\" redirects, where \"safe\" means that the client is only doing a GET or HEAD on the URI to which it is being redirected. C(none) will not follow any redirects. Note that C(yes) and C(no) choices are accepted for backwards compatibility, where C(yes) is the equivalent of C(all) and C(no) is the equivalent of C(safe). C(yes) and C(no) are deprecated and will be removed in some future version of Ansible."
                    ],
                    "choices": [
                        "all",
                        "safe",
                        "none"
                    ]
                },
                "force_basic_auth": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "The library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "removes": {
                    "required": false,
                    "description": [
                        "a filename, when it does not exist, this step will not be run."
                    ]
                },
                "user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "username for the module to use for Digest, Basic or WSSE authentication."
                    ]
                },
                "others": {
                    "required": false,
                    "description": [
                        "all arguments accepted by the M(file) module also work here"
                    ]
                },
                "body_format": {
                    "default": "raw",
                    "required": false,
                    "description": [
                        "The serialization format of the body. When set to json, encodes the body argument, if needed, and automatically sets the Content-Type header accordingly."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "raw",
                        "json"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "password for the module to use for Digest, Basic or WSSE authentication."
                    ]
                },
                "HEADER_": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Any parameter starting with \"HEADER_\" is a sent with your request as a header. For example, HEADER_Content-Type=\"application/json\" would send the header \"Content-Type\" along with your request with a value of \"application/json\". This option is deprecated as of C(2.1) and may be removed in a future release. Use I(headers) instead."
                    ]
                },
                "url": {
                    "default": null,
                    "required": true,
                    "description": [
                        "HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path"
                    ]
                },
                "creates": {
                    "required": false,
                    "description": [
                        "a filename, when it already exists, this step will not be run."
                    ]
                },
                "headers": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Add custom HTTP headers to a request in the format of a YAML hash"
                    ],
                    "version_added": "2.1"
                },
                "timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "The socket level timeout in seconds"
                    ]
                },
                "status_code": {
                    "default": 200,
                    "required": false,
                    "description": [
                        "A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated list of status codes."
                    ]
                },
                "return_content": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether or not to return the body of the request as a \"content\" key in the dictionary result. If the reported Content-type is \"application/json\", then the JSON is additionally loaded into a key called C(json) in the dictionary results."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated.  This should only set to C(no) used on personally controlled sites using self-signed certificates.  Prior to 1.9.2 the code defaulted to C(no)."
                    ],
                    "version_added": "1.9.2",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "method": {
                    "default": "GET",
                    "required": false,
                    "description": [
                        "The HTTP method of the request or response. It MUST be uppercase."
                    ],
                    "choices": [
                        "GET",
                        "POST",
                        "PUT",
                        "HEAD",
                        "DELETE",
                        "OPTIONS",
                        "PATCH",
                        "TRACE",
                        "CONNECT",
                        "REFRESH"
                    ]
                }
            },
            "module": "uri"
        },
        {
            "short_description": "Urpmi manager",
            "deprecated": null,
            "options": {
                "update_cache": {
                    "default": false,
                    "required": false,
                    "description": [
                        "update the package database first C(urpmi.update -a)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Indicates the desired package state"
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "force": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Assume \"yes\" is the answer to any question urpmi has to ask. Corresponds to the C(--force) option for I(urpmi)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "pkg": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of package to install, upgrade or remove."
                    ]
                },
                "no-recommends": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Corresponds to the C(--no-recommends) option for I(urpmi)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "urpmi"
        },
        {
            "short_description": "Manage user accounts",
            "deprecated": null,
            "options": {
                "comment": {
                    "required": false,
                    "description": [
                        "Optionally sets the description (aka I(GECOS)) of user account."
                    ]
                },
                "ssh_key_bits": {
                    "default": 2048,
                    "required": false,
                    "description": [
                        "Optionally specify number of bits in SSH key to create."
                    ],
                    "version_added": "0.9"
                },
                "update_password": {
                    "default": "always",
                    "required": false,
                    "description": [
                        "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
                    ],
                    "version_added": "1.3",
                    "choices": [
                        "always",
                        "on_create"
                    ]
                },
                "non_unique": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Optionally when used with the -u option, this option allows to change the user ID to a non-unique value."
                    ],
                    "version_added": "1.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "force": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When used with C(state=absent), behavior is as with C(userdel --force)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssh_key_type": {
                    "default": "rsa",
                    "required": false,
                    "description": [
                        "Optionally specify the type of SSH key to generate. Available SSH key types will depend on implementation present on target host."
                    ],
                    "version_added": "0.9"
                },
                "expires": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "An expiry time for the user in epoch, it will be ignored on platforms that do not support this. Currently supported on Linux and FreeBSD."
                    ],
                    "version_added": "1.9"
                },
                "ssh_key_passphrase": {
                    "required": false,
                    "description": [
                        "Set a passphrase for the SSH key.  If no passphrase is provided, the SSH key will default to having no passphrase."
                    ],
                    "version_added": "0.9"
                },
                "groups": {
                    "required": false,
                    "description": [
                        "Puts the user in this comma-delimited list of groups. When set to the empty string ('groups='), the user is removed from all groups except the primary group."
                    ]
                },
                "home": {
                    "required": false,
                    "description": [
                        "Optionally set the user's home directory."
                    ]
                },
                "move_home": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set to C(yes) when used with C(home=), attempt to move the user's home directory to the specified directory if it isn't there already."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "password": {
                    "required": false,
                    "description": [
                        "Optionally set the user's password to this crypted value.  See the user example in the github examples directory for what this looks like in a playbook. See U(http://docs.ansible.com/ansible/faq.html#how-do-i-generate-crypted-passwords-for-the-user-module) for details on various ways to generate these password values. Note on Darwin system, this value has to be cleartext. Beware of security issues."
                    ]
                },
                "skeleton": {
                    "required": false,
                    "description": [
                        "Optionally set a home skeleton directory. Requires createhome option!"
                    ],
                    "version_added": "2.0"
                },
                "generate_ssh_key": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether to generate a SSH key for the user in question. This will B(not) overwrite an existing SSH key."
                    ],
                    "version_added": "0.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "append": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If C(yes), will only add groups, not set them to just the list in I(groups)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "uid": {
                    "required": false,
                    "description": [
                        "Optionally sets the I(UID) of the user."
                    ]
                },
                "ssh_key_comment": {
                    "default": "ansible-generated on $HOSTNAME",
                    "required": false,
                    "description": [
                        "Optionally define the comment for the SSH key."
                    ],
                    "version_added": "0.9"
                },
                "group": {
                    "required": false,
                    "description": [
                        "Optionally sets the user's primary group (takes a group name)."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the user to create, remove or modify."
                    ],
                    "aliases": [
                        "user"
                    ]
                },
                "createhome": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Unless set to C(no), a home directory will be made for the user when the account is created or if the home directory does not exist."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "system": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When creating an account, setting this to C(yes) makes the user a system account.  This setting cannot be changed on existing users."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "remove": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "When used with C(state=absent), behavior is as with C(userdel --remove)."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "seuser": {
                    "required": false,
                    "description": [
                        "Optionally sets the seuser type (user_u) on selinux enabled systems."
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the account should exist or not, taking action if the state is different from what is stated."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "ssh_key_file": {
                    "default": ".ssh/id_rsa",
                    "required": false,
                    "description": [
                        "Optionally specify the SSH key filename. If this is a relative filename then it will be relative to the user's home directory."
                    ],
                    "version_added": "0.9"
                },
                "login_class": {
                    "required": false,
                    "description": [
                        "Optionally sets the user's login class for FreeBSD, OpenBSD and NetBSD systems."
                    ]
                },
                "shell": {
                    "required": false,
                    "description": [
                        "Optionally set the user's shell."
                    ]
                }
            },
            "module": "user"
        },
        {
            "short_description": "add remove firewall rules in a gateway  in a vca",
            "deprecated": null,
            "options": {
                "username": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vca username or email address, if not set the environment variable VCA_USER is checked for the username."
                    ],
                    "aliases": [
                        "user"
                    ]
                },
                "gateway_name": {
                    "default": "gateway",
                    "required": false,
                    "description": [
                        "The name of the gateway of the vdc where the rule should be added"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "if the object should be added or removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "instance_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The instance id in a vchs environment to be used for creating the vapp"
                    ]
                },
                "host": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The authentication host to be used when service type  is vcd."
                    ]
                },
                "fw_rules": {
                    "default": false,
                    "required": true,
                    "description": [
                        "A list of firewall rules to be added to the gateway, Please see examples on valid entries"
                    ]
                },
                "service_type": {
                    "default": "vca",
                    "required": false,
                    "description": [
                        "The type of service we are authenticating against"
                    ],
                    "choices": [
                        "vca",
                        "vchs",
                        "vcd"
                    ]
                },
                "org": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The org to login to for creating vapp, mostly set when the service_type is vdc."
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vca password, if not set the environment variable VCA_PASS is checked for the password"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "vdc_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the vdc where the gateway is located."
                    ]
                },
                "api_version": {
                    "default": "5.7",
                    "required": false,
                    "description": [
                        "The api version to be used with the vca"
                    ]
                },
                "verify_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If the certificates of the authentication is to be verified"
                    ]
                }
            },
            "module": "vca_fw"
        },
        {
            "short_description": "add remove nat rules in a gateway  in a vca",
            "deprecated": null,
            "options": {
                "username": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vca username or email address, if not set the environment variable VCA_USER is checked for the username."
                    ],
                    "aliases": [
                        "user"
                    ]
                },
                "nat_rules": {
                    "default": false,
                    "required": true,
                    "description": [
                        "A list of rules to be added to the gateway, Please see examples on valid entries"
                    ]
                },
                "purge_rules": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set to true, it will delete all rules in the gateway that are not given as paramter to this module."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "if the object should be added or removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "instance_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The instance id in a vchs environment to be used for creating the vapp"
                    ]
                },
                "host": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The authentication host to be used when service type  is vcd."
                    ]
                },
                "org": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The org to login to for creating vapp, mostly set when the service_type is vdc."
                    ]
                },
                "service_type": {
                    "default": "vca",
                    "required": false,
                    "description": [
                        "The type of service we are authenticating against"
                    ],
                    "choices": [
                        "vca",
                        "vchs",
                        "vcd"
                    ]
                },
                "gateway_name": {
                    "default": "gateway",
                    "required": false,
                    "description": [
                        "The name of the gateway of the vdc where the rule should be added"
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vca password, if not set the environment variable VCA_PASS is checked for the password"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "vdc_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the vdc where the gateway is located."
                    ]
                },
                "api_version": {
                    "default": "5.7",
                    "required": false,
                    "description": [
                        "The api version to be used with the vca"
                    ]
                },
                "verify_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If the certificates of the authentication is to be verified"
                    ]
                }
            },
            "module": "vca_nat"
        },
        {
            "short_description": "Manages vCloud Air vApp instances.",
            "deprecated": null,
            "options": {
                "vm_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the virtual machine instance in the vApp to manage."
                    ]
                },
                "username": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vCloud Air username to use during authentication"
                    ]
                },
                "vm_memory": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The amount of memory in MB to allocate to VMs in the vApp.  If the I(vm_name) argument is provided, then this becomes a per VM setting otherise it is applied to all VMs in the vApp."
                    ]
                },
                "template_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the vApp template to use to create the vApp instance.  If the I(state) is not `absent` then the I(template_name) value must be provided.  The I(template_name) must be previously uploaded to the catalog specified by I(catalog_name)"
                    ]
                },
                "network_mode": {
                    "default": "pool",
                    "required": false,
                    "description": [
                        "Configures the mode of the network connection."
                    ],
                    "choices": [
                        "pool",
                        "dhcp",
                        "static"
                    ]
                },
                "vapp_name": {
                    "required": true,
                    "description": [
                        "The name of the vCloud Air vApp instance"
                    ]
                },
                "org": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The org to login to for creating vapp, mostly set when the service_type is vdc."
                    ]
                },
                "operation": {
                    "default": "noop",
                    "required": false,
                    "description": [
                        "Specifies an operation to be performed on the vApp."
                    ],
                    "choices": [
                        "noop",
                        "poweron",
                        "poweroff",
                        "suspend",
                        "shutdown",
                        "reboot",
                        "reset"
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The vCloud Air password to use during authentication"
                    ]
                },
                "vm_cpus": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The number of vCPUs to configure for the VM in the vApp.   If the I(vm_name) argument is provided, then this becomes a per VM setting otherwise it is applied to all VMs in the vApp."
                    ]
                },
                "vdc_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the virtual data center (VDC) where the vm should be created or contains the vAPP."
                    ]
                },
                "network_name": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the network that should be attached to the virtual machine in the vApp.  The virtual network specified must already be created in the vCloud Air VDC.  If the I(state) is not 'absent' then the I(network_name) argument must be provided."
                    ]
                },
                "host": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The authentication host to be used when service type  is vcd."
                    ]
                },
                "instance_id": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The instance id in a vchs environment to be used for creating the vapp"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Configures the state of the vApp."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "deployed",
                        "undeployed"
                    ]
                },
                "service_type": {
                    "default": "vca",
                    "required": false,
                    "description": [
                        "The type of service we are authenticating against"
                    ],
                    "choices": [
                        "vca",
                        "vchs",
                        "vcd"
                    ]
                },
                "api_version": {
                    "default": "5.7",
                    "required": false,
                    "description": [
                        "The api version to be used with the vca"
                    ]
                }
            },
            "module": "vca_vapp"
        },
        {
            "short_description": "Updates Vertica configuration parameters.",
            "deprecated": null,
            "options": {
                "cluster": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Name of the Vertica cluster."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the parameter to update."
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with."
                    ]
                },
                "login_user": {
                    "default": "dbadmin",
                    "required": false,
                    "description": [
                        "The username used to authenticate with."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the Vertica database."
                    ]
                },
                "port": {
                    "default": 5433,
                    "required": false,
                    "description": [
                        "Vertica cluster port to connect to."
                    ]
                },
                "value": {
                    "required": true,
                    "description": [
                        "Value of the parameter to be set."
                    ]
                }
            },
            "module": "vertica_configuration"
        },
        {
            "short_description": "Gathers Vertica database facts.",
            "deprecated": null,
            "options": {
                "login_user": {
                    "default": "dbadmin",
                    "required": false,
                    "description": [
                        "The username used to authenticate with."
                    ]
                },
                "cluster": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Name of the cluster running the schema."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the database running the schema."
                    ]
                },
                "port": {
                    "default": 5433,
                    "required": false,
                    "description": "Database port to connect to."
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with."
                    ]
                }
            },
            "module": "vertica_facts"
        },
        {
            "short_description": "Adds or removes Vertica database roles and assigns roles to them.",
            "deprecated": null,
            "options": {
                "assigned_roles": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of roles to assign to the role."
                    ],
                    "aliases": [
                        "assigned_role"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the role to add or remove."
                    ]
                },
                "login_user": {
                    "default": "dbadmin",
                    "required": false,
                    "description": [
                        "The username used to authenticate with."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the Vertica database."
                    ]
                },
                "cluster": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Name of the Vertica cluster."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create C(present), drop C(absent) or lock C(locked) a role."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with."
                    ]
                },
                "port": {
                    "default": 5433,
                    "required": false,
                    "description": [
                        "Vertica cluster port to connect to."
                    ]
                }
            },
            "module": "vertica_role"
        },
        {
            "short_description": "Adds or removes Vertica database schema and roles.",
            "deprecated": null,
            "options": {
                "create_roles": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of roles to create and grant usage and create access to the schema."
                    ],
                    "aliases": [
                        "create_role"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the schema to add or remove."
                    ]
                },
                "login_user": {
                    "default": "dbadmin",
                    "required": false,
                    "description": [
                        "The username used to authenticate with."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the Vertica database."
                    ]
                },
                "usage_roles": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of roles to create and grant usage access to the schema."
                    ],
                    "aliases": [
                        "usage_role"
                    ]
                },
                "cluster": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Name of the Vertica cluster."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create C(present), or drop C(absent) a schema."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the user to set as owner of the schema."
                    ]
                },
                "port": {
                    "default": 5433,
                    "required": false,
                    "description": [
                        "Vertica cluster port to connect to."
                    ]
                }
            },
            "module": "vertica_schema"
        },
        {
            "short_description": "Adds or removes Vertica database users and assigns roles.",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Sets the user's profile."
                    ]
                },
                "resource_pool": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Sets the user's resource pool."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the user to add or remove."
                    ]
                },
                "roles": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Comma separated list of roles to assign to the user."
                    ],
                    "aliases": [
                        "role"
                    ]
                },
                "login_user": {
                    "default": "dbadmin",
                    "required": false,
                    "description": [
                        "The username used to authenticate with."
                    ]
                },
                "ldap": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Set to true if users are authenticated via LDAP.",
                        "The user will be created with password expired and set to I($ldap$)."
                    ]
                },
                "db": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Name of the Vertica database."
                    ]
                },
                "cluster": {
                    "default": "localhost",
                    "required": false,
                    "description": [
                        "Name of the Vertica cluster."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to create C(present), drop C(absent) or lock C(locked) a user."
                    ],
                    "choices": [
                        "present",
                        "absent",
                        "locked"
                    ]
                },
                "login_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The password used to authenticate with."
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The user's password encrypted by the MD5 algorithm.",
                        "The password must be generated with the format C(\"md5\" + md5[password + username]), resulting in a total of 35 characters. An easy way to do this is by querying the Vertica database with select 'md5'||md5('<user_password><user_name>')."
                    ]
                },
                "expired": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Sets the user's password expiration."
                    ]
                },
                "port": {
                    "default": 5433,
                    "required": false,
                    "description": [
                        "Vertica cluster port to connect to."
                    ]
                }
            },
            "module": "vertica_user"
        },
        {
            "short_description": "Manages virtual machines supported by libvirt",
            "deprecated": null,
            "options": {
                "xml": {
                    "default": null,
                    "required": false,
                    "description": [
                        "XML document used with the define command"
                    ]
                },
                "state": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Note that there may be some lag for state requests like C(shutdown) since these refer only to VM states. After starting a guest, it may not be immediately accessible."
                    ],
                    "choices": [
                        "running",
                        "shutdown",
                        "destroyed",
                        "paused"
                    ]
                },
                "command": {
                    "required": false,
                    "description": [
                        "in addition to state management, various non-idempotent commands are available. See examples"
                    ],
                    "choices": [
                        "create",
                        "status",
                        "start",
                        "stop",
                        "pause",
                        "unpause",
                        "shutdown",
                        "undefine",
                        "destroy",
                        "get_xml",
                        "autostart",
                        "freemem",
                        "list_vms",
                        "info",
                        "nodeinfo",
                        "virttype",
                        "define"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "name of the guest VM being managed. Note that VM must be previously defined with xml."
                    ],
                    "aliases": []
                },
                "uri": {
                    "required": false,
                    "description": [
                        "libvirt connection uri"
                    ],
                    "defaults": "qemu:///system"
                }
            },
            "module": "virt"
        },
        {
            "short_description": "Manage libvirt network configuration",
            "deprecated": null,
            "options": {
                "xml": {
                    "required": false,
                    "description": [
                        "XML document used with the define command."
                    ]
                },
                "state": {
                    "required": false,
                    "description": [
                        "specify which state you want a network to be in. If 'active', network will be started. If 'present', ensure that network is present but do not change its state; if it's missing, you need to specify xml argument. If 'inactive', network will be stopped. If 'undefined' or 'absent', network will be removed from I(libvirt) configuration."
                    ],
                    "choices": [
                        "active",
                        "inactive",
                        "present",
                        "absent"
                    ]
                },
                "command": {
                    "required": false,
                    "description": [
                        "in addition to state management, various non-idempotent commands are available. See examples."
                    ],
                    "choices": [
                        "define",
                        "create",
                        "start",
                        "stop",
                        "destroy",
                        "undefine",
                        "get_xml",
                        "list_nets",
                        "facts",
                        "info",
                        "status"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "name of the network being managed. Note that network must be previously defined with xml."
                    ],
                    "aliases": [
                        "network"
                    ]
                },
                "autostart": {
                    "required": false,
                    "description": [
                        "Specify if a given storage pool should be started automatically on system boot."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "uri": {
                    "default": "qemu:///system",
                    "required": false,
                    "description": [
                        "libvirt connection uri."
                    ]
                }
            },
            "module": "virt_net"
        },
        {
            "short_description": "Manage libvirt storage pools",
            "deprecated": null,
            "options": {
                "xml": {
                    "required": false,
                    "description": [
                        "XML document used with the define command."
                    ]
                },
                "state": {
                    "required": false,
                    "description": [
                        "specify which state you want a storage pool to be in. If 'active', pool will be started. If 'present', ensure that pool is present but do not change its state; if it's missing, you need to specify xml argument. If 'inactive', pool will be stopped. If 'undefined' or 'absent', pool will be removed from I(libvirt) configuration. If 'deleted', pool contents will be deleted and then pool undefined."
                    ],
                    "choices": [
                        "active",
                        "inactive",
                        "present",
                        "absent",
                        "undefined",
                        "deleted"
                    ]
                },
                "command": {
                    "required": false,
                    "description": [
                        "in addition to state management, various non-idempotent commands are available. See examples."
                    ],
                    "choices": [
                        "define",
                        "build",
                        "create",
                        "start",
                        "stop",
                        "destroy",
                        "delete",
                        "undefine",
                        "get_xml",
                        "list_pools",
                        "facts",
                        "info",
                        "status"
                    ]
                },
                "name": {
                    "required": false,
                    "description": [
                        "name of the storage pool being managed. Note that pool must be previously defined with xml."
                    ],
                    "aliases": [
                        "pool"
                    ]
                },
                "autostart": {
                    "required": false,
                    "description": [
                        "Specify if a given storage pool should be started automatically on system boot."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "uri": {
                    "default": "qemu:///system",
                    "required": false,
                    "description": [
                        "I(libvirt) connection uri."
                    ]
                },
                "mode": {
                    "required": false,
                    "description": [
                        "Pass additional parameters to 'build' or 'delete' commands."
                    ],
                    "choices": [
                        "new",
                        "repair",
                        "resize",
                        "no_overwrite",
                        "overwrite",
                        "normal",
                        "zeroed"
                    ]
                }
            },
            "module": "virt_pool"
        },
        {
            "short_description": "Create VMware vSphere Cluster",
            "deprecated": null,
            "options": {
                "enable_ha": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set to True will enable HA when the cluster is created."
                    ]
                },
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "enable_vsan": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set to True will enable vSAN when the cluster is created."
                    ]
                },
                "datacenter_name": {
                    "required": true,
                    "description": [
                        "The name of the datacenter the cluster will be created in."
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "cluster_name": {
                    "required": true,
                    "description": [
                        "The name of the cluster that will be created"
                    ]
                },
                "enable_drs": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If set to True will enable DRS when the cluster is created."
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                }
            },
            "module": "vmware_cluster"
        },
        {
            "short_description": "Manage VMware vSphere Datacenters",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "datacenter_name": {
                    "required": true,
                    "description": [
                        "The name of the datacenter the cluster will be created in."
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "If the datacenter should be present or absent"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                }
            },
            "module": "vmware_datacenter"
        },
        {
            "short_description": "Manage VMware ESXi DNS Configuration",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "dns_servers": {
                    "required": true,
                    "description": [
                        "The DNS servers that the host should be configured to use."
                    ]
                },
                "domainname": {
                    "required": true,
                    "description": [
                        "The domain the ESXi host should be apart of."
                    ]
                },
                "change_hostname_to": {
                    "required": true,
                    "description": [
                        "The hostname that an ESXi host should be changed to."
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                }
            },
            "module": "vmware_dns_config"
        },
        {
            "short_description": "Add or remove a host from distributed virtual switch",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "If the host should be present or absent attached to the vSwitch"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "esxi_hostname": {
                    "required": true,
                    "description": [
                        "The ESXi hostname"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "vmnics": {
                    "required": true,
                    "description": [
                        "The ESXi hosts vmnics to use with the Distributed vSwitch"
                    ]
                },
                "switch_name": {
                    "required": true,
                    "description": [
                        "The name of the Distributed vSwitch"
                    ]
                }
            },
            "module": "vmware_dvs_host"
        },
        {
            "short_description": "Create or remove a Distributed vSwitch portgroup",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "portgroup_name": {
                    "required": true,
                    "description": [
                        "The name of the portgroup that is to be created or deleted"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "num_ports": {
                    "required": true,
                    "description": [
                        "The number of ports the portgroup should contain"
                    ]
                },
                "portgroup_type": {
                    "required": true,
                    "description": [
                        "See VMware KB 1022312 regarding portgroup types"
                    ],
                    "choices": [
                        "earlyBinding",
                        "lateBinding",
                        "ephemeral"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "switch_name": {
                    "required": true,
                    "description": [
                        "The name of the distributed vSwitch the port group should be created on."
                    ]
                },
                "vlan_id": {
                    "required": true,
                    "description": [
                        "The VLAN ID that should be configured with the portgroup"
                    ]
                }
            },
            "module": "vmware_dvs_portgroup"
        },
        {
            "short_description": "Create or remove a distributed vSwitch",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "datacenter_name": {
                    "required": true,
                    "description": [
                        "The name of the datacenter that will contain the dvSwitch"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "discovery_proto": {
                    "required": true,
                    "description": [
                        "Link discovery protocol between Cisco and Link Layer discovery"
                    ],
                    "choices": [
                        "cdp",
                        "lldp"
                    ]
                },
                "mtu": {
                    "required": true,
                    "description": [
                        "The switch maximum transmission unit"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or remove dvSwitch"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "discovery_operation": {
                    "description": [
                        "Select the discovery operation"
                    ],
                    "choices": [
                        "both",
                        "none",
                        "advertise",
                        "listen"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "switch_name": {
                    "required": true,
                    "description": [
                        "The name of the switch to create or remove"
                    ]
                },
                "uplink_quantity": {
                    "required": true,
                    "description": [
                        "Quantity of uplink per ESXi host added to the switch"
                    ]
                }
            },
            "module": "vmware_dvswitch"
        },
        {
            "short_description": "Add/remove ESXi host to/from vCenter",
            "deprecated": null,
            "options": {
                "cluster_name": {
                    "required": true,
                    "description": [
                        "Name of the cluster to add the host"
                    ]
                },
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Add or remove the host"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "datacenter_name": {
                    "required": true,
                    "description": [
                        "Name of the datacenter to add the host"
                    ]
                },
                "esxi_hostname": {
                    "required": true,
                    "description": [
                        "ESXi hostname to manage"
                    ]
                },
                "esxi_password": {
                    "required": true,
                    "description": [
                        "ESXi password"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "esxi_username": {
                    "required": true,
                    "description": [
                        "ESXi username"
                    ]
                }
            },
            "module": "vmware_host"
        },
        {
            "short_description": "Place a host into maintenance mode",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "timeout": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Specify a timeout for the operation"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "evacuate": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If True, evacuate all powered off VMs"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "vsan_mode": {
                    "required": false,
                    "description": [
                        "Specify which VSAN compliant mode to enter"
                    ],
                    "choices": [
                        "ensureObjectAccessibility",
                        "evacuateAllData",
                        "noAction"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Enter or exit maintenance mode"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "esxi_hostname": {
                    "required": true,
                    "description": [
                        "Name of the host as defined in vCenter"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                }
            },
            "module": "vmware_maintenancemode"
        },
        {
            "short_description": "Migrate a VMK interface from VSS to VDS",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "current_switch_name": {
                    "required": true,
                    "description": [
                        "Switch VMK interface is currently on"
                    ]
                },
                "migrate_portgroup_name": {
                    "required": true,
                    "description": [
                        "Portgroup name to migrate VMK interface to"
                    ]
                },
                "esxi_hostname": {
                    "required": true,
                    "description": [
                        "ESXi hostname to be managed"
                    ]
                },
                "device": {
                    "required": true,
                    "description": [
                        "VMK interface name"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "migrate_switch_name": {
                    "required": true,
                    "description": [
                        "Switch name to migrate VMK interface to"
                    ]
                },
                "current_portgroup_name": {
                    "required": true,
                    "description": [
                        "Portgroup name VMK interface is currently on"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                }
            },
            "module": "vmware_migrate_vmk"
        },
        {
            "short_description": "Create a VMware portgroup",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "portgroup_name": {
                    "required": true,
                    "description": [
                        "Portgroup name to add"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "switch_name": {
                    "required": true,
                    "description": [
                        "vSwitch to modify"
                    ]
                },
                "vlan_id": {
                    "required": true,
                    "description": [
                        "VLAN ID to assign to portgroup"
                    ]
                }
            },
            "module": "vmware_portgroup"
        },
        {
            "short_description": "Return canonical (NAA) from an ESXi host",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "target_id": {
                    "required": true,
                    "description": [
                        "The target id based on order of scsi device"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                }
            },
            "module": "vmware_target_canonical_facts"
        },
        {
            "short_description": "Return basic facts pertaining to a vSphere virtual machine guest",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                }
            },
            "module": "vmware_vm_facts"
        },
        {
            "short_description": "Execute a process in VM",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "datacenter": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The datacenter hosting the VM",
                        "Will help speed up search"
                    ]
                },
                "vm_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The password used to login to the VM."
                    ]
                },
                "vm_shell": {
                    "required": true,
                    "description": [
                        "The absolute path to the program to start. On Linux this is executed via bash."
                    ]
                },
                "vm_shell_cwd": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The current working directory of the application from which it will be run"
                    ]
                },
                "vm_shell_args": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The argument to the program."
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "vm_username": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The user to connect to the VM."
                    ]
                },
                "vm_shell_env": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Comma seperated list of envirnoment variable, specified in the guest OS notation"
                    ]
                },
                "cluster": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The cluster hosting the VM",
                        "Will help speed up search"
                    ]
                },
                "vm_id_type": {
                    "default": "vm_name",
                    "required": false,
                    "description": [
                        "The identification tag for the VM"
                    ],
                    "choices": [
                        "uuid",
                        "dns_name",
                        "inventory_path",
                        "vm_name"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "vm_id": {
                    "required": true,
                    "description": [
                        "The identification for the VM"
                    ]
                }
            },
            "module": "vmware_vm_shell"
        },
        {
            "short_description": "Migrates a virtual machine from a standard vswitch to distributed",
            "deprecated": null,
            "options": {
                "vm_name": {
                    "required": true,
                    "description": [
                        "Name of the virtual machine to migrate to a dvSwitch"
                    ]
                },
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "dvportgroup_name": {
                    "required": true,
                    "description": [
                        "Name of the portgroup to migrate to the virtual machine to"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                }
            },
            "module": "vmware_vm_vss_dvs_migrate"
        },
        {
            "short_description": "Create a VMware VMkernel Interface",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "portgroup_name": {
                    "required": true,
                    "description": [
                        "The name of the portgroup for the VMK interface"
                    ]
                },
                "vland_id": {
                    "required": true,
                    "description": [
                        "The VLAN ID for the VMK interface"
                    ]
                },
                "enable_vmotion": {
                    "required": false,
                    "description": [
                        "Enable the VMK interface for vMotion traffic"
                    ]
                },
                "subnet_mask": {
                    "required": true,
                    "description": [
                        "The Subnet Mask for the VMK interface"
                    ]
                },
                "vswitch_name": {
                    "required": true,
                    "description": [
                        "The name of the vswitch where to add the VMK interface"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "mtu": {
                    "required": false,
                    "description": [
                        "The MTU for the VMK interface"
                    ]
                },
                "enable_mgmt": {
                    "required": false,
                    "description": [
                        "Enable the VMK interface for Management traffic"
                    ]
                },
                "enable_vsan": {
                    "required": false,
                    "description": [
                        "Enable the VMK interface for VSAN traffic"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "ip_address": {
                    "required": true,
                    "description": [
                        "The IP Address for the VMK interface"
                    ]
                },
                "enable_ft": {
                    "required": false,
                    "description": [
                        "Enable the VMK interface for Fault Tolerance traffic"
                    ]
                }
            },
            "module": "vmware_vmkernel"
        },
        {
            "short_description": "Configure the VMkernel IP Address",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "subnet_mask": {
                    "required": true,
                    "description": [
                        "Subnet Mask to assign to VMkernel interface"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "vmk_name": {
                    "required": true,
                    "description": [
                        "VMkernel interface name"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "ip_address": {
                    "required": true,
                    "description": [
                        "IP address to assign to VMkernel interface"
                    ]
                }
            },
            "module": "vmware_vmkernel_ip_config"
        },
        {
            "short_description": "Configure VSAN clustering on an ESXi host",
            "deprecated": null,
            "options": {
                "cluster_uuid": {
                    "required": false,
                    "description": [
                        "Desired cluster UUID"
                    ]
                },
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                }
            },
            "module": "vmware_vsan_cluster"
        },
        {
            "short_description": "Add a VMware Standard Switch to an ESXi host",
            "deprecated": null,
            "options": {
                "username": {
                    "required": true,
                    "description": [
                        "The username of the vSphere vCenter"
                    ],
                    "aliases": [
                        "user",
                        "admin"
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password of the vSphere vCenter"
                    ],
                    "aliases": [
                        "pass",
                        "pwd"
                    ]
                },
                "hostname": {
                    "required": true,
                    "description": [
                        "The hostname or IP address of the vSphere vCenter"
                    ]
                },
                "mtu": {
                    "required": false,
                    "description": [
                        "MTU to configure on vswitch"
                    ]
                },
                "nic_name": {
                    "required": true,
                    "description": [
                        "vmnic name to attach to vswitch"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Add or remove the switch"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "number_of_ports": {
                    "default": 128,
                    "required": false,
                    "description": [
                        "Number of port to configure on vswitch"
                    ]
                },
                "validate_certs": {
                    "default": "True",
                    "required": false,
                    "description": [
                        "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted"
                    ],
                    "choices": [
                        "True",
                        "False"
                    ]
                },
                "switch_name": {
                    "required": true,
                    "description": [
                        "vSwitch name to add"
                    ]
                }
            },
            "module": "vmware_vswitch"
        },
        {
            "short_description": "Copy a file to a vCenter datastore",
            "deprecated": null,
            "options": {
                "src": {
                    "required": true,
                    "description": [
                        "The file to push to vCenter"
                    ]
                },
                "datacenter": {
                    "required": true,
                    "description": [
                        "The datacenter on the vCenter server that holds the datastore."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "The vCenter server on which the datastore is available."
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "The file to push to the datastore on the vCenter server."
                    ]
                },
                "login": {
                    "required": true,
                    "description": [
                        "The login name to authenticate on the vCenter server."
                    ]
                },
                "password": {
                    "required": true,
                    "description": [
                        "The password to authenticate on the vCenter server."
                    ]
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If C(no), SSL certificates will not be validated. This should only be set to C(no) when no other option exists."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "datastore": {
                    "required": true,
                    "description": [
                        "The datastore on the vCenter server to push files to."
                    ]
                }
            },
            "module": "vsphere_copy"
        },
        {
            "short_description": "Create/delete/manage a guest VM through VMware vSphere.",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Username to connect to vcenter as."
                    ]
                },
                "resource_pool": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the resource_pool to create the VM in."
                    ]
                },
                "force": {
                    "default": "no",
                    "description": [
                        "Boolean. Allows you to run commands which may alter the running state of a guest. Also used to reconfigure and destroy."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "vm_disk": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A key, value list of disks and their sizes and which datastore to keep it in."
                    ]
                },
                "vm_hw_version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Desired hardware version identifier (for example, \"vmx-08\" for vms that needs to be managed with vSphere Client). Note that changing hardware version of existing vm is not supported."
                    ],
                    "version_added": "1.7"
                },
                "cluster": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of the cluster to create the VM in. By default this is derived from the host you tell the module to build the guest on."
                    ]
                },
                "vmware_guest_facts": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Gather facts from vCenter on a particular VM"
                    ]
                },
                "vm_extra_config": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A key, value pair of any extra values you want set or changed in the vmx file of the VM. Useful to set advanced options on the VM."
                    ]
                },
                "vcenter_hostname": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The hostname of the vcenter server the module will connect to, to create the guest."
                    ],
                    "aliases": []
                },
                "template_src": {
                    "default": "None",
                    "description": [
                        "Name of the source template to deploy from"
                    ],
                    "version_added": "1.9"
                },
                "password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Password of the user to connect to vcenter as."
                    ]
                },
                "power_on_after_clone": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Specifies if the VM should be powered on after the clone."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "guest": {
                    "required": true,
                    "description": [
                        "The virtual server name you wish to manage."
                    ]
                },
                "vm_nic": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A key, value list of nics, their types and what network to put them on."
                    ]
                },
                "esxi": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Dictionary which includes datacenter and hostname on which the VM should be created. For standalone ESXi hosts, ha-datacenter should be used as the datacenter name"
                    ]
                },
                "vm_hardware": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A key, value list of VM config settings. Must include ['memory_mb', 'num_cpus', 'osid', 'scsi']."
                    ]
                },
                "validate_certs": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Validate SSL certs.  Note, if running on python without SSLContext support (typically, python < 2.7.9) you will have to set this to C(no) as pysphere does not support validating certificates on older python. Prior to 2.1, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8."
                    ],
                    "version_added": 2.1,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Indicate desired state of the vm. 'reconfigured' only applies changes to 'vm_cdrom', 'memory_mb', and 'num_cpus' in vm_hardware parameter. The 'memory_mb' and 'num_cpus' changes are applied to powered-on vms when hot-plugging is enabled for the guest."
                    ],
                    "choices": [
                        "present",
                        "powered_off",
                        "absent",
                        "powered_on",
                        "restarted",
                        "reconfigured"
                    ]
                },
                "from_template": {
                    "default": false,
                    "description": [
                        "Specifies if the VM should be deployed from a template (mutually exclusive with 'state' parameter). No guest customization changes to hardware such as CPU, RAM, NICs or Disks can be applied when launching from template."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "snapshot_to_clone": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "A string that when specified, will create a linked clone copy of the VM. Snapshot must already be taken in vCenter."
                    ],
                    "version_added": "2.0"
                }
            },
            "module": "vsphere_guest"
        },
        {
            "short_description": "Waits for a condition before continuing.",
            "deprecated": null,
            "options": {
                "host": {
                    "default": "127.0.0.1",
                    "required": false,
                    "description": [
                        "A resolvable hostname or IP address to wait for"
                    ]
                },
                "connect_timeout": {
                    "default": 5,
                    "required": false,
                    "description": [
                        "maximum number of seconds to wait for a connection to happen before closing and retrying"
                    ]
                },
                "delay": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "number of seconds to wait before starting to poll"
                    ]
                },
                "state": {
                    "default": "started",
                    "description": [
                        "either C(present), C(started), or C(stopped), C(absent), or C(drained)",
                        "When checking a port C(started) will ensure the port is open, C(stopped) will check that it is closed, C(drained) will check for active connections",
                        "When checking for a file or a search string C(present) or C(started) will ensure that the file or string is present before continuing, C(absent) will check that file is absent or removed"
                    ],
                    "choices": [
                        "present",
                        "started",
                        "stopped",
                        "absent",
                        "drained"
                    ]
                },
                "timeout": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "maximum number of seconds to wait for"
                    ]
                },
                "exclude_hosts": {
                    "required": false,
                    "description": [
                        "list of hosts or IPs to ignore when looking for active TCP connections for C(drained) state"
                    ],
                    "version_added": "1.8"
                },
                "search_regex": {
                    "required": false,
                    "description": [
                        "Can be used to match a string in either a file or a socket connection. Defaults to a multiline regex."
                    ],
                    "version_added": "1.4"
                },
                "path": {
                    "required": false,
                    "description": [
                        "path to a file on the filesytem that must exist before continuing"
                    ],
                    "version_added": "1.4"
                },
                "port": {
                    "required": false,
                    "description": [
                        "port number to poll"
                    ]
                }
            },
            "module": "wait_for"
        },
        {
            "short_description": "Add or remove applications on a Webfaction host",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "The name of the application"
                    ]
                },
                "port_open": {
                    "default": false,
                    "required": false,
                    "description": [
                        "IF the port should be opened"
                    ]
                },
                "machine": {
                    "required": false,
                    "description": [
                        "The machine name to use (optional for accounts with only one machine)"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the application should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "autostart": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether the app should restart with an autostart.cgi script"
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "The webfaction password to use"
                    ]
                },
                "type": {
                    "required": true,
                    "description": [
                        "The type of application to create. See the Webfaction docs at http://docs.webfaction.com/xmlrpc-api/apps.html for a list."
                    ]
                },
                "login_name": {
                    "required": true,
                    "description": [
                        "The webfaction account to use"
                    ]
                },
                "extra_info": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Any extra parameters required by the app"
                    ]
                }
            },
            "module": "webfaction_app"
        },
        {
            "short_description": "Add or remove a database on Webfaction",
            "deprecated": null,
            "options": {
                "machine": {
                    "required": false,
                    "description": [
                        "The machine name to use (optional for accounts with only one machine)"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the database should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the database"
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "The webfaction password to use"
                    ]
                },
                "password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The password for the new database user."
                    ]
                },
                "type": {
                    "required": true,
                    "description": [
                        "The type of database to create."
                    ],
                    "choices": [
                        "mysql",
                        "postgresql"
                    ]
                },
                "login_name": {
                    "required": true,
                    "description": [
                        "The webfaction account to use"
                    ]
                }
            },
            "module": "webfaction_db"
        },
        {
            "short_description": "Add or remove domains and subdomains on Webfaction",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the domain should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "subdomains": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Any subdomains to create."
                    ]
                },
                "login_name": {
                    "required": true,
                    "description": [
                        "The webfaction account to use"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the domain"
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "The webfaction password to use"
                    ]
                }
            },
            "module": "webfaction_domain"
        },
        {
            "short_description": "Add or remove mailboxes on Webfaction",
            "deprecated": null,
            "options": {
                "mailbox_password": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The password for the mailbox"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the mailbox should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "login_name": {
                    "required": true,
                    "description": [
                        "The webfaction account to use"
                    ]
                },
                "mailbox_name": {
                    "required": true,
                    "description": [
                        "The name of the mailbox"
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "The webfaction password to use"
                    ]
                }
            },
            "module": "webfaction_mailbox"
        },
        {
            "short_description": "Add or remove a website on a Webfaction host",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "The name of the website"
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "The webfaction host on which the site should be created."
                    ]
                },
                "subdomains": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A list of subdomains associated with this site."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the website should exist"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "https": {
                    "default": "false",
                    "required": false,
                    "description": [
                        "Whether or not to use HTTPS"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "The webfaction password to use"
                    ]
                },
                "login_name": {
                    "required": true,
                    "description": [
                        "The webfaction account to use"
                    ]
                },
                "site_apps": {
                    "required": false,
                    "description": [
                        "A mapping of URLs to apps"
                    ]
                }
            },
            "module": "webfaction_site"
        },
        {
            "short_description": "Set file/directory permissions for a system user or group.",
            "deprecated": null,
            "options": {
                "propagation": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Propagation flag on the ACL rules.  For more information on the choices see MSDN PropagationFlags Enumeration."
                    ],
                    "choices": [
                        "None",
                        "NoPropagateInherit",
                        "InheritOnly"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify whether to add C(present) or remove C(absent) the specified access rule"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "user": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "User or Group to add specified rights to act on src file/folder"
                    ]
                },
                "rights": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "The rights/permissions that are to be allowed/denyed for the specified user or group for the given src file or directory.  Can be entered as a comma separated list (Ex. \"Modify, Delete, ExecuteFile\").  For more information on the choices see MSDN FileSystemRights Enumeration."
                    ],
                    "choices": [
                        "AppendData",
                        "ChangePermissions",
                        "Delete",
                        "DeleteSubdirectoriesAndFiles",
                        "ExecuteFile",
                        "FullControl",
                        "ListDirectory",
                        "Modify",
                        "Read",
                        "ReadAndExecute",
                        "ReadAttributes",
                        "ReadData",
                        "ReadExtendedAttributes",
                        "ReadPermissions",
                        "Synchronize",
                        "TakeOwnership",
                        "Traverse",
                        "Write",
                        "WriteAttributes",
                        "WriteData",
                        "WriteExtendedAttributes"
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "File or Directory"
                    ]
                },
                "type": {
                    "default": "none",
                    "required": true,
                    "description": [
                        "Specify whether to allow or deny the rights specified"
                    ],
                    "choices": [
                        "allow",
                        "deny"
                    ]
                },
                "inherit": {
                    "default": "For Leaf File, None; For Directory, ContainerInherit, ObjectInherit;",
                    "required": false,
                    "description": [
                        "Inherit flags on the ACL rules.  Can be specified as a comma separated list (Ex. \"ContainerInherit, ObjectInherit\").  For more information on the choices see MSDN InheritanceFlags Enumeration."
                    ],
                    "choices": [
                        "ContainerInherit",
                        "ObjectInherit",
                        "None"
                    ]
                }
            },
            "module": "win_acl"
        },
        {
            "short_description": "Change ACL inheritance",
            "deprecated": null,
            "options": {
                "path": {
                    "required": true,
                    "description": [
                        "Path to be used for changing inheritance"
                    ]
                },
                "state": {
                    "default": "absent",
                    "required": false,
                    "description": [
                        "Specify whether to enable I(present) or disable I(absent) ACL inheritance"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "reorganize": {
                    "default": false,
                    "required": false,
                    "description": [
                        "For P(state) = I(absent), indicates if the inherited ACE's should be copied from the parent directory. This is necessary (in combination with removal) for a simple ACL instead of using multiple ACE deny entries.",
                        "For P(state) = I(present), indicates if the inherited ACE's should be deduplicated compared to the parent directory. This removes complexity of the ACL structure."
                    ],
                    "choices": [
                        false,
                        true
                    ]
                }
            },
            "module": "win_acl_inheritance"
        },
        {
            "short_description": "Installs packages using chocolatey",
            "deprecated": null,
            "options": {
                "upgrade": {
                    "default": false,
                    "required": false,
                    "description": [
                        "If package is already installed it, try to upgrade to the latest version or to the specified version"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Forces install of the package (even if it already exists). Using Force will cause ansible to always report that a change was made"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the package to be installed"
                    ]
                },
                "install_args": {
                    "default": null,
                    "require": false,
                    "description": [
                        "Arguments to pass to the native installer"
                    ],
                    "version_added": "2.1"
                },
                "source": {
                    "default": null,
                    "require": false,
                    "description": [
                        "Specify source rather than using default chocolatey repository"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the package on the system"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "version": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specific version of the package to be installed",
                        "Ignored when state == 'absent'"
                    ]
                },
                "params": {
                    "default": null,
                    "require": false,
                    "description": [
                        "Parameters to pass to the package"
                    ],
                    "version_added": "2.1"
                },
                "ignore_dependencies": {
                    "default": false,
                    "require": false,
                    "description": [
                        "Ignore dependencies, only install/upgrade the package itself"
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "win_chocolatey"
        },
        {
            "short_description": "Copies files to remote locations on windows hosts.",
            "deprecated": null,
            "options": {
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Remote absolute path where the file should be copied to. If src is a directory, this must be a directory too. Use \\ for path separators."
                    ]
                },
                "src": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with \"/\", only inside contents of that directory are copied to destination. Otherwise, if it does not end with \"/\", the directory itself with all contents is copied. This behavior is similar to Rsync."
                    ],
                    "aliases": []
                }
            },
            "module": "win_copy"
        },
        {
            "short_description": "Runs ngen to recompile DLLs after .NET  updates",
            "deprecated": null,
            "options": null,
            "module": "win_dotnet_ngen"
        },
        {
            "short_description": "Modifies environment variables on windows hosts.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "present to ensure environment variable is set, or absent to ensure it is removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": "no default",
                    "required": true,
                    "description": [
                        "The name of the environment variable"
                    ]
                },
                "value": {
                    "default": "no default",
                    "required": false,
                    "description": [
                        "The value to store in the environment variable. Can be omitted for state=absent"
                    ]
                },
                "level": {
                    "default": "no default",
                    "required": true,
                    "description": [
                        "The level at which to set the environment variable.",
                        "Use 'machine' to set for all users.",
                        "Use 'user' to set for the current user that ansible is connected as.",
                        "Use 'process' to set for the current process.  Probably not that useful."
                    ],
                    "choices": [
                        "machine",
                        "process",
                        "user"
                    ]
                }
            },
            "module": "win_environment"
        },
        {
            "short_description": "Installs and uninstalls Windows Features",
            "deprecated": null,
            "options": {
                "source": {
                    "required": false,
                    "description": [
                        "Specify a source to install the feature from"
                    ],
                    "version_added": "2.1",
                    "choices": [
                        " {driveletter}:\\sources\\sxs",
                        " {IP}\\Share\\sources\\sxs"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the features or roles on the system"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Names of roles or features to install as a single feature or a comma-separated list of features"
                    ]
                },
                "include_management_tools": {
                    "default": null,
                    "description": [
                        "Adds the corresponding management tools to the specified feature"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "include_sub_features": {
                    "default": null,
                    "description": [
                        "Adds all subfeatures of the specified feature"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "restart": {
                    "default": null,
                    "description": [
                        "Restarts the computer automatically when installation is complete, if restarting is required by the roles or features installed."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "win_feature"
        },
        {
            "short_description": "Creates, touches or removes files or directories.",
            "deprecated": null,
            "options": {
                "path": {
                    "default": [],
                    "required": true,
                    "description": [
                        "path to the file being managed.  Aliases: I(dest), I(name)"
                    ],
                    "aliases": [
                        "dest",
                        "name"
                    ]
                },
                "state": {
                    "default": "file",
                    "required": false,
                    "description": [
                        "If C(directory), all immediate subdirectories will be created if they do not exist. If C(file), the file will NOT be created if it does not exist, see the M(copy) or M(template) module if you want that behavior.  If C(absent), directories will be recursively deleted, and files will be removed. If C(touch), an empty file will be created if the c(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way `touch` works from the command line)."
                    ],
                    "choices": [
                        "file",
                        "directory",
                        "touch",
                        "absent"
                    ]
                }
            },
            "module": "win_file"
        },
        {
            "short_description": "Get DLL or EXE file build version",
            "deprecated": null,
            "options": {
                "path": {
                    "required": true,
                    "description": [
                        "File to get version(provide absolute path)"
                    ],
                    "aliases": []
                }
            },
            "module": "win_file_version"
        },
        {
            "short_description": "Windows firewall automation",
            "deprecated": null,
            "options": {
                "profile": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the profile this rule applies to"
                    ]
                },
                "remoteport": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the remote port this rule applies to"
                    ]
                },
                "direction": {
                    "default": null,
                    "required": true,
                    "description": [
                        "is this rule for inbound or outbound trafic"
                    ],
                    "choices": [
                        "In",
                        "Out"
                    ]
                },
                "enable": {
                    "default": null,
                    "required": false,
                    "description": [
                        "is this firewall rule enabled or disabled"
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "protocol": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the protocol this rule applies to"
                    ]
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "the rules name"
                    ]
                },
                "service": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the service this rule applies to"
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "description for the firewall rule"
                    ]
                },
                "localip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the local ip address this rule applies to"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": true,
                    "description": [
                        "should this rule be added or removed"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "program": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the program this rule applies to"
                    ]
                },
                "remoteip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the remote ip address/range this rule applies to"
                    ]
                },
                "action": {
                    "default": null,
                    "required": true,
                    "description": [
                        "what to do with the items this rule is for"
                    ],
                    "choices": [
                        "allow",
                        "block"
                    ]
                },
                "force": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Enforces the change if a rule with different values exists"
                    ]
                },
                "localport": {
                    "default": null,
                    "required": false,
                    "description": [
                        "the local port this rule applies to"
                    ]
                }
            },
            "module": "win_firewall_rule"
        },
        {
            "short_description": "Fetches a file from a given URL",
            "deprecated": null,
            "options": {
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Basic authentication username"
                    ]
                },
                "force": {
                    "default": true,
                    "required": false,
                    "description": [
                        "If C(yes), will always download the file.  If C(no), will only download the file if it does not exist or the remote file has been modified more recently than the local file."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "url": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The full URL of a file to download"
                    ]
                },
                "skip_certificate_validation": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Skip SSL certificate validation if true"
                    ]
                },
                "proxy_url": {
                    "required": false,
                    "description": [
                        "The full URL of the proxy server to download through."
                    ],
                    "version_added": "2.0"
                },
                "proxy_password": {
                    "required": false,
                    "description": [
                        "Proxy authentication password"
                    ],
                    "version_added": "2.0"
                },
                "dest": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The absolute path of the location to save the file at the URL. Be sure to include a filename and extension as appropriate."
                    ]
                },
                "proxy_username": {
                    "required": false,
                    "description": [
                        "Proxy authentication username"
                    ],
                    "version_added": "2.0"
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Basic authentication password"
                    ]
                }
            },
            "module": "win_get_url"
        },
        {
            "short_description": "Add and remove local groups",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "Create or remove the group"
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the group"
                    ],
                    "aliases": []
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the group"
                    ],
                    "aliases": []
                }
            },
            "module": "win_group"
        },
        {
            "short_description": "Configures a virtual directory in IIS.",
            "deprecated": null,
            "options": {
                "application": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The application under which the virtual directory is created or exists."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to add or remove the specified virtual directory"
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The name of the virtual directory to create or remove"
                    ]
                },
                "physical_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The physical path to the folder in which the new virtual directory is created. The specified folder must already exist."
                    ]
                },
                "site": {
                    "required": true,
                    "description": [
                        "The site name under which the virtual directory is created or exists."
                    ]
                }
            },
            "module": "win_iis_virtualdirectory"
        },
        {
            "short_description": "Configures a IIS Web application.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": null,
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "State of the web application"
                    ],
                    "aliases": []
                },
                "application_pool": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The application pool in which the new site executes."
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the Web applicatio"
                    ],
                    "aliases": []
                },
                "physical_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The physical path on the remote host to use for the new applicatiojn. The specified folder must already exist."
                    ],
                    "aliases": []
                },
                "site": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the site on which the application is created."
                    ],
                    "aliases": []
                }
            },
            "module": "win_iis_webapplication"
        },
        {
            "short_description": "Configures a IIS Web Application Pool.",
            "deprecated": null,
            "options": {
                "attributes": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Application Pool attributes from string where attributes are seperated by a pipe and attribute name/values by colon Ex. \"foo:1|bar:2\""
                    ],
                    "aliases": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "absent",
                        "stopped",
                        "started",
                        "restarted"
                    ],
                    "required": false,
                    "description": [
                        "State of the binding"
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Names of application pool"
                    ],
                    "aliases": []
                }
            },
            "module": "win_iis_webapppool"
        },
        {
            "short_description": "Configures a IIS Web site.",
            "deprecated": null,
            "options": {
                "protocol": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The protocol to be used for the Web binding (usually HTTP, HTTPS, or FTP)."
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Names of web site"
                    ],
                    "aliases": []
                },
                "certificate_hash": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Certificate hash for the SSL binding. The certificate hash is the unique identifier for the certificate."
                    ],
                    "aliases": []
                },
                "ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The IP address to bind to / use for the new site."
                    ],
                    "aliases": []
                },
                "host_header": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The host header to bind to / use for the new site."
                    ],
                    "aliases": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "State of the binding"
                    ],
                    "aliases": []
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The port to bind to / use for the new site."
                    ],
                    "aliases": []
                },
                "certificate_store_name": {
                    "default": "My",
                    "required": false,
                    "description": [
                        "Name of the certificate store where the certificate for the binding is located."
                    ],
                    "aliases": []
                }
            },
            "module": "win_iis_webbinding"
        },
        {
            "short_description": "Configures a IIS Web site.",
            "deprecated": null,
            "options": {
                "application_pool": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The application pool in which the new site executes."
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Names of web site"
                    ],
                    "aliases": []
                },
                "parameters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Custom site Parameters from string where properties are seperated by a pipe and property name/values by colon Ex. \"foo:1|bar:2\""
                    ],
                    "aliases": []
                },
                "ip": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The IP address to bind to / use for the new site."
                    ],
                    "aliases": []
                },
                "physical_path": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The physical path on the remote host to use for the new site. The specified folder must already exist."
                    ],
                    "aliases": []
                },
                "hostname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The host header to bind to / use for the new site."
                    ],
                    "aliases": []
                },
                "site_id": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Explicitly set the IIS numeric ID for a site. Note that this value cannot be changed after the website has been created."
                    ],
                    "version_added": "2.1"
                },
                "ssl": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Enables HTTPS binding on the site.."
                    ],
                    "aliases": []
                },
                "state": {
                    "default": null,
                    "choices": [
                        "started",
                        "restarted",
                        "stopped",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "State of the web site"
                    ],
                    "aliases": []
                },
                "port": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The port to bind to / use for the new site."
                    ],
                    "aliases": []
                }
            },
            "module": "win_iis_website"
        },
        {
            "short_description": "Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression.",
            "deprecated": null,
            "options": {
                "insertbefore": {
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the line will be inserted before the last match of specified regular expression. A value is available; C(BOF) for inserting the line at the beginning of the file.",
                        "If specified regular expression has no matches, the line will be inserted at the end of the file.  May not be used with C(backrefs)."
                    ],
                    "choices": [
                        "BOF",
                        "*regex*"
                    ]
                },
                "encoding": {
                    "default": "auto",
                    "required": false,
                    "description": [
                        "Specifies the encoding of the source text file to operate on (and thus what the output encoding will be). The default of C(auto) will cause the module to auto-detect the encoding of the source file and ensure that the modified file is written with the same encoding.",
                        "An explicit encoding can be passed as a string that is a valid value to pass to the .NET framework System.Text.Encoding.GetEncoding() method - see U(https://msdn.microsoft.com/en-us/library/system.text.encoding%28v=vs.110%29.aspx).",
                        "This is mostly useful with C(create=yes) if you want to create a new file with a specific encoding. If C(create=yes) is specified without a specific encoding, the default encoding (UTF-8, no BOM) will be used."
                    ]
                },
                "dest": {
                    "required": true,
                    "description": [
                        "The path of the file to modify.",
                        "Note that the Windows path delimiter '' must be escaped as '\\' (see examples below)"
                    ],
                    "aliases": [
                        "name",
                        "destfile"
                    ]
                },
                "create": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the file will be created if it does not already exist. By default it will fail if the file is missing."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "newline": {
                    "default": "windows",
                    "required": false,
                    "description": [
                        "Specifies the line separator style to use for the modified file. This defaults to the windows line separator ( ). Note that the indicated line separator will be used for file output regardless of the original line seperator that appears in the input file."
                    ],
                    "choices": [
                        "windows",
                        "unix"
                    ]
                },
                "backrefs": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If set, line can contain backreferences (both positional and named) that will get populated if the C(regexp) matches. This flag changes the operation of the module slightly; C(insertbefore) and C(insertafter) will be ignored, and if the C(regexp) doesn't match anywhere in the file, the file will be left unchanged.",
                        "If the C(regexp) does match, the last matching line will be replaced by the expanded line parameter."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether the line should be there or not."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "insertafter": {
                    "default": "EOF",
                    "required": false,
                    "description": [
                        "Used with C(state=present). If specified, the line will be inserted after the last match of specified regular expression. A special value is available; C(EOF) for inserting the line at the end of the file.",
                        "If specified regular expression has no matches, EOF will be used instead.  May not be used with C(backrefs)."
                    ],
                    "choices": [
                        "EOF",
                        "*regex*"
                    ]
                },
                "regexp": {
                    "required": false,
                    "description": [
                        "The regular expression to look for in every line of the file. For C(state=present), the pattern to replace if found; only the last line found will be replaced. For C(state=absent), the pattern of the line to remove.  Uses .NET compatible regular expressions; see U(https://msdn.microsoft.com/en-us/library/hs600312%28v=vs.110%29.aspx)."
                    ]
                },
                "line": {
                    "required": false,
                    "description": [
                        "Required for C(state=present). The line to insert/replace into the file. If C(backrefs) is set, may contain backreferences that will get expanded with the C(regexp) capture groups if the regexp matches."
                    ]
                },
                "backup": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "validate": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Validation to run before copying into place.  Use %s in the command to indicate the current file to validate.",
                        "The command is passed securely so shell features like expansion and pipes won't work."
                    ]
                }
            },
            "module": "win_lineinfile"
        },
        {
            "short_description": "Installs and uninstalls Windows MSI files",
            "deprecated": null,
            "options": {
                "extra_args": {
                    "required": false,
                    "description": [
                        "Additional arguments to pass to the msiexec.exe command"
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "File system path to the MSI file to install"
                    ]
                },
                "state": {
                    "default": "present",
                    "description": [
                        "Whether the MSI file should be installed or uninstalled"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "creates": {
                    "description": [
                        "Path to a file created by installing the MSI to prevent from attempting to reinstall the package on every run"
                    ]
                },
                "wait": {
                    "default": false,
                    "description": [
                        "Specify whether to wait for install or uninstall to complete before continuing."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        true,
                        true,
                        false,
                        false
                    ]
                }
            },
            "module": "win_msi"
        },
        {
            "short_description": "NSSM - the Non-Sucking Service Manager",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the service to operate on"
                    ]
                },
                "start_mode": {
                    "default": "auto",
                    "required": true,
                    "description": [
                        "If C(auto) is selected, the service will start at bootup. C(manual) means that the service will start only when another service needs it. C(disabled) means that the service will stay off, regardless if it is needed or not."
                    ],
                    "choices": [
                        "auto",
                        "manual",
                        "disabled"
                    ]
                },
                "state": {
                    "default": "started",
                    "required": false,
                    "description": [
                        "State of the service on the system",
                        "Note that NSSM actions like \"pause\", \"continue\", \"rotate\" do not fit the declarative style of ansible, so these should be implemented via the ansible command module"
                    ],
                    "choices": [
                        "present",
                        "started",
                        "stopped",
                        "restarted",
                        "absent"
                    ]
                },
                "application": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The application binary to run as a service",
                        "Specify this whenever the service may need to be installed (state: present, started, stopped, restarted)",
                        "Note that the application name must look like the following, if the directory includes spaces:",
                        "nssm install service \"c:\\Program Files\\app.exe\\\" \"C:\\Path with spaces\\\"",
                        "See commit 0b386fc1984ab74ee59b7bed14b7e8f57212c22b in the nssm.git project for more info (https://git.nssm.cc/?p=nssm.git;a=commit;h=0b386fc1984ab74ee59b7bed14b7e8f57212c22b)"
                    ]
                },
                "stderr_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to receive error output"
                    ]
                },
                "dependencies": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Service dependencies that has to be started to trigger startup, separated by comma."
                    ]
                },
                "user": {
                    "default": null,
                    "required": false,
                    "description": [
                        "User to be used for service startup"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password to be used for service startup"
                    ]
                },
                "stdout_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to receive output"
                    ]
                },
                "app_parameters": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Parameters to be passed to the application when it starts"
                    ]
                }
            },
            "module": "win_nssm"
        },
        {
            "short_description": "Set owner",
            "deprecated": null,
            "options": {
                "path": {
                    "required": true,
                    "description": [
                        "Path to be used for changing owner"
                    ]
                },
                "recurse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Indicates if the owner should be changed recursively"
                    ],
                    "choices": [
                        false,
                        true
                    ]
                },
                "user": {
                    "required": true,
                    "description": [
                        "Name to be used for changing owner"
                    ]
                }
            },
            "module": "win_owner"
        },
        {
            "short_description": "Installs/Uninstalls a installable package, either from local file system or url",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "description": [
                        "Install or Uninstall"
                    ],
                    "aliases": [
                        "ensure"
                    ]
                },
                "product_id": {
                    "default": null,
                    "required": true,
                    "description": [
                        "product id of the installed package (used for checking if already installed)"
                    ],
                    "aliases": [
                        "productid"
                    ]
                },
                "name": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the package. Just for logging reasons, will use the value of path if name isn't specified"
                    ],
                    "aliases": []
                },
                "path": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Location of the package to be installed (either on file system, network share or url)"
                    ],
                    "aliases": []
                },
                "user_password": {
                    "default": null,
                    "description": [
                        "Password of an account with access to the package if its located on a file share. Only needed if the winrm user doesn't have access to the package. Also specify user_name for this to function properly."
                    ],
                    "aliases": []
                },
                "user_name": {
                    "default": null,
                    "description": [
                        "Username of an account with access to the package if its located on a file share. Only needed if the winrm user doesn't have access to the package. Also specify user_password for this to function properly."
                    ],
                    "aliases": []
                },
                "arguments": {
                    "default": null,
                    "description": [
                        "Any arguments the installer needs"
                    ],
                    "aliases": []
                }
            },
            "module": "win_package"
        },
        {
            "short_description": "A windows version of the classic ping module.",
            "deprecated": null,
            "options": {
                "data": {
                    "default": "pong",
                    "required": false,
                    "description": [
                        "Alternate data to return instead of 'pong'"
                    ],
                    "aliases": []
                }
            },
            "module": "win_ping"
        },
        {
            "short_description": "Reboot a windows machine",
            "deprecated": null,
            "options": {
                "connect_timeout_sec": {
                    "default": 5,
                    "description": [
                        "Maximum seconds to wait for a single successful TCP connection to the WinRM endpoint before trying again"
                    ]
                },
                "shutdown_timeout_sec": {
                    "default": 600,
                    "description": [
                        "Maximum seconds to wait for shutdown to occur",
                        "Increase this timeout for very slow hardware, large update applications, etc"
                    ]
                },
                "pre_reboot_delay_sec": {
                    "default": 2,
                    "description": [
                        "Seconds for shutdown to wait before requesting reboot"
                    ]
                },
                "test_command": {
                    "default": "whoami",
                    "description": [
                        "Command to expect success for to determine the machine is ready for management"
                    ]
                },
                "reboot_timeout_sec": {
                    "default": 600,
                    "description": [
                        "Maximum seconds to wait for machine to re-appear on the network and respond to a test command",
                        "This timeout is evaluated separately for both network appearance and test command success (so maximum clock time is actually twice this value)"
                    ]
                }
            },
            "module": "win_reboot"
        },
        {
            "short_description": "Add, Edit, or Remove Registry Keys and Values",
            "deprecated": null,
            "options": {
                "datatype": {
                    "default": "string",
                    "choices": [
                        "binary",
                        "dword",
                        "expandstring",
                        "multistring",
                        "string",
                        "qword"
                    ],
                    "required": false,
                    "description": [
                        "Registry Value Data Type"
                    ],
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent"
                    ],
                    "required": false,
                    "description": [
                        "State of Registry Value"
                    ],
                    "aliases": []
                },
                "data": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Registry Value Data.  Binary data should be expressed a yaml byte array or as comma separated hex values.  An easy way to generate this is to run C(regedit.exe) and use the I(Export) option to save the registry values to a file.  In the exported file binary values will look like C(hex:be,ef,be,ef).  The C(hex:) prefix is optional."
                    ],
                    "aliases": []
                },
                "key": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of Registry Key"
                    ],
                    "aliases": []
                },
                "value": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of Registry Value"
                    ],
                    "aliases": []
                }
            },
            "module": "win_regedit"
        },
        {
            "short_description": "Merges the contents of a registry file into the windows registry",
            "deprecated": null,
            "options": {
                "path": {
                    "default": "no default",
                    "required": true,
                    "description": [
                        "The full path including file name to the registry file on the remote machine to be merged"
                    ]
                },
                "compare_key": {
                    "default": "no default",
                    "required": false,
                    "description": [
                        "The parent key to use when comparing the contents of the registry to the contents of the file.  Needs to be in HKLM or HKCU part of registry.  Use a PS-Drive style path for example HKLM:\\SOFTWARE not HKEY_LOCAL_MACHINE\\SOFTWARE If not supplied, or the registry key is not found, no comparison will be made, and the module will report changed."
                    ]
                }
            },
            "module": "win_regmerge"
        },
        {
            "short_description": "Manage scheduled tasks",
            "deprecated": null,
            "options": {
                "execute": {
                    "required": false,
                    "description": [
                        "Command the scheduled task should execute"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the scheduled task"
                    ]
                },
                "enabled": {
                    "default": true,
                    "description": [
                        "Enable/disable the task"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "days_of_week": {
                    "required": false,
                    "description": [
                        "Days of the week to run a weekly task, not idempotent"
                    ]
                },
                "argument": {
                    "required": false,
                    "description": [
                        "Arguments to provide scheduled task action"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "State that the task should become"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "frequency": {
                    "required": false,
                    "description": [
                        "The frequency of the command, not idempotent"
                    ],
                    "choices": [
                        "daily",
                        "weekly"
                    ]
                },
                "user": {
                    "required": false,
                    "description": [
                        "User to run scheduled task as"
                    ]
                },
                "time": {
                    "required": false,
                    "description": [
                        "Time to execute scheduled task, not idempotent"
                    ]
                },
                "path": {
                    "default": "",
                    "description": [
                        "Folder path of scheduled task"
                    ]
                },
                "description": {
                    "required": false,
                    "description": [
                        "The description for the scheduled task"
                    ]
                }
            },
            "module": "win_scheduled_task"
        },
        {
            "short_description": "Manages Windows services",
            "deprecated": null,
            "options": {
                "start_mode": {
                    "required": false,
                    "description": [
                        "Set the startup type for the service"
                    ],
                    "choices": [
                        "auto",
                        "manual",
                        "disabled"
                    ]
                },
                "state": {
                    "default": null,
                    "choices": [
                        "started",
                        "stopped",
                        "restarted"
                    ],
                    "required": false,
                    "description": [
                        "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service."
                    ],
                    "aliases": []
                },
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Name of the service"
                    ],
                    "aliases": []
                }
            },
            "module": "win_service"
        },
        {
            "short_description": "Manage Windows shares",
            "deprecated": null,
            "options": {
                "deny": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specify user list that should get no access, regardless of implied access on share, separated by comma."
                    ]
                },
                "full": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specify user list that should get full access on share, separated by comma."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Share name"
                    ]
                },
                "read": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specify user list that should get read access on share, separated by comma."
                    ]
                },
                "list": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specify whether to allow or deny file listing, in case user got no permission on share"
                    ],
                    "choices": [
                        true,
                        false
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Specify whether to add C(present) or remove C(absent) the specified share"
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "path": {
                    "required": true,
                    "description": [
                        "Share directory"
                    ]
                },
                "change": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Specify user list that should get read and write access on share, separated by comma."
                    ]
                },
                "description": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "Share description"
                    ]
                }
            },
            "module": "win_share"
        },
        {
            "short_description": "returns information about a Windows file",
            "deprecated": null,
            "options": {
                "path": {
                    "default": null,
                    "required": true,
                    "description": [
                        "The full path of the file/object to get the facts of; both forward and back slashes are accepted."
                    ],
                    "aliases": []
                },
                "get_md5": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to return the checksum sum of the file. As of Ansible 1.9 this is no longer a MD5, but a SHA1 instead."
                    ],
                    "aliases": []
                },
                "get_checksum": {
                    "default": true,
                    "required": false,
                    "description": [
                        "Whether to return a checksum of the file (only sha1 currently supported)"
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "win_stat"
        },
        {
            "short_description": "Templates a file out to a remote server.",
            "deprecated": null,
            "options": {
                "dest": {
                    "required": true,
                    "description": [
                        "Location to render the template to on the remote machine."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "Path of a Jinja2 formatted template on the local server. This can be a relative or absolute path."
                    ]
                }
            },
            "module": "win_template"
        },
        {
            "short_description": "Sets Windows machine timezone",
            "deprecated": null,
            "options": {
                "timezone": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Timezone to set to.  Example Central Standard Time"
                    ],
                    "aliases": []
                }
            },
            "module": "win_timezone"
        },
        {
            "short_description": "Unzips compressed files and archives on the Windows node",
            "deprecated": null,
            "options": {
                "dest": {
                    "required": true,
                    "description": [
                        "Destination of zip file (provide absolute path of directory). If it does not exist, the directory will be created."
                    ]
                },
                "src": {
                    "required": true,
                    "description": [
                        "File to be unzipped (provide absolute path)"
                    ]
                },
                "recurse": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Recursively expand zipped files within the src file."
                    ],
                    "choices": [
                        true,
                        false,
                        true,
                        false
                    ]
                },
                "creates": {
                    "default": null,
                    "required": false,
                    "description": [
                        "If this file or directory exists the specified src will not be extracted."
                    ]
                },
                "rm": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Remove the zip file, after unzipping"
                    ],
                    "choices": [
                        true,
                        false,
                        true,
                        false
                    ]
                }
            },
            "module": "win_unzip"
        },
        {
            "short_description": "Download and install Windows updates",
            "deprecated": null,
            "options": {
                "log_path": {
                    "required": false,
                    "description": [
                        "If set, win_updates will append update progress to the specified file. The directory must already exist."
                    ]
                },
                "state": {
                    "default": "installed",
                    "required": false,
                    "description": [
                        "Controls whether found updates are returned as a list or actually installed.",
                        "This module also supports Ansible check mode, which has the same effect as setting state=searched"
                    ],
                    "choices": [
                        "installed",
                        "searched"
                    ]
                },
                "category_names": {
                    "default": [
                        "CriticalUpdates",
                        "SecurityUpdates",
                        "UpdateRollups"
                    ],
                    "required": false,
                    "description": [
                        "A scalar or list of categories to install updates from"
                    ],
                    "choices": [
                        "Application",
                        "Connectors",
                        "CriticalUpdates",
                        "DefinitionUpdates",
                        "DeveloperKits",
                        "FeaturePacks",
                        "Guidance",
                        "SecurityUpdates",
                        "ServicePacks",
                        "Tools",
                        "UpdateRollups",
                        "Updates"
                    ]
                }
            },
            "module": "win_updates"
        },
        {
            "short_description": "Interacts with webservices.",
            "deprecated": null,
            "options": {
                "body": {
                    "description": [
                        "The body of the HTTP request/response to the web service."
                    ]
                },
                "headers": {
                    "description": [
                        "Key Value pairs for headers. Example \"Host: www.somesite.com\""
                    ]
                },
                "content_type": {
                    "description": [
                        "Sets the \"Content-Type\" header."
                    ]
                },
                "url": {
                    "description": [
                        "HTTP or HTTPS URL in the form of (http|https)://host.domain:port/path"
                    ]
                },
                "method": {
                    "default": "GET",
                    "description": [
                        "The HTTP Method of the request or response."
                    ],
                    "choices": [
                        "GET",
                        "POST",
                        "PUT",
                        "HEAD",
                        "DELETE",
                        "OPTIONS",
                        "PATCH",
                        "TRACE",
                        "CONNECT",
                        "REFRESH"
                    ]
                },
                "use_basic_parsing": {
                    "default": true,
                    "description": [
                        "This module relies upon 'Invoke-WebRequest', which by default uses the Internet Explorer Engine to parse a webpage. There's an edge-case where if a user hasn't run IE before, this will fail. The only advantage to using the Internet Explorer praser is that you can traverse the DOM in a powershell script. That isn't useful for Ansible, so by default we toggle 'UseBasicParsing'. However, you can toggle that off here."
                    ],
                    "choices": [
                        true,
                        false
                    ]
                }
            },
            "module": "win_uri"
        },
        {
            "short_description": "Manages local Windows user accounts",
            "deprecated": null,
            "options": {
                "update_password": {
                    "default": "always",
                    "required": false,
                    "description": [
                        "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "always",
                        "on_create"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Optionally set the user's password to this (plain text) value."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Name of the user to create, remove or modify."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Description of the user"
                    ],
                    "version_added": "1.9"
                },
                "groups_action": {
                    "default": "replace",
                    "required": false,
                    "description": [
                        "If C(replace), the user is added as a member of each group in I(groups) and removed from any other groups.  If C(add), the user is added to each group in I(groups) where not already a member.  If C(remove), the user is removed from each group in I(groups)."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "replace",
                        "add",
                        "remove"
                    ]
                },
                "password_expired": {
                    "default": null,
                    "required": false,
                    "description": [
                        "C(yes) will require the user to change their password at next login. C(no) will clear the expired password flag."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "choices": [
                        "present",
                        "absent",
                        "query"
                    ],
                    "required": false,
                    "description": [
                        "When C(present), creates or updates the user account.  When C(absent), removes the user account if it exists.  When C(query) (new in 1.9), retrieves the user account details without making any changes."
                    ],
                    "aliases": []
                },
                "groups": {
                    "required": false,
                    "description": [
                        "Adds or removes the user from this comma-separated lis of groups, depending on the value of I(groups_action). When I(groups_action) is C(replace) and I(groups) is set to the empty string ('groups='), the user is removed from all groups."
                    ],
                    "version_added": "1.9"
                },
                "account_disabled": {
                    "default": null,
                    "required": false,
                    "description": [
                        "C(yes) will disable the user account.  C(no) will clear the disabled flag."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "fullname": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Full name of the user"
                    ],
                    "version_added": "1.9"
                },
                "password_never_expires": {
                    "default": null,
                    "required": false,
                    "description": [
                        "C(yes) will set the password to never expire.  C(no) will allow the password to expire."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "account_locked": {
                    "default": null,
                    "required": false,
                    "description": [
                        "C(no) will unlock the user account if locked."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "no"
                    ]
                },
                "user_cannot_change_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "C(yes) will prevent the user from changing their password.  C(no) will allow the user to change their password."
                    ],
                    "version_added": "1.9",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "win_user"
        },
        {
            "short_description": "Installs packages using Web Platform Installer command-line",
            "deprecated": null,
            "options": {
                "name": {
                    "required": true,
                    "description": [
                        "Name of the package to be installed"
                    ]
                }
            },
            "module": "win_webpicmd"
        },
        {
            "short_description": "set/retrieve extended attributes",
            "deprecated": null,
            "options": {
                "key": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The name of a specific Extended attribute key to set/retrieve"
                    ]
                },
                "follow": {
                    "default": true,
                    "required": false,
                    "description": [
                        "if yes, dereferences symlinks and sets/gets attributes on symlink target, otherwise acts on symlink itself."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "get",
                    "required": false,
                    "description": [
                        "defines which state you want to do. C(read) retrieves the current value for a C(key) (default) C(present) sets C(name) to C(value), default if value is set C(all) dumps all data C(keys) retrieves all keys C(absent) deletes the key"
                    ],
                    "choices": [
                        "read",
                        "present",
                        "all",
                        "keys",
                        "absent"
                    ]
                },
                "name": {
                    "default": "None",
                    "required": true,
                    "description": [
                        "The full path of the file/object to get the facts of"
                    ],
                    "aliases": [
                        "path"
                    ]
                },
                "value": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The value to set the named name/key to, it automatically sets the C(state) to 'set'"
                    ]
                }
            },
            "module": "xattr"
        },
        {
            "short_description": "get facts reported on xenserver",
            "deprecated": null,
            "options": null,
            "module": "xenserver_facts"
        },
        {
            "short_description": "Manages packages with the I(yum) package manager",
            "deprecated": null,
            "options": {
                "name": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Package name, or package specifier with version, like C(name-1.0). When using state=latest, this can be '*' which means run: yum -y update. You can also pass a url or a local path to a rpm file (using state=present).  To operate on several packages this can accept a comma separated list of packages or (as of 2.0) a list of packages."
                    ],
                    "aliases": [
                        "pkg"
                    ]
                },
                "list": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Various (non-idempotent) commands for usage with C(/usr/bin/ansible) and I(not) playbooks. See examples."
                    ]
                },
                "disable_gpg_check": {
                    "aliases": [],
                    "description": [
                        "Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is I(present) or I(latest)."
                    ],
                    "version_added": "1.2",
                    "default": "no",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "conf_file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The remote yum configuration file to use for the transaction."
                    ],
                    "version_added": "0.6",
                    "aliases": []
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent) or C(removed)) a package."
                    ],
                    "choices": [
                        "present",
                        "installed",
                        "latest",
                        "absent",
                        "removed"
                    ]
                },
                "disablerepo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "I(Repoid) of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
                    ],
                    "version_added": "0.9",
                    "aliases": []
                },
                "update_cache": {
                    "aliases": [],
                    "description": [
                        "Force updating the cache. Has an effect only if state is I(present) or I(latest)."
                    ],
                    "version_added": "1.9",
                    "default": "no",
                    "required": false,
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "enablerepo": {
                    "default": null,
                    "required": false,
                    "description": [
                        "I(Repoid) of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
                    ],
                    "version_added": "0.9",
                    "aliases": []
                },
                "exclude": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Package name(s) to exclude when state=present, or latest"
                    ],
                    "version_added": "2.0"
                },
                "validate_certs": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to C(no), the SSL certificates will not be validated.",
                        "This should only set to C(no) used on personally controlled sites using self-signed certificates as it avoids verifying the source site.",
                        "Prior to 2.1 the code worked as if this was set to C(yes)."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                }
            },
            "module": "yum"
        },
        {
            "short_description": "Add and remove YUM repositories",
            "deprecated": null,
            "options": {
                "seuser": {
                    "default": null,
                    "required": false,
                    "description": [
                        "user part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available"
                    ]
                },
                "ip_resolve": {
                    "default": "whatever",
                    "required": false,
                    "description": [
                        "Determines how yum resolves host names.",
                        "C(4) or C(IPv4) - resolve to IPv4 addresses only.",
                        "C(6) or C(IPv6) - resolve to IPv6 addresses only."
                    ],
                    "choices": [
                        4,
                        6,
                        "IPv4",
                        "IPv6",
                        "whatever"
                    ]
                },
                "enabled": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "This tells yum whether or not use this repository."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "proxy_password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username to use for proxy."
                    ]
                },
                "mode": {
                    "default": null,
                    "required": false,
                    "description": [
                        "mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
                    ]
                },
                "owner": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the user that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "bandwidth": {
                    "default": 0,
                    "required": false,
                    "description": [
                        "Maximum available network bandwidth in bytes/second. Used with the I(throttle) option.",
                        "If I(throttle) is a percentage and bandwidth is C(0) then bandwidth throttling will be disabled. If I(throttle) is expressed as a data rate (bytes/sec) then this option is ignored. Default is C(0) (no bandwidth throttling)."
                    ]
                },
                "cost": {
                    "default": 1000,
                    "required": false,
                    "description": [
                        "Relative cost of accessing this repository. Useful for weighing one repo's packages as greater/less than any other."
                    ]
                },
                "file": {
                    "default": null,
                    "required": false,
                    "description": [
                        "File to use to save the repo in. Defaults to the value of I(name)."
                    ]
                },
                "mirrorlist_expire": {
                    "default": 21600,
                    "required": false,
                    "description": [
                        "Time (in seconds) after which the mirrorlist locally cached will expire.",
                        "Default value is 6 hours."
                    ]
                },
                "exclude": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed.",
                        "The list can also be a regular YAML array."
                    ]
                },
                "keepalive": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This tells yum whether or not HTTP/1.1 keepalive should be used with this repository. This can improve transfer speeds by using one connection when downloading multiple files from a repository."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "repo_gpgcheck": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "This tells yum whether or not it should perform a GPG signature check on the repodata from this repository."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "sslverify": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Defines whether yum should verify SSL certificates/hosts at all."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "failovermethod": {
                    "default": "roundrobin",
                    "required": false,
                    "description": [
                        "C(roundrobin) randomly selects a URL out of the list of URLs to start with and proceeds through each of them as it encounters a failure contacting the host.",
                        "C(priority) starts from the first I(baseurl) listed and reads through them sequentially."
                    ],
                    "choices": [
                        "roundrobin",
                        "priority"
                    ]
                },
                "deltarpm_metadata_percentage": {
                    "default": 100,
                    "required": false,
                    "description": [
                        "When the relative size of deltarpm metadata vs pkgs is larger than this, deltarpm metadata is not downloaded from the repo. Note that you can give values over C(100), so C(200) means that the metadata is required to be half the size of the packages. Use C(0) to turn off this check, and always download metadata."
                    ]
                },
                "gpgkey": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A URL pointing to the ASCII-armored GPG key file for the repository."
                    ]
                },
                "setype": {
                    "default": null,
                    "required": false,
                    "description": [
                        "type part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "http_caching": {
                    "default": "all",
                    "required": false,
                    "description": [
                        "Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does.",
                        "C(all) means that all HTTP downloads should be cached.",
                        "C(packages) means that only RPM package downloads should be cached (but not repository metadata downloads).",
                        "C(none) means that no HTTP downloads should be cached."
                    ],
                    "choices": [
                        "all",
                        "packages",
                        "none"
                    ]
                },
                "priority": {
                    "default": 99,
                    "required": false,
                    "description": [
                        "Enforce ordered protection of repositories. The value is an integer from 1 to 99.",
                        "This option only works if the YUM Priorities plugin is installed."
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the repo file."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "mirrorlist": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies a URL to a file containing a list of baseurls.",
                        "This or the I(baseurl) parameter is required if I(state) is set to C(present)."
                    ]
                },
                "params": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Option used to allow the user to overwrite any of the other options. To remove an option, set the value of the option to C(null)."
                    ]
                },
                "gpgcheck": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Tells yum whether or not it should perform a GPG signature check on packages."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "include": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Include external configuration file. Both, local path and URL is supported. Configuration file will be inserted at the position of the I(include=) line. Included files may contain further include lines. Yum will abort with an error if an inclusion loop is detected."
                    ]
                },
                "proxy_username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password for this proxy."
                    ]
                },
                "username": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Username to use for basic authentication to a repo or really any url."
                    ]
                },
                "metadata_expire": {
                    "default": 21600,
                    "required": false,
                    "description": [
                        "Time (in seconds) after which the metadata will expire.",
                        "Default value is 6 hours."
                    ]
                },
                "description": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A human readable string describing the repository.",
                        "This parameter is only required if I(state) is set to C(present)."
                    ]
                },
                "retries": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Set the number of times any attempt to retrieve a file should retry before returning an error. Setting this to C(0) makes yum try forever."
                    ]
                },
                "selevel": {
                    "default": "s0",
                    "required": false,
                    "description": [
                        "level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
                    ]
                },
                "sslclientcert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the SSL client certificate yum should use to connect to repos/remote sites."
                    ]
                },
                "baseurl": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL to the directory where the yum repository's 'repodata' directory lives.",
                        "This or the I(mirrorlist) parameter is required if I(state) is set to C(present)."
                    ]
                },
                "gpgcakey": {
                    "default": null,
                    "required": false,
                    "description": [
                        "A URL pointing to the ASCII-armored CA key file for the repository."
                    ]
                },
                "serole": {
                    "default": null,
                    "required": false,
                    "description": [
                        "role part of SELinux file context, C(_default) feature works as for I(seuser)."
                    ]
                },
                "s3_enabled": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Enables support for S3 repositories.",
                        "This option only works if the YUM S3 plugin is installed."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "includepkgs": {
                    "default": null,
                    "required": false,
                    "description": [
                        "List of packages you want to only use from a repository. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed. Substitution variables (e.g. C($releasever)) are honored here.",
                        "The list can also be a regular YAML array."
                    ]
                },
                "enablegroups": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Determines whether yum will allow the use of package groups for this repository."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "group": {
                    "default": null,
                    "required": false,
                    "description": [
                        "name of the group that should own the file/directory, as would be fed to I(chown)"
                    ]
                },
                "password": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Password to use with the username for basic authentication."
                    ]
                },
                "ui_repoid_vars": {
                    "default": "releasever basearch",
                    "required": false,
                    "description": [
                        "When a repository id is displayed, append these yum variables to the string if they are used in the I(baseurl)/etc. Variables are appended in the order listed (and found)."
                    ]
                },
                "protect": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Protect packages from updates from other repositories."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "ssl_check_cert_permissions": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether yum should check the permissions on the paths for the certificates on the repository (both remote and local).",
                        "If we can't read any of the files then yum will force I(skip_if_unavailable) to be C(yes). This is most useful for non-root processes which use yum on repos that have client cert files which are readable only by root."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "throttle": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Enable bandwidth throttling for downloads.",
                        "This option can be expressed as a absolute data rate in bytes/sec. An SI prefix (k, M or G) may be appended to the bandwidth value."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique repository ID.",
                        "This parameter is only required if I(state) is set to C(present) or C(absent)."
                    ]
                },
                "deltarpm_percentage": {
                    "default": 75,
                    "required": false,
                    "description": [
                        "When the relative size of delta vs pkg is larger than this, delta is not used. Use C(0) to turn off delta rpm processing. Local repositories (with file:// I(baseurl)) have delta rpms turned off by default."
                    ]
                },
                "sslclientkey": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the SSL client key yum should use to connect to repos/remote sites."
                    ]
                },
                "metalink": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for the entire repository are generated by converting the mirrors for the repomd.xml file to a I(baseurl)."
                    ]
                },
                "reposdir": {
                    "default": "/etc/yum.repos.d",
                    "required": false,
                    "description": [
                        "Directory where the C(.repo) files will be stored."
                    ]
                },
                "skip_if_unavailable": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "If set to C(yes) yum will continue running if this repository cannot be contacted for any reason. This should be set carefully as all repos are consulted for any given command."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "keepcache": {
                    "default": "1",
                    "required": false,
                    "description": [
                        "Either C(1) or C(0). Determines whether or not yum keeps the cache of headers and packages after successful installation."
                    ],
                    "choices": [
                        "0",
                        "1"
                    ]
                },
                "sslcacert": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Path to the directory containing the databases of the certificate authorities yum should use to verify SSL certificates."
                    ]
                },
                "timeout": {
                    "default": 30,
                    "required": false,
                    "description": [
                        "Number of seconds to wait for a connection before timing out."
                    ]
                },
                "async": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "If set to C(yes) Yum will download packages and metadata from this repo in parallel, if possible."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "metadata_expire_filter": {
                    "default": "read-only:present",
                    "required": false,
                    "description": [
                        "Filter the I(metadata_expire) time, allowing a trade of speed for accuracy if a command doesn't require it. Each yum command can specify that it requires a certain level of timeliness quality from the remote repos. from \"I'm about to install/upgrade, so this better be current\" to \"Anything that's available is good enough\".",
                        "C(never) - Nothing is filtered, always obey I(metadata_expire).",
                        "C(read-only:past) - Commands that only care about past information are filtered from metadata expiring. Eg. I(yum history) info (if history needs to lookup anything about a previous transaction, then by definition the remote package was available in the past).",
                        "C(read-only:present) - Commands that are balanced between past and future. Eg. I(yum list yum).",
                        "C(read-only:future) - Commands that are likely to result in running other commands which will require the latest metadata. Eg. I(yum check-update).",
                        "Note that this option does not override \"yum clean expire-cache\"."
                    ],
                    "choices": [
                        "never",
                        "read-only:past",
                        "read-only:present",
                        "read-only:future"
                    ]
                },
                "proxy": {
                    "default": null,
                    "required": false,
                    "description": [
                        "URL to the proxy server that yum should use. Set to C(_none_) to disable the global proxy setting."
                    ]
                }
            },
            "module": "yum_repository"
        },
        {
            "short_description": "Zabbix host groups creates/deletes",
            "deprecated": null,
            "options": {
                "http_login_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth password"
                    ],
                    "version_added": "2.1"
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request(seconds)."
                    ]
                },
                "login_user": {
                    "required": true,
                    "description": [
                        "Zabbix user name."
                    ]
                },
                "http_login_user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth login"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
                    ],
                    "aliases": [
                        "url"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or delete host group."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "host_groups": {
                    "required": true,
                    "description": [
                        "List of host groups to create or delete."
                    ],
                    "aliases": [
                        "host_group"
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "Zabbix user password."
                    ]
                }
            },
            "module": "zabbix_group"
        },
        {
            "short_description": "Zabbix host creates/updates/deletes",
            "deprecated": null,
            "options": {
                "status": {
                    "default": "enabled",
                    "required": false,
                    "description": [
                        "Monitoring status of the host."
                    ],
                    "choices": [
                        "enabled",
                        "disabled"
                    ]
                },
                "http_login_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth password"
                    ],
                    "version_added": "2.1"
                },
                "inventory_mode": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Configure the inventory mode."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "automatic",
                        "manual",
                        "disabled"
                    ]
                },
                "host_groups": {
                    "required": false,
                    "description": [
                        "List of host groups the host is part of."
                    ]
                },
                "login_user": {
                    "required": true,
                    "description": [
                        "Zabbix user name, used to authenticate against the server."
                    ]
                },
                "interfaces": {
                    "default": [],
                    "required": false,
                    "description": [
                        "List of interfaces to be created for the host (see example below).",
                        "Available values are: dns, ip, main, port, type and useip.",
                        "Please review the interface documentation for more information on the supported properties",
                        "https://www.zabbix.com/documentation/2.0/manual/appendix/api/hostinterface/definitions#host_interface"
                    ]
                },
                "http_login_user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth login"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Zabbix server, with protocol (http or https)."
                    ],
                    "aliases": [
                        "url"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the host.",
                        "On C(present), it will create if host does not exist or update the host if the associated data is different.",
                        "On C(absent) will remove a host if it exists."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "host_name": {
                    "required": true,
                    "description": [
                        "Name of the host in Zabbix.",
                        "host_name is the unique identifier used and cannot be updated using this module."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "Zabbix user password."
                    ]
                },
                "force": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Overwrite the host configuration, even if already present"
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "link_templates": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "List of templates linked to the host."
                    ]
                },
                "proxy": {
                    "default": "None",
                    "description": [
                        "The name of the Zabbix Proxy to be used"
                    ]
                }
            },
            "module": "zabbix_host"
        },
        {
            "short_description": "Zabbix host macro creates/updates/deletes",
            "deprecated": null,
            "options": {
                "http_login_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth password"
                    ],
                    "version_added": "2.1"
                },
                "macro_name": {
                    "required": true,
                    "description": [
                        "Name of the host macro."
                    ]
                },
                "macro_value": {
                    "required": true,
                    "description": [
                        "Value of the host macro."
                    ]
                },
                "login_user": {
                    "required": true,
                    "description": [
                        "Zabbix user name."
                    ]
                },
                "http_login_user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth login"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Zabbix server, with protocol (http or https)."
                    ],
                    "aliases": [
                        "url"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "State of the macro.",
                        "On C(present), it will create if macro does not exist or update the macro if the associated data is different.",
                        "On C(absent) will remove a macro if it exists."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "host_name": {
                    "required": true,
                    "description": [
                        "Name of the host."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "Zabbix user password."
                    ]
                }
            },
            "module": "zabbix_hostmacro"
        },
        {
            "short_description": "Create Zabbix maintenance windows",
            "deprecated": null,
            "options": {
                "http_login_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth password"
                    ],
                    "version_added": "2.1"
                },
                "name": {
                    "required": true,
                    "description": [
                        "Unique name of maintenance window."
                    ]
                },
                "login_user": {
                    "required": true,
                    "description": [
                        "Zabbix user name."
                    ]
                },
                "http_login_user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth login"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "default": null,
                    "required": true,
                    "description": [
                        "Url of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
                    ],
                    "aliases": [
                        "url"
                    ]
                },
                "host_names": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Hosts to manage maintenance window for. Separate multiple hosts with commas. C(host_name) is an alias for C(host_names). B(Required) option when C(state) is I(present) and no C(host_groups) specified."
                    ],
                    "aliases": [
                        "host_name"
                    ]
                },
                "host_groups": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Host groups to manage maintenance window for. Separate multiple groups with commas. C(host_group) is an alias for C(host_groups). B(Required) option when C(state) is I(present) and no C(host_names) specified."
                    ],
                    "aliases": [
                        "host_group"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "Create or remove a maintenance window."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ],
                    "version_added": "2.1"
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "Zabbix user password."
                    ]
                },
                "collect_data": {
                    "default": "true",
                    "required": false,
                    "description": [
                        "Type of maintenance. With data collection, or without."
                    ]
                },
                "minutes": {
                    "default": 10,
                    "required": false,
                    "description": [
                        "Length of maintenance window in minutes."
                    ]
                },
                "desc": {
                    "default": "Created by Ansible",
                    "required": true,
                    "description": [
                        "Short description of maintenance window."
                    ]
                }
            },
            "module": "zabbix_maintenance"
        },
        {
            "short_description": "Zabbix screen creates/updates/deletes",
            "deprecated": null,
            "options": {
                "screens": {
                    "required": true,
                    "description": [
                        "List of screens to be created/updated/deleted(see example).",
                        "If the screen(s) already been added, the screen(s) name won't be updated.",
                        "When creating or updating screen(s), C(screen_name), C(host_group) are required.",
                        "When deleting screen(s), the C(screen_name) is required.",
                        "The available states are: C(present) (default) and C(absent). If the screen(s) already exists, and the state is not C(absent), the screen(s) will just be updated as needed."
                    ]
                },
                "http_login_password": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth password"
                    ],
                    "version_added": "2.1"
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "The timeout of API request (seconds)."
                    ]
                },
                "login_password": {
                    "required": true,
                    "description": [
                        "Zabbix user password."
                    ]
                },
                "login_user": {
                    "required": true,
                    "description": [
                        "Zabbix user name."
                    ]
                },
                "http_login_user": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "Basic Auth login"
                    ],
                    "version_added": "2.1"
                },
                "server_url": {
                    "required": true,
                    "description": [
                        "Url of Zabbix server, with protocol (http or https)."
                    ],
                    "aliases": [
                        "url"
                    ]
                }
            },
            "module": "zabbix_screen"
        },
        {
            "short_description": "Manage zfs",
            "deprecated": null,
            "options": {
                "origin": {
                    "default": null,
                    "required": false,
                    "description": [
                        "Snapshot from which to create a clone"
                    ]
                },
                "state": {
                    "required": true,
                    "description": [
                        "Whether to create (C(present)), or remove (C(absent)) a file system, snapshot or volume. All parents/children will be created/destroyed as needed to reach the desired state."
                    ],
                    "choices": [
                        "present",
                        "absent"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "File system, snapshot or volume name e.g. C(rpool/myfs)"
                    ]
                },
                "key_value": {
                    "default": null,
                    "required": false,
                    "description": [
                        "The C(zfs) module takes key=value pairs for zfs properties to be set. See the zfs(8) man page for more information."
                    ]
                }
            },
            "module": "zfs"
        },
        {
            "short_description": "Create, delete, retrieve, and update znodes using ZooKeeper.",
            "deprecated": null,
            "options": {
                "state": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The state to enforce. Mutually exclusive with op."
                    ]
                },
                "hosts": {
                    "required": true,
                    "description": [
                        "A list of ZooKeeper servers (format '[server]:[port]')."
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "The path of the znode."
                    ]
                },
                "timeout": {
                    "default": 300,
                    "required": false,
                    "description": [
                        "The amount of time to wait for a node to appear."
                    ]
                },
                "op": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "An operation to perform. Mutually exclusive with state."
                    ]
                },
                "value": {
                    "default": "None",
                    "required": false,
                    "description": [
                        "The value assigned to the znode."
                    ]
                },
                "recursive": {
                    "default": false,
                    "required": false,
                    "description": [
                        "Recursively delete node and all its children."
                    ],
                    "version_added": "2.1"
                }
            },
            "module": "znode"
        },
        {
            "short_description": "Manage packages on SUSE and openSUSE",
            "deprecated": null,
            "options": {
                "disable_recommends": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Corresponds to the C(--no-recommends) option for I(zypper). Default behavior (C(yes)) modifies zypper's default behavior; C(no) does install recommended packages."
                    ],
                    "version_added": "1.8",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "C(present) will make sure the package is installed. C(latest)  will make sure the latest version of the package is installed. C(absent)  will make sure the specified package is not installed."
                    ],
                    "choices": [
                        "present",
                        "latest",
                        "absent"
                    ]
                },
                "type": {
                    "default": "package",
                    "required": false,
                    "description": [
                        "The type of package to be operated on."
                    ],
                    "version_added": "2.0",
                    "choices": [
                        "package",
                        "patch",
                        "pattern",
                        "product",
                        "srcpackage"
                    ]
                },
                "name": {
                    "required": true,
                    "description": [
                        "package name or package specifier with version C(name) or C(name-1.0). You can also pass a url or a local path to a rpm file."
                    ],
                    "aliases": [
                        "pkg"
                    ]
                },
                "disable_gpg_check": {
                    "default": "no",
                    "choices": [
                        "yes",
                        "no"
                    ],
                    "required": false,
                    "description": [
                        "Whether to disable to GPG signature checking of the package signature being installed. Has an effect only if state is I(present) or I(latest)."
                    ],
                    "aliases": []
                }
            },
            "module": "zypper"
        },
        {
            "short_description": "Add and remove Zypper repositories",
            "deprecated": null,
            "options": {
                "repo": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "URI of the repository or .repo file. Required when state=present."
                    ]
                },
                "name": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "A name for the repository. Not required when adding repofiles."
                    ]
                },
                "disable_gpg_check": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Whether to disable GPG signature checking of all packages. Has an effect only if state is I(present).",
                        "Needs zypper version >= 1.6.2."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "refresh": {
                    "default": "yes",
                    "required": false,
                    "description": [
                        "Enable autorefresh of the repository."
                    ],
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "priority": {
                    "required": false,
                    "description": [
                        "Set priority of repository. Packages will always be installed from the repository with the smallest priority number.",
                        "Needs zypper version >= 1.12.25."
                    ],
                    "version_added": "2.1"
                },
                "state": {
                    "default": "present",
                    "required": false,
                    "description": [
                        "A source string state."
                    ],
                    "choices": [
                        "absent",
                        "present"
                    ]
                },
                "overwrite_multiple": {
                    "default": "no",
                    "required": false,
                    "description": [
                        "Overwrite multiple repository entries, if repositories with both name and URL already exist."
                    ],
                    "version_added": "2.1",
                    "choices": [
                        "yes",
                        "no"
                    ]
                },
                "description": {
                    "default": "none",
                    "required": false,
                    "description": [
                        "A description of the repository"
                    ]
                }
            },
            "module": "zypper_repository"
        }
    ],
    "lookup_plugins": [
        "cartesian",
        "consul_kv",
        "credstash",
        "csvfile",
        "dict",
        "dig",
        "dnstxt",
        "env",
        "etcd",
        "file",
        "fileglob",
        "first_found",
        "flattened",
        "hashi_vault",
        "indexed_items",
        "ini",
        "inventory_hostnames",
        "items",
        "lines",
        "list",
        "nested",
        "password",
        "pipe",
        "random_choice",
        "redis_kv",
        "sequence",
        "shelvefile",
        "subelements",
        "template",
        "together",
        "url"
    ]
}
"maintenance",
"normal"
]
},
"timeout": {
    "default": 10,
    "require": false,
    "description": [
        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
    ],
    "version_added": 2.3
},
"provider": {
    "default": null,
    "required": false,
    "description": [
        "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
    ]
},
"use_ssl": {
    "default": false,
    "required": false,
    "description": [
        "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
    ],
    "choices": [
        "yes",
        "no"
    ]
},
"password": {
    "default": null,
    "required": false,
    "description": [
        "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
    ]
},
"config": {
    "default": null,
    "required": false,
    "description": [
        "Specify the configuration string to be used for module operations."
    ]
},
"port": {
    "default": "0 (use common port)",
    "required": false,
    "description": [
        "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
    ]
},
"transport": {
    "default": "cli",
    "required": true,
    "description": [
        "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
    ]
}
},
"module": "nxos_gir_profile_management"
}, {
    "short_description": "Manages HSRP configuration on NX-OS switches.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": null,
            "required": false,
            "description": [
                "Authentication type."
            ],
            "choices": [
                "text",
                "md5"
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "group": {
            "required": true,
            "description": [
                "HSRP group number."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "auth_string": {
            "default": null,
            "required": false,
            "description": [
                "Authentication string."
            ]
        },
        "vip": {
            "default": null,
            "required": false,
            "description": [
                "HSRP virtual IP address."
            ]
        },
        "priority": {
            "default": null,
            "required": false,
            "description": [
                "HSRP priority."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "version": {
            "default": 2,
            "required": false,
            "description": [
                "HSRP version."
            ],
            "choices": [
                "1",
                "2"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Full name of interface that is being managed for HSRP."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_hsrp"
}, {
    "short_description": "Manages IGMP global configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "enforce_rtr_alert": {
            "default": null,
            "required": false,
            "description": [
                "Enables or disables the enforce router alert option check for IGMPv2 and IGMPv3 packets."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "flush_routes": {
            "default": null,
            "required": false,
            "description": [
                "Removes routes when the IGMP process is restarted. By default, routes are not flushed."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "default"
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "restart": {
            "default": null,
            "required": false,
            "description": [
                "Restarts the igmp process (using an exec config command)."
            ],
            "choices": [
                "true",
                "false"
            ]
        }
    },
    "module": "nxos_igmp"
}, {
    "short_description": "Manages IGMP interface configuration.",
    "deprecated": null,
    "options": {
        "startup_query_interval": {
            "default": null,
            "required": false,
            "description": [
                "Query interval used when the IGMP process starts up. The range is from 1 to 18000. The default is 31."
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "group_timeout": {
            "default": null,
            "required": false,
            "description": [
                "Sets the group membership timeout for IGMPv2. Values can range from 3 to 65,535 seconds. The default is 260 seconds."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "oif_routemap": {
            "default": null,
            "required": false,
            "description": [
                "Configure a routemap for static outgoing interface (OIF)."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "oif_prefix": {
            "default": null,
            "required": false,
            "description": [
                "Configure a prefix for static outgoing interface (OIF)."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "The full interface name for IGMP configuration. e.g. I(Ethernet1/2)."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "querier_timeout": {
            "default": null,
            "required": false,
            "description": [
                "Sets the querier timeout that the software uses when deciding to take over as the querier. Values can range from 1 to 65535 seconds. The default is 255 seconds."
            ]
        },
        "last_member_query_count": {
            "default": null,
            "required": false,
            "description": [
                "Sets the number of times that the software sends an IGMP query in response to a host leave message. Values can range from 1 to 5. The default is 2."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "restart": {
            "default": null,
            "required": false,
            "description": [
                "Restart IGMP."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "report_llg": {
            "default": false,
            "required": false,
            "description": [
                "Configures report-link-local-groups. Enables sending reports for groups in 224.0.0.0/24. Reports are always sent for nonlink local groups. By default, reports are not sent for link local groups."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "last_member_qrt": {
            "default": null,
            "required": false,
            "description": [
                "Sets the query interval waited after sending membership reports before the software deletes the group state. Values can range from 1 to 25 seconds. The default is 1 second."
            ]
        },
        "robustness": {
            "default": null,
            "required": false,
            "description": [
                "Sets the robustness variable. Values can range from 1 to 7. The default is 2."
            ]
        },
        "startup_query_count": {
            "default": null,
            "required": false,
            "description": [
                "Query count used when the IGMP process starts up. The range is from 1 to 10. The default is 2."
            ]
        },
        "immediate_leave": {
            "default": false,
            "required": false,
            "description": [
                "Enables the device to remove the group entry from the multicast routing table immediately upon receiving a leave message for the group. Use this command to minimize the leave latency of IGMPv2 group memberships on a given IGMP interface because the device does not send group-specific queries. The default is disabled."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "default"
            ]
        },
        "version": {
            "default": null,
            "required": false,
            "description": [
                "IGMP version. It can be 2 or 3."
            ],
            "choices": [
                "2",
                "3"
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "oif_source": {
            "default": null,
            "required": false,
            "description": [
                "Configure a source for static outgoing interface (OIF)."
            ]
        },
        "query_interval": {
            "default": null,
            "required": false,
            "description": [
                "Sets the frequency at which the software sends IGMP host query messages. Values can range from 1 to 18000 seconds. he default is 125 seconds."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "query_mrt": {
            "default": null,
            "required": false,
            "description": [
                "Sets the response time advertised in IGMP queries. Values can range from 1 to 25 seconds. The default is 10 seconds."
            ]
        }
    },
    "module": "nxos_igmp_interface"
}, {
    "short_description": "Manages IGMP snooping global configuration.",
    "deprecated": null,
    "options": {
        "link_local_grp_supp": {
            "default": null,
            "required": false,
            "description": [
                "Global link-local groups suppression."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "group_timeout": {
            "default": null,
            "required": false,
            "description": [
                "Group membership timeout value for all VLANs on the device. Accepted values are integer in range 1-10080, I(never) and I(default)."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "report_supp": {
            "default": null,
            "required": false,
            "description": [
                "Global IGMPv1/IGMPv2 Report Suppression."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "snooping": {
            "default": null,
            "required": false,
            "description": [
                "Enables/disables IGMP snooping on the switch."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "v3_report_supp": {
            "default": null,
            "required": false,
            "description": [
                "Global IGMPv3 Report Suppression and Proxy Reporting."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "default"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_igmp_snooping"
}, {
    "short_description": "Set boot options like boot image and kickstart image.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "system_image_file": {
            "required": true,
            "description": [
                "Name of the system (or combined) image file on flash."
            ]
        },
        "kickstart_image_file": {
            "default": null,
            "required": false,
            "description": [
                "Name of the kickstart image file on flash."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_install_os"
}, {
    "short_description": "Manages physical attributes of interfaces.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Interface description."
            ]
        },
        "ip_forward": {
            "default": null,
            "required": false,
            "description": [
                "Enable/Disable ip forward feature on SVIs."
            ],
            "version_added": "2.2",
            "choices": [
                "enable",
                "disable"
            ]
        },
        "interface_type": {
            "default": null,
            "required": false,
            "description": [
                "Interface type to be unconfigured from the device."
            ],
            "version_added": "2.2",
            "choices": [
                "loopback",
                "portchannel",
                "svi",
                "nve"
            ]
        },
        "fabric_forwarding_anycast_gateway": {
            "default": null,
            "required": false,
            "description": [
                "Associate SVI with anycast gateway under VLAN configuration mode."
            ],
            "version_added": "2.2",
            "choices": [
                "true",
                "false"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Specify desired state of the resource."
            ],
            "choices": [
                "present",
                "absent",
                "default"
            ]
        },
        "admin_state": {
            "default": "up",
            "required": false,
            "description": [
                "Administrative state of the interface."
            ],
            "choices": [
                "up",
                "down"
            ]
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Manage Layer 2 or Layer 3 state of the interface."
            ],
            "choices": [
                "layer2",
                "layer3"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "default": null,
            "required": true,
            "description": [
                "Full name of interface, i.e. Ethernet1/1, port-channel10."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_interface"
}, {
    "short_description": "Manages configuration of an OSPF interface instance.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "message_digest_encryption_type": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the scheme used for encrypting message_digest_password. Valid values are '3des' or 'cisco_type_7' encryption."
            ],
            "choices": [
                "cisco_type_7",
                "3des"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "dead_interval": {
            "default": null,
            "required": false,
            "description": [
                "Time interval an ospf neighbor waits for a hello packet before tearing down adjacencies. Valid values are an integer or the keyword 'default'."
            ]
        },
        "hello_interval": {
            "default": null,
            "required": false,
            "description": [
                "Time between sending successive hello packets. Valid values are an integer or the keyword 'default'."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Name of this cisco_interface resource. Valid value is a string."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "area": {
            "required": true,
            "description": [
                "Ospf area associated with this cisco_interface_ospf instance. Valid values are a string, formatted as an IP address (i.e. \"0.0.0.0\") or as an integer."
            ]
        },
        "message_digest_algorithm_type": {
            "default": null,
            "required": false,
            "description": [
                "Algorithm used for authentication among neighboring routers within an area. Valid values is 'md5'."
            ],
            "choices": [
                "md5"
            ]
        },
        "message_digest_key_id": {
            "default": null,
            "required": false,
            "description": [
                "Md5 authentication key-id associated with the ospf instance. If this is present, message_digest_encryption_type, message_digest_algorithm_type and message_digest_password are mandatory. Valid value is an integer and 'default'."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the config should be present or not on the device."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "cost": {
            "default": null,
            "required": false,
            "description": [
                "The cost associated with this cisco_interface_ospf instance."
            ]
        },
        "passive_interface": {
            "default": null,
            "required": false,
            "description": [
                "Setting to true will prevent this interface from receiving HELLO packets. Valid values are 'true' and 'false'."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "message_digest_password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the message_digest password. Valid value is a string."
            ]
        },
        "ospf": {
            "required": true,
            "description": [
                "Name of the ospf instance."
            ]
        },
        "message_digest": {
            "default": null,
            "required": false,
            "description": [
                "Enables or disables the usage of message digest authentication. Valid values are 'true' and 'false'."
            ],
            "choices": [
                "true",
                "false"
            ]
        }
    },
    "module": "nxos_interface_ospf"
}, {
    "short_description": "Manages L3 attributes for IPv4 and IPv6 interfaces.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "addr": {
            "default": null,
            "required": false,
            "description": [
                "IPv4 or IPv6 Address."
            ]
        },
        "mask": {
            "default": null,
            "required": false,
            "description": [
                "Subnet mask for IPv4 or IPv6 Address in decimal format."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Full name of interface, i.e. Ethernet1/1, vlan10."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_ip_interface"
}, {
    "short_description": "Manages MTU settings on Nexus switch.",
    "deprecated": "Deprecated in 2.3 use M(nxos_system)'s C(mtu) option.",
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "sysmtu": {
            "default": null,
            "required": false,
            "description": [
                "System jumbo MTU. Must be an even number between 576 and 9216."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "mtu": {
            "default": null,
            "required": false,
            "description": [
                "MTU for a specific interface. Must be an even number between 576 and 9216."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "default": null,
            "required": false,
            "description": [
                "Full name of interface, i.e. Ethernet1/1."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_mtu"
}, {
    "short_description": "Manages core NTP configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "source_addr": {
            "default": null,
            "required": false,
            "description": [
                "Local source address from which NTP messages are sent."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "prefer": {
            "default": null,
            "required": false,
            "description": [
                "Makes given NTP server or peer the preferred NTP server or peer for the device."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "server": {
            "default": null,
            "required": false,
            "description": [
                "Network address of NTP server."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "vrf_name": {
            "default": null,
            "required": false,
            "description": [
                "Makes the device communicate with the given NTP server or peer over a specific VRF."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "peer": {
            "default": null,
            "required": false,
            "description": [
                "Network address of NTP peer."
            ]
        },
        "key_id": {
            "default": null,
            "required": false,
            "description": [
                "Authentication key identifier to use with given NTP server or peer."
            ]
        },
        "source_int": {
            "default": null,
            "required": false,
            "description": [
                "Local source interface from which NTP messages are sent. Must be fully qualified interface name."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_ntp"
}, {
    "short_description": "Manages NTP authentication.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "text",
            "required": false,
            "description": [
                "Whether the given md5string is in cleartext or has been encrypted. If in cleartext, the device will encrypt it before storing it."
            ],
            "choices": [
                "text",
                "encrypt"
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "trusted_key": {
            "default": false,
            "required": false,
            "description": [
                "Whether the given key is required to be supplied by a time source for the device to synchronize to the time source."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "authentication": {
            "default": null,
            "required": false,
            "description": [
                "Turns NTP authentication on or off."
            ],
            "choices": [
                "on",
                "off"
            ]
        },
        "md5string": {
            "default": null,
            "required": true,
            "description": [
                "MD5 String."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "key_id": {
            "required": true,
            "description": [
                "Authentication key identifier (numeric)."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_ntp_auth"
}, {
    "short_description": "Manages NTP options.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "logging": {
            "default": null,
            "required": false,
            "description": [
                "Sets whether NTP logging is enabled on the device."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "master": {
            "default": null,
            "required": false,
            "description": [
                "Sets whether the device is an authoritative NTP server."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "stratum": {
            "default": null,
            "required": false,
            "description": [
                "If C(master=true), an optional stratum can be supplied (1-15). The device default is 8."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_ntp_options"
}, {
    "short_description": "Manage NXAPI configuration on an NXOS device.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "http": {
            "default": true,
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "Controls the operating state of the HTTP protocol as one of the underlying transports for NXAPI.  By default, NXAPI will enable the HTTP transport when the feature is first configured.  To disable the use of the HTTP transport, set the value of this argument to False."
            ],
            "aliases": [
                "enable_http"
            ]
        },
        "https_port": {
            "default": 443,
            "required": false,
            "description": [
                "Configure the port with which the HTTPS server will listen on for requests.  By default, NXAPI will bind the HTTPS service to the standard HTTPS port 443.  This argument accepts valid port values in the range of 1 to 65535."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "http_port": {
            "default": 80,
            "required": false,
            "description": [
                "Configure the port with which the HTTP server will listen on for requests.  By default, NXAPI will bind the HTTP service to the standard HTTP port 80.  This argument accepts valid port values in the range of 1 to 65535."
            ]
        },
        "sandbox": {
            "default": false,
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "The NXAPI feature provides a web base UI for developers for entering commands.  This feature is initially disabled when the NXAPI feature is configured for the first time.  When the C(sandbox) argument is set to True, the developer sandbox URL will accept requests and when the value is set to False, the sandbox URL is unavailable."
            ],
            "aliases": [
                "enable_sandbox"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The C(state) argument controls whether or not the NXAPI feature is configured on the remote device.  When the value is C(present) the NXAPI feature configuration is present in the device running-config.  When the values is C(absent) the feature configuration is removed from the running-config."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "https": {
            "default": false,
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "Controls the operating state of the HTTPS protocol as one of the underlying transports for NXAPI.  By default, NXAPI will disable the HTTPS transport when the feature is first configured.  To enable the use of the HTTPS transport, set the value of this argument to True."
            ],
            "aliases": [
                "enable_https"
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_nxapi"
}, {
    "short_description": "Manages configuration of an ospf instance.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the config should be present or not on the device."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ospf": {
            "required": true,
            "description": [
                "Name of the ospf instance."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_ospf"
}, {
    "short_description": "Manages a VRF for an OSPF router.",
    "deprecated": null,
    "options": {
        "router_id": {
            "default": null,
            "required": false,
            "description": [
                "Router Identifier (ID) of the OSPF router VRF instance."
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "default_metric": {
            "default": null,
            "required": false,
            "description": [
                "Specify the default Metric value. Valid values are an integer or the keyword 'default'."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "vrf": {
            "default": "default",
            "required": false,
            "description": [
                "Name of the resource instance. Valid value is a string. The name 'default' is a valid VRF representing the global OSPF."
            ]
        },
        "timer_throttle_spf_start": {
            "default": null,
            "required": false,
            "description": [
                "Specify initial Shortest Path First (SPF) schedule delay. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "timer_throttle_spf_hold": {
            "default": null,
            "required": false,
            "description": [
                "Specify minimum hold time between Shortest Path First (SPF) calculations. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "timer_throttle_lsa_max": {
            "default": null,
            "required": false,
            "description": [
                "Specify the max interval for rate-limiting Link-State Advertisement (LSA) generation. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "timer_throttle_spf_max": {
            "default": null,
            "required": false,
            "description": [
                "Specify the maximum wait time between Shortest Path First (SPF) calculations. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "timer_throttle_lsa_hold": {
            "default": null,
            "required": false,
            "description": [
                "Specify the hold interval for rate-limiting Link-State Advertisement (LSA) generation. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "log_adjacency": {
            "default": null,
            "required": false,
            "description": [
                "Controls the level of log messages generated whenever a neighbor changes state. Valid values are 'log', 'detail', and 'default'."
            ],
            "choices": [
                "log",
                "detail",
                "default"
            ]
        },
        "timer_throttle_lsa_start": {
            "default": null,
            "required": false,
            "description": [
                "Specify the start interval for rate-limiting Link-State Advertisement (LSA) generation. Valid values are an integer, in milliseconds, or the keyword 'default'."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "auto_cost": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the reference bandwidth used to assign OSPF cost. Valid values are an integer, in Mbps, or the keyword 'default'."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "ospf": {
            "default": null,
            "required": true,
            "description": [
                "Name of the OSPF instance."
            ]
        }
    },
    "module": "nxos_ospf_vrf"
}, {
    "short_description": "Configures anycast gateway MAC of the switch.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "anycast_gateway_mac": {
            "default": null,
            "required": true,
            "description": [
                "Anycast gateway mac of the switch."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_overlay_global"
}, {
    "short_description": "Manages configuration of a PIM instance.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "ssm_range": {
            "required": true,
            "description": [
                "Configure group ranges for Source Specific Multicast (SSM). Valid values are multicast addresses or the keyword 'none'."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_pim"
}, {
    "short_description": "Manages PIM interface configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "jp_policy_out": {
            "default": null,
            "required": true,
            "description": [
                "Policy for join-prune messages (outbound)."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "neighbor_policy": {
            "default": null,
            "required": false,
            "description": [
                "Configures a neighbor policy for filtering adjacencies."
            ]
        },
        "hello_interval": {
            "default": null,
            "required": false,
            "description": [
                "Hello interval in milliseconds for this interface."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Full name of the interface such as Ethernet1/33."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "hello_auth_key": {
            "default": null,
            "required": false,
            "description": [
                "Authentication for hellos on this interface."
            ]
        },
        "border": {
            "default": null,
            "required": false,
            "description": [
                "Configures interface to be a boundary of a PIM domain."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "jp_type_in": {
            "default": null,
            "required": false,
            "description": [
                "Type of policy mapped to C(jp_policy_in)."
            ],
            "choices": [
                "prefix",
                "routemap"
            ]
        },
        "neighbor_type": {
            "default": null,
            "required": false,
            "description": [
                "Type of policy mapped to neighbor_policy."
            ],
            "choices": [
                "prefix",
                "routemap"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "default"
            ]
        },
        "sparse": {
            "default": true,
            "required": false,
            "description": [
                "Enable/disable sparse-mode on the interface."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "jp_policy_in": {
            "default": null,
            "required": false,
            "description": [
                "Policy for join-prune messages (inbound)."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "jp_type_out": {
            "default": null,
            "required": false,
            "description": [
                "Type of policy mapped to C(jp_policy_out)."
            ],
            "choices": [
                "prefix",
                "routemap"
            ]
        }
    },
    "module": "nxos_pim_interface"
}, {
    "short_description": "Manages configuration of an PIM static RP address instance.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "bidir": {
            "default": null,
            "required": false,
            "description": [
                "Group range is treated in PIM bidirectional mode."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "route_map": {
            "default": null,
            "required": false,
            "description": [
                "Route map policy for static RP. Valid values are route-map policy names."
            ]
        },
        "rp_address": {
            "required": true,
            "description": [
                "Configures a Protocol Independent Multicast (PIM) static rendezvous point (RP) address. Valid values are unicast addresses."
            ]
        },
        "group_list": {
            "default": null,
            "required": false,
            "description": [
                "Group range for static RP. Valid values are multicast addresses."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "prefix_list": {
            "default": null,
            "required": false,
            "description": [
                "Prefix list policy for static RP. Valid values are prefix-list policy names."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_pim_rp_address"
}, {
    "short_description": "Tests reachability using ping from Nexus switch.",
    "deprecated": null,
    "options": {
        "count": {
            "default": 2,
            "required": false,
            "description": [
                "Number of packets to send."
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "dest": {
            "required": true,
            "description": [
                "IP address or hostname (resolvable by switch) of remote node."
            ]
        },
        "source": {
            "default": null,
            "required": false,
            "description": [
                "Source IP Address."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "vrf": {
            "default": null,
            "required": false,
            "description": [
                "Outgoing VRF."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_ping"
}, {
    "short_description": "Manages port-channel interfaces.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "When true it forces port-channel members to match what is declared in the members param. This can be used to remove members."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "members": {
            "default": null,
            "required": false,
            "description": [
                "List of interfaces that will be managed in a given portchannel."
            ]
        },
        "min_links": {
            "default": null,
            "required": false,
            "description": [
                "Min links required to keep portchannel up."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "group": {
            "required": true,
            "description": [
                "Channel-group number for the port-channel."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "mode": {
            "default": true,
            "required": false,
            "description": [
                "Mode for the port-channel, i.e. on, active, passive."
            ],
            "choices": [
                "active",
                "passive",
                "on"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_portchannel"
}, {
    "short_description": "Reboot a network device.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "confirm": {
            "default": false,
            "required": false,
            "description": [
                "Safeguard boolean. Set to true if you're sure you want to reboot."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_reboot"
}, {
    "short_description": "Set a checkpoint or rollback to a checkpoint.",
    "deprecated": null,
    "options": {
        "checkpoint_file": {
            "default": null,
            "required": false,
            "description": [
                "Name of checkpoint file to create. Mutually exclusive with rollback_to."
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "rollback_to": {
            "default": null,
            "required": false,
            "description": [
                "Name of checkpoint file to rollback to. Mutually exclusive with checkpoint_file."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_rollback"
}, {
    "short_description": "Perform SMUs on Cisco NX-OS devices.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "pkg": {
            "required": true,
            "description": [
                "Name of the remote package."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "file_system": {
            "default": null,
            "required": false,
            "description": [
                "The remote file system of the device. If omitted, devices that support a file_system parameter will use their default values."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_smu"
}, {
    "short_description": "Manage snapshots of the running states of selected features.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Snapshot description to be used when C(action=create)."
            ]
        },
        "snapshot1": {
            "default": null,
            "required": false,
            "description": [
                "First snapshot to be used when C(action=compare)."
            ]
        },
        "snapshot2": {
            "default": null,
            "required": false,
            "description": [
                "Second snapshot to be used when C(action=compare)."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "snapshot_name": {
            "default": null,
            "required": false,
            "description": [
                "Snapshot name, to be used when C(action=create) or C(action=delete)."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "path": {
            "default": "./",
            "required": false,
            "description": [
                "Specify the path of the file where new created snapshot or snapshots comparison will be stored, to be used when C(action=create) and C(save_snapshot_locally=true) or C(action=compare)."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "show_command": {
            "default": null,
            "required": false,
            "description": [
                "Specify a new show command, to be used when C(action=add)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "section": {
            "default": null,
            "required": false,
            "description": [
                "Used to name the show command output, to be used when C(action=add)."
            ]
        },
        "comparison_results_file": {
            "default": null,
            "required": false,
            "description": [
                "Name of the file where snapshots comparison will be store."
            ]
        },
        "compare_option": {
            "default": null,
            "required": false,
            "description": [
                "Snapshot options to be used when C(action=compare)."
            ],
            "choices": [
                "summary",
                "ipv4routes",
                "ipv6routes"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "element_key1": {
            "default": null,
            "required": false,
            "description": [
                "Specify the tags used to distinguish among row entries, to be used when C(action=add)."
            ]
        },
        "element_key2": {
            "default": null,
            "required": false,
            "description": [
                "Specify the tags used to distinguish among row entries, to be used when C(action=add)."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "action": {
            "required": true,
            "description": [
                "Define what snapshot action the module would perform."
            ],
            "choices": [
                "create",
                "add",
                "compare",
                "delete"
            ]
        },
        "row_id": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the tag of each row entry of the show command's XML output, to be used when C(action=add)."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "save_snapshot_locally": {
            "default": false,
            "required": false,
            "description": [
                "Specify to locally store a new created snapshot, to be used when C(action=create)."
            ],
            "choices": [
                "true",
                "false"
            ]
        }
    },
    "module": "nxos_snapshot"
}, {
    "short_description": "Manages SNMP community configs.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Group to which the community belongs."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "community": {
            "required": true,
            "description": [
                "Case-sensitive community string."
            ]
        },
        "acl": {
            "default": 1,
            "required": false,
            "description": [
                "ACL name to filter snmp requests."
            ]
        },
        "access": {
            "default": null,
            "required": false,
            "description": [
                "Access type for community."
            ],
            "choices": [
                "ro",
                "rw"
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_snmp_community"
}, {
    "short_description": "Manages SNMP contact info.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "contact": {
            "required": true,
            "description": [
                "Contact information."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_snmp_contact"
}, {
    "short_description": "Manages SNMP host configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "vrf_filter": {
            "default": null,
            "required": false,
            "description": [
                "Name of VRF to filter."
            ]
        },
        "udp": {
            "default": null,
            "required": false,
            "description": [
                "UDP port number (0-65535)."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "src_intf": {
            "default": null,
            "required": false,
            "description": [
                "Source interface."
            ]
        },
        "snmp_host": {
            "required": true,
            "description": [
                "IP address of hostname of target host."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "community": {
            "default": null,
            "required": false,
            "description": [
                "Community string or v3 username."
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "version": {
            "default": "v2c",
            "required": false,
            "description": [
                "SNMP version."
            ],
            "choices": [
                "v2c",
                "v3"
            ]
        },
        "vrf": {
            "default": null,
            "required": false,
            "description": [
                "VRF to use to source traffic to source."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "type": {
            "default": "traps",
            "required": false,
            "description": [
                "type of message to send to host."
            ],
            "choices": [
                "trap",
                "inform"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_snmp_host"
}, {
    "short_description": "Manages SNMP location information.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "location": {
            "required": true,
            "description": [
                "Location information."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_snmp_location"
}, {
    "short_description": "Manages SNMP traps.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "group": {
            "required": true,
            "description": [
                "Case sensitive group."
            ],
            "choices": [
                "aaa",
                "bridge",
                "callhome",
                "cfs",
                "config",
                "entity",
                "feature-control",
                "hsrp",
                "license",
                "link",
                "lldp",
                "ospf",
                "pim",
                "rf",
                "rmon",
                "snmp",
                "storm-control",
                "stpx",
                "sysmgr",
                "system",
                "upgrade",
                "vtp",
                "all"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "enabled",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_snmp_traps"
}, {
    "short_description": "Manages SNMP users for monitoring.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "auth": {
            "default": null,
            "required": false,
            "description": [
                "Auth parameters for the user."
            ],
            "choices": [
                "md5",
                "sha"
            ]
        },
        "pwd": {
            "default": null,
            "required": false,
            "description": [
                "Auth password when using md5 or sha."
            ]
        },
        "user": {
            "required": true,
            "description": [
                "Name of the user."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "group": {
            "required": true,
            "description": [
                "Group to which the user will belong to."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "encrypt": {
            "default": null,
            "required": false,
            "description": [
                "Enables AES-128 bit encryption when using privacy password."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "privacy": {
            "default": null,
            "required": false,
            "description": [
                "Privacy password for the user."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_snmp_user"
}, {
    "short_description": "Manages static route configuration",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "prefix": {
            "required": true,
            "description": [
                "Destination prefix of static route."
            ]
        },
        "tag": {
            "default": null,
            "required": false,
            "description": [
                "Route tag value (numeric)."
            ]
        },
        "vrf": {
            "default": "default",
            "required": false,
            "description": [
                "VRF for static route."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "pref": {
            "default": null,
            "required": false,
            "description": [
                "Preference or administrative difference of route (range 1-255)."
            ]
        },
        "route_name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the route. Used with the name parameter on the CLI."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "next_hop": {
            "required": true,
            "description": [
                "Next hop address or interface of static route. If interface, it must be the fully-qualified interface name."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_static_route"
}, {
    "short_description": "Manages Layer 2 switchport interfaces.",
    "deprecated": null,
    "options": {
        "native_vlan": {
            "default": null,
            "required": false,
            "description": [
                "If C(mode=trunk), used as the trunk native VLAN ID."
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "interface": {
            "default": null,
            "required": true,
            "description": [
                "Full name of the interface, i.e. Ethernet1/1."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "access_vlan": {
            "default": null,
            "required": false,
            "description": [
                "If C(mode=access), used as the access VLAN ID."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "trunk_vlans": {
            "default": null,
            "required": false,
            "description": [
                "If C(mode=trunk), used as the VLAN range to ADD or REMOVE from the trunk."
            ],
            "aliases": [
                "trunk_add_vlans"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent",
                "unconfigured"
            ]
        },
        "trunk_allowed_vlans": {
            "default": null,
            "required": false,
            "description": [
                "if C(mode=trunk), these are the only VLANs that will be configured on the trunk, i.e. \"2-10,15\"."
            ],
            "version_added": 2.2
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Mode for the Layer 2 port."
            ],
            "choices": [
                "access",
                "trunk"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_switchport"
}, {
    "short_description": "Manage the system attributes on Cisco NXOS devices",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "domain_search": {
            "description": [
                "Configures a list of domain name suffixes to search when performing DNS name resolution. This argument accepts either a list of domain names or a list of dicts that configure the domain name and VRF name.  See examples."
            ]
        },
        "system_mtu": {
            "description": [
                "Specifies the mtu, must be an integer."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "name_servers": {
            "description": [
                "List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts either a list of DNS servers or a list of hashes that configure the name server and VRF name.  See examples."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "hostname": {
            "description": [
                "Configure the device hostname parameter. This option takes an ASCII string value."
            ]
        },
        "domain_name": {
            "description": [
                "Configures the default domain name suffix to be used when referencing this node by its FQDN.  This argument accepts either a list of domain names or a list of dicts that configure the domain name and VRF name.  See examples."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "State of the configuration values in the device's current active configuration.  When set to I(present), the values should be configured in the device active configuration and when set to I(absent) the values should not be in the device active configuration"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "domain_lookup": {
            "description": [
                "Enables or disables the DNS lookup feature in Cisco NXOS.  This argument accepts boolean values.  When enabled, the system will try to resolve hostnames using DNS and when disabled, hostnames will not be resolved."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_system"
}, {
    "short_description": "Manage Cisco NXOS device configurations",
    "deprecated": "Deprecated in 2.2. Use M(nxos_config) instead.",
    "options": {
        "src": {
            "default": null,
            "required": false,
            "description": [
                "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison."
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backup_{{ hostname }} in the root of the playbook directory."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "include_defaults": {
            "default": false,
            "required": false,
            "description": [
                "The module, by default, will collect the current device running-config to use as a base for comparisons to the commands in I(src).  Setting this value to true will cause the module to issue the command C(show running-config all) to include all device settings."
            ],
            "choices": [
                "true",
                "false"
            ]
        }
    },
    "module": "nxos_template"
}, {
    "short_description": "Manages UDLD global configuration params.",
    "deprecated": null,
    "options": {
        "reset": {
            "default": null,
            "required": false,
            "description": [
                "Ability to reset UDLD down interfaces."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "msg_time": {
            "default": null,
            "required": false,
            "description": [
                "Message time in seconds for UDLD packets."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "aggressive": {
            "default": null,
            "required": false,
            "description": [
                "Toggles aggressive mode."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_udld"
}, {
    "short_description": "Manages UDLD interface configuration params.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "mode": {
            "required": true,
            "description": [
                "Manages UDLD mode for an interface."
            ],
            "choices": [
                "enabled",
                "disabled",
                "aggressive"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "FULL name of the interface, i.e. Ethernet1/1-"
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_udld_interface"
}, {
    "short_description": "Manage the collection of local users on Nexus devices",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "update_password": {
            "default": "always",
            "required": false,
            "description": [
                "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created."
            ],
            "choices": [
                "on_create",
                "always"
            ]
        },
        "users": {
            "default": null,
            "required": false,
            "description": [
                "The set of username objects to be configured on the remote Cisco Nexus device.  The list entries can either be the username or a hash of username and properties.  This argument is mutually exclusive with the C(name) argument."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "The username to be configured on the remote Cisco Nexus device.  This argument accepts a stringv value and is mutually exclusive with the C(users) argument."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "sshkey": {
            "default": null,
            "required": false,
            "description": [
                "The C(sshkey) argument defines the SSH public key to configure for the username.  This argument accepts a valid SSH key value."
            ]
        },
        "purge": {
            "default": false,
            "required": false,
            "description": [
                "The C(purge) argument instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the device with the exception of the `admin` user which cannot be deleted per nxos constraints."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The C(state) argument configures the state of the username definition as it relates to the device operational configuration.  When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "role": {
            "default": null,
            "required": false,
            "description": [
                "The C(role) argument configures the role for the username in the device running configuration.  The argument accepts a string value defining the role name.  This argument does not check if the role has been configured on the device."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_user"
}, {
    "short_description": "Manages VLAN resources and attributes.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "vlan_state": {
            "default": "active",
            "required": false,
            "description": [
                "Manage the vlan operational state of the VLAN (equivalent to state {active | suspend} command."
            ],
            "choices": [
                "active",
                "suspend"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "admin_state": {
            "default": "up",
            "required": false,
            "description": [
                "Manage the VLAN administrative state of the VLAN equivalent to shut/no shut in VLAN config mode."
            ],
            "choices": [
                "up",
                "down"
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "vlan_range": {
            "default": null,
            "required": false,
            "description": [
                "Range of VLANs such as 2-10 or 2,5,10-15, etc."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "vlan_id": {
            "default": null,
            "required": false,
            "description": [
                "Single VLAN ID."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of VLAN."
            ]
        },
        "mapped_vni": {
            "default": null,
            "required": false,
            "description": [
                "The Virtual Network Identifier (VNI) ID that is mapped to the VLAN. Valid values are integer and keyword 'default'."
            ],
            "version_added": "2.2"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_vlan"
}, {
    "short_description": "Manages global VPC configuration",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "domain": {
            "required": true,
            "description": [
                "VPC domain"
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "system_priority": {
            "default": null,
            "required": false,
            "description": [
                "System priority device.  Remember they must match between peers."
            ]
        },
        "role_priority": {
            "default": null,
            "required": false,
            "description": [
                "Role priority for device. Remember lower is better."
            ]
        },
        "auto_recovery": {
            "required": true,
            "description": [
                "Enables/Disables auto recovery"
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "pkl_vrf": {
            "default": "management",
            "required": false,
            "description": [
                "VRF used for peer keepalive link"
            ]
        },
        "delay_restore": {
            "default": null,
            "required": false,
            "description": [
                "manages delay restore command and config value in seconds"
            ]
        },
        "peer_gw": {
            "required": true,
            "description": [
                "Enables/Disables peer gateway"
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Manages desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "pkl_dest": {
            "default": null,
            "required": false,
            "description": [
                "Destination (remote) IP address used for peer keepalive link"
            ]
        },
        "pkl_src": {
            "default": null,
            "required": false,
            "description": [
                "Source IP address used for peer keepalive link"
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vpc"
}, {
    "short_description": "Manages interface VPC configuration",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "portchannel": {
            "required": true,
            "description": [
                "Group number of the portchannel that will be configured."
            ]
        },
        "peer_link": {
            "default": null,
            "required": false,
            "description": [
                "Set to true/false for peer link config on associated portchannel."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "vpc": {
            "default": null,
            "required": false,
            "description": [
                "VPC group/id that will be configured on associated portchannel."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vpc_interface"
}, {
    "short_description": "Manages global VRF configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description of the VRF."
            ]
        },
        "vni": {
            "default": null,
            "required": false,
            "description": [
                "Specify virtual network identifier. Valid values are Integer or keyword 'default'."
            ],
            "version_added": "2.2"
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "admin_state": {
            "default": "up",
            "required": false,
            "description": [
                "Administrative state of the VRF."
            ],
            "choices": [
                "up",
                "down"
            ]
        },
        "vrf": {
            "required": true,
            "description": [
                "Name of VRF to be managed."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "route_distinguisher": {
            "default": null,
            "required": false,
            "description": [
                "VPN Route Distinguisher (RD). Valid values are a string in one of the route-distinguisher formats (ASN2:NN, ASN4:NN, or IPV4:NN); the keyword 'auto', or the keyword 'default'."
            ],
            "version_added": "2.2"
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_vrf"
}, {
    "short_description": "Manages VRF AF.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "afi": {
            "default": null,
            "required": true,
            "description": [
                "Address-Family Identifier (AFI)."
            ],
            "choices": [
                "ipv4",
                "ipv6"
            ]
        },
        "safi": {
            "default": null,
            "required": true,
            "description": [
                "Sub Address-Family Identifier (SAFI)."
            ],
            "choices": [
                "unicast",
                "multicast"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the config should be present or not on the device."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "route_target_both_auto_evpn": {
            "default": null,
            "required": false,
            "description": [
                "Enable/Disable the EVPN route-target 'auto' setting for both import and export target communities."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "vrf": {
            "required": true,
            "description": [
                "Name of the VRF."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vrf_af"
}, {
    "short_description": "Manages interface specific VRF configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manages desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "vrf": {
            "required": true,
            "description": [
                "Name of VRF to be managed."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Full name of interface to be managed, i.e. Ethernet1/1."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vrf_interface"
}, {
    "short_description": "Manages VRRP configuration on NX-OS switches.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "vip": {
            "default": null,
            "required": false,
            "description": [
                "VRRP virtual IP address."
            ]
        },
        "admin_state": {
            "default": "no shutdown",
            "required": false,
            "description": [
                "Used to enable or disable the VRRP process."
            ],
            "version_added": "2.2",
            "choices": [
                "shutdown",
                "no shutdown"
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Full name of interface that is being managed for VRRP."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "group": {
            "required": true,
            "description": [
                "VRRP group number."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "authentication": {
            "default": null,
            "required": false,
            "description": [
                "Clear text authentication string."
            ]
        },
        "priority": {
            "default": null,
            "required": false,
            "description": [
                "VRRP priority."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_vrrp"
}, {
    "short_description": "Manages VTP domain configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "domain": {
            "required": true,
            "description": [
                "VTP domain name."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vtp_domain"
}, {
    "short_description": "Manages VTP password configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "vtp_password": {
            "default": null,
            "required": false,
            "description": [
                "VTP password"
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Manage the state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vtp_password"
}, {
    "short_description": "Manages VTP version configuration.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "version": {
            "required": true,
            "description": [
                "VTP version number."
            ],
            "choices": [
                "1",
                "2"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vtp_version"
}, {
    "short_description": "Manages VXLAN Network Virtualization Endpoint (NVE).",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description of the NVE interface."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "source_interface_hold_down_time": {
            "default": null,
            "required": false,
            "description": [
                "Suppresses advertisement of the NVE loopback address until the overlay has converged."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "shutdown": {
            "default": false,
            "required": false,
            "description": [
                "Administratively shutdown the NVE interface."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Interface name for the VXLAN Network Virtualization Endpoint."
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host_reachability": {
            "default": null,
            "required": false,
            "description": [
                "Specify mechanism for host reachability advertisement."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the config should be present or not on the device."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "source_interface": {
            "default": null,
            "required": false,
            "description": [
                "Specify the loopback interface whose IP address should be used for the NVE interface."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "nxos_vxlan_vtep"
}, {
    "short_description": "Creates a Virtual Network Identifier member (VNI)",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the nxapi authentication depending on which transport is used. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error. NX-API can be slow to return on long-running commands (sh mac, sh bgp, etc)."
            ],
            "version_added": 2.3
        },
        "assoc_vrf": {
            "default": null,
            "required": false,
            "description": [
                "This attribute is used to identify and separate processing VNIs that are associated with a VRF and used for routing. The VRF and VNI specified with this command must match the configuration of the VNI under the VRF."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(nxapi) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "suppress_arp": {
            "default": null,
            "required": false,
            "description": [
                "Suppress arp under layer 2 VNI."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "multicast_group": {
            "default": null,
            "required": false,
            "description": [
                "The multicast group (range) of the VNI. Valid values are string and keyword 'default'."
            ]
        },
        "validate_certs": {
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.  If the transport argument is not nxapi, this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "use_ssl": {
            "default": false,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the C(transport=nxapi), otherwise this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
            ]
        },
        "vni": {
            "required": true,
            "description": [
                "ID of the Virtual Network Identifier."
            ]
        },
        "include_defaults": {
            "default": true,
            "required": false,
            "description": [
                "Specify to use or not the complete running configuration for module operations."
            ],
            "choices": [
                "true",
                "true"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the config should be present or not on the device."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "peer_list": {
            "default": null,
            "required": false,
            "description": [
                "Set the ingress-replication static peer list. Valid values are an array, a space-separated string of ip addresses, or the keyword 'default'."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(nxos) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "interface": {
            "required": true,
            "description": [
                "Interface name for the VXLAN Network Virtualization Endpoint."
            ]
        },
        "ingress_replication": {
            "default": null,
            "required": false,
            "description": [
                "Specifies mechanism for host reachability advertisement."
            ],
            "choices": [
                "bgp",
                "static"
            ]
        },
        "save": {
            "default": false,
            "required": false,
            "description": [
                "Specify to save the running configuration after module operations."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "Configuration string to be used for module operations. If not specified, the module will use the current running configuration."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(nxapi).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443)."
            ]
        },
        "transport": {
            "default": "cli",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over cli (ssh) or nxapi."
            ]
        }
    },
    "module": "nxos_vxlan_vtep_vni"
}, {
    "short_description": "Returns inventory data from I(Ohai)",
    "deprecated": null,
    "options": {},
    "module": "ohai"
}, {
    "short_description": "Setup OMAPI hosts.",
    "deprecated": null,
    "options": {
        "macaddr": {
            "required": true,
            "description": [
                "Sets the lease host MAC address."
            ]
        },
        "statements": {
            "default": [],
            "required": false,
            "description": [
                "Attach a list of OMAPI DHCP statements with host lease (without ending semicolon)."
            ]
        },
        "name": {
            "default": "None",
            "description": [
                "Sets the host lease hostname (mandatory if state=present)."
            ]
        },
        "key_name": {
            "required": true,
            "description": [
                "Sets the TSIG key name for authenticating against OMAPI server."
            ]
        },
        "host": {
            "default": "localhost",
            "description": [
                "Sets OMAPI server host to interact with."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Create or remove OMAPI host."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ddns": {
            "default": false,
            "required": false,
            "description": [
                "Enable dynamic DNS updates for this host."
            ]
        },
        "key": {
            "required": true,
            "description": [
                "Sets the TSIG key content for authenticating against OMAPI server."
            ]
        },
        "ip": {
            "default": "None",
            "required": false,
            "description": [
                "Sets the lease host IP address."
            ]
        },
        "port": {
            "default": 7911,
            "description": [
                "Sets the OMAPI server port to interact with."
            ]
        }
    },
    "module": "omapi_host"
}, {
    "short_description": "Manage iscsi targets with open-iscsi",
    "deprecated": null,
    "options": {
        "auto_node_startup": {
            "aliases": [
                "automatic"
            ],
            "required": false,
            "description": [
                "whether the target node should be automatically connected at startup"
            ],
            "choices": [
                true,
                false
            ]
        },
        "target": {
            "required": false,
            "description": [
                "the iscsi target name"
            ],
            "aliases": [
                "name",
                "targetname"
            ]
        },
        "show_nodes": {
            "required": false,
            "description": [
                "whether the list of nodes in the persistent iscsi database should be returned by the module"
            ],
            "choices": [
                true,
                false
            ]
        },
        "node_auth": {
            "default": "CHAP",
            "required": false,
            "description": [
                "discovery.sendtargets.auth.authmethod"
            ]
        },
        "node_pass": {
            "required": false,
            "description": [
                "discovery.sendtargets.auth.password"
            ]
        },
        "discover": {
            "required": false,
            "description": [
                "whether the list of target nodes on the portal should be (re)discovered and added to the persistent iscsi database. Keep in mind that iscsiadm discovery resets configurtion, like node.startup to manual, hence combined with auto_node_startup=yes will always return a changed state."
            ],
            "choices": [
                true,
                false
            ]
        },
        "portal": {
            "required": false,
            "description": [
                "the ip address of the iscsi target"
            ],
            "aliases": [
                "ip"
            ]
        },
        "login": {
            "required": false,
            "description": [
                "whether the target node should be connected"
            ],
            "choices": [
                true,
                false
            ]
        },
        "node_user": {
            "required": false,
            "description": [
                "discovery.sendtargets.auth.username"
            ]
        },
        "port": {
            "default": 3260,
            "required": false,
            "description": [
                "the port on which the iscsi target process listens"
            ]
        }
    },
    "module": "open_iscsi"
}, {
    "short_description": "Manage packages on OpenBSD.",
    "deprecated": null,
    "options": {
        "state": {
            "required": true,
            "description": [
                "C(present) will make sure the package is installed. C(latest) will make sure the latest version of the package is installed. C(absent) will make sure the specified package is not installed."
            ],
            "choices": [
                "present",
                "latest",
                "absent"
            ]
        },
        "ports_dir": {
            "default": "/usr/ports",
            "required": false,
            "description": [
                "When used in combination with the 'build' option, allows overriding the default ports source directory."
            ],
            "version_added": "2.1"
        },
        "clean": {
            "default": false,
            "required": false,
            "description": [
                "When updating or removing packages, delete the extra configuration file(s) in the old packages which are annotated with @extra in the packaging-list."
            ],
            "version_added": "2.3",
            "choices": [
                true,
                false
            ]
        },
        "quick": {
            "default": false,
            "required": false,
            "description": [
                "Replace or delete packages quickly; do not bother with checksums before removing normal files."
            ],
            "version_added": "2.3",
            "choices": [
                true,
                false
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the package."
            ]
        },
        "build": {
            "default": false,
            "required": false,
            "description": [
                "Build the package from source instead of downloading and installing a binary. Requires that the port source tree is already installed. Automatically builds and installs the 'sqlports' package, if it is not already installed."
            ],
            "version_added": "2.1",
            "choices": [
                true,
                false
            ]
        }
    },
    "module": "openbsd_pkg"
}, {
    "short_description": "Will update the backend configuration of OpenDJ via the dsconfig set-backend-prop command.",
    "deprecated": null,
    "options": {
        "username": {
            "default": "cn=Directory Manager",
            "required": false,
            "description": [
                "The username to connect to."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The configuration setting to update."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname of the OpenDJ server."
            ]
        },
        "value": {
            "required": true,
            "description": [
                "The value for the configuration item."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "If configuration needs to be added/updated"
            ]
        },
        "passwordfile": {
            "required": false,
            "description": [
                "Location to the password file which holds the password for the cn=Directory Manager user.",
                "Either password or passwordfile is needed."
            ]
        },
        "password": {
            "required": false,
            "description": [
                "The password for the cn=Directory Manager user.",
                "Either password or passwordfile is needed."
            ]
        },
        "opendj_bindir": {
            "default": "/opt/opendj/bin",
            "required": false,
            "description": [
                "The path to the bin directory of OpenDJ."
            ]
        },
        "port": {
            "required": true,
            "description": [
                "The Admin port on which the OpenDJ instance is available."
            ]
        },
        "backend": {
            "required": true,
            "description": [
                "The name of the backend on which the property needs to be updated."
            ]
        }
    },
    "module": "opendj_backendprop"
}, {
    "short_description": "Generate OpenSSL private keys.",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "Name of the file in which the generated TLS/SSL private key will be written. It will have 0600 mode."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the private key should exist or not, taking action if the state is different from what is stated."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "size": {
            "default": 4096,
            "required": false,
            "description": [
                "Size (in bits) of the TLS/SSL key to generate"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "Should the key be regenerated even it it already exists"
            ],
            "choices": [
                true,
                false
            ]
        },
        "type": {
            "default": "RSA",
            "required": false,
            "description": [
                "The algorithm used to generate the TLS/SSL private key"
            ],
            "choices": [
                "RSA",
                "DSA"
            ]
        }
    },
    "module": "openssl_privatekey"
}, {
    "short_description": "Generate an OpenSSL public key from its private key.",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "Name of the file in which the generated TLS/SSL public key will be written."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the public key should exist or not, taking action if the state is different from what is stated."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "Should the key be regenerated even it it already exists"
            ],
            "choices": [
                true,
                false
            ]
        },
        "privatekey_path": {
            "required": true,
            "description": [
                "Path to the TLS/SSL private key from which to genereate the public key."
            ]
        }
    },
    "module": "openssl_publickey"
}, {
    "short_description": "Manage Open vSwitch bridges",
    "deprecated": null,
    "options": {
        "bridge": {
            "required": true,
            "description": [
                "Name of bridge or fake bridge to manage"
            ]
        },
        "fail_mode": {
            "default": "None",
            "required": false,
            "description": [
                "Set bridge fail-mode. The default value (None) is a No-op."
            ],
            "version_added": 2,
            "choices": [
                "secure",
                "standalone"
            ]
        },
        "parent": {
            "default": "None",
            "required": false,
            "description": [
                "Bridge parent of the fake bridge to manage"
            ],
            "version_added": "2.3"
        },
        "vlan": {
            "default": "None",
            "required": false,
            "description": [
                "The VLAN id of the fake bridge to manage (must be between 0 and 4095)"
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the bridge should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "set": {
            "default": "None",
            "required": false,
            "description": [
                "Set a single property on a bridge."
            ],
            "version_added": 2.3
        },
        "timeout": {
            "default": 5,
            "required": false,
            "description": [
                "How long to wait for ovs-vswitchd to respond"
            ]
        },
        "external_ids": {
            "default": "None",
            "required": false,
            "description": [
                "A dictionary of external-ids. Omitting this parameter is a No-op. To  clear all external-ids pass an empty value."
            ],
            "version_added": 2
        }
    },
    "module": "openvswitch_bridge"
}, {
    "short_description": "Configure open vswitch database.",
    "deprecated": null,
    "options": {
        "record": {
            "required": true,
            "description": [
                "Identifies the recoard in the table."
            ]
        },
        "timeout": {
            "default": 5,
            "required": false,
            "description": [
                "How long to wait for ovs-vswitchd to respond"
            ]
        },
        "key": {
            "required": true,
            "description": [
                "Identifies the key in the record column"
            ]
        },
        "column": {
            "required": true,
            "description": [
                "Identifies the column in the record."
            ]
        },
        "table": {
            "required": true,
            "description": [
                "Identifies the table in the database."
            ]
        },
        "value": {
            "required": true,
            "description": [
                "Expected value for the table, record, column and key."
            ]
        }
    },
    "module": "openvswitch_db"
}, {
    "short_description": "Manage Open vSwitch ports",
    "deprecated": null,
    "options": {
        "bridge": {
            "required": true,
            "description": [
                "Name of bridge to manage"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the port should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "set": {
            "default": "None",
            "required": false,
            "description": [
                "Set a single property on a port."
            ],
            "version_added": 2
        },
        "timeout": {
            "default": 5,
            "required": false,
            "description": [
                "How long to wait for ovs-vswitchd to respond"
            ]
        },
        "external_ids": {
            "default": {},
            "required": false,
            "description": [
                "Dictionary of external_ids applied to a port."
            ],
            "version_added": 2
        },
        "tag": {
            "required": false,
            "description": [
                "VLAN tag for this port"
            ],
            "version_added": 2.2
        },
        "port": {
            "required": true,
            "description": [
                "Name of port to manage on the bridge"
            ]
        }
    },
    "module": "openvswitch_port"
}, {
    "short_description": "Manage services on OpenWrt.",
    "deprecated": null,
    "options": {
        "pattern": {
            "required": false,
            "description": [
                "If the service does not respond to the 'running' command, name a substring to look for as would be found in the output of the I(ps) command as a stand-in for a 'running' result.  If the string is found, the service will be assumed to be running."
            ]
        },
        "state": {
            "default": null,
            "required": false,
            "description": [
                "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the service. C(reloaded) will always reload."
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "reloaded"
            ]
        },
        "enabled": {
            "default": null,
            "required": false,
            "description": [
                "Whether the service should start on boot. B(At least one of state and enabled are required.)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service."
            ],
            "aliases": [
                "service"
            ]
        }
    },
    "module": "openwrt_init"
}, {
    "short_description": "Package manager for OpenWrt",
    "deprecated": null,
    "options": {
        "force": {
            "default": "absent",
            "required": false,
            "description": [
                "opkg --force parameter used"
            ],
            "version_added": "2.0",
            "choices": [
                "",
                "depends",
                "maintainer",
                "reinstall",
                "overwrite",
                "downgrade",
                "space",
                "postinstall",
                "remove",
                "checksum",
                "removal-of-dependent-packages"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "state of the package"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "update_cache": {
            "default": "no",
            "required": false,
            "description": [
                "update the package db first"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "name of package to install/remove"
            ]
        }
    },
    "module": "opkg"
}, {
    "short_description": "Run arbitrary commands on OpenSwitch devices.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "retries": {
            "default": 10,
            "required": false,
            "description": [
                "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditions."
            ]
        },
        "commands": {
            "required": true,
            "description": [
                "List of commands to send to the remote ops device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retires as expired."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "interval": {
            "default": 1,
            "required": false,
            "description": [
                "Configures the interval in seconds to wait between I(retries) of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
            ]
        },
        "transport": {
            "default": "ssh",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
            ],
            "choices": [
                "ssh",
                "cli",
                "rest"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not I(rest), this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "wait_for": {
            "default": null,
            "required": false,
            "description": [
                "List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
            ],
            "version_added": "2.2",
            "aliases": [
                "waitfor"
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(rest).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
            ]
        },
        "match": {
            "default": "all",
            "required": false,
            "description": [
                "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the I(wait_for) must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied."
            ],
            "version_added": "2.2",
            "choices": [
                "any",
                "all"
            ]
        }
    },
    "module": "ops_command"
}, {
    "short_description": "Manage OpenSwitch configuration using CLI",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "src": {
            "default": null,
            "required": false,
            "description": [
                "The I(src) argument provides a path to the configuration file to load into the remote system.  The path can either be a full system path to the configuration file if the value starts with / or relative to the root of the implemented role or playbook. This argument is mutually exclusive with the I(lines) and I(parents) arguments."
            ],
            "version_added": "2.2"
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured.",
                "Note this argument should be considered deprecated.  To achieve the equivalent, set the C(match=none) which is idempotent.  This argument will be removed in a future release."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "after": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
            ]
        },
        "lines": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
            ]
        },
        "replace": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct."
            ],
            "choices": [
                "line",
                "block"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
            ]
        },
        "parents": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
            ]
        },
        "transport": {
            "default": "ssh",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
            ],
            "choices": [
                "ssh",
                "cli",
                "rest"
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not I(rest), this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "save": {
            "default": false,
            "required": false,
            "description": [
                "The C(save) argument instructs the module to save the running- config to the startup-config at the conclusion of the module running.  If check mode is specified, this argument is ignored."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(rest).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
            ]
        },
        "match": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device."
            ],
            "choices": [
                "line",
                "strict",
                "exact",
                "none"
            ]
        },
        "before": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system."
            ]
        }
    },
    "module": "ops_config"
}, {
    "short_description": "Collect device specific facts from OpenSwitch",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
            ]
        },
        "gather_subset": {
            "default": "!config",
            "required": false,
            "description": [
                "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, legacy, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected."
            ],
            "version_added": "2.2"
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not I(rest), this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "endpoints": {
            "default": null,
            "required": false,
            "description": [
                "Accepts a list of endpoints to retrieve from the remote device using the REST API.  The endpoints should be valid endpoints available on the device.  This argument is only valid when the C(transport=rest)."
            ]
        },
        "config": {
            "default": false,
            "required": false,
            "description": [
                "When enabled, this argument will collect the current running configuration from the remote device.  If the C(transport=rest) then the collected configuration will be the full system configuration."
            ],
            "choices": [
                true,
                false
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(rest).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
            ]
        },
        "transport": {
            "default": "ssh",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
            ],
            "choices": [
                "ssh",
                "cli",
                "rest"
            ]
        }
    },
    "module": "ops_facts"
}, {
    "short_description": "Push configuration to OpenSwitch",
    "deprecated": "Deprecated in 2.2. Use M(ops_config) instead.",
    "options": {
        "username": {
            "required": false,
            "description": [
                "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate either the CLI login or the eAPI authentication depending on which transport is used. Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
            ]
        },
        "src": {
            "required": true,
            "description": [
                "The path to the config source.  The source can be either a file with config or a template that will be merged during runtime.  By default the task will search for the source file in role or playbook root folder in templates directory."
            ]
        },
        "ssh_keyfile": {
            "required": false,
            "description": [
                "Specifies the SSH key to use to authenticate the connection to the remote device.  This argument is only used for the I(cli) transports. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "When this argument is configured true, the module will backup the running-config from the node prior to making any changes. The backup file will be written to backups/ in the root of the playbook directory."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.  Note this argument does not affect the SSH argument."
            ]
        },
        "timeout": {
            "default": 10,
            "require": false,
            "description": [
                "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
            ]
        },
        "provider": {
            "default": null,
            "required": false,
            "description": [
                "Convenience method that allows all I(openswitch) arguments to be passed as a dict object.  All constraints (required, choices, etc) must be met either by individual arguments or values in this dict."
            ]
        },
        "use_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Configures the I(transport) to use SSL if set to true only when the I(transport) argument is configured as rest.  If the transport argument is not I(rest), this value is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the password to use to authenticate the connection to the remote device.  This is a common argument used for either I(cli) or I(rest) transports.  Note this argument does not affect the SSH transport. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison."
            ]
        },
        "port": {
            "default": "0 (use common port)",
            "required": false,
            "description": [
                "Specifies the port to use when building the connection to the remote device.  This value applies to either I(cli) or I(rest).  The port value will default to the appropriate transport common port if none is provided in the task.  (cli=22, http=80, https=443).  Note this argument does not affect the SSH transport."
            ]
        },
        "transport": {
            "default": "ssh",
            "required": true,
            "description": [
                "Configures the transport connection to use when connecting to the remote device.  The transport argument supports connectivity to the device over ssh, cli or REST."
            ],
            "choices": [
                "ssh",
                "cli",
                "rest"
            ]
        }
    },
    "module": "ops_template"
}, {
    "short_description": "Manage Ordnance configuration sections",
    "deprecated": null,
    "options": {
        "multiline_delimiter": {
            "default": "@",
            "required": false,
            "description": [
                "This arugment is used when pushing a multiline configuration element to the Ordnance router.  It specifies the character to use as the delimiting character.  This only applies to the configuration action"
            ]
        },
        "src": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This argument is mutually exclusive with I(lines)."
            ]
        },
        "commands": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
            ],
            "aliases": [
                "commands"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made.  The backup file is written to the C(backup) folder in the playbook root directory.  If the directory does not exist, it is created."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "after": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
            ]
        },
        "replace": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct."
            ],
            "choices": [
                "line",
                "block"
            ]
        },
        "parents": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
            ]
        },
        "defaults": {
            "default": false,
            "required": false,
            "description": [
                "This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the module will get the current config by issuing the command C(show running-config all)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "save": {
            "default": false,
            "required": false,
            "description": [
                "The C(save) argument instructs the module to save the running- config to the startup-config at the conclusion of the module running.  If check mode is specified, this argument is ignored."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The C(config) argument allows the playbook designer to supply the base configuration to be used to validate configuration changes necessary.  If this argument is provided, the module will not download the running-config from the remote node."
            ]
        },
        "match": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device."
            ],
            "choices": [
                "line",
                "strict",
                "exact",
                "none"
            ]
        },
        "before": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system."
            ]
        }
    },
    "module": "ordnance_config"
}, {
    "short_description": "Collect facts from Ordnance Virtual Routers over SSH",
    "deprecated": null,
    "options": {
        "gather_subset": {
            "default": "!config",
            "required": false,
            "description": [
                "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, hardware, config, and interfaces.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected."
            ]
        }
    },
    "module": "ordnance_facts"
}, {
    "short_description": "Retrieve an auth token",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "os_auth"
}, {
    "short_description": "Get OpenStack Client config",
    "deprecated": null,
    "options": {
        "clouds": {
            "default": [],
            "required": false,
            "description": [
                "List of clouds to limit the return list to. No value means return information on all configured clouds"
            ]
        }
    },
    "module": "os_client_config"
}, {
    "short_description": "Retrieve facts about one or more flavors",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "ram": {
            "default": false,
            "required": false,
            "description": [
                "A string used for filtering flavors based on the amount of RAM (in MB) desired. This string accepts the following special values: 'MIN' (return flavors with the minimum amount of RAM), and 'MAX' (return flavors with the maximum amount of RAM).",
                "A specific amount of RAM may also be specified. Any flavors with this exact amount of RAM will be returned.",
                "A range of acceptable RAM may be given using a special syntax. Simply prefix the amount of RAM with one of these acceptable range values: '<', '>', '<=', '>='. These values represent less than, greater than, less than or equal to, and greater than or equal to, respectively."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": "None",
            "required": false,
            "description": [
                "A flavor name. Cannot be used with I(ram) or I(vcpus) or I(ephemeral)."
            ]
        },
        "ephemeral": {
            "default": false,
            "required": false,
            "description": [
                "A string used for filtering flavors based on the amount of ephemeral storage. Format is the same as the I(ram) parameter"
            ],
            "version_added": "2.3"
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "vcpus": {
            "default": false,
            "required": false,
            "description": [
                "A string used for filtering flavors based on the number of virtual CPUs desired. Format is the same as the I(ram) parameter."
            ]
        },
        "limit": {
            "default": "None",
            "required": false,
            "description": [
                "Limits the number of flavors returned. All matching flavors are returned by default."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_flavor_facts"
}, {
    "short_description": "Add/Remove floating IP from an instance",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "reuse": {
            "default": false,
            "required": false,
            "description": [
                "When I(state) is present, and I(floating_ip_address) is not present, this parameter can be used to specify whether we should try to reuse a floating IP address already allocated to the project."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "floating_ip_address": {
            "required": false,
            "description": [
                "A floating IP address to attach or to detach. Required only if I(state) is absent. When I(state) is present can be used to specify a IP address to attach."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "server": {
            "required": true,
            "description": [
                "The name or ID of the instance to which the IP address should be assigned."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "fixed_address": {
            "required": false,
            "description": [
                "To which fixed IP of server the floating IP address should be attached to."
            ]
        },
        "network": {
            "required": false,
            "description": [
                "The name or ID of a neutron external network or a nova pool name."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "nat_destination": {
            "default": "None",
            "required": false,
            "description": [
                "The name or id of a neutron private network that the fixed IP to attach floating IP is on"
            ],
            "version_added": "2.3",
            "aliases": [
                "fixed_network",
                "internal_network"
            ]
        },
        "purge": {
            "default": false,
            "required": false,
            "description": [
                "When I(state) is absent, indicates whether or not to delete the floating IP completely, or only detach it from the server. Default is to detach only."
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_floating_ip"
}, {
    "short_description": "Manage OpenStack Identity Groups",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Group description"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "domain_id": {
            "default": "None",
            "required": false,
            "description": [
                "Domain id to create the group in if the cloud supports domains."
            ],
            "version_added": "2.3"
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Group name"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_group"
}, {
    "short_description": "Add/Delete images from OpenStack Cloud",
    "deprecated": null,
    "options": {
        "ramdisk": {
            "default": "None",
            "required": false,
            "description": [
                "The name of an existing ramdisk image that will be associated with this image"
            ]
        },
        "kernel": {
            "default": "None",
            "required": false,
            "description": [
                "The name of an existing kernel image that will be associated with this image"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "container_format": {
            "default": "bare",
            "required": false,
            "description": [
                "The format of the container"
            ]
        },
        "min_ram": {
            "default": "None",
            "required": false,
            "description": [
                "The minimum ram (in MB) required to boot this image"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "min_disk": {
            "default": "None",
            "required": false,
            "description": [
                "The minimum disk space (in GB) required to boot this image"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "owner": {
            "default": "None",
            "required": false,
            "description": [
                "The owner of the image"
            ]
        },
        "is_public": {
            "default": "yes",
            "required": false,
            "description": [
                "Whether the image can be accessed publicly. Note that publicizing an image requires admin role by default."
            ]
        },
        "properties": {
            "default": {},
            "required": false,
            "description": [
                "Additional properties to be associated with this image"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "name": {
            "default": "None",
            "required": true,
            "description": [
                "Name that has to be given to the image"
            ]
        },
        "disk_format": {
            "default": "qcow2",
            "required": false,
            "description": [
                "The format of the disk that is getting uploaded"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "filename": {
            "default": "None",
            "required": false,
            "description": [
                "The path to the file which has to be uploaded"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_image"
}, {
    "short_description": "Retrieve facts about an image within OpenStack.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "image": {
            "required": true,
            "description": [
                "Name or ID of the image"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "os_image_facts"
}, {
    "short_description": "Create/Delete Bare Metal Resources from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "driver": {
            "default": "None",
            "required": true,
            "description": [
                "The name of the Ironic Driver to use with this node."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "properties": {
            "description": [
                "Definition of the physical characteristics of this server, used for scheduling purposes"
            ],
            "suboptions": {
                "cpu_arch": {
                    "default": "x86_64",
                    "description": [
                        "CPU architecture (x86_64, i686, ...)"
                    ]
                },
                "ram": {
                    "default": 1,
                    "description": [
                        "amount of RAM this machine has, in MB"
                    ]
                },
                "disk_size": {
                    "default": 1,
                    "description": [
                        "size of first storage device in this machine (typically /dev/sda), in GB"
                    ]
                },
                "cpus": {
                    "default": 1,
                    "description": [
                        "Number of CPU cores this machine has"
                    ]
                }
            }
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "name": {
            "default": "None",
            "required": false,
            "description": [
                "unique name identifier to be given to the resource."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "uuid": {
            "default": "None",
            "required": false,
            "description": [
                "globally unique identifier (UUID) to be given to the resource. Will be auto-generated if not specified, and name is specified.",
                "Definition of a UUID will always take precedence to a name value."
            ]
        },
        "driver_info": {
            "description": [
                "Information for this server's driver. Will vary based on which driver is in use. Any sub-field which is populated will be validated during creation."
            ],
            "suboptions": {
                "management": {
                    "required": true,
                    "description": [
                        "Information necessary to interact with this server's management interface. May be shared by power_info in some cases."
                    ]
                },
                "console": {
                    "description": [
                        "Information necessary to connect to this server's serial console.  Not all drivers support this."
                    ]
                },
                "power": {
                    "required": true,
                    "description": [
                        "Information necessary to turn this server on / off. This often includes such things as IPMI username, password, and IP address."
                    ]
                },
                "deploy": {
                    "description": [
                        "Information necessary to deploy this server directly, without using Nova. THIS IS NOT RECOMMENDED."
                    ]
                }
            }
        },
        "nics": {
            "required": true,
            "description": [
                "A list of network interface cards, eg, \" - mac: aa:bb:cc:aa:bb:cc\""
            ]
        },
        "ironic_url": {
            "default": "None",
            "required": false,
            "description": [
                "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with \"auth\" and \"auth_type\" settings set to None."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicates desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "chassis_uuid": {
            "default": "None",
            "required": false,
            "description": [
                "Associate the node with a pre-defined chassis."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "skip_update_of_driver_password": {
            "default": false,
            "required": false,
            "description": [
                "Allows the code that would assert changes to nodes to skip the update if the change is a single line consisting of the password field.  As of Kilo, by default, passwords are always masked to API requests, which means the logic as a result always attempts to re-assert the password field."
            ]
        }
    },
    "module": "os_ironic"
}, {
    "short_description": "Explicitly triggers baremetal node introspection in ironic.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "mac": {
            "default": "None",
            "required": false,
            "description": [
                "unique mac address that is used to attempt to identify the host."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "name": {
            "default": "None",
            "required": false,
            "description": [
                "unique name identifier to identify the host in Ironic."
            ]
        },
        "uuid": {
            "default": "None",
            "required": false,
            "description": [
                "globally unique identifier (UUID) to identify the host."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "ironic_url": {
            "default": "None",
            "required": false,
            "description": [
                "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API. Use with \"auth\" and \"auth_type\" settings set to None."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_ironic_inspect"
}, {
    "short_description": "Activate/Deactivate Bare Metal Resources from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "power": {
            "default": "present",
            "description": [
                "A setting to allow power state to be asserted allowing nodes that are not yet deployed to be powered on, and nodes that are deployed to be powered off."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "deploy": {
            "default": true,
            "description": [
                "Indicates if the resource should be deployed. Allows for deployment logic to be disengaged and control of the node power or maintenance state to be changed."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "maintenance_reason": {
            "default": "None",
            "required": false,
            "description": [
                "A string expression regarding the reason a node is in a maintenance mode."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "uuid": {
            "default": "None",
            "required": false,
            "description": [
                "globally unique identifier (UUID) to be given to the resource."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "ironic_url": {
            "default": "None",
            "required": false,
            "description": [
                "If noauth mode is utilized, this is required to be set to the endpoint URL for the Ironic API.  Use with \"auth\" and \"auth_type\" settings set to None."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicates desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "maintenance": {
            "default": false,
            "required": false,
            "description": [
                "A setting to allow the direct control if a node is in maintenance mode."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "instance_info": {
            "description": [
                "Definition of the instance information which is used to deploy the node.  This information is only required when an instance is set to present."
            ],
            "suboptions": {
                "image_disk_format": {
                    "description": [
                        "The type of image that has been requested to be deployed."
                    ]
                },
                "image_source": {
                    "description": [
                        "An HTTP(S) URL where the image can be retrieved from."
                    ]
                },
                "image_checksum": {
                    "description": [
                        "The checksum of image_source."
                    ]
                }
            }
        },
        "config_drive": {
            "default": "None",
            "required": false,
            "description": [
                "A configdrive file or HTTP(S) URL that will be passed along to the node."
            ]
        }
    },
    "module": "os_ironic_node"
}, {
    "short_description": "Add/Delete a keypair from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "public_key_file": {
            "default": "None",
            "required": false,
            "description": [
                "Path to local file containing ssh public key. Mutually exclusive with public_key."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "public_key": {
            "default": "None",
            "required": false,
            "description": [
                "The public key that would be uploaded to nova and injected into VMs upon creation."
            ]
        },
        "name": {
            "default": "None",
            "required": true,
            "description": [
                "Name that has to be given to the key pair"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_keypair"
}, {
    "short_description": "Manage OpenStack Identity Domains",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Description of the domain"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name that has to be given to the instance"
            ]
        },
        "enabled": {
            "default": true,
            "required": false,
            "description": [
                "Is the domain enabled"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_keystone_domain"
}, {
    "short_description": "Retrieve facts about one or more OpenStack domains",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name or ID of the domain"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "default": "None",
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        }
    },
    "module": "os_keystone_domain_facts"
}, {
    "short_description": "Manage OpenStack Identity Roles",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Role Name"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        }
    },
    "module": "os_keystone_role"
}, {
    "short_description": "Manage OpenStack Identity services",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Description of the service"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service"
            ]
        },
        "enabled": {
            "default": true,
            "required": false,
            "description": [
                "Is the service enabled"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "service_type": {
            "required": true,
            "description": [
                "The type of service"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_keystone_service"
}, {
    "short_description": "Creates/removes networks from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "provider_network_type": {
            "default": "None",
            "required": false,
            "description": [
                "The type of physical network that maps to this network resource."
            ],
            "version_added": "2.1"
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "provider_physical_network": {
            "default": "None",
            "required": false,
            "description": [
                "The physical network where this network object is implemented."
            ],
            "version_added": "2.1"
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "external": {
            "default": false,
            "required": false,
            "description": [
                "Whether this network is externally accessible."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name to be assigned to the network."
            ]
        },
        "admin_state_up": {
            "default": true,
            "required": false,
            "description": [
                "Whether the state should be marked as up or down."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "project": {
            "default": "None",
            "required": false,
            "description": [
                "Project name or ID containing the network (name admin-only)"
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "provider_segmentation_id": {
            "default": "None",
            "required": false,
            "description": [
                "An isolated segment on the physical network. The I(network_type) attribute defines the segmentation model. For example, if the I(network_type) value is vlan, this ID is a vlan identifier. If the I(network_type) value is gre, this ID is a gre key."
            ],
            "version_added": "2.1"
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "shared": {
            "default": false,
            "required": false,
            "description": [
                "Whether this network is shared or not."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_network"
}, {
    "short_description": "Retrieve facts about one or more OpenStack networks.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "name": {
            "required": false,
            "description": [
                "Name or ID of the Network"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        }
    },
    "module": "os_networks_facts"
}, {
    "short_description": "Manage OpenStack compute flavors",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "ram": {
            "default": null,
            "required": false,
            "description": [
                "Amount of memory, in MB."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "extra_specs": {
            "default": "None",
            "required": false,
            "description": [
                "Metadata dictionary"
            ],
            "version_added": "2.3"
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "rxtx_factor": {
            "default": 1,
            "required": false,
            "description": [
                "RX/TX factor."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "is_public": {
            "default": true,
            "required": false,
            "description": [
                "Make flavor accessible to the public."
            ]
        },
        "disk": {
            "default": null,
            "required": false,
            "description": [
                "Size of local disk, in GB."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "flavorid": {
            "default": "auto",
            "required": false,
            "description": [
                "ID for the flavor. This is optional as a unique UUID will be assigned if a value is not specified."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Flavor name."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "ephemeral": {
            "default": 0,
            "required": false,
            "description": [
                "Ephemeral space size, in GB."
            ]
        },
        "vcpus": {
            "default": null,
            "required": false,
            "description": [
                "Number of virtual CPUs."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource. When I(state) is 'present', then I(ram), I(vcpus), and I(disk) are all required. There are no default values for those parameters."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "swap": {
            "default": 0,
            "required": false,
            "description": [
                "Swap space size, in MB."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_nova_flavor"
}, {
    "short_description": "Manage OpenStack host aggregates",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "default": "None",
            "required": false,
            "description": "Availability zone to create aggregate into."
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": "Name of the aggregate."
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": "Should the resource be present or absent.",
            "choices": [
                "present",
                "absent"
            ]
        },
        "hosts": {
            "default": "None",
            "required": false,
            "description": "List of hosts to set for an aggregate."
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "metadata": {
            "default": "None",
            "required": false,
            "description": "Metadata dict."
        }
    },
    "module": "os_nova_host_aggregate"
}, {
    "short_description": "Create or Delete objects and containers from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "container": {
            "required": true,
            "description": [
                "The name of the container in which to create the object"
            ]
        },
        "name": {
            "required": false,
            "description": [
                "Name to be give to the object. If omitted, operations will be on the entire container"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "filename": {
            "required": false,
            "description": [
                "Path to local file to be uploaded."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "container_access": {
            "default": "private",
            "required": false,
            "description": [
                "desired container access level."
            ],
            "choices": [
                "private",
                "public"
            ]
        }
    },
    "module": "os_object"
}, {
    "short_description": "Add/Update/Delete ports from an OpenStack cloud.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "allowed_address_pairs": {
            "default": "None",
            "required": false,
            "description": [
                "Allowed address pairs list.  Allowed address pairs are supported with dictionary structure. e.g.  allowed_address_pairs: - ip_address: 10.1.0.12 mac_address: ab:cd:ef:12:34:56 - ip_address: ..."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "extra_dhcp_opts": {
            "default": "None",
            "required": false,
            "description": [
                "Extra dhcp options to be assigned to this port.  Extra options are supported with dictionary structure. e.g.  extra_dhcp_opts: - opt_name: opt name1 opt_value: value1 - opt_name: ..."
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "device_owner": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the entity that uses this port."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "fixed_ips": {
            "default": "None",
            "required": false,
            "description": [
                "Desired IP and/or subnet for this port.  Subnet is referenced by subnet_id and IP is referenced by ip_address."
            ]
        },
        "security_groups": {
            "default": "None",
            "required": false,
            "description": [
                "Security group(s) ID(s) or name(s) associated with the port (comma separated string or YAML list)"
            ]
        },
        "name": {
            "default": "None",
            "required": false,
            "description": [
                "Name that has to be given to the port."
            ]
        },
        "network": {
            "required": true,
            "description": [
                "Network ID or name this port belongs to."
            ]
        },
        "admin_state_up": {
            "default": "None",
            "required": false,
            "description": [
                "Sets admin state."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "no_security_groups": {
            "default": false,
            "required": false,
            "description": [
                "Do not associate a security group with this port."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "mac_address": {
            "default": "None",
            "required": false,
            "description": [
                "MAC address of this port."
            ]
        },
        "device_id": {
            "default": "None",
            "required": false,
            "description": [
                "Device ID of device using this port."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_port"
}, {
    "short_description": "Retrieve facts about ports within OpenStack.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "default": null,
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering. Elements of this dictionary will be matched against the returned port dictionaries. Matching is currently limited to strings within the port dictionary, or strings within nested dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "port": {
            "default": null,
            "required": false,
            "description": [
                "Unique name or ID of a port."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "os_port_facts"
}, {
    "short_description": "Manage OpenStack Projects",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Description for the project"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "domain_id": {
            "default": "None",
            "required": false,
            "description": [
                "Domain id to create the project in if the cloud supports domains. The domain_id parameter requires shade >= 1.8.0"
            ],
            "aliases": [
                "domain"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name for the project"
            ]
        },
        "enabled": {
            "default": true,
            "required": false,
            "description": [
                "Is the project enabled"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_project"
}, {
    "short_description": "Retrieve facts about one or more OpenStack projects",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "domain": {
            "default": "None",
            "required": false,
            "description": [
                "Name or ID of the domain containing the project if the cloud supports domains"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "default": "None",
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name or ID of the project"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_project_facts"
}, {
    "short_description": "Manage OpenStack Quotas",
    "deprecated": null,
    "options": {
        "snapshots_lvm": {
            "default": "None",
            "required": false,
            "description": "Number of LVM snapshots to allow."
        },
        "server_groups": {
            "default": "None",
            "required": false,
            "description": "Number of server groups to allow."
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "ram": {
            "default": "None",
            "required": false,
            "description": "Maximum amount of ram in MB to allow."
        },
        "snapshots": {
            "default": "None",
            "required": false,
            "description": "Number of snapshots to allow."
        },
        "instances": {
            "default": "None",
            "required": false,
            "description": "Maximum number of instances allowed."
        },
        "backups": {
            "default": "None",
            "required": false,
            "description": "Maximum number of backups allowed."
        },
        "fixed_ips": {
            "default": "None",
            "required": false,
            "description": "Number of fixed IP's to allow."
        },
        "port": {
            "default": "None",
            "required": false,
            "description": "Number of Network ports to allow, this needs to be greater than the instances limit."
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "subnet": {
            "default": "None",
            "required": false,
            "description": "Number of subnets to allow."
        },
        "per_volume_gigabytes": {
            "default": "None",
            "required": false,
            "description": "Maximum size in GB's of individual volumes."
        },
        "network": {
            "default": "None",
            "required": false,
            "description": "Number of networks to allow."
        },
        "floatingip": {
            "default": "None",
            "required": false,
            "description": "Number of floating IP's to allow in Network.",
            "aliases": [
                "network_floating_ips"
            ]
        },
        "volumes_lvm": {
            "default": "None",
            "required": false,
            "description": "Number of LVM volumes to allow."
        },
        "floating_ips": {
            "default": "None",
            "required": false,
            "description": "Number of floating IP's to allow in Compute.",
            "aliases": [
                "compute_floating_ips"
            ]
        },
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "security_group_rule": {
            "default": "None",
            "required": false,
            "description": "Number of rules per security group to allow."
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "A value of present sets the quota and a value of absent resets the quota to system defaults."
            ]
        },
        "injected_files": {
            "default": "None",
            "required": false,
            "description": "Number of injected files to allow."
        },
        "rbac_policy": {
            "default": "None",
            "required": false,
            "description": "Number of policies to allow."
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "injected_path_size": {
            "default": "None",
            "required": false,
            "description": "Maximum path size."
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "gigabytes": {
            "default": "None",
            "required": false,
            "description": "Maximum volume storage allowed for project."
        },
        "backup_gigabytes": {
            "default": "None",
            "required": false,
            "description": "Maximum size of backups in GB's."
        },
        "subnetpool": {
            "default": "None",
            "required": false,
            "description": "Number of subnet pools to allow."
        },
        "key_pairs": {
            "default": "None",
            "required": false,
            "description": "Number of key pairs to allow."
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "injected_file_size": {
            "default": "None",
            "required": false,
            "description": "Maximum file size in bytes."
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "router": {
            "default": "None",
            "required": false,
            "description": "Number of routers to allow."
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "properties": {
            "default": "None",
            "required": false,
            "description": "Number of properties to allow."
        },
        "name": {
            "required": true,
            "description": [
                "Name of the OpenStack Project to manage."
            ]
        },
        "server_group_members": {
            "default": "None",
            "required": false,
            "description": "Number of server group members to allow."
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "volumes": {
            "default": "None",
            "required": false,
            "description": "Number of volumes to allow."
        },
        "gigabytes_lvm": {
            "default": "None",
            "required": false,
            "description": "Maximum size in GB's of individual lvm volumes."
        },
        "security_group": {
            "default": "None",
            "required": false,
            "description": "Number of security groups to allow."
        },
        "cores": {
            "default": "None",
            "required": false,
            "description": "Maximum number of CPU's per project."
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        }
    },
    "module": "os_quota"
}, {
    "short_description": "Manage OpenStack DNS recordsets",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the recordset"
            ]
        },
        "zone": {
            "required": true,
            "description": [
                "Zone managing the recordset"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "records": {
            "required": true,
            "description": [
                "List of recordset definitions"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "ttl": {
            "default": "None",
            "required": false,
            "description": [
                "TTL (Time To Live) value in seconds"
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "recordset_type": {
            "required": true,
            "description": [
                "Recordset type"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Description of the recordset"
            ]
        }
    },
    "module": "os_recordset"
}, {
    "short_description": "Create or delete routers from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "enable_snat": {
            "default": true,
            "required": false,
            "description": [
                "Enable Source NAT (SNAT) attribute."
            ]
        },
        "network": {
            "default": "None",
            "required": false,
            "description": [
                "Unique name or ID of the external gateway network.",
                "required I(interfaces) or I(enable_snat) are provided."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "admin_state_up": {
            "default": true,
            "required": false,
            "description": [
                "Desired admin state of the created or existing router."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "interfaces": {
            "default": "None",
            "required": false,
            "description": [
                "List of subnets to attach to the router internal interface."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name to be give to the router"
            ]
        },
        "project": {
            "default": "None",
            "required": false,
            "description": [
                "Unique name or ID of the project."
            ],
            "version_added": "2.2"
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "external_fixed_ips": {
            "default": "None",
            "required": false,
            "description": [
                "The IP address parameters for the external gateway network. Each is a dictionary with the subnet name or ID (subnet) and the IP address to assign on the subnet (ip). If no IP is specified, one is automatically assigned from that subnet."
            ]
        }
    },
    "module": "os_router"
}, {
    "short_description": "Add/Delete security groups from an OpenStack cloud.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Long description of the purpose of the security group"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name that has to be given to the security group. This module requires that security group names be unique."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_security_group"
}, {
    "short_description": "Add/Delete rule from an existing security group",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "direction": {
            "default": "ingress",
            "description": [
                "The direction in which the security group rule is applied. Not all providers support egress."
            ],
            "choices": [
                "egress",
                "ingress"
            ]
        },
        "protocol": {
            "default": "None",
            "description": [
                "IP protocols TCP UDP ICMP 112 (VRRP)"
            ],
            "choices": [
                "tcp",
                "udp",
                "icmp",
                "112",
                "None"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "port_range_max": {
            "default": "None",
            "required": false,
            "description": [
                "Ending port"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "remote_ip_prefix": {
            "required": false,
            "description": [
                "Source IP address(es) in CIDR notation (exclusive with remote_group)"
            ]
        },
        "remote_group": {
            "required": false,
            "description": [
                "Name or ID of the Security group to link (exclusive with remote_ip_prefix)"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "port_range_min": {
            "default": "None",
            "required": false,
            "description": [
                "Starting port"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "ethertype": {
            "default": "IPv4",
            "description": [
                "Must be IPv4 or IPv6, and addresses represented in CIDR must match the ingress or egress rules. Not all providers support IPv6."
            ],
            "choices": [
                "IPv4",
                "IPv6"
            ]
        },
        "security_group": {
            "required": true,
            "description": [
                "Name or ID of the security group"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_security_group_rule"
}, {
    "short_description": "Create/Delete Compute Instances from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "volumes": {
            "default": [],
            "required": false,
            "description": [
                "A list of preexisting volumes names or ids to attach to the instance"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name that has to be given to the instance"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Availability zone in which to create the server."
            ]
        },
        "key_name": {
            "default": "None",
            "required": false,
            "description": [
                "The key pair name to be used when creating a instance"
            ]
        },
        "image": {
            "required": true,
            "description": [
                "The name or id of the base image to boot."
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "image_exclude": {
            "description": [
                "Text to use to filter image names, for the case, such as HP, where there are multiple image names matching the common identifying portions. image_exclude is a negative match filter - it is text that may not exist in the image name. Defaults to \"(deprecated)\""
            ]
        },
        "boot_volume": {
            "default": "None",
            "required": false,
            "description": [
                "Volume name or id to use as the volume to boot from. Implies boot_from_volume. Mutually exclusive with image and boot_from_volume."
            ],
            "aliases": [
                "root_volume"
            ]
        },
        "flavor_include": {
            "description": [
                "Text to use to filter flavor names, for the case, such as Rackspace, where there are multiple flavors that have the same ram count. flavor_include is a positive match filter - it must exist in the flavor name."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "meta": {
            "default": "None",
            "required": false,
            "description": [
                "A list of key value pairs that should be provided as a metadata to the new instance or a string containing a list of key-value pairs. Eg:  meta: \"key1=value1,key2=value2\""
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "terminate_volume": {
            "default": false,
            "description": [
                "If true, delete volume when deleting instance (if booted from volume)"
            ]
        },
        "flavor": {
            "default": 1,
            "required": false,
            "description": [
                "The name or id of the flavor in which the new instance has to be created. Mutually exclusive with flavor_ram"
            ]
        },
        "delete_fip": {
            "default": false,
            "required": false,
            "description": [
                "When I(state) is absent and this option is true, any floating IP associated with the instance will be deleted along with the instance."
            ],
            "version_added": "2.2"
        },
        "security_groups": {
            "default": "None",
            "required": false,
            "description": [
                "Names of the security groups to which the instance should be added. This may be a YAML list or a comma separated string."
            ]
        },
        "scheduler_hints": {
            "default": "None",
            "required": false,
            "description": [
                "Arbitrary key/value pairs to the scheduler for custom use"
            ],
            "version_added": "2.1"
        },
        "boot_from_volume": {
            "default": false,
            "required": false,
            "description": [
                "Should the instance boot from a persistent volume created based on the image given. Mututally exclusive with boot_volume."
            ]
        },
        "userdata": {
            "default": "None",
            "required": false,
            "description": [
                "Opaque blob of data which is made available to the instance"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "network": {
            "default": "None",
            "required": false,
            "description": [
                "Name or ID of a network to attach this instance to. A simpler version of the nics parameter, only one of network or nics should be supplied."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "nics": {
            "default": "None",
            "required": false,
            "description": [
                "A list of networks to which the instance's interface should be attached. Networks may be referenced by net-id/net-name/port-id or port-name.",
                "Also this accepts a string containing a list of (net/port)-(id/name) Eg: nics: \"net-id=uuid-1,port-name=myport\" Only one of network or nics should be supplied."
            ]
        },
        "floating_ips": {
            "default": "None",
            "required": false,
            "description": [
                "list of valid floating IPs that pre-exist to assign to this node"
            ]
        },
        "flavor_ram": {
            "default": 1,
            "required": false,
            "description": [
                "The minimum amount of ram in MB that the flavor in which the new instance has to be created must have. Mutually exclusive with flavor."
            ]
        },
        "volume_size": {
            "description": [
                "The size of the volume to create in GB if booting from volume based on an image."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "auto_ip": {
            "default": "yes",
            "required": false,
            "description": [
                "Ensure instance has public ip however the cloud wants to do that"
            ],
            "aliases": [
                "auto_floating_ip",
                "public_ip"
            ]
        },
        "config_drive": {
            "default": "no",
            "required": false,
            "description": [
                "Whether to boot the server with config drive enabled"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "reuse_ips": {
            "default": true,
            "required": false,
            "description": [
                "When I(auto_ip) is true and this option is true, the I(auto_ip) code will attempt to re-use unassigned floating ips in the project before creating a new one. It is important to note that it is impossible to safely do this concurrently, so if your use case involves concurrent server creation, it is highly recommended to set this to false and to delete the floating ip associated with a server when the server is deleted using I(delete_fip)."
            ],
            "version_added": "2.2"
        },
        "floating_ip_pools": {
            "default": "None",
            "required": false,
            "description": [
                "Name of floating IP pool from which to choose a floating IP"
            ]
        }
    },
    "module": "os_server"
}, {
    "short_description": "Perform actions on Compute Instances from OpenStack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "image": {
            "default": null,
            "description": [
                "Image the server should be rebuilt with"
            ],
            "version_added": "2.3"
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "server": {
            "required": true,
            "description": [
                "Name or ID of the instance"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "action": {
            "default": "present",
            "description": [
                "Perform the given action. The lock and unlock actions always return changed as the servers API does not provide lock status."
            ],
            "choices": [
                "stop",
                "start",
                "pause",
                "unpause",
                "lock",
                "unlock",
                "suspend",
                "resume",
                "rebuild"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_server_actions"
}, {
    "short_description": "Retrieve facts about one or more compute instances",
    "deprecated": null,
    "options": {
        "detailed": {
            "default": false,
            "required": false,
            "description": [
                "when true, return additional detail about servers at the expense of additional API calls."
            ]
        },
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "server": {
            "default": "None",
            "required": false,
            "description": [
                "restrict results to servers with names or UUID matching this glob expression (e.g., C<web*>)."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "os_server_facts"
}, {
    "short_description": "Manage OpenStack server groups",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Server group name."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource. When I(state) is 'present', then I(policies) is required."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "policies": {
            "required": false,
            "description": [
                "A list of one or more policy names to associate with the server group. The list must contain at least one policy name. The current valid policy names are anti-affinity, affinity, soft-anti-affinity and soft-affinity."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_server_group"
}, {
    "short_description": "Attach/Detach Volumes from OpenStack VM's",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "volume": {
            "required": true,
            "description": [
                "Name or id of volume you want to attach to a server"
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "device": {
            "default": "None",
            "required": false,
            "description": [
                "Device you want to attach. Defaults to auto finding a device name."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "server": {
            "required": true,
            "description": [
                "Name or ID of server you want to attach a volume to"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_server_volume"
}, {
    "short_description": "Add/Remove Heat Stack",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "rollback": {
            "default": false,
            "required": false,
            "description": [
                "Rollback stack creation"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the stack that should be created, name could be char and digit, no space"
            ]
        },
        "parameters": {
            "default": "None",
            "required": false,
            "description": [
                "Dictionary of parameters for the stack creation"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "environment": {
            "default": "None",
            "required": false,
            "description": [
                "List of environment files that should be used for the stack creation"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "template": {
            "default": "None",
            "required": false,
            "description": [
                "Path of the template file to use for the stack creation"
            ]
        }
    },
    "module": "os_stack"
}, {
    "short_description": "Add/Remove subnet to an OpenStack network",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "no_gateway_ip": {
            "default": false,
            "required": false,
            "description": [
                "The gateway IP would not be assigned for this subnet"
            ],
            "version_added": "2.2"
        },
        "use_default_subnetpool": {
            "default": false,
            "required": false,
            "description": [
                "Use the default subnetpool for I(ip_version) to obtain a CIDR."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "ipv6_ra_mode": {
            "default": "None",
            "required": false,
            "description": [
                "IPv6 router advertisement mode"
            ],
            "choices": [
                "dhcpv6-stateful",
                "dhcpv6-stateless",
                "slaac"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "host_routes": {
            "default": "None",
            "required": false,
            "description": [
                "A list of host route dictionaries for the subnet."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "ipv6_address_mode": {
            "default": "None",
            "required": false,
            "description": [
                "IPv6 address mode"
            ],
            "choices": [
                "dhcpv6-stateful",
                "dhcpv6-stateless",
                "slaac"
            ]
        },
        "cidr": {
            "default": "None",
            "required": false,
            "description": [
                "The CIDR representation of the subnet that should be assigned to the subnet. Required when I(state) is 'present' and a subnetpool is not specified."
            ]
        },
        "network_name": {
            "required": false,
            "description": [
                "Name of the network to which the subnet should be attached",
                "Required when I(state) is 'present'"
            ]
        },
        "allocation_pool_end": {
            "default": "None",
            "required": false,
            "description": [
                "From the subnet pool the last IP that should be assigned to the virtual machines."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the subnet that should be created. Although Neutron allows for non-unique subnet names, this module enforces subnet name uniqueness."
            ]
        },
        "enable_dhcp": {
            "default": true,
            "required": false,
            "description": [
                "Whether DHCP should be enabled for this subnet."
            ]
        },
        "dns_nameservers": {
            "default": "None",
            "required": false,
            "description": [
                "List of DNS nameservers for this subnet."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "project": {
            "default": "None",
            "required": false,
            "description": [
                "Project name or ID containing the subnet (name admin-only)"
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "allocation_pool_start": {
            "default": "None",
            "required": false,
            "description": [
                "From the subnet pool the starting address from which the IP should be allocated."
            ]
        },
        "gateway_ip": {
            "default": "None",
            "required": false,
            "description": [
                "The ip that would be assigned to the gateway for this subnet"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "ip_version": {
            "default": 4,
            "required": false,
            "description": [
                "The IP version of the subnet 4 or 6"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_subnet"
}, {
    "short_description": "Retrieve facts about one or more OpenStack subnets.",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "subnet": {
            "required": false,
            "description": [
                "Name or ID of the subnet"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "os_subnets_facts"
}, {
    "short_description": "Manage OpenStack Identity Users",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "domain": {
            "default": "None",
            "required": false,
            "description": [
                "Domain to create the user in if the cloud supports domains"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Username for the user"
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "update_password": {
            "default": "always",
            "required": false,
            "description": [
                "C(always) will attempt to update password.  C(on_create) will only set the password for newly created users."
            ],
            "version_added": "2.3",
            "choices": [
                "always",
                "on_create"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "enabled": {
            "default": true,
            "required": false,
            "description": [
                "Is the user enabled"
            ]
        },
        "default_project": {
            "default": "None",
            "required": false,
            "description": [
                "Project name or ID that the user should be associated with by default"
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "Password for the user"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "email": {
            "default": "None",
            "required": false,
            "description": [
                "Email address for the user"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        }
    },
    "module": "os_user"
}, {
    "short_description": "Retrieve facts about one or more OpenStack users",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "domain": {
            "default": "None",
            "required": false,
            "description": [
                "Name or ID of the domain containing the user if the cloud supports domains"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "filters": {
            "default": "None",
            "required": false,
            "description": [
                "A dictionary of meta data to use for further filtering.  Elements of this dictionary may be additional dictionaries."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name or ID of the user"
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_user_facts"
}, {
    "short_description": "Associate OpenStack Identity users and groups",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "user": {
            "required": true,
            "description": [
                "Name or id for the user"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "group": {
            "required": true,
            "description": [
                "Name or id for the group."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the user be present or absent in the group"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_user_group"
}, {
    "short_description": "Associate OpenStack Identity users and roles",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "domain": {
            "default": null,
            "required": false,
            "description": [
                "ID of the domain to scope the role association to. Valid only with keystone version 3, and required if I(project) is not specified."
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "user": {
            "default": null,
            "required": false,
            "description": [
                "Name or ID for the user. If I(user) is not specified, then I(group) is required. Both may not be specified."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Name or ID for the group. Valid only with keystone version 3. If I(group) is not specified, then I(user) is required. Both may not be specified."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "project": {
            "default": null,
            "required": false,
            "description": [
                "Name or ID of the project to scope the role association to. If you are using keystone version 2, then this value is required."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the roles be present or absent on the user."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "role": {
            "required": true,
            "description": [
                "Name or ID for the role."
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        }
    },
    "module": "os_user_role"
}, {
    "short_description": "Create/Delete Cinder Volumes",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "display_name": {
            "required": true,
            "description": [
                "Name of volume"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "image": {
            "default": "None",
            "required": false,
            "description": [
                "Image name or id for boot from volume"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "volume_type": {
            "default": "None",
            "required": false,
            "description": [
                "Volume type for volume"
            ]
        },
        "volume": {
            "default": "None",
            "required": false,
            "description": [
                "Volume name or id to create from"
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "display_description": {
            "default": "None",
            "required": false,
            "description": [
                "String describing the volume"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "snapshot_id": {
            "default": "None",
            "required": false,
            "description": [
                "Volume snapshot id to create from"
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "size": {
            "default": "None",
            "required": false,
            "description": [
                "Size of volume in GB. This parameter is required when the I(state) parameter is 'present'."
            ]
        }
    },
    "module": "os_volume"
}, {
    "short_description": "Manage OpenStack DNS zones",
    "deprecated": null,
    "options": {
        "auth_type": {
            "default": "password",
            "required": false,
            "description": [
                "Name of the auth plugin to use. If the cloud uses something other than password authentication, the name of the plugin should be indicated here and the contents of the I(auth) parameter should be updated accordingly."
            ]
        },
        "masters": {
            "default": "None",
            "required": false,
            "description": [
                "Master nameservers (only applies if zone_type is secondary)"
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Zone description"
            ]
        },
        "region_name": {
            "required": false,
            "description": [
                "Name of the region."
            ]
        },
        "availability_zone": {
            "required": false,
            "description": [
                "Ignored. Present for backwards compatability"
            ]
        },
        "api_timeout": {
            "default": "None",
            "required": false,
            "description": [
                "How long should the socket layer wait before timing out for API calls. If this is omitted, nothing will be passed to the requests library."
            ]
        },
        "cert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client certificate to use as part of the SSL transaction."
            ]
        },
        "auth": {
            "required": false,
            "description": [
                "Dictionary containing auth information as needed by the cloud's auth plugin strategy. For the default I(password) plugin, this would contain I(auth_url), I(username), I(password), I(project_name) and any information about domains if the cloud supports them. For other plugins, this param will need to contain whatever parameters that auth plugin requires. This parameter is not needed if a named cloud is provided or OpenStack OS_* environment variables are present."
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a client key to use as part of the SSL transaction."
            ]
        },
        "cacert": {
            "default": "None",
            "required": false,
            "description": [
                "A path to a CA Cert bundle that can be used as part of verifying SSL API requests."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the resource be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "endpoint_type": {
            "default": "public",
            "required": false,
            "description": [
                "Endpoint URL type to fetch from the service catalog."
            ],
            "choices": [
                "public",
                "internal",
                "admin"
            ]
        },
        "timeout": {
            "default": 180,
            "required": false,
            "description": [
                "How long should ansible wait for the requested resource."
            ]
        },
        "ttl": {
            "default": "None",
            "required": false,
            "description": [
                "TTL (Time To Live) value in seconds"
            ]
        },
        "zone_type": {
            "default": "None",
            "description": [
                "Zone type"
            ],
            "choices": [
                "primary",
                "secondary"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "Should ansible wait until the requested resource is complete."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": null,
            "required": false,
            "description": [
                "Whether or not SSL API requests should be verified. Before 2.3 this defaulted to True."
            ],
            "aliases": [
                "verify"
            ]
        },
        "email": {
            "required": false,
            "description": [
                "Email of the zone owner (only applies if zone_type is primary)"
            ]
        },
        "cloud": {
            "required": false,
            "description": [
                "Named cloud to operate against. Provides default values for I(auth) and I(auth_type). This parameter is not needed if I(auth) is provided or if OpenStack OS_* environment variables are present."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Zone name"
            ]
        }
    },
    "module": "os_zone"
}, {
    "short_description": "osx_defaults allows users to read, write, and delete Mac OS X user defaults from Ansible",
    "deprecated": null,
    "options": {
        "domain": {
            "default": "NSGlobalDomain",
            "required": false,
            "description": [
                "The domain is a domain name of the form com.companyname.appname."
            ]
        },
        "array_add": {
            "default": false,
            "required": false,
            "description": [
                "Add new elements to the array for a key which has an array as its value."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "key": {
            "required": true,
            "description": [
                "The key of the user preference"
            ]
        },
        "host": {
            "default": null,
            "required": false,
            "description": [
                "The host on which the preference should apply. The special value \"currentHost\" corresponds to the \"-currentHost\" switch of the defaults commandline tool."
            ],
            "version_added": "2.1"
        },
        "type": {
            "default": "string",
            "required": false,
            "description": [
                "The type of value to write."
            ],
            "choices": [
                "array",
                "bool",
                "boolean",
                "date",
                "float",
                "int",
                "integer",
                "string"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The state of the user defaults"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "value": {
            "default": null,
            "required": false,
            "description": [
                "The value to write. Only required when state = present."
            ]
        }
    },
    "module": "osx_defaults"
}, {
    "short_description": "Makes an OSX computer to speak.",
    "deprecated": null,
    "options": {
        "msg": {
            "required": true,
            "description": "What to say"
        },
        "voice": {
            "required": false,
            "description": "What voice to use"
        }
    },
    "module": "osx_say"
}, {
    "short_description": "Manage OVH IP LoadBalancing backends",
    "deprecated": null,
    "options": {
        "endpoint": {
            "required": true,
            "description": [
                "The endpoint to use ( for instance ovh-eu)"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the LoadBalancing internal name (ip-X.X.X.X)"
            ]
        },
        "weight": {
            "default": 8,
            "required": false,
            "description": [
                "Determines the weight for this backend"
            ]
        },
        "probe": {
            "default": "none",
            "required": false,
            "description": [
                "Determines the type of probe to use for this backend"
            ],
            "choices": [
                "none",
                "http",
                "icmp",
                "oco"
            ]
        },
        "application_key": {
            "required": true,
            "description": [
                "The applicationKey to use"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Determines whether the backend is to be created/modified or deleted"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "application_secret": {
            "required": true,
            "description": [
                "The application secret to use"
            ]
        },
        "timeout": {
            "default": 120,
            "required": false,
            "description": [
                "The timeout in seconds used to wait for a task to be completed."
            ]
        },
        "consumer_key": {
            "required": true,
            "description": [
                "The consumer key to use"
            ]
        },
        "backend": {
            "required": true,
            "description": [
                "The IP address of the backend to update / modify / delete"
            ]
        }
    },
    "module": "ovh_ip_loadbalancing_backend"
}, {
    "short_description": "oVirt/RHEV platform management",
    "deprecated": null,
    "options": {
        "instance_mem": {
            "default": null,
            "required": false,
            "description": [
                "the instance's amount of memory in MB"
            ],
            "aliases": [
                "vmmem"
            ]
        },
        "instance_cores": {
            "default": 1,
            "required": false,
            "description": [
                "define the instance's number of cores"
            ],
            "aliases": [
                "vmcores"
            ]
        },
        "instance_cpus": {
            "default": 1,
            "required": false,
            "description": [
                "the instance's number of cpu's"
            ],
            "aliases": [
                "vmcpus"
            ]
        },
        "image": {
            "default": null,
            "required": false,
            "description": [
                "template to use for the instance"
            ],
            "aliases": []
        },
        "instance_hostname": {
            "required": false,
            "description": [
                "define the instance's Hostname"
            ],
            "version_added": "2.1",
            "aliases": [
                "hostname"
            ]
        },
        "instance_disksize": {
            "default": null,
            "required": false,
            "description": [
                "size of the instance's disk in GB"
            ],
            "aliases": [
                "vm_disksize"
            ]
        },
        "instance_nic": {
            "default": null,
            "required": false,
            "description": [
                "name of the network interface in oVirt/RHEV"
            ],
            "aliases": [
                "vmnic"
            ]
        },
        "user": {
            "default": null,
            "required": true,
            "description": [
                "the user to authenticate with"
            ],
            "aliases": []
        },
        "instance_network": {
            "default": "rhevm",
            "required": false,
            "description": [
                "the logical network the machine should belong to"
            ],
            "aliases": [
                "vmnetwork"
            ]
        },
        "instance_type": {
            "default": "server",
            "aliases": [
                "vmtype"
            ],
            "required": false,
            "description": [
                "define if the instance is a server or desktop"
            ],
            "choices": [
                "server",
                "desktop"
            ]
        },
        "password": {
            "default": null,
            "required": true,
            "description": [
                "password of the user to authenticate with"
            ],
            "aliases": []
        },
        "sdomain": {
            "default": null,
            "required": false,
            "description": [
                "the Storage Domain where you want to create the instance's disk on."
            ],
            "aliases": []
        },
        "instance_os": {
            "default": null,
            "required": false,
            "description": [
                "type of Operating System"
            ],
            "aliases": [
                "vmos"
            ]
        },
        "instance_ip": {
            "required": false,
            "description": [
                "define the instance's IP"
            ],
            "version_added": "2.1",
            "aliases": [
                "ip"
            ]
        },
        "zone": {
            "default": null,
            "required": false,
            "description": [
                "deploy the image to this oVirt cluster"
            ],
            "aliases": []
        },
        "disk_alloc": {
            "default": "thin",
            "aliases": [],
            "required": false,
            "description": [
                "define if disk is thin or preallocated"
            ],
            "choices": [
                "thin",
                "preallocated"
            ]
        },
        "url": {
            "default": null,
            "required": true,
            "description": [
                "the url of the oVirt instance"
            ],
            "aliases": []
        },
        "region": {
            "default": null,
            "required": false,
            "description": [
                "the oVirt/RHEV datacenter where you want to deploy to"
            ],
            "aliases": []
        },
        "instance_dns": {
            "required": false,
            "description": [
                "define the instance's Primary DNS server"
            ],
            "version_added": "2.1",
            "aliases": [
                "dns"
            ]
        },
        "instance_name": {
            "default": null,
            "required": true,
            "description": [
                "the name of the instance to use"
            ],
            "aliases": [
                "vmname"
            ]
        },
        "instance_netmask": {
            "required": false,
            "description": [
                "define the instance's Netmask"
            ],
            "version_added": "2.1",
            "aliases": [
                "netmask"
            ]
        },
        "state": {
            "default": "present",
            "aliases": [],
            "required": false,
            "description": [
                "create, terminate or remove instances"
            ],
            "choices": [
                "present",
                "absent",
                "shutdown",
                "started",
                "restarted"
            ]
        },
        "instance_key": {
            "required": false,
            "description": [
                "define the instance's Authorized key"
            ],
            "version_added": "2.1",
            "aliases": [
                "key"
            ]
        },
        "instance_domain": {
            "required": false,
            "description": [
                "define the instance's Domain"
            ],
            "version_added": "2.1",
            "aliases": [
                "domain"
            ]
        },
        "instance_rootpw": {
            "required": false,
            "description": [
                "define the instance's Root password"
            ],
            "version_added": "2.1",
            "aliases": [
                "rootpw"
            ]
        },
        "resource_type": {
            "default": null,
            "aliases": [],
            "required": false,
            "description": [
                "whether you want to deploy an image or create an instance from scratch."
            ],
            "choices": [
                "new",
                "template"
            ]
        },
        "disk_int": {
            "default": "virtio",
            "aliases": [],
            "required": false,
            "description": [
                "interface type of the disk"
            ],
            "choices": [
                "virtio",
                "ide"
            ]
        }
    },
    "module": "ovirt"
}, {
    "short_description": "Module to manage affinity groups in oVirt",
    "deprecated": null,
    "options": {
        "vm_enforcing": {
            "description": [
                "If I(true) VM cannot start if it does not satisfy the C(vm_rule)."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the affinity group to manage."
            ]
        },
        "host_rule": {
            "description": [
                "If I(positive) I(all) VMs in this group should run on the this host.",
                "If I(negative) I(no) VMs in this group should run on the this host.",
                "C(This parameter is support since oVirt 4.1 version.)"
            ],
            "choices": [
                "positive",
                "negative"
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "cluster": {
            "description": [
                "Name of the cluster of the affinity group."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the affinity group be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "hosts": {
            "description": [
                "List of the hosts names, which should have assigned this affinity group.",
                "C(This parameter is support since oVirt 4.1 version.)"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "vm_rule": {
            "description": [
                "If I(positive) I(all) VMs in this group should run on the host defined by C(host_rule).",
                "If I(negative) I(no) VMs in this group should run on the host defined by C(host_rule).",
                "If I(disabled) this affinity group doesn't take effect."
            ],
            "choices": [
                "positive",
                "negative",
                "disabled"
            ]
        },
        "host_enforcing": {
            "description": [
                "If I(true) VM cannot start on host if it does not satisfy the C(host_rule).",
                "C(This parameter is support since oVirt 4.1 version.)"
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "vms": {
            "description": [
                "List of the VMs names, which should have assigned this affinity group."
            ]
        },
        "description": {
            "description": [
                "Description of the affinity group."
            ]
        }
    },
    "module": "ovirt_affinity_groups"
}, {
    "short_description": "Module to manage affinity labels in oVirt",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the the affinity label to manage."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "cluster": {
            "description": [
                "Name of the cluster where vms and hosts resides."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the affinity label be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "hosts": {
            "description": [
                "List of the hosts names, which should have assigned this affinity label."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "vms": {
            "description": [
                "List of the VMs names, which should have assigned this affinity label."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_affinity_labels"
}, {
    "short_description": "Retrieve facts about one or more oVirt affinity labels",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "host": {
            "description": [
                "Name of the host, which affinity labels should be listed."
            ]
        },
        "name": {
            "description": [
                "Name of the affinity labels which should be listed."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "vm": {
            "description": [
                "Name of the VM, which affinity labels should be listed."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_affinity_labels_facts"
}, {
    "short_description": "Module to manage authentication to oVirt",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The name of the user. For example: I(admin@internal)."
            ]
        },
        "ca_file": {
            "required": false,
            "description": [
                "A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If C(ca_file) parameter is not set, system wide CA certificate store is used."
            ]
        },
        "url": {
            "required": true,
            "description": [
                "A string containing the base URL of the server. For example: I(https://server.example.com/ovirt-engine/api)."
            ]
        },
        "insecure": {
            "required": false,
            "description": [
                "A boolean flag that indicates if the server TLS certificate and host name should be checked."
            ]
        },
        "kerberos": {
            "required": false,
            "description": [
                "A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "compress": {
            "required": false,
            "description": [
                "A boolean flag indicating if the SDK should ask the server to send compressed responses. The default is I(True). Note that this is a hint for the server, and that it may return uncompressed data even when this parameter is set to I(True)."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Specifies if a token should be created or revoked."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "required": false,
            "description": [
                "The maximum total time to wait for the response, in seconds. A value of zero (the default) means wait forever. If the timeout expires before the response is received an exception will be raised."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the user."
            ]
        }
    },
    "module": "ovirt_auth"
}, {
    "short_description": "Module to manage clusters in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Comment of the cluster."
            ]
        },
        "ha_reservation": {
            "description": [
                "If I(True) enable the oVirt to monitor cluster capacity for highly available virtual machines."
            ]
        },
        "fence_skip_if_connectivity_broken": {
            "description": [
                "If I(True) fencing will be temporarily disabled if the percentage of hosts in the cluster that are experiencing connectivity issues is greater than or equal to the defined threshold.",
                "The threshold can be specified by C(fence_connectivity_threshold)."
            ]
        },
        "virt": {
            "description": [
                "If I(True), hosts in this cluster will be used to run virtual machines."
            ]
        },
        "threads_as_cores": {
            "description": [
                "If I(True) the exposed host threads would be treated as cores which can be utilized by virtual machines."
            ]
        },
        "gluster": {
            "description": [
                "If I(True), hosts in this cluster will be used as Gluster Storage server nodes, and not for running virtual machines.",
                "By default the cluster is created for virtual machine hosts."
            ]
        },
        "vm_reason": {
            "description": [
                "If I(True) enable an optional reason field when a virtual machine is shut down from the Manager, allowing the administrator to provide an explanation for the maintenance."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "migration_bandwidth_limit": {
            "description": [
                "Set the I(custom) migration bandwidth limit.",
                "This parameter is used only when C(migration_bandwidth) is I(custom)."
            ]
        },
        "switch_type": {
            "description": [
                "Type of switch to be used by all networks in given cluster. Either I(legacy) which is using linux brigde or I(ovs) using Open vSwitch."
            ],
            "choices": [
                "legacy",
                "ovs"
            ]
        },
        "data_center": {
            "description": [
                "Datacenter name where cluster reside."
            ]
        },
        "ksm_numa": {
            "description": [
                "If I(True) enables KSM C(ksm) for best berformance inside NUMA nodes."
            ]
        },
        "description": {
            "description": [
                "Description of the cluster."
            ]
        },
        "cpu_arch": {
            "description": [
                "CPU architecture of cluster."
            ],
            "choices": [
                "x86_64",
                "ppc64",
                "undefined"
            ]
        },
        "rng_sources": {
            "description": [
                "List that specify the random number generator devices that all hosts in the cluster will use.",
                "Supported generators are: I(hwrng) and I(random)."
            ]
        },
        "network": {
            "description": [
                "Management network of cluster to access cluster hosts."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the cluster be present or absent"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ksm": {
            "description": [
                "I I(True) MoM enables to run Kernel Same-page Merging I(KSM) when necessary and when it can yield a memory saving benefit that outweighs its CPU cost."
            ]
        },
        "migration_compressed": {
            "description": [
                "If I(True) compression is used during live migration of the virtual machine.",
                "Used only when C(migration_policy) is set to I(legacy).",
                "Following options are supported:",
                "C(true) - Override the global setting to I(true).",
                "C(false) - Override the global setting to I(false).",
                "C(inherit) - Use value which is set globally."
            ],
            "choices": [
                "true",
                "false",
                "inherit"
            ]
        },
        "ballooning": {
            "description": [
                "If I(True) enable memory balloon optimization. Memory balloon is used to re-distribute / reclaim the host memory based on VM needs in a dynamic way."
            ]
        },
        "migration_auto_converge": {
            "description": [
                "If I(True) auto-convergence is used during live migration of virtual machines.",
                "Used only when C(migration_policy) is set to I(legacy).",
                "Following options are supported:",
                "C(true) - Override the global setting to I(true).",
                "C(false) - Override the global setting to I(false).",
                "C(inherit) - Use value which is set globally."
            ],
            "choices": [
                "true",
                "false",
                "inherit"
            ]
        },
        "fence_enabled": {
            "description": [
                "If I(True) enables fencing on the cluster.",
                "Fencing is enabled by default."
            ]
        },
        "migration_policy": {
            "description": [
                "A migration policy defines the conditions for live migrating virtual machines in the event of host failure.",
                "Following policies are supported:",
                "C(legacy) - Legacy behavior of 3.6 version.",
                "C(minimal_downtime) - Virtual machines should not experience any significant downtime.",
                "C(suspend_workload) - Virtual machines may experience a more significant downtime."
            ],
            "choices": [
                "legacy",
                "minimal_downtime",
                "suspend_workload"
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "resilience_policy": {
            "description": [
                "The resilience policy defines how the virtual machines are prioritized in the migration.",
                "Following values are supported:",
                "C(do_not_migrate) -  Prevents virtual machines from being migrated. ",
                "C(migrate) - Migrates all virtual machines in order of their defined priority.",
                "C(migrate_highly_available) - Migrates only highly available virtual machines to prevent overloading other hosts."
            ],
            "choices": [
                "do_not_migrate",
                "migrate",
                "migrate_highly_available"
            ]
        },
        "fence_connectivity_threshold": {
            "description": [
                "The threshold used by C(fence_skip_if_connectivity_broken)."
            ]
        },
        "spice_proxy": {
            "description": [
                "The proxy by which the SPICE client will connect to virtual machines.",
                "The address must be in the following format: I(protocol://[host]:[port])"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "memory_policy": {
            "description": [
                "I(disabled) - Disables memory page sharing.",
                "I(server) - Sets the memory page sharing threshold to 150% of the system memory on each host.",
                "I(desktop) - Sets the memory page sharing threshold to 200% of the system memory on each host."
            ],
            "choices": [
                "disabled",
                "server",
                "desktop"
            ]
        },
        "migration_bandwidth": {
            "description": [
                "The bandwidth settings define the maximum bandwidth of both outgoing and incoming migrations per host.",
                "Following bandwith options are supported:",
                "C(auto) - Bandwidth is copied from the I(rate limit) [Mbps] setting in the data center host network QoS.",
                "C(hypervisor_default) - Bandwidth is controlled by local VDSM setting on sending host.",
                "C(custom) - Defined by user (in Mbps)."
            ],
            "choices": [
                "auto",
                "hypervisor_default",
                "custom"
            ]
        },
        "fence_skip_if_sd_active": {
            "description": [
                "If I(True) any hosts in the cluster that are Non Responsive and still connected to storage will not be fenced."
            ]
        },
        "scheduling_policy": {
            "description": [
                "Name of the scheduling policy to be used for cluster."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "compatibility_version": {
            "description": [
                "The compatibility version of the cluster. All hosts in this cluster must support at least this compatibility version."
            ]
        },
        "serial_policy_value": {
            "description": [
                "Allows you to specify a custom serial number.",
                "This parameter is used only when C(serial_policy) is I(custom)."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the cluster to manage."
            ]
        },
        "host_reason": {
            "description": [
                "If I(True) enable an optional reason field when a host is placed into maintenance mode from the Manager, allowing the administrator to provide an explanation for the maintenance."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "cpu_type": {
            "description": [
                "CPU codename. For example I(Intel SandyBridge Family)."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "serial_policy": {
            "description": [
                "Specify a serial number policy for the virtual machines in the cluster.",
                "Following options are supported:",
                "C(vm) - Sets the virtual machine's UUID as its serial number.",
                "C(host) - Sets the host's UUID as the virtual machine's serial number.",
                "C(custom) - Allows you to specify a custom serial number in C(serial_policy_value)."
            ]
        },
        "trusted_service": {
            "description": [
                "If (True) enable integration with an OpenAttestation server."
            ]
        }
    },
    "module": "ovirt_clusters"
}, {
    "short_description": "Retrieve facts about one or more oVirt clusters",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search cluster X from datacenter Y use following pattern: name=X and datacenter=Y"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_clusters_facts"
}, {
    "short_description": "Module to manage data centers in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Comment of the data center."
            ]
        },
        "compatibility_version": {
            "description": [
                "Compatibility version of the data center."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the data center to manage."
            ]
        },
        "mac_pool": {
            "description": [
                "MAC pool to be used by this datacenter.",
                "IMPORTANT: This option is deprecated in oVirt 4.1. You should use C(mac_pool) in C(ovirt_clusters) module, as MAC pools are set per cluster since 4.1."
            ]
        },
        "local": {
            "description": [
                "I(True) if the data center should be local, I(False) if should be shared.",
                "Default value is set by engine."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the data center be present or absent"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "quota_mode": {
            "description": [
                "Quota mode of the data center. One of I(disabled), I(audit) or I(enabled)"
            ],
            "choices": [
                "disabled",
                "audit",
                "enabled"
            ]
        },
        "description": {
            "description": [
                "Description of the data center."
            ]
        }
    },
    "module": "ovirt_datacenters"
}, {
    "short_description": "Retrieve facts about one or more oVirt datacenters",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search datacenter I(X) use following pattern: I(name=X)"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_datacenters_facts"
}, {
    "short_description": "Module to manage Virtual Machine and floating disks in oVirt",
    "deprecated": null,
    "options": {
        "vm_name": {
            "description": [
                "Name of the Virtual Machine to manage. Either C(vm_id) or C(vm_name) is required if C(state) is I(attached) or I(detached)."
            ]
        },
        "profile": {
            "description": [
                "Disk profile name to be attached to disk. By default profile is chosen by oVirt engine."
            ]
        },
        "storage_domains": {
            "description": [
                "Storage domain names where disk should be copied.",
                "C(**IMPORTANT**)",
                "There is no reliable way to achieve idempotency, so every time you specify this parameter the disks are copied, so please handle your playbook accordingly to not copy the disks all the time. This is valid only for VM and floating disks, template disks works as expected."
            ],
            "version_added": "2.3"
        },
        "force": {
            "description": [
                "Please take a look at C(image_path) documentation to see the correct usage of this parameter."
            ],
            "version_added": "2.3"
        },
        "format": {
            "description": [
                "Specify format of the disk.",
                "If (cow) format is used, disk will by created as sparse, so space will be allocated for the volume as needed, also known as I(thin provision).",
                "If (raw) format is used, disk storage will be allocated right away, also known as I(preallocated).",
                "Note that this option isn't idempotent as it's not currently possible to change format of the disk via API."
            ],
            "choices": [
                "raw",
                "cow"
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "logical_unit": {
            "description": [
                "Dictionary which describes LUN to be directly attached to VM:",
                "C(address) - Address of the storage server. Used by iSCSI.",
                "C(port) - Port of the storage server. Used by iSCSI.",
                "C(target) - iSCSI target.",
                "C(lun_id) - LUN id.",
                "C(username) - CHAP Username to be used to access storage server. Used by iSCSI.",
                "C(password) - CHAP Password of the user to be used to access storage server. Used by iSCSI.",
                "C(storage_type) - Storage type either I(fcp) or I(iscsi)."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "download_image_path": {
            "description": [
                "Path on a file system where disk should be downloaded.",
                "Note that you must have an valid oVirt engine CA in your system trust store or you must provide it in C(ca_file) parameter.",
                "Note that the disk is not downloaded when the file already exists, but you can forcibly download the disk when using C(force) I (true)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "interface": {
            "default": "virtio",
            "description": [
                "Driver of the storage interface."
            ],
            "choices": [
                "virtio",
                "ide",
                "virtio_scsi"
            ]
        },
        "vm_id": {
            "description": [
                "ID of the Virtual Machine to manage. Either C(vm_id) or C(vm_name) is required if C(state) is I(attached) or I(detached)."
            ]
        },
        "id": {
            "description": [
                "ID of the disk to manage. Either C(id) or C(name) is required."
            ]
        },
        "size": {
            "description": [
                "Size of the disk. Size should be specified using IEC standard units. For example 10GiB, 1024MiB, etc.",
                "Size can be only increased, not decreased."
            ]
        },
        "storage_domain": {
            "description": [
                "Storage domain name where disk should be created. By default storage is chosen by oVirt engine."
            ]
        },
        "name": {
            "description": [
                "Name of the disk to manage. Either C(id) or C(name)/C(alias) is required."
            ],
            "aliases": [
                "alias"
            ]
        },
        "bootable": {
            "description": [
                "I(True) if the disk should be bootable. By default when disk is created it isn't bootable."
            ]
        },
        "upload_image_path": {
            "description": [
                "Path to disk image, which should be uploaded.",
                "Note that currently we support only compability version 0.10 of the qcow disk.",
                "Note that you must have an valid oVirt engine CA in your system trust store or you must provide it in C(ca_file) parameter.",
                "Note that there is no reliable way to achieve idempotency, so if you want to upload the disk even if the disk with C(id) or C(name) exists, then please use C(force) I(true). If you will use C(force) I(false), which is default, then the disk image won't be uploaded."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the Virtual Machine disk be present/absent/attached/detached."
            ],
            "choices": [
                "present",
                "absent",
                "attached",
                "detached"
            ]
        },
        "shareable": {
            "description": [
                "I(True) if the disk should be shareable. By default when disk is created it isn't shareable."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_disks"
}, {
    "short_description": "Module to manage external providers in oVirt",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Username to be used for login to external provider.",
                "Applicable for all types."
            ]
        },
        "read_only": {
            "description": [
                "Specify if the network should be read only.",
                "Applicable if C(type) is I(network)."
            ]
        },
        "name": {
            "description": [
                "Name of the the external provider to manage."
            ]
        },
        "url": {
            "description": [
                "URL where external provider is hosted.",
                "Applicable for those types: I(os_image), I(os_volume), I(network) and I(foreman)."
            ]
        },
        "tenant_name": {
            "description": [
                "Name of the tenant.",
                "Applicable for those types: I(os_image), I(os_volume) and I(network)."
            ],
            "aliases": [
                "tenant"
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the external be present or absent"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "authentication_url": {
            "description": [
                "Keystone authentication URL of the openstack provider.",
                "Applicable for those types: I(os_image), I(os_volume) and I(network)."
            ],
            "aliases": [
                "auth_url"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "data_center": {
            "description": [
                "Name of the data center where provider should be attached.",
                "Applicable for those type: I(os_volume)."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "password": {
            "description": [
                "Password of the user specified in C(username) parameter.",
                "Applicable for all types."
            ]
        },
        "type": {
            "description": [
                "Type of the external provider."
            ],
            "choices": [
                "os_image",
                "network",
                "os_volume",
                "foreman"
            ]
        },
        "network_type": {
            "default": [
                "external"
            ],
            "description": [
                "Type of the external network provider either external (for example OVN) or neutron.",
                "Applicable if C(type) is I(network)."
            ],
            "choices": [
                "external",
                "neutron"
            ]
        },
        "description": {
            "description": [
                "Description of the external provider."
            ]
        }
    },
    "module": "ovirt_external_providers"
}, {
    "short_description": "Retrieve facts about one or more oVirt external providers",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "type": {
            "required": true,
            "description": [
                "Type of the external provider."
            ],
            "choices": [
                "os_image",
                "os_network",
                "os_volume",
                "foreman"
            ]
        },
        "name": {
            "description": [
                "Name of the external provider, can be used as glob expression."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_external_providers_facts"
}, {
    "short_description": "Module to manage groups in oVirt",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the the group to manage."
            ]
        },
        "namespace": {
            "required": false,
            "description": [
                "Namespace of the authorization provider, where group resides."
            ]
        },
        "authz_name": {
            "required": true,
            "description": [
                "Authorization provider of the group. In previous versions of oVirt known as domain."
            ],
            "aliases": [
                "domain"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the group be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_groups"
}, {
    "short_description": "Retrieve facts about one or more oVirt groups",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search group X use following pattern: name=X"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_groups_facts"
}, {
    "short_description": "Module to manage host networks in oVirt",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the the host to manage networks for."
            ]
        },
        "labels": {
            "description": [
                "List of names of the network label to be assigned to bond or interface."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "networks": {
            "description": [
                "List of dictionary describing networks to be attached to interface or bond:",
                "C(name) - Name of the logical network to be assigned to bond or interface.",
                "C(boot_protocol) - Boot protocol one of the I(none), I(static) or I(dhcp).",
                "C(address) - IP address in case of I(static) boot protocol is used.",
                "C(prefix) - Routing prefix in case of I(static) boot protocol is used.",
                "C(gateway) - Gateway in case of I(static) boot protocol is used.",
                "C(version) - IP version. Either v4 or v6. Default is v4."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the host be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "interface": {
            "description": [
                "Name of the network interface where logical network should be attached."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "save": {
            "description": [
                "If I(true) network configuration will be persistent, by default they are temporary."
            ]
        },
        "check": {
            "description": [
                "If I(true) verify connectivity between host and engine.",
                "Network configuration changes will be rolled back if connectivity between engine and the host is lost after changing network configuration."
            ]
        },
        "bond": {
            "description": [
                "Dictionary describing network bond:",
                "C(name) - Bond name.",
                "C(mode) - Bonding mode.",
                "C(interfaces) - List of interfaces to create a bond."
            ]
        }
    },
    "module": "ovirt_host_networks"
}, {
    "short_description": "Module to manage power management of hosts in oVirt",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Username to be used to connect to power management interface."
            ]
        },
        "slot": {
            "description": [
                "Power management slot."
            ]
        },
        "password": {
            "description": [
                "Password of the user specified in C(username) parameter."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the host to manage."
            ],
            "aliases": [
                "host"
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "order": {
            "description": [
                "Integer value specifying, by default it's added at the end."
            ]
        },
        "port": {
            "description": [
                "Power management interface port."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the host be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "address": {
            "description": [
                "Address of the power management interface."
            ]
        },
        "encrypt_options": {
            "description": [
                "If (true) options will be encrypted when send to agent."
            ],
            "aliases": [
                "encrypt"
            ]
        },
        "type": {
            "description": [
                "Type of the power management. oVirt predefined values are I(drac5), I(ipmilan), I(rsa), I(bladecenter), I(alom), I(apc), I(apc_snmp), I(eps), I(wti), I(rsb), I(cisco_ucs), I(drac7), I(hpblade), I(ilo), I(ilo2), I(ilo3), I(ilo4), I(ilo_ssh), but user can have defined custom type."
            ]
        },
        "options": {
            "description": [
                "Dictionary of additional fence agent options.",
                "Additional information about options can be found at U(https://fedorahosted.org/cluster/wiki/FenceArguments)."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_host_pm"
}, {
    "short_description": "Module to manage hosts in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Description of the host."
            ]
        },
        "public_key": {
            "default": false,
            "description": [
                "I(True) if the public key should be used to authenticate to host.",
                "It's required in case C(password) is not set."
            ],
            "aliases": [
                "ssh_public_key"
            ]
        },
        "password": {
            "description": [
                "Password of the root. It's required in case C(public_key) is set to I(False)."
            ]
        },
        "force": {
            "default": false,
            "description": [
                "If True host will be forcibly moved to desired state."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the host to manage."
            ]
        },
        "cluster": {
            "description": [
                "Name of the cluster, where host should be created."
            ]
        },
        "spm_priority": {
            "description": [
                "SPM priority of the host. Integer value from 1 to 10, where higher number means higher priority."
            ]
        },
        "address": {
            "description": [
                "Host address. It can be either FQDN (preferred) or IP address."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "kernel_params": {
            "description": [
                "List of kernel boot parameters.",
                "Following are most common kernel parameters used for host:",
                "Hostdev Passthrough & SR-IOV: intel_iommu=on",
                "Nested Virtualization: kvm-intel.nested=1",
                "Unsafe Interrupts: vfio_iommu_type1.allow_unsafe_interrupts=1",
                "PCI Reallocation: pci=realloc",
                "C(Note:)",
                "Modifying kernel boot parameters settings can lead to a host boot failure. Please consult the product documentation before doing any changes.",
                "Kernel boot parameters changes require host deploy and restart. The host needs to be I(reinstalled) suceesfully and then to be I(rebooted) for kernel boot parameters to be applied."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "State which should a host to be in after successful completion."
            ],
            "choices": [
                "present",
                "absent",
                "maintenance",
                "upgraded",
                "started",
                "restarted",
                "stopped",
                "reinstalled"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "hosted_engine": {
            "description": [
                "If I(deploy) it means this host should deploy also hosted engine components.",
                "If I(undeploy) it means this host should un-deploy hosted engine components and this host will not function as part of the High Availability cluster."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "override_iptables": {
            "description": [
                "If True host iptables will be overridden by host deploy script.",
                "Note that C(override_iptables) is I(false) by default in oVirt."
            ]
        },
        "kdump_integration": {
            "default": "enabled",
            "description": [
                "Specify if host will have enabled Kdump integration."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "override_display": {
            "description": [
                "Override the display address of all VMs on this host with specified address."
            ]
        }
    },
    "module": "ovirt_hosts"
}, {
    "short_description": "Retrieve facts about one or more oVirt hosts",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search host X from datacenter Y use following pattern: name=X and datacenter=Y"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_hosts_facts"
}, {
    "short_description": "Module to manage MAC pools in oVirt",
    "deprecated": null,
    "options": {
        "ranges": {
            "description": [
                "List of MAC ranges. The from and to should be splitted by comma.",
                "For example: 00:1a:4a:16:01:51,00:1a:4a:16:01:61"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the MAC pool to manage."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "allow_duplicates": {
            "description": [
                "If (true) allow a MAC address to be used multiple times in a pool.",
                "Default value is set by oVirt engine to I(false)."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the mac pool be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "description": {
            "description": [
                "Description of the MAC pool."
            ]
        }
    },
    "module": "ovirt_mac_pools"
}, {
    "short_description": "Module to manage logical networks in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Comment of the network."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "description": {
            "description": [
                "Description of the network."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "mtu": {
            "description": [
                "Maximum transmission unit (MTU) of the network."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the network be present or absent"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "vm_network": {
            "description": [
                "If I(True) network will be marked as network for VM.",
                "VM network carries traffic relevant to the virtual machine."
            ]
        },
        "data_center": {
            "description": [
                "Datacenter name where network reside."
            ]
        },
        "clusters": {
            "description": [
                "List of dictionaries describing how the network is managed in specific cluster.",
                "C(name) - Cluster name.",
                "C(assigned) - I(true) if the network should be assigned to cluster. Default is I(true).",
                "C(required) - I(true) if the network must remain operational for all hosts associated with this network.",
                "C(display) - I(true) if the network should marked as display network.",
                "C(migration) - I(true) if the network should marked as migration network.",
                "C(gluster) - I(true) if the network should marked as gluster network."
            ]
        },
        "vlan_tag": {
            "description": [
                "Specify VLAN tag."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the network to manage."
            ]
        }
    },
    "module": "ovirt_networks"
}, {
    "short_description": "Retrieve facts about one or more oVirt networks",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search network starting with string vlan1 use: name=vlan1*"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_networks_facts"
}, {
    "short_description": "Module to manage network interfaces of Virtual Machines in oVirt",
    "deprecated": null,
    "options": {
        "profile": {
            "description": [
                "Virtual network interface profile to be attached to VM network interface."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "network": {
            "description": [
                "Logical network to which the VM network interface should use, by default Empty network is used if network is not specified."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "vm": {
            "required": true,
            "description": [
                "Name of the Virtual Machine to manage."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the Virtual Machine NIC be present/absent/plugged/unplugged."
            ],
            "choices": [
                "present",
                "absent",
                "plugged",
                "unplugged"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "mac_address": {
            "description": [
                "Custom MAC address of the network interface, by default it's obtained from MAC pool."
            ]
        },
        "interface": {
            "default": "virtio",
            "description": [
                "Type of the network interface."
            ],
            "choices": [
                "virtio",
                "e1000",
                "rtl8139",
                "pci_passthrough",
                "rtl8139_virtio",
                "spapr_vlan"
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the network interface to manage."
            ]
        }
    },
    "module": "ovirt_nics"
}, {
    "short_description": "Retrieve facts about one or more oVirt virtual machine network interfaces",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "vm": {
            "required": true,
            "description": [
                "Name of the VM where NIC is attached."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "name": {
            "description": [
                "Name of the NIC, can be used as glob expression."
            ]
        }
    },
    "module": "ovirt_nics_facts"
}, {
    "short_description": "Module to manage permissions of users/groups in oVirt",
    "deprecated": null,
    "options": {
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "authz_name": {
            "required": true,
            "description": [
                "Authorization provider of the user/group. In previous versions of oVirt known as domain."
            ],
            "aliases": [
                "domain"
            ]
        },
        "object_type": {
            "default": "vm",
            "description": [
                "The object where the permissions should be managed."
            ],
            "choices": [
                "data_center",
                "cluster",
                "host",
                "storage_domain",
                "network",
                "disk",
                "vm",
                "vm_pool",
                "template",
                "cpu_profile",
                "disk_profile",
                "vnic_profile",
                "system"
            ]
        },
        "namespace": {
            "required": false,
            "description": [
                "Namespace of the authorization provider, where user/group resides."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the permission be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "object_id": {
            "description": [
                "ID of the object where the permissions should be managed."
            ]
        },
        "group_name": {
            "description": [
                "Name of the the group to manage.",
                "Note that if group don't exist in the system this module will fail, you should ensure the group exists by using M(ovirt_groups) module."
            ]
        },
        "object_name": {
            "description": [
                "Name of the object where the permissions should be managed."
            ]
        },
        "role": {
            "default": "UserRole",
            "description": [
                "Name of the the role to be assigned to user/group on specific object."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "user_name": {
            "description": [
                "Username of the the user to manage. In most LDAPs it's I(uid) of the user, but in Active Directory you must specify I(UPN) of the user.",
                "Note that if user don't exist in the system this module will fail, you should ensure the user exists by using M(ovirt_users) module."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_permissions"
}, {
    "short_description": "Retrieve facts about one or more oVirt permissions",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "user_name": {
            "description": [
                "Username of the the user to manage. In most LDAPs it's I(uid) of the user, but in Active Directory you must specify I(UPN) of the user."
            ]
        },
        "authz_name": {
            "required": true,
            "description": [
                "Authorization provider of the user/group. In previous versions of oVirt known as domain."
            ],
            "aliases": [
                "domain"
            ]
        },
        "namespace": {
            "required": false,
            "description": [
                "Namespace of the authorization provider, where user/group resides."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "group_name": {
            "description": [
                "Name of the the group to manage."
            ]
        }
    },
    "module": "ovirt_permissions_facts"
}, {
    "short_description": "Module to manage datacenter quotas in oVirt",
    "deprecated": null,
    "options": {
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "description": {
            "description": [
                "Description of the the quota to manage."
            ]
        },
        "cluster_grace": {
            "description": [
                "Cluster grace(hard limit) defined in percentage (1-100)."
            ]
        },
        "cluster_threshold": {
            "description": [
                "Cluster threshold(soft limit) defined in percentage (0-100)."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the quota be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "storage_grace": {
            "description": [
                "Storage grace(hard limit) defined in percentage (1-100)."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "storage_threshold": {
            "description": [
                "Storage threshold(soft limit) defined in percentage (0-100)."
            ]
        },
        "data_center": {
            "required": true,
            "description": [
                "Name of the datacenter where quota should be managed."
            ]
        },
        "clusters": {
            "description": [
                "List of dictionary of cluster limits, which is valid to specific cluster.",
                "If cluster isn't spefied it's valid to all clusters in system:",
                "C(cluster) - Name of the cluster.",
                "C(memory) - Memory limit (in GiB).",
                "C(cpu) - CPU limit."
            ]
        },
        "storages": {
            "description": [
                "List of dictionary of storage limits, which is valid to specific storage.",
                "If storage isn't spefied it's valid to all storages in system:",
                "C(storage) - Name of the storage.",
                "C(size) - Size limit (in GiB)."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the quota to manage."
            ]
        }
    },
    "module": "ovirt_quotas"
}, {
    "short_description": "Retrieve facts about one or more oVirt quotas",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "name": {
            "description": [
                "Name of the quota, can be used as glob expression."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "data_center": {
            "required": true,
            "description": [
                "Name of the datacenter where quota resides."
            ]
        }
    },
    "module": "ovirt_quotas_facts"
}, {
    "short_description": "Module to manage Virtual Machine Snapshots in oVirt",
    "deprecated": null,
    "options": {
        "vm_name": {
            "required": true,
            "description": [
                "Name of the Virtual Machine to manage."
            ]
        },
        "description": {
            "description": [
                "Description of the snapshot."
            ]
        },
        "use_memory": {
            "description": [
                "If I(true) and C(state) is I(present) save memory of the Virtual Machine if it's running.",
                "If I(true) and C(state) is I(restore) restore memory of the Virtual Machine.",
                "Note that Virtual Machine will be paused while saving the memory."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the Virtual Machine snapshot be restore/present/absent."
            ],
            "choices": [
                "restore",
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "snapshot_id": {
            "description": [
                "ID of the snapshot to manage."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_snapshots"
}, {
    "short_description": "Retrieve facts about one or more oVirt virtual machine snapshots",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "description": {
            "description": [
                "Description of the snapshot, can be used as glob expression."
            ]
        },
        "snapshot_id": {
            "description": [
                "Id of the snaphost we want to retrieve facts about."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "vm": {
            "required": true,
            "description": [
                "Name of the VM with snapshot."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_snapshots_facts"
}, {
    "short_description": "Module to manage storage domains in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Comment of the storage domain."
            ]
        },
        "domain_function": {
            "default": "data",
            "choices": [
                "data",
                "iso",
                "export"
            ],
            "description": [
                "Function of the storage domain.",
                "This parameter isn't idempotent, it's not possible to change domain function of storage domain."
            ],
            "aliases": [
                "type"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "fcp": {
            "description": [
                "Dictionary with values for fibre channel storage type:",
                "C(address) - Address of the fibre channel storage server.",
                "C(port) - Port of the fibre channel storage server.",
                "C(lun_id) - LUN id.",
                "Note that these parameters are not idempotent."
            ]
        },
        "name": {
            "description": [
                "Name of the the storage domain to manage."
            ]
        },
        "format": {
            "description": [
                "If I(True) storage domain will be formatted after removing it from oVirt.",
                "This parameter is relevant only when C(state) is I(absent)."
            ]
        },
        "iscsi": {
            "description": [
                "Dictionary with values for iSCSI storage type:",
                "C(address) - Address of the iSCSI storage server.",
                "C(port) - Port of the iSCSI storage server.",
                "C(target) - The target IQN for the storage device.",
                "C(lun_id) - LUN id.",
                "C(username) - A CHAP user name for logging into a target.",
                "C(password) - A CHAP password for logging into a target.",
                "C(override_luns) - If I(True) ISCSI storage domain luns will be overriden before adding.",
                "Note that these parameters are not idempotent."
            ]
        },
        "posixfs": {
            "description": [
                "Dictionary with values for PosixFS storage type:",
                "C(path) - Path of the mount point. E.g.: /path/to/my/data",
                "C(vfs_type) - Virtual File System type.",
                "C(mount_options) - Option which will be passed when mounting storage.",
                "Note that these parameters are not idempotent."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "host": {
            "description": [
                "Host to be used to mount storage."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "glusterfs": {
            "description": [
                "Dictionary with values for GlusterFS storage type:",
                "C(address) - Address of the Gluster server. E.g.: myserver.mydomain.com",
                "C(path) - Path of the mount point. E.g.: /path/to/my/data",
                "C(mount_options) - Option which will be passed when mounting storage.",
                "Note that these parameters are not idempotent."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the storage domain be present/absent/maintenance/unattached"
            ],
            "choices": [
                "present",
                "absent",
                "maintenance",
                "unattached"
            ]
        },
        "nfs": {
            "description": [
                "Dictionary with values for NFS storage type:",
                "C(address) - Address of the NFS server. E.g.: myserver.mydomain.com",
                "C(path) - Path of the mount point. E.g.: /path/to/my/data",
                "C(version) - NFS version. One of: I(auto), I(v3), I(v4) or I(v4_1).",
                "C(timeout) - The time in tenths of a second to wait for a response before retrying NFS requests. Range 0 to 65535.",
                "C(retrans) - The number of times to retry a request before attempting further recovery actions. Range 0 to 65535.",
                "Note that these parameters are not idempotent."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "data_center": {
            "description": [
                "Data center name where storage domain should be attached.",
                "This parameter isn't idempotent, it's not possible to change data center of storage domain."
            ]
        },
        "destroy": {
            "description": [
                "Logical remove of the storage domain. If I(true) retains the storage domain's data for import.",
                "This parameter is relevant only when C(state) is I(absent)."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "description": {
            "description": [
                "Description of the storage domain."
            ]
        }
    },
    "module": "ovirt_storage_domains"
}, {
    "short_description": "Retrieve facts about one or more oVirt storage domains",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search storage domain X from datacenter Y use following pattern: name=X and datacenter=Y"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_storage_domains_facts"
}, {
    "short_description": "Module to manage tags in oVirt",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the the tag to manage."
            ]
        },
        "parent": {
            "description": [
                "Name of the parent tag."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the tag be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "hosts": {
            "description": [
                "List of the hosts names, which should have assigned this tag."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "vms": {
            "description": [
                "List of the VMs names, which should have assigned this tag."
            ]
        },
        "description": {
            "description": [
                "Description of the the tag to manage."
            ]
        }
    },
    "module": "ovirt_tags"
}, {
    "short_description": "Retrieve facts about one or more oVirt tags",
    "deprecated": null,
    "options": {
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "name": {
            "description": [
                "Name of the tag which should be listed."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "vm": {
            "description": [
                "Name of the VM, which tags should be listed."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "host": {
            "description": [
                "Name of the host, which tags should be listed."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_tags_facts"
}, {
    "short_description": "Module to manage virtual machine templates in oVirt",
    "deprecated": null,
    "options": {
        "exclusive": {
            "description": [
                "When C(state) is I(exported) this parameter indicates if the existing templates with the same name should be overwritten."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "cpu_profile": {
            "description": [
                "CPU profile to be set to template."
            ]
        },
        "storage_domain": {
            "description": [
                "When C(state) is I(imported) this parameter specifies the name of the destination data storage domain."
            ]
        },
        "description": {
            "description": [
                "Description of the template."
            ]
        },
        "export_domain": {
            "description": [
                "When C(state) is I(exported) or I(imported) this parameter specifies the name of the export storage domain."
            ]
        },
        "image_disk": {
            "description": [
                "When C(state) is I(imported) and C(image_provider) is used this parameter specifies the name of disk to be imported as template."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "vm": {
            "description": [
                "Name of the VM, which will be used to create template."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the template to manage."
            ]
        },
        "cluster": {
            "description": [
                "Name of the cluster, where template should be created/imported."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the template be present/absent/exported/imported"
            ],
            "choices": [
                "present",
                "absent",
                "exported",
                "imported"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "clone_permissions": {
            "default": false,
            "description": [
                "If I(True) then the permissions of the VM (only the direct ones, not the inherited ones) will be copied to the created template.",
                "This parameter is used only when C(state) I(present)."
            ]
        },
        "image_provider": {
            "description": [
                "When C(state) is I(imported) this parameter specifies the name of the image provider to be used."
            ]
        }
    },
    "module": "ovirt_templates"
}, {
    "short_description": "Retrieve facts about one or more oVirt templates",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search template X from datacenter Y use following pattern: name=X and datacenter=Y"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_templates_facts"
}, {
    "short_description": "Module to manage users in oVirt",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the the user to manage. In most LDAPs it's I(uid) of the user, but in Active Directory you must specify I(UPN) of the user."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "authz_name": {
            "required": true,
            "description": [
                "Authorization provider of the user. In previous versions of oVirt known as domain."
            ],
            "aliases": [
                "domain"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "description": [
                "Should the user be present/absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        }
    },
    "module": "ovirt_users"
}, {
    "short_description": "Retrieve facts about one or more oVirt users",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search user X use following pattern: name=X"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_users_facts"
}, {
    "short_description": "Module to manage VM pools in oVirt",
    "deprecated": null,
    "options": {
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the the VM pool to manage."
            ]
        },
        "description": {
            "description": [
                "Description of the VM pool."
            ]
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "vm_per_user": {
            "description": [
                "Maximum number of VMs a single user can attach to from this pool.",
                "Default value is set by engine."
            ]
        },
        "cluster": {
            "description": [
                "Name of the cluster, where VM pool should be created."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the VM pool be present/absent.",
                "Note that when C(state) is I(absent) all VMs in VM pool are stopped and removed."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "prestarted": {
            "description": [
                "Number of pre-started VMs defines the number of VMs in run state, that are waiting to be attached to Users.",
                "Default value is set by engine."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "template": {
            "description": [
                "Name of the template, which will be used to create VM pool."
            ]
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "type": {
            "description": [
                "Type of the VM pool. Either manual or automatic.",
                "C(manual) - The administrator is responsible for explicitly returning the virtual machine to the pool. The virtual machine reverts to the original base image after the administrator returns it to the pool.",
                "C(Automatic) - When the virtual machine is shut down, it automatically reverts to its base image and is returned to the virtual machine pool.",
                "Default value is set by engine."
            ],
            "choices": [
                "manual",
                "automatic"
            ]
        },
        "vm_count": {
            "description": [
                "Number of VMs in the pool.",
                "Default value is set by engine."
            ]
        }
    },
    "module": "ovirt_vmpools"
}, {
    "short_description": "Retrieve facts about one or more oVirt vmpools",
    "deprecated": null,
    "options": {
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search vmpool X: name=X"
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        }
    },
    "module": "ovirt_vmpools_facts"
}, {
    "short_description": "Module to manage Virtual Machines in oVirt",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Comment of the Virtual Machine."
            ],
            "version_added": "2.3"
        },
        "disks": {
            "description": [
                "List of disks, which should be attached to Virtual Machine. Disk is described by following dictionary:",
                "C(name) - Name of the disk. Either C(name) or C(id) is reuqired.",
                "C(id) - ID of the disk. Either C(name) or C(id) is reuqired.",
                "C(interface) - Interface of the disk, either I(virtio) or I(IDE), default is I(virtio).",
                "C(bootable) - I(True) if the disk should be bootable, default is non bootable.",
                "C(activate) - I(True) if the disk should be activated, default is activated.",
                "C(Note:)",
                "This parameter is used only when C(state) is I(running) or I(present) and is able to only attach disks. To manage disks of the VM in more depth please use M(ovirt_disks) module instead."
            ]
        },
        "force": {
            "default": false,
            "description": [
                "Please check to I(Synopsis) to more detailed description of force parameter, it can behave differently in different situations."
            ]
        },
        "cloud_init_nics": {
            "description": [
                "List of dictionaries representing network interafaces to be setup by cloud init.",
                "This option is used, when user needs to setup more network interfaces via cloud init.",
                "If one network interface is enough, user should use C(cloud_init) I(nic_*) parameters. C(cloud_init) I(nic_*) parameters are merged with C(cloud_init_nics) parameters.",
                "Dictionary can contain following values:",
                "C(nic_boot_protocol) - Set boot protocol of the network interface of Virtual Machine. Can be one of none, dhcp or static.",
                "C(nic_ip_address) - If boot protocol is static, set this IP address to network interface of Virtual Machine.",
                "C(nic_netmask) - If boot protocol is static, set this netmask to network interface of Virtual Machine.",
                "C(nic_gateway) - If boot protocol is static, set this gateway to network interface of Virtual Machine.",
                "C(nic_name) - Set name to network interface of Virtual Machine.",
                "C(nic_on_boot) - If I(True) network interface will be set to start on boot."
            ],
            "version_added": "2.3"
        },
        "cluster": {
            "description": [
                "Name of the cluster, where Virtual Machine should be created. Required if creating VM."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "timezone": {
            "description": [
                "Sets time zone offset of the guest hardware clock.",
                "For example: Etc/GMT"
            ],
            "version_added": "2.3"
        },
        "id": {
            "description": [
                "ID of the the Virtual Machine to manage."
            ]
        },
        "cpu_sockets": {
            "description": [
                "Number of virtual CPUs sockets of the Virtual Machine. Default value is set by oVirt engine."
            ]
        },
        "high_availability": {
            "description": [
                "If I(True) Virtual Machine will be set as highly available.",
                "If I(False) Virtual Machine won't be set as highly available.",
                "If no value is passed, default value is set by oVirt engine."
            ]
        },
        "kernel_params": {
            "description": [
                "Kernel command line parameters (formatted as string) to be used with the kernel specified by C(kernel_path) option."
            ],
            "version_added": "2.3"
        },
        "nics": {
            "description": [
                "List of NICs, which should be attached to Virtual Machine. NIC is described by following dictionary:",
                "C(name) - Name of the NIC.",
                "C(profile_name) - Profile name where NIC should be attached.",
                "C(interface) -  Type of the network interface. One of following: I(virtio), I(e1000), I(rtl8139), default is I(virtio).",
                "C(mac_address) - Custom MAC address of the network interface, by default it's obtained from MAC pool.",
                "C(Note:)",
                "This parameter is used only when C(state) is I(running) or I(present) and is able to only create NICs. To manage NICs of the VM in more depth please use M(ovirt_nics) module instead."
            ]
        },
        "sysprep": {
            "description": [
                "Dictionary with values for Windows Virtual Machine initialization using sysprep:",
                "C(host_name) - Hostname to be set to Virtual Machine when deployed.",
                "C(active_directory_ou) - Active Directory Organizational Unit, to be used for login of user.",
                "C(org_name) - Organization name to be set to Windows Virtual Machine.",
                "C(domain) - Domain to be set to Windows Virtual Machine.",
                "C(timezone) - Timezone to be set to Windows Virtual Machine.",
                "C(ui_language) - UI language of the Windows Virtual Machine.",
                "C(system_locale) - System localization of the Windows Virtual Machine.",
                "C(input_locale) - Input localization of the Windows Virtual Machine.",
                "C(windows_license_key) - License key to be set to Windows Virtual Machine.",
                "C(user_name) - Username to be used for set password to Windows Virtual Machine.",
                "C(root_password) - Password to be set for username to Windows Virtual Machine."
            ]
        },
        "cpu_cores": {
            "description": [
                "Number of virtual CPUs cores of the Virtual Machine. Default value is set by oVirt engine."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Should the Virtual Machine be running/stopped/present/absent/suspended/next_run.",
                "I(present) and I(running) are equal states.",
                "I(next_run) state updates the VM and if the VM has next run configuration it will be rebooted.",
                "Please check I(notes) to more detailed description of states."
            ],
            "choices": [
                "running",
                "stopped",
                "present",
                "absent",
                "suspended",
                "next_run"
            ]
        },
        "memory_guaranteed": {
            "description": [
                "Amount of minimal guaranteed memory of the Virtual Machine. Prefix uses IEC 60027-2 standard (for example 1GiB, 1024MiB).",
                "C(memory_guaranteed) parameter can't be lower than C(memory) parameter. Default value is set by engine."
            ]
        },
        "delete_protected": {
            "description": [
                "If I(True) Virtual Machine will be set as delete protected.",
                "If I(False) Virtual Machine won't be set as delete protected.",
                "If no value is passed, default value is set by oVirt engine."
            ]
        },
        "memory": {
            "description": [
                "Amount of memory of the Virtual Machine. Prefix uses IEC 60027-2 standard (for example 1GiB, 1024MiB).",
                "Default value is set by engine."
            ]
        },
        "cd_iso": {
            "description": [
                "ISO file from ISO storage domain which should be attached to Virtual Machine.",
                "If you pass empty string the CD will be ejected from VM.",
                "If used with C(state) I(running) or I(present) and VM is running the CD will be attached to VM.",
                "If used with C(state) I(running) or I(present) and VM is down the CD will be attached to VM persistently."
            ]
        },
        "clone_permissions": {
            "default": false,
            "description": [
                "If I(True) then the permissions of the template (only the direct ones, not the inherited ones) will be copied to the created virtual machine.",
                "This parameter is used only when C(state) is I(running) or I(present) and VM didn't exist before."
            ]
        },
        "type": {
            "description": [
                "Type of the Virtual Machine. Default value is set by oVirt engine."
            ],
            "choices": [
                "server",
                "desktop"
            ]
        },
        "initrd_path": {
            "description": [
                "Path to an initial ramdisk to be used with the kernel specified by C(kernel_path) option.",
                "Ramdisk image must be stored on either the ISO domain or on the host's storage."
            ],
            "version_added": "2.3"
        },
        "description": {
            "description": [
                "Description of the Virtual Machine."
            ],
            "version_added": "2.3"
        },
        "clone": {
            "default": false,
            "description": [
                "If I(True) then the disks of the created virtual machine will be cloned and independent of the template.",
                "This parameter is used only when C(state) is I(running) or I(present) and VM didn't exist before."
            ]
        },
        "boot_devices": {
            "description": [
                "List of boot devices which should be used to boot. Choices I(network), I(hd) and I(cdrom).",
                "For example: ['cdrom', 'hd']. Default value is set by oVirt engine."
            ]
        },
        "template": {
            "description": [
                "Name of the template, which should be used to create Virtual Machine. Required if creating VM.",
                "If template is not specified and VM doesn't exist, VM will be created from I(Blank) template."
            ]
        },
        "host": {
            "description": [
                "Specify host where Virtual Machine should be running. By default the host is chosen by engine scheduler.",
                "This parameter is used only when C(state) is I(running) or I(present)."
            ]
        },
        "serial_policy": {
            "description": [
                "Specify a serial number policy for the Virtual Machine.",
                "Following options are supported:",
                "C(vm) - Sets the Virtual Machine's UUID as its serial number.",
                "C(host) - Sets the host's UUID as the Virtual Machine's serial number.",
                "C(custom) - Allows you to specify a custom serial number in C(serial_policy_value)."
            ],
            "version_added": "2.3"
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "wait": {
            "description": [
                "I(True) if the module should wait for the entity to get into desired state."
            ]
        },
        "use_latest_template_version": {
            "description": [
                "Specify if latest template version should be used, when running a stateless VM.",
                "If this parameter is set to I(true) stateless VM is created."
            ],
            "version_added": "2.3"
        },
        "stateless": {
            "description": [
                "If I(True) Virtual Machine will be set as stateless.",
                "If I(False) Virtual Machine will be unset as stateless.",
                "If no value is passed, default value is set by oVirt engine."
            ]
        },
        "operating_system": {
            "description": [
                "Operating system of the Virtual Machine. Default value is set by oVirt engine."
            ],
            "choices": [
                "rhel_6_ppc64",
                "other",
                "freebsd",
                "windows_2003x64",
                "windows_10",
                "rhel_6x64",
                "rhel_4x64",
                "windows_2008x64",
                "windows_2008R2x64",
                "debian_7",
                "windows_2012x64",
                "ubuntu_14_04",
                "ubuntu_12_04",
                "ubuntu_13_10",
                "windows_8x64",
                "other_linux_ppc64",
                "windows_2003",
                "other_linux",
                "windows_10x64",
                "windows_2008",
                "rhel_3",
                "rhel_5",
                "rhel_4",
                "other_ppc64",
                "sles_11",
                "rhel_6",
                "windows_xp",
                "rhel_7x64",
                "freebsdx64",
                "rhel_7_ppc64",
                "windows_7",
                "rhel_5x64",
                "ubuntu_14_04_ppc64",
                "sles_11_ppc64",
                "windows_8",
                "windows_2012R2x64",
                "windows_2008r2x64",
                "ubuntu_13_04",
                "ubuntu_12_10",
                "windows_7x64"
            ]
        },
        "serial_policy_value": {
            "description": [
                "Allows you to specify a custom serial number.",
                "This parameter is used only when C(serial_policy) is I(custom)."
            ],
            "version_added": "2.3"
        },
        "name": {
            "description": [
                "Name of the the Virtual Machine to manage. If VM don't exists C(name) is required. Otherwise C(id) or C(name) can be used."
            ]
        },
        "kernel_path": {
            "description": [
                "Path to a kernel image used to boot the virtual machine.",
                "Kernel image must be stored on either the ISO domain or on the host's storage."
            ],
            "version_added": "2.3"
        },
        "cloud_init": {
            "description": [
                "Dictionary with values for Unix-like Virtual Machine initialization using cloud init:",
                "C(host_name) - Hostname to be set to Virtual Machine when deployed.",
                "C(timezone) - Timezone to be set to Virtual Machine when deployed.",
                "C(user_name) - Username to be used to set password to Virtual Machine when deployed.",
                "C(root_password) - Password to be set for user specified by C(user_name) parameter.",
                "C(authorized_ssh_keys) - Use this SSH keys to login to Virtual Machine.",
                "C(regenerate_ssh_keys) - If I(True) SSH keys will be regenerated on Virtual Machine.",
                "C(custom_script) - Cloud-init script which will be executed on Virtual Machine when deployed.",
                "C(dns_servers) - DNS servers to be configured on Virtual Machine.",
                "C(dns_search) - DNS search domains to be configured on Virtual Machine.",
                "C(nic_boot_protocol) - Set boot protocol of the network interface of Virtual Machine. Can be one of none, dhcp or static.",
                "C(nic_ip_address) - If boot protocol is static, set this IP address to network interface of Virtual Machine.",
                "C(nic_netmask) - If boot protocol is static, set this netmask to network interface of Virtual Machine.",
                "C(nic_gateway) - If boot protocol is static, set this gateway to network interface of Virtual Machine.",
                "C(nic_name) - Set name to network interface of Virtual Machine.",
                "C(nic_on_boot) - If I(True) network interface will be set to start on boot."
            ]
        },
        "template_version": {
            "description": [
                "Version number of the template to be used for VM.",
                "By default the latest available version of the template is used."
            ],
            "version_added": "2.3"
        },
        "poll_interval": {
            "default": 3,
            "description": [
                "Number of the seconds the module waits until another poll request on entity status is sent."
            ]
        },
        "instance_type": {
            "description": [
                "Name of virtual machine's hardware configuration.",
                "By default no instance type is used."
            ],
            "version_added": "2.3"
        },
        "timeout": {
            "default": 180,
            "description": [
                "The amount of time in seconds the module should wait for the instance to get into desired state."
            ]
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "cpu_shares": {
            "description": [
                "Set a CPU shares for this Virtual Machine. Default value is set by oVirt engine."
            ]
        }
    },
    "module": "ovirt_vms"
}, {
    "short_description": "Retrieve facts about one or more oVirt virtual machines",
    "deprecated": null,
    "options": {
        "all_content": {
            "description": [
                "If I(true) all the attributes of the virtual machines should be included in the response."
            ]
        },
        "fetch_nested": {
            "description": [
                "If I(True) the module will fetch additional data from the API.",
                "It will fetch IDs of the VMs disks, snapshots, etc. User can configure to fetch other attributes of the nested entities by specifying C(nested_attributes)."
            ],
            "version_added": "2.3"
        },
        "auth": {
            "required": true,
            "description": [
                "Dictionary with values needed to create HTTP/HTTPS connection to oVirt:",
                "C(username)[I(required)] - The name of the user, something like I(admin@internal). Default value is set by I(OVIRT_USERNAME) environment variable.",
                "C(password)[I(required)] - The password of the user. Default value is set by I(OVIRT_PASSWORD) environment variable.",
                "C(url)[I(required)] - A string containing the base URL of the server, usually something like `I(https://server.example.com/ovirt-engine/api)`. Default value is set by I(OVIRT_URL) environment variable.",
                "C(token) - Token to be used instead of login with username/password. Default value is set by I(OVIRT_TOKEN) environment variable.",
                "C(insecure) - A boolean flag that indicates if the server TLS certificate and host name should be checked.",
                "C(ca_file) - A PEM file containing the trusted CA certificates. The certificate presented by the server will be verified using these CA certificates. If `C(ca_file)` parameter is not set, system wide CA certificate store is used. Default value is set by I(OVIRT_CAFILE) environment variable.",
                "C(kerberos) - A boolean flag indicating if Kerberos authentication should be used instead of the default basic authentication."
            ]
        },
        "max": {
            "description": [
                "The maximum number of results to return."
            ]
        },
        "pattern": {
            "description": [
                "Search term which is accepted by oVirt search backend.",
                "For example to search VM X from cluster Y use following pattern: name=X and cluster=Y"
            ]
        },
        "nested_attributes": {
            "description": [
                "Specifies list of the attributes which should be fetched from the API.",
                "This parameter apply only when C(fetch_nested) is I(true)."
            ],
            "version_added": "2.3"
        },
        "case_sensitive": {
            "description": [
                "If I(true) performed search will take case into account."
            ]
        }
    },
    "module": "ovirt_vms_facts"
}, {
    "short_description": "Manage a pacemaker cluster",
    "deprecated": null,
    "options": {
        "node": {
            "default": "None",
            "required": false,
            "description": [
                "Specify which node of the cluster you want to manage. None == the cluster status itself, 'all' == check the status of all nodes."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Indicate desired state of the cluster"
            ],
            "choices": [
                "online",
                "offline",
                "restart",
                "cleanup"
            ]
        },
        "force": {
            "default": true,
            "required": false,
            "description": [
                "Force the change of the cluster state"
            ]
        },
        "timeout": {
            "default": 300,
            "required": false,
            "description": [
                "Timeout when the module should considered that the action has failed"
            ]
        }
    },
    "module": "pacemaker_cluster"
}, {
    "short_description": "Generic OS package manager",
    "deprecated": null,
    "options": {
        "state": {
            "required": true,
            "description": [
                "Whether to install (C(present), C(latest)), or remove (C(absent)) a package."
            ]
        },
        "use": {
            "default": "auto",
            "required": false,
            "description": [
                "The required package manager module to use (yum, apt, etc). The default 'auto' will use existing facts or try to autodetect it.",
                "You should only use this field if the automatic selection is not working for some reason."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Package name, or package specifier with version, like C(name-1.0).",
                "Be aware that packages are not always named the same and this module will not 'translate' them per distro."
            ]
        }
    },
    "module": "package"
}, {
    "short_description": "create, destroy, start, stop, and reboot a Packet Host machine.",
    "deprecated": null,
    "options": {
        "count": {
            "description": [
                "The number of devices to create. Count number can be included in hostname via the %d string formatter."
            ]
        },
        "operating_system": {
            "description": [
                "OS slug for device creation. See Packet docs or API for current list."
            ]
        },
        "features": {
            "description": [
                "Dict with \"features\" for device creation. See Packet API docs for details."
            ]
        },
        "facility": {
            "description": [
                "Facility slug for device creation. As of 2016, it should be one of [ewr1, sjc1, ams1, nrt1]."
            ]
        },
        "lock": {
            "default": false,
            "description": [
                "Whether to lock a created device."
            ]
        },
        "auth_token": {
            "description": [
                "Packet api token. You can also supply it in env var C(PACKET_API_TOKEN)."
            ]
        },
        "device_ids": {
            "description": [
                "List of device IDs on which to operate."
            ]
        },
        "count_offset": {
            "description": [
                "From which number to start the count."
            ]
        },
        "user_data": {
            "default": "None",
            "required": false,
            "description": [
                "Userdata blob made available to the machine"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Desired state of the device."
            ],
            "choices": [
                "present",
                "absent",
                "active",
                "inactive",
                "rebooted"
            ]
        },
        "hostnames": {
            "description": [
                "A hostname of a device, or a list of hostnames.",
                "If given string or one-item list, you can use the C(\"%d\") Python string format to expand numbers from count.",
                "If only one hostname, it might be expanded to list if count>1."
            ],
            "aliases": [
                "name"
            ]
        },
        "plan": {
            "description": [
                "Plan slug for device creation. See Packet docs or API for current list."
            ]
        },
        "project_id": {
            "required": true,
            "description": [
                "ID of project of the device."
            ]
        },
        "wait_timeout": {
            "default": 60,
            "description": [
                "How long to wait for IP address of new devices before quitting. In seconds."
            ]
        },
        "wait": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "Whether to wait for the instance to be assigned IP address before returning."
            ]
        }
    },
    "module": "packet_device"
}, {
    "short_description": "Create/delete an SSH key in Packet host.",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the target."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "key": {
            "description": [
                "Public Key string ({type} {base64 encoded key} {description})."
            ]
        },
        "fingerprint": {
            "description": [
                "Fingerprint of the key which you want to remove."
            ]
        },
        "id": {
            "description": [
                "UUID of the key which you want to remove."
            ]
        },
        "auth_token": {
            "description": [
                "Packet api token. You can also supply it in env var C(PACKET_API_TOKEN)."
            ]
        },
        "key_file": {
            "description": [
                "File with the public key."
            ]
        },
        "label": {
            "description": [
                "Label for the key. If you keep it empty, it will be read from key string."
            ]
        }
    },
    "module": "packet_sshkey"
}, {
    "short_description": "Manage packages with I(pacman)",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the package."
            ],
            "choices": [
                "present",
                "absent",
                "latest"
            ]
        },
        "upgrade": {
            "default": false,
            "required": false,
            "description": [
                "Whether or not to upgrade whole system"
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "When removing package - force remove package, without any checks. When update_cache - force redownload repo databases."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the package to install, upgrade, or remove."
            ],
            "aliases": [
                "pkg",
                "package"
            ]
        },
        "update_cache": {
            "default": false,
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "Whether or not to refresh the master package lists. This can be run as part of a package installation or as a separate step."
            ],
            "aliases": [
                "update-cache"
            ]
        },
        "recurse": {
            "default": false,
            "required": false,
            "description": [
                "When removing a package, also remove its dependencies, provided that they are not required by other packages and were not explicitly installed by a user."
            ],
            "version_added": "1.3",
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "pacman"
}, {
    "short_description": "Create PagerDuty maintenance windows",
    "deprecated": null,
    "options": {
        "name": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "PagerDuty unique subdomain."
            ],
            "aliases": []
        },
        "service": {
            "default": null,
            "choices": [],
            "required": false,
            "description": [
                "A comma separated list of PagerDuty service IDs."
            ],
            "aliases": [
                "services"
            ]
        },
        "passwd": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "PagerDuty user password."
            ],
            "aliases": []
        },
        "minutes": {
            "aliases": [],
            "description": [
                "Maintenance window in minutes (this is added to the hours)."
            ],
            "version_added": "1.8",
            "default": 0,
            "required": false,
            "choices": []
        },
        "state": {
            "default": null,
            "choices": [
                "running",
                "started",
                "ongoing",
                "absent"
            ],
            "required": true,
            "description": [
                "Create a maintenance window or get a list of ongoing windows."
            ],
            "aliases": []
        },
        "hours": {
            "default": 1,
            "choices": [],
            "required": false,
            "description": [
                "Length of maintenance window in hours."
            ],
            "aliases": []
        },
        "token": {
            "aliases": [],
            "description": [
                "A pagerduty token, generated on the pagerduty site. Can be used instead of user/passwd combination."
            ],
            "version_added": "1.8",
            "default": null,
            "required": true,
            "choices": []
        },
        "user": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "PagerDuty user ID."
            ],
            "aliases": []
        },
        "requester_id": {
            "aliases": [],
            "description": [
                "ID of user making the request. Only needed when using a token and creating a maintenance_window."
            ],
            "version_added": "1.8",
            "default": null,
            "required": true,
            "choices": []
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "version_added": "1.5.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "desc": {
            "default": "Created by Ansible",
            "choices": [],
            "required": false,
            "description": [
                "Short description of maintenance window."
            ],
            "aliases": []
        }
    },
    "module": "pagerduty"
}, {
    "short_description": "Trigger, acknowledge or resolve PagerDuty incidents",
    "deprecated": null,
    "options": {
        "client_url": {
            "required": false,
            "description": [
                "The URL of the monitoring client that is triggering this event."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "PagerDuty unique subdomain."
            ]
        },
        "incident_key": {
            "required": false,
            "description": [
                "Identifies the incident to which this I(state) should be applied.",
                "For C(triggered) I(state) - If there's no open (i.e. unresolved) incident with this key, a new one will be created. If there's already an open incident with a matching key, this event will be appended to that incident's log. The event key provides an easy way to \"de-dup\" problem reports.",
                "For C(acknowledged) or C(resolved) I(state) - This should be the incident_key you received back when the incident was first opened by a trigger event. Acknowledge events referencing resolved or nonexistent incidents will be discarded."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Type of event to be sent."
            ],
            "choices": [
                "triggered",
                "acknowledged",
                "resolved"
            ]
        },
        "client": {
            "required": false,
            "description": [
                "The name of the monitoring client that is triggering this event."
            ]
        },
        "service_key": {
            "required": true,
            "description": [
                "The GUID of one of your \"Generic API\" services.",
                "This is the \"service key\" listed on a Generic API's service detail page."
            ]
        },
        "api_key": {
            "required": true,
            "description": [
                "The pagerduty API key (readonly access), generated on the pagerduty site."
            ]
        },
        "desc": {
            "default": "Created via Ansible",
            "required": false,
            "description": [
                "For C(triggered) I(state) - Required. Short description of the problem that led to this trigger. This field (or a truncated version) will be used when generating phone calls, SMS messages and alert emails. It will also appear on the incidents tables in the PagerDuty UI. The maximum length is 1024 characters.",
                "For C(acknowledged) or C(resolved) I(state) - Text that will appear in the incident's log associated with this event."
            ]
        }
    },
    "module": "pagerduty_alert"
}, {
    "short_description": "Modify Linux PAM limits",
    "deprecated": null,
    "options": {
        "comment": {
            "default": "",
            "required": false,
            "description": [
                "Comment associated with the limit."
            ]
        },
        "use_max": {
            "default": "no",
            "required": false,
            "description": [
                "If set to C(yes), the maximal value will be used or conserved. If the specified value is superior to the value in the file, file content is replaced with the new value, else content is not modified."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "domain": {
            "required": true,
            "description": [
                "A username, @groupname, wildcard, uid/gid range."
            ]
        },
        "dest": {
            "default": "/etc/security/limits.conf",
            "required": false,
            "description": [
                "Modify the limits.conf path."
            ]
        },
        "value": {
            "required": true,
            "description": [
                "The value of the limit."
            ]
        },
        "use_min": {
            "default": "no",
            "required": false,
            "description": [
                "If set to C(yes), the minimal value will be used or conserved. If the specified value is inferior to the value in the file, file content is replaced with the new value, else content is not modified."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "limit_item": {
            "required": true,
            "description": [
                "The limit to be set"
            ],
            "choices": [
                "core",
                "data",
                "fsize",
                "memlock",
                "nofile",
                "rss",
                "stack",
                "cpu",
                "nproc",
                "as",
                "maxlogins",
                "maxsyslogins",
                "priority",
                "locks",
                "sigpending",
                "msgqueue",
                "nice",
                "rtprio",
                "chroot"
            ]
        },
        "limit_type": {
            "required": true,
            "description": [
                "Limit type, see C(man limits) for an explanation"
            ],
            "choices": [
                "hard",
                "soft",
                "-"
            ]
        },
        "backup": {
            "default": "no",
            "required": false,
            "description": [
                "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "pam_limits"
}, {
    "short_description": "Manage PAM Modules",
    "deprecated": null,
    "options": {
        "control": {
            "required": true,
            "description": [
                "The control of the PAM rule being modified.  This may be a complicated control with brackets.  If this is the case, be sure to put \"[bracketed controls]\" in quotes.  The type, control and module_path all must match a rule to be modified."
            ]
        },
        "new_module_path": {
            "required": false,
            "description": [
                "The control to assign to the new rule."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name generally refers to the PAM service file to change, for example system-auth."
            ]
        },
        "new_type": {
            "required": false,
            "description": [
                "The type to assign to the new rule."
            ]
        },
        "state": {
            "default": "updated",
            "required": false,
            "description": [
                "The default of 'updated' will modify an existing rule if type, control and module_path all match an existing rule.  With 'before', the new rule will be inserted before a rule matching type, control and module_path.  Similarly, with 'after', the new rule will be inserted after an existing rule matching type, control and module_path.  With either 'before' or 'after' new_type, new_control, and new_module_path must all be specified.  If state is 'args_absent' or 'args_present', new_type, new_control, and new_module_path will be ignored."
            ],
            "choices": [
                "updated",
                "before",
                "after",
                "args_present",
                "args_absent"
            ]
        },
        "new_control": {
            "required": false,
            "description": [
                "The control to assign to the new rule."
            ]
        },
        "module_path": {
            "required": true,
            "description": [
                "The module path of the PAM rule being modified.  The type, control and module_path all must match a rule to be modified."
            ]
        },
        "path": {
            "default": "/etc/pam.d/",
            "required": false,
            "description": [
                "This is the path to the PAM service files"
            ]
        },
        "type": {
            "required": true,
            "description": [
                "The type of the PAM rule being modified.  The type, control and module_path all must match a rule to be modified."
            ]
        },
        "module_arguments": {
            "required": false,
            "description": [
                "When state is 'updated', the module_arguments will replace existing module_arguments.  When state is 'args_absent' args matching those listed in module_arguments will be removed.  When state is 'args_present' any args listed in module_arguments are added if missing from the existing rule.  Furthermore, if the module argument takes a value denoted by '=', the value will be changed to that specified in module_arguments."
            ]
        }
    },
    "module": "pamd"
}, {
    "short_description": "Create address service object on PanOS devices",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "description": [
                "Username credentials to use for authentication."
            ]
        },
        "description": {
            "default": "None",
            "description": [
                "Description of the address object."
            ]
        },
        "type": {
            "default": "ip-nemask",
            "description": [
                "This is the type of the object created."
            ],
            "choices": [
                "ip-netmask",
                "fqdn",
                "ip-range"
            ]
        },
        "tag": {
            "default": "None",
            "description": [
                "Tag of the address object."
            ]
        },
        "address_name": {
            "default": "None",
            "required": true,
            "description": [
                "Human readable name of the address."
            ]
        },
        "address": {
            "default": "None",
            "required": true,
            "description": [
                "IP address with or without mask, range, or FQDN."
            ]
        },
        "commit": {
            "default": true,
            "description": [
                "Commit configuration to the Firewall if it is changed."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password credentials to use for authentication."
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device being configured."
            ]
        }
    },
    "module": "panos_address"
}, {
    "short_description": "Add or modify PAN-OS user accounts password.",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "role": {
            "default": null,
            "required": false,
            "description": [
                "role for admin user"
            ]
        },
        "admin_password": {
            "required": true,
            "description": [
                "password for admin user"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "admin_username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for admin user"
            ]
        }
    },
    "module": "panos_admin"
}, {
    "short_description": "change admin password of PAN-OS device using SSH with SSH key",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for initial authentication"
            ]
        },
        "newpassword": {
            "required": true,
            "description": [
                "password to configure for admin on the PAN-OS device"
            ]
        },
        "key_filename": {
            "required": true,
            "description": [
                "filename of the SSH Key to use for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        }
    },
    "module": "panos_admpwd"
}, {
    "short_description": "generates a self-signed certificate using SSH protocol with SSH key",
    "deprecated": null,
    "options": {
        "password": {
            "default": null,
            "required": true,
            "description": [
                "Password credentials to use for auth. Either I(key_filename) or I(password) is required."
            ]
        },
        "rsa_nbits": {
            "default": "2048",
            "required": false,
            "description": [
                "Number of bits used by the RSA algorithm for the certificate generation."
            ]
        },
        "cert_cn": {
            "default": null,
            "required": true,
            "description": [
                "Certificate CN (common name) embeded in the certificate signature."
            ]
        },
        "cert_friendly_name": {
            "default": null,
            "required": true,
            "description": [
                "Human friendly certificate name (not CN but just a friendly name)."
            ]
        },
        "key_filename": {
            "default": null,
            "required": true,
            "description": [
                "Location of the filename that is used for the auth. Either I(key_filename) or I(password) is required."
            ]
        },
        "ip_address": {
            "default": null,
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device being configured."
            ]
        },
        "signed_by": {
            "default": null,
            "required": true,
            "description": [
                "Undersigning authority (CA) that MUST already be presents on the device."
            ]
        }
    },
    "module": "panos_cert_gen_ssh"
}, {
    "short_description": "check if PAN-OS device is ready for configuration",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "timeout": {
            "default": "0",
            "required": false,
            "description": [
                "timeout of API calls"
            ]
        },
        "interval": {
            "default": "0",
            "required": false,
            "description": [
                "time waited between checks"
            ]
        }
    },
    "module": "panos_check"
}, {
    "short_description": "commit firewall's candidate configuration",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "timeout": {
            "default": "None",
            "required": false,
            "description": [
                "timeout for commit job"
            ]
        },
        "interval": {
            "default": 0.5,
            "required": false,
            "description": [
                "interval for checking commit job"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "sync": {
            "default": true,
            "required": false,
            "description": [
                "if commit should be synchronous"
            ]
        }
    },
    "module": "panos_commit"
}, {
    "short_description": "create a dynamic address group",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "dag_name": {
            "default": null,
            "required": true,
            "description": [
                "name of the dynamic address group"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "default": null,
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "default": null,
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "dag_filter": {
            "default": null,
            "required": true,
            "description": [
                "dynamic filter user by the dynamic address group"
            ]
        }
    },
    "module": "panos_dag"
}, {
    "short_description": "import file on PAN-OS devices",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "Username for device authentication."
            ]
        },
        "category": {
            "default": "software",
            "required": false,
            "description": [
                "Category of file uploaded. The default is software."
            ]
        },
        "file": {
            "default": "None",
            "required": false,
            "description": [
                "Location of the file to import into device."
            ]
        },
        "url": {
            "default": "None",
            "required": false,
            "description": [
                "URL of the file that will be imported to device."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password for device authentication."
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device."
            ]
        }
    },
    "module": "panos_import"
}, {
    "short_description": "configure data-port network interface for DHCP",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "description": [
                "Username credentials to use for auth."
            ]
        },
        "create_default_route": {
            "default": "false",
            "description": [
                "Whether or not to add default route with router learned via DHCP."
            ]
        },
        "zone_name": {
            "required": true,
            "description": "Name of the zone for the interface. If the zone does not exist it is created but if the zone exists and it is not of the layer3 type the operation will fail.\n"
        },
        "commit": {
            "default": true,
            "description": [
                "Commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password credentials to use for auth."
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device being configured."
            ]
        },
        "if_name": {
            "required": true,
            "description": [
                "Name of the interface to configure."
            ]
        }
    },
    "module": "panos_interface"
}, {
    "short_description": "apply authcode to a device/instance",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "force": {
            "default": "false",
            "required": false,
            "description": [
                "whether to apply authcode even if device is already licensed"
            ]
        },
        "auth_code": {
            "required": true,
            "description": [
                "authcode to be applied"
            ]
        }
    },
    "module": "panos_lic"
}, {
    "short_description": "load configuration on PAN-OS device",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "file": {
            "default": "None",
            "required": false,
            "description": [
                "configuration file to load"
            ]
        }
    },
    "module": "panos_loadcfg"
}, {
    "short_description": "configure management settings of device",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "panorama_primary": {
            "default": "None",
            "required": false,
            "description": [
                "address of primary Panorama server"
            ]
        },
        "dns_server_secondary": {
            "default": "None",
            "required": false,
            "description": [
                "address of secondary DNS server"
            ]
        },
        "dns_server_primary": {
            "default": "None",
            "required": false,
            "description": [
                "address of primary DNS server"
            ]
        },
        "panorama_secondary": {
            "default": "None",
            "required": false,
            "description": [
                "address of secondary Panorama server"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        }
    },
    "module": "panos_mgtconfig"
}, {
    "short_description": "create a policy NAT rule",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "snat_bidirectional": {
            "default": "false",
            "required": false,
            "description": [
                "bidirectional flag"
            ]
        },
        "dnat_port": {
            "default": "None",
            "required": false,
            "description": [
                "dnat translated port"
            ]
        },
        "snat_interface_address": {
            "default": "None",
            "required": false,
            "description": [
                "snat interface address"
            ]
        },
        "rule_name": {
            "required": true,
            "description": [
                "name of the SNAT rule"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "snat_address": {
            "default": "None",
            "required": false,
            "description": [
                "snat translated address"
            ]
        },
        "dnat_address": {
            "default": "None",
            "required": false,
            "description": [
                "dnat translated address"
            ]
        },
        "to_zone": {
            "required": true,
            "description": [
                "destination zone"
            ]
        },
        "service": {
            "default": "any",
            "required": false,
            "description": [
                "service"
            ]
        },
        "snat_type": {
            "default": "None",
            "required": false,
            "description": [
                "type of source translation"
            ]
        },
        "destination": {
            "default": [
                "any"
            ],
            "required": false,
            "description": [
                "list of destination addresses"
            ]
        },
        "from_zone": {
            "required": true,
            "description": [
                "list of source zones"
            ]
        },
        "source": {
            "default": [
                "any"
            ],
            "required": false,
            "description": [
                "list of source addresses"
            ]
        },
        "override": {
            "default": "false",
            "required": false,
            "description": [
                "attempt to override rule if one with the same name already exists"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "snat_interface": {
            "default": "None",
            "required": false,
            "description": [
                "snat interface"
            ]
        }
    },
    "module": "panos_nat_policy"
}, {
    "short_description": "create a security profiles group",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "wildfire": {
            "default": "None",
            "required": false,
            "description": [
                "name of the wildfire analysis profile"
            ]
        },
        "data_filtering": {
            "default": "None",
            "required": false,
            "description": [
                "name of the data filtering profile"
            ]
        },
        "file_blocking": {
            "default": "None",
            "required": false,
            "description": [
                "name of the file blocking profile"
            ]
        },
        "pg_name": {
            "required": true,
            "description": [
                "name of the security profile group"
            ]
        },
        "vulnerability": {
            "default": "None",
            "required": false,
            "description": [
                "name of the vulnerability profile"
            ]
        },
        "spyware": {
            "default": "None",
            "required": false,
            "description": [
                "name of the spyware profile"
            ]
        },
        "url_filtering": {
            "default": "None",
            "required": false,
            "description": [
                "name of the url filtering profile"
            ]
        },
        "virus": {
            "default": "None",
            "required": false,
            "description": [
                "name of the anti-virus profile"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        }
    },
    "module": "panos_pg"
}, {
    "short_description": "restart a device",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        }
    },
    "module": "panos_restart"
}, {
    "short_description": "Create security rule policy on PanOS devices.",
    "deprecated": null,
    "options": {
        "wildfire_analysis": {
            "default": "None",
            "description": [
                "Name of the already defined wildfire_analysis profile."
            ]
        },
        "username": {
            "default": "admin",
            "description": [
                "Username credentials to use for auth unless I(api_key) is set."
            ]
        },
        "vulnerability": {
            "default": "None",
            "description": [
                "Name of the already defined vulnerability profile."
            ]
        },
        "devicegroup": {
            "default": "None",
            "description": "Device groups are used for the Panorama interaction with Firewall(s). The group must exists on Panorama. If device group is not define we assume that we are contacting Firewall.\n"
        },
        "data_filtering": {
            "default": "None",
            "description": [
                "Name of the already defined data_filtering profile."
            ]
        },
        "spyware": {
            "default": "None",
            "description": [
                "Name of the already defined spyware profile."
            ]
        },
        "hip_profiles": {
            "default": "any",
            "description": "If you are using GlobalProtect with host information profile (HIP) enabled, you can also base the policy on information collected by GlobalProtect. For example, the user access level can be determined HIP that notifies the firewall about the user's local configuration.\n"
        },
        "file_blocking": {
            "default": "None",
            "description": [
                "Name of the already defined file_blocking profile."
            ]
        },
        "tag": {
            "default": "None",
            "description": [
                "Administrative tags that can be added to the rule. Note, tags must be already defined."
            ]
        },
        "antivirus": {
            "default": "None",
            "description": [
                "Name of the already defined antivirus profile."
            ]
        },
        "log_start": {
            "default": false,
            "description": [
                "Whether to log at session start."
            ]
        },
        "log_end": {
            "default": true,
            "description": [
                "Whether to log at session end."
            ]
        },
        "url_filtering": {
            "default": "None",
            "description": [
                "Name of the already defined url_filtering profile."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password credentials to use for auth unless I(api_key) is set."
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device being configured."
            ]
        },
        "description": {
            "default": "None",
            "description": [
                "Description for the security rule."
            ]
        },
        "rule_type": {
            "default": "universal",
            "description": [
                "Type of security rule (version 6.1 of PanOS and above)."
            ]
        },
        "rule_name": {
            "required": true,
            "description": [
                "Name of the security rule."
            ]
        },
        "to_zone": {
            "default": "any",
            "description": [
                "List of destination zones."
            ]
        },
        "service": {
            "default": "application-default",
            "description": [
                "List of services."
            ]
        },
        "source": {
            "default": "any",
            "description": [
                "List of source addresses."
            ]
        },
        "destination": {
            "default": "any",
            "description": [
                "List of destination addresses."
            ]
        },
        "from_zone": {
            "default": "any",
            "description": [
                "List of source zones."
            ]
        },
        "source_user": {
            "default": "any",
            "description": [
                "Use users to enforce policy for individual users or a group of users."
            ]
        },
        "application": {
            "default": "any",
            "description": [
                "List of applications."
            ]
        },
        "group_profile": {
            "default": "None",
            "description": "Security profile group that is already defined in the system. This property supersedes antivirus, vulnerability, spyware, url_filtering, file_blocking, data_filtering, and wildfire_analysis properties.\n"
        },
        "action": {
            "default": "allow",
            "description": [
                "Action to apply once rules maches."
            ]
        },
        "commit": {
            "default": true,
            "description": [
                "Commit configuration if changed."
            ]
        },
        "api_key": {
            "description": [
                "API key that can be used instead of I(username)/I(password) credentials."
            ]
        }
    },
    "module": "panos_security_policy"
}, {
    "short_description": "create a service object",
    "deprecated": null,
    "options": {
        "username": {
            "default": "admin",
            "required": false,
            "description": [
                "username for authentication"
            ]
        },
        "protocol": {
            "required": true,
            "description": [
                "protocol for the service, should be tcp or udp"
            ]
        },
        "service_name": {
            "required": true,
            "description": [
                "name of the service"
            ]
        },
        "source_port": {
            "default": "None",
            "required": false,
            "description": [
                "source port"
            ]
        },
        "commit": {
            "default": true,
            "required": false,
            "description": [
                "commit if changed"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "password for authentication"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address (or hostname) of PAN-OS device"
            ]
        },
        "port": {
            "required": true,
            "description": [
                "destination port"
            ]
        }
    },
    "module": "panos_service"
}, {
    "short_description": "Configure block device partitions",
    "deprecated": null,
    "options": {
        "part_start": {
            "default": "0%",
            "description": [
                "Where the partition will start as offset from the beginning of the disk, that is, the \"distance\" from the start of the disk. The distance can be specified with all the units supported by parted (except compat) and it is case sensitive. E.g. C(10GiB), C(15%)."
            ]
        },
        "part_end": {
            "default": "100%",
            "description": [
                "Where the partition will end as offset from the beginning of the disk, that is, the \"distance\" from the start of the disk. The distance can be specified with all the units supported by parted (except compat) and it is case sensitive. E.g. C(10GiB), C(15%)."
            ]
        },
        "name": {
            "description": [
                "Sets the name for the partition number (GPT, Mac, MIPS and PC98 only)."
            ]
        },
        "align": {
            "default": "optimal",
            "description": "Set alignment for newly created partitions.",
            "choices": [
                "none",
                "cylinder",
                "minimal",
                "optimal"
            ]
        },
        "number": {
            "description": [
                "The number of the partition to work with or the number of the partition that will be created. Required when performing any action on the disk, except fetching information."
            ]
        },
        "label": {
            "default": "msdos",
            "description": "Creates a new disk label.",
            "choices": [
                "aix",
                "amiga",
                "bsd",
                "dvh",
                "gpt",
                "loop",
                "mac",
                "msdos",
                "pc98",
                "sun",
                ""
            ]
        },
        "state": {
            "default": "info",
            "description": [
                "If to create or delete a partition. If set to C(info) the module will only return the device information."
            ],
            "choices": [
                "present",
                "absent",
                "info"
            ]
        },
        "part_type": {
            "description": [
                "Is one of 'primary', 'extended' or 'logical' and may be specified only with 'msdos' or 'dvh' partition tables. A name must be specified for a 'gpt' partition table. Neither part-type nor name may be used with a 'sun' partition table."
            ],
            "choices": [
                "primary",
                "extended",
                "logical"
            ]
        },
        "flags": {
            "description": "A list of the flags that has to be set on the partition."
        },
        "device": {
            "required": true,
            "description": "The block device (disk) where to operate."
        },
        "unit": {
            "default": "KiB",
            "description": [
                "Selects the current default unit that Parted will use to display locations and capacities on the disk and to interpret those given by the user if they are not suffixed by an unit. When fetching information about a disk, it is always recommended to specify a unit."
            ],
            "choices": [
                "s",
                "B",
                "KB",
                "KiB",
                "MB",
                "MiB",
                "GB",
                "GiB",
                "TB",
                "TiB",
                "%",
                "cyl",
                "chs",
                "compact"
            ]
        }
    },
    "module": "parted"
}, {
    "short_description": "Apply patch files using the GNU patch tool.",
    "deprecated": null,
    "options": {
        "strip": {
            "default": "0",
            "required": false,
            "description": [
                "Number that indicates the smallest prefix containing leading slashes that will be stripped from each file name found in the patch file. For more information see the strip parameter of the GNU patch tool."
            ]
        },
        "src": {
            "required": true,
            "description": [
                "Path of the patch file as accepted by the GNU patch tool. If C(remote_src) is 'no', the patch source file is looked up from the module's \"files\" directory."
            ],
            "aliases": [
                "patchfile"
            ]
        },
        "remote_src": {
            "default": "no",
            "required": false,
            "description": [
                "If C(no), it will search for src at originating/master machine, if C(yes) it will go to the remote/target machine for the src. Default is C(no)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "dest": {
            "required": false,
            "description": [
                "Path of the file on the remote machine to be patched.",
                "The names of the files to be patched are usually taken from the patch file, but if there's just one file to be patched it can specified with this option."
            ],
            "aliases": [
                "originalfile"
            ]
        },
        "binary": {
            "default": "no",
            "required": false,
            "description": [
                "Setting to C(yes) will disable patch's heuristic for transforming CRLF line endings into LF. Line endings of src and dest must match. If set to C(no), patch will replace CRLF in src files on POSIX."
            ],
            "version_added": "2.0"
        },
        "basedir": {
            "required": false,
            "description": [
                "Path of a base directory in which the patch file will be applied. May be omitted when C(dest) option is specified, otherwise required."
            ]
        },
        "backup": {
            "default": "no",
            "description": [
                "passes --backup --version-control=numbered to patch, producing numbered backup copies"
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "patch"
}, {
    "short_description": "Pause playbook execution",
    "deprecated": null,
    "options": {
        "seconds": {
            "default": null,
            "required": false,
            "description": [
                "A positive number of seconds to pause for."
            ]
        },
        "minutes": {
            "default": null,
            "required": false,
            "description": [
                "A positive number of minutes to pause for."
            ]
        },
        "prompt": {
            "default": null,
            "required": false,
            "description": [
                "Optional text to use for the prompt message."
            ]
        }
    },
    "module": "pause"
}, {
    "short_description": "Manage pear/pecl packages",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the package."
            ],
            "choices": [
                "present",
                "absent",
                "latest"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the package to install, upgrade, or remove."
            ]
        }
    },
    "module": "pear"
}, {
    "short_description": "Try to connect to host, verify a usable python and return C(pong) on success.",
    "deprecated": null,
    "options": {},
    "module": "ping"
}, {
    "short_description": "Pause/unpause Pingdom alerts",
    "deprecated": null,
    "options": {
        "checkid": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "Pingdom ID of the check."
            ],
            "aliases": []
        },
        "passwd": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "Pingdom user password."
            ],
            "aliases": []
        },
        "state": {
            "default": null,
            "choices": [
                "running",
                "paused"
            ],
            "required": true,
            "description": [
                "Define whether or not the check should be running or paused."
            ],
            "aliases": []
        },
        "uid": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "Pingdom user ID."
            ],
            "aliases": []
        },
        "key": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "Pingdom API key."
            ],
            "aliases": []
        }
    },
    "module": "pingdom"
}, {
    "short_description": "Manages Python library dependencies.",
    "deprecated": null,
    "options": {
        "virtualenv": {
            "default": null,
            "required": false,
            "description": [
                "An optional path to a I(virtualenv) directory to install into. It cannot be specified together with the 'executable' parameter (added in 2.1). If the virtualenv does not exist, it will be created before installing packages. The optional virtualenv_site_packages, virtualenv_command, and virtualenv_python options affect the creation of the virtualenv."
            ]
        },
        "virtualenv_site_packages": {
            "default": "no",
            "required": false,
            "description": [
                "Whether the virtual environment will inherit packages from the global site-packages directory.  Note that if this setting is changed on an already existing virtual environment it will not have any effect, the environment must be deleted and newly created."
            ],
            "version_added": "1.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "virtualenv_command": {
            "default": "virtualenv",
            "required": false,
            "description": [
                "The command or a pathname to the command to create the virtual environment with. For example C(pyvenv), C(virtualenv), C(virtualenv2), C(~/bin/virtualenv), C(/usr/local/bin/virtualenv)."
            ],
            "version_added": "1.1"
        },
        "chdir": {
            "default": null,
            "required": false,
            "description": [
                "cd into this directory before running the command"
            ],
            "version_added": "1.3"
        },
        "requirements": {
            "default": null,
            "required": false,
            "description": [
                "The path to a pip requirements file, which should be local to the remote system. File can be specified as a relative path if using the chdir option."
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "The name of a Python library to install or the url of the remote package.",
                "As of 2.2 you can supply a list of names."
            ]
        },
        "virtualenv_python": {
            "default": null,
            "required": false,
            "description": [
                "The Python executable used for creating the virtual environment. For example C(python3.5), C(python2.7). When not specified, the Python version used to run the ansible module is used. This parameter should not be used when C(virtualenv_command) is using C(pyvenv) or the C(-m venv) module."
            ],
            "version_added": "2.0"
        },
        "editable": {
            "default": true,
            "required": false,
            "description": [
                "Pass the editable flag for versioning URLs."
            ],
            "version_added": "2.0"
        },
        "umask": {
            "default": null,
            "required": false,
            "description": [
                "The system umask to apply before installing the pip package. This is useful, for example, when installing on systems that have a very restrictive umask by default (e.g., 0077) and you want to pip install packages which are to be used by all users. Note that this requires you to specify desired umask mode in octal, with a leading 0 (e.g., 0077)."
            ],
            "version_added": "2.1"
        },
        "executable": {
            "default": null,
            "required": false,
            "description": [
                "The explicit executable or a pathname to the executable to be used to run pip for a specific version of Python installed in the system. For example C(pip-3.3), if there are both Python 2.7 and 3.3 installations in the system and you want to run pip for the Python 3.3 installation. It cannot be specified together with the 'virtualenv' parameter (added in 2.1). By default, it will take the appropriate version for the python interpreter use by ansible, e.g. pip3 on python 3, and pip2 or pip on python 2."
            ],
            "version_added": "1.3"
        },
        "extra_args": {
            "default": null,
            "required": false,
            "description": [
                "Extra arguments passed to pip."
            ],
            "version_added": "1.0"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The state of module",
                "The 'forcereinstall' option is only available in Ansible 2.1 and above."
            ],
            "choices": [
                "present",
                "absent",
                "latest",
                "forcereinstall"
            ]
        },
        "version": {
            "default": null,
            "required": false,
            "description": [
                "The version number to install of the Python library specified in the I(name) parameter"
            ]
        }
    },
    "module": "pip"
}, {
    "short_description": "Manages packages with the Solaris 11 Image Packaging System",
    "deprecated": null,
    "options": {
        "accept_licenses": {
            "default": false,
            "choices": [
                true,
                false
            ],
            "required": false,
            "description": [
                "Accept any licences."
            ],
            "aliases": [
                "accept_licences",
                "accept"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to install (I(present), I(latest)), or remove (I(absent)) a package."
            ],
            "choices": [
                "present",
                "latest",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "An FRMI of the package(s) to be installed/removed/updated.",
                "Multiple packages may be specified, separated by C(,)."
            ]
        }
    },
    "module": "pkg5"
}, {
    "short_description": "Manages Solaris 11 Image Packaging System publishers",
    "deprecated": null,
    "options": {
        "origin": {
            "default": null,
            "required": false,
            "description": [
                "A path or URL to the repository.",
                "Multiple values may be provided."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to ensure that a publisher is present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The publisher's name."
            ],
            "aliases": [
                "publisher"
            ]
        },
        "mirror": {
            "default": null,
            "required": false,
            "description": [
                "A path or URL to the repository mirror.",
                "Multiple values may be provided."
            ]
        },
        "enabled": {
            "default": null,
            "required": false,
            "description": [
                "Is the repository enabled or disabled?"
            ],
            "choices": [
                true,
                false
            ]
        },
        "sticky": {
            "default": null,
            "required": false,
            "description": [
                "Packages installed from a sticky repository can only receive updates from that repository."
            ],
            "choices": [
                true,
                false
            ]
        }
    },
    "module": "pkg5_publisher"
}, {
    "short_description": "Package manager for SmartOS, NetBSD, et al.",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Intended state of the package"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "upgrade": {
            "default": false,
            "required": false,
            "description": [
                "Upgrade main packages to their newer versions"
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "Force package reinstall"
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of package to install/remove;",
                "multiple names may be given, separated by commas"
            ]
        },
        "full_upgrade": {
            "default": false,
            "required": false,
            "description": [
                "Upgrade all packages to their newer versions"
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "update_cache": {
            "default": false,
            "required": false,
            "description": [
                "Update repository database. Can be run with other steps or on it's own."
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "clean": {
            "default": false,
            "required": false,
            "description": [
                "Clean packages cache"
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "pkgin"
}, {
    "short_description": "Package manager for FreeBSD >= 9.0",
    "deprecated": null,
    "options": {
        "chroot": {
            "required": false,
            "description": [
                "Pkg will chroot in the specified environment.",
                "Can not be used together with I(rootdir) option."
            ],
            "version_added": "2.1"
        },
        "name": {
            "required": true,
            "description": [
                "Name of package to install/remove."
            ]
        },
        "cached": {
            "default": false,
            "required": false,
            "description": [
                "Use local package base instead of fetching an updated one."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "pkgsite": {
            "required": false,
            "description": [
                "For pkgng versions before 1.1.4, specify packagesite to use for downloading packages. If not specified, use settings from C(/usr/local/etc/pkg.conf).",
                "For newer pkgng versions, specify a the name of a repository configured in C(/usr/local/etc/pkg/repos)."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "State of the package."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "rootdir": {
            "required": false,
            "description": [
                "For pkgng versions 1.5 and later, pkg will install all packages within the specified root directory.",
                "Can not be used together with I(chroot) option."
            ]
        },
        "autoremove": {
            "default": false,
            "required": false,
            "description": [
                "Remove automatically installed packages which are no longer needed."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "annotation": {
            "required": false,
            "description": [
                "A comma-separated list of keyvalue-pairs of the form C(<+/-/:><key>[=<value>]). A C(+) denotes adding an annotation, a C(-) denotes removing an annotation, and C(:) denotes modifying an annotation. If setting or modifying annotations, a value must be provided."
            ],
            "version_added": "1.6"
        }
    },
    "module": "pkgng"
}, {
    "short_description": "Manage CSW-Packages on Solaris",
    "deprecated": null,
    "options": {
        "site": {
            "required": false,
            "description": [
                "Specifies the repository path to install the package from.",
                "Its global definition is done in C(/etc/opt/csw/pkgutil.conf)."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether to install (C(present)), or remove (C(absent)) a package.",
                "The upgrade (C(latest)) operation will update/install the package to the latest version available.",
                "Note: The module has a limitation that (C(latest)) only works for one package, not lists of them."
            ],
            "choices": [
                "present",
                "absent",
                "latest"
            ]
        },
        "update_catalog": {
            "default": false,
            "required": false,
            "description": [
                "If you want to refresh your catalog from the mirror, set this to (C(yes))."
            ],
            "version_added": "2.1"
        },
        "name": {
            "required": true,
            "description": [
                "Package name, e.g. (C(CSWnrpe))"
            ]
        }
    },
    "module": "pkgutil"
}, {
    "short_description": "CLI command to create/delete a cluster.",
    "deprecated": null,
    "options": {
        "pn_name": {
            "required": true,
            "description": [
                "Specify the name of the cluster."
            ]
        },
        "pn_cluster_node1": {
            "description": [
                "Specify the name of the first switch in the cluster.",
                "Required for 'cluster-create'."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_validate": {
            "description": [
                "Validate the inter-switch links and state of switches in the cluster."
            ],
            "choices": [
                "validate",
                "no-validate"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Specify action to perform. Use 'present' to create cluster and 'absent' to delete cluster."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch to run the cli on."
            ]
        },
        "pn_cluster_node2": {
            "description": [
                "Specify the name of the second switch in the cluster.",
                "Required for 'cluster-create'."
            ]
        }
    },
    "module": "pn_cluster"
}, {
    "short_description": "CLI command to add/remove ospf protocol to a vRouter.",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Assert the state of the ospf. Use 'present' to add ospf and 'absent' to remove ospf."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "pn_vrouter_name": {
            "required": true,
            "description": [
                "Specify the name of the vRouter."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_ospf_area": {
            "description": [
                "Stub area number for the configuration. Required for vrouter-ospf-add."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch to run the CLI on."
            ]
        },
        "pn_network_ip": {
            "required": true,
            "description": [
                "Specify the network IP (IPv4 or IPv6) address."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        }
    },
    "module": "pn_ospf"
}, {
    "short_description": "CLI command to add/remove ospf area to/from a vrouter.",
    "deprecated": null,
    "options": {
        "pn_ospf_area": {
            "required": true,
            "description": [
                "Specify the OSPF area number."
            ]
        },
        "pn_clipassword": {
            "required": true,
            "description": [
                "Login password."
            ]
        },
        "pn_vrouter_name": {
            "required": true,
            "description": [
                "Specify the name of the vRouter."
            ]
        },
        "pn_cliusername": {
            "required": true,
            "description": [
                "Login username."
            ]
        },
        "pn_prefix_listin": {
            "description": [
                "OSPF prefix list for filtering incoming packets."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to add ospf-area, 'absent' to remove ospf-area and 'update' to modify ospf-area."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_prefix_listout": {
            "description": [
                "OSPF prefix list for filtering outgoing packets."
            ]
        },
        "pn_stub_type": {
            "description": [
                "Specify the OSPF stub type."
            ],
            "choices": [
                "none",
                "stub",
                "stub-no-summary",
                "nssa",
                "nssa-no-summary"
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the CLI on."
            ]
        },
        "pn_quiet": {
            "default": true,
            "required": false,
            "description": [
                "Enable/disable system information."
            ]
        }
    },
    "module": "pn_ospfarea"
}, {
    "short_description": "Run show commands on nvOS device.",
    "deprecated": null,
    "options": {
        "pn_parameters": {
            "description": [
                "Display output using a specific parameter. Use 'all' to display possible output. List of comma separated parameters."
            ]
        },
        "pn_options": {
            "description": [
                "Specify formatting options."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the cli on."
            ]
        },
        "pn_command": {
            "required": true,
            "description": [
                "The C(pn_command) takes a CLI show command as value."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        }
    },
    "module": "pn_show"
}, {
    "short_description": "CLI command to create/delete/modify a trunk.",
    "deprecated": null,
    "options": {
        "pn_unknown_mcast_level": {
            "description": [
                "Specify an unknown multicast level in percent. The default value is 100%."
            ]
        },
        "pn_jumbo": {
            "description": [
                "Specify if the port can receive jumbo frames."
            ]
        },
        "pn_name": {
            "required": true,
            "description": [
                "Specify the name for the trunk configuration."
            ]
        },
        "pn_lacp_fallback_timeout": {
            "description": [
                "Specify the LACP fallback timeout in seconds. The range is between 30 and 60 seconds with a default value of 50 seconds."
            ]
        },
        "pn_unknown_ucast_level": {
            "description": [
                "Specify an unknown unicast level in percent. The default value is 100%."
            ]
        },
        "pn_lacp_timeout": {
            "description": [
                "Specify the LACP time out as slow (30 seconds) or fast (4seconds). The default value is slow."
            ],
            "choices": [
                "slow",
                "fast"
            ]
        },
        "pn_loopback": {
            "description": [
                "Specify loopback if you want to use loopback."
            ]
        },
        "pn_speed": {
            "description": [
                "Specify the port speed or disable the port."
            ],
            "choices": [
                "disable",
                "10m",
                "100m",
                "1g",
                "2.5g",
                "10g",
                "40g"
            ]
        },
        "pn_edge_switch": {
            "description": [
                "Specify if the switch is an edge switch."
            ]
        },
        "pn_host": {
            "description": [
                "Host facing port control setting."
            ]
        },
        "pn_port_macaddr": {
            "description": [
                "Specify the MAC address of the port."
            ]
        },
        "pn_lacp_fallback": {
            "description": [
                "Specify the LACP fallback mode as bundles or individual."
            ],
            "choices": [
                "bundle",
                "individual"
            ]
        },
        "pn_routing": {
            "description": [
                "Specify if the port participates in routing on the network."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_mirror_receive": {
            "description": [
                "Specify if the configuration receives mirrored traffic."
            ]
        },
        "pn_egress_rate_limit": {
            "description": [
                "Specify an egress port data rate limit for the configuration."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_lacp_mode": {
            "description": [
                "Specify the LACP mode for the configuration."
            ],
            "choices": [
                "off",
                "passive",
                "active"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to create trunk, 'absent' to delete trunk and 'update' to modify trunk."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_ports": {
            "description": [
                "Specify the port number(s) for the link(s) to aggregate into the trunk.",
                "Required for trunk-create."
            ]
        },
        "pn_lacp_priority": {
            "description": [
                "Specify the LACP priority. This is a number between 1 and 65535 with a default value of 32768."
            ]
        },
        "pn_broadcast_level": {
            "description": [
                "Specify a broadcast level in percent. The default value is 100%."
            ]
        },
        "pn_pause": {
            "description": [
                "Specify if pause frames are sent."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the cli on."
            ]
        },
        "pn_loopvlans": {
            "description": [
                "Specify a list of looping vlans."
            ]
        },
        "pn_description": {
            "description": [
                "Specify a description for the trunk configuration."
            ]
        }
    },
    "module": "pn_trunk"
}, {
    "short_description": "CLI command to create/delete/modify vlag.",
    "deprecated": null,
    "options": {
        "pn_name": {
            "required": true,
            "description": [
                "The C(pn_name) takes a valid name for vlag configuration."
            ]
        },
        "pn_lacp_fallback": {
            "description": [
                "Specify the LACP fallback mode as bundles or individual."
            ],
            "choices": [
                "bundle",
                "individual"
            ]
        },
        "pn_lacp_fallback_timeout": {
            "description": [
                "Specify the LACP fallback timeout in seconds. The range is between 30 and 60 seconds with a default value of 50 seconds."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_lacp_timeout": {
            "description": [
                "Specify the LACP timeout as slow(30 seconds) or fast(4 seconds)."
            ],
            "choices": [
                "slow",
                "fast"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to create vlag, 'absent' to delete vlag and 'update' to modify vlag."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_lacp_mode": {
            "description": [
                "Specify the LACP mode."
            ],
            "choices": [
                "off",
                "passive",
                "active"
            ]
        },
        "pn_failover_action": {
            "description": [
                "Specify the failover action as move or ignore."
            ],
            "choices": [
                "move",
                "ignore"
            ]
        },
        "pn_peer_port": {
            "description": [
                "Specify the peer VLAG port.",
                "Required for vlag-create."
            ]
        },
        "pn_peer_switch": {
            "description": [
                "Specify the fabric-name of the peer switch."
            ]
        },
        "pn_port": {
            "description": [
                "Specify the local VLAG port.",
                "Required for vlag-create."
            ]
        },
        "pn_cliswitch": {
            "description": [
                "Target switch(es) to run this command on."
            ]
        },
        "pn_mode": {
            "description": [
                "Specify the mode for the VLAG. Active-standby indicates one side is active and the other side is in standby mode. Active-active indicates that both sides of the vlag are up by default."
            ],
            "choices": [
                "active-active",
                "active-standby"
            ]
        }
    },
    "module": "pn_vlag"
}, {
    "short_description": "CLI command to create/delete a VLAN.",
    "deprecated": null,
    "options": {
        "pn_scope": {
            "description": [
                "Specify a scope for the VLAN.",
                "Required for vlan-create."
            ],
            "choices": [
                "fabric",
                "local"
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_vlanid": {
            "required": true,
            "description": [
                "Specify a VLAN identifier for the VLAN. This is a value between 2 and 4092."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to create vlan and 'absent' to delete vlan."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "pn_ports": {
            "description": [
                "Specifies the switch network data port number, list of ports, or range of ports. Port numbers must ne in the range of 1 to 64."
            ]
        },
        "pn_untagged_ports": {
            "description": [
                "Specifies the ports that should have untagged packets mapped to the VLAN. Untagged packets are packets that do not contain IEEE 802.1Q VLAN tags."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the cli on."
            ]
        },
        "pn_stats": {
            "description": [
                "Specify if you want to collect statistics for a VLAN. Statistic collection is enabled by default."
            ]
        },
        "pn_description": {
            "description": [
                "Specify a description for the VLAN."
            ]
        }
    },
    "module": "pn_vlan"
}, {
    "short_description": "CLI command to create/delete/modify a vrouter.",
    "deprecated": null,
    "options": {
        "pn_name": {
            "required": true,
            "description": [
                "Specify the name of the vRouter."
            ]
        },
        "pn_rip_redistribute": {
            "description": [
                "Specify how RIP routes are redistributed."
            ],
            "choices": [
                "static",
                "connected",
                "ospf",
                "bgp"
            ]
        },
        "pn_bgp_options": {
            "description": [
                "Specify other BGP options as a whitespaces separated string within single quotes ''."
            ]
        },
        "pn_router_id": {
            "description": [
                "Specify the vRouter IP address."
            ]
        },
        "pn_ospf_options": {
            "description": [
                "Specify other OSPF options as a whitespaces separated string within single quotes ''."
            ]
        },
        "pn_bgp_as": {
            "description": [
                "Specify the Autonomous System Number(ASN) if the vRouter runs Border Gateway Protocol(BGP)."
            ]
        },
        "pn_ospf_redistribute": {
            "description": [
                "Specify how OSPF routes are redistributed."
            ],
            "choices": [
                "static",
                "connected",
                "bgp",
                "rip"
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_bgp_redistribute": {
            "description": [
                "Specify how BGP routes are redistributed."
            ],
            "choices": [
                "static",
                "connected",
                "rip",
                "ospf"
            ]
        },
        "pn_router_type": {
            "description": [
                "Specify if the vRouter uses software or hardware.",
                "Note that if you specify hardware as router type, you cannot assign IP addresses using DHCP. You must specify a static IP address."
            ],
            "choices": [
                "hardware",
                "software"
            ]
        },
        "pn_hw_vrrp_id": {
            "description": [
                "Specifies the VRRP ID for a hardware vrouter."
            ]
        },
        "pn_vnet": {
            "description": [
                "Specify the name of the VNET.",
                "Required for vrouter-create."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_service_state": {
            "description": [
                "Specify to enable or disable vRouter service."
            ],
            "choices": [
                "enable",
                "disable"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to create vrouter, 'absent' to delete vrouter and 'update' to modify vrouter."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_service_type": {
            "description": [
                "Specify if the vRouter is a dedicated or shared VNET service."
            ],
            "choices": [
                "dedicated",
                "shared"
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the CLI on."
            ]
        },
        "pn_bgp_max_paths": {
            "description": [
                "Specify the maximum number of paths for BGP. This is a number between 1 and 255 or 0 to unset."
            ]
        }
    },
    "module": "pn_vrouter"
}, {
    "short_description": "CLI command to add/remove/modify vrouter-bgp.",
    "deprecated": null,
    "options": {
        "pn_max_prefix": {
            "description": [
                "Specify the maximum number of prefixes."
            ]
        },
        "pn_route_mapout": {
            "description": [
                "Specify outbound route map for neighbor."
            ]
        },
        "pn_neighbor": {
            "description": [
                "Specify a neighbor IP address to use for BGP.",
                "Required for vrouter-bgp-add."
            ]
        },
        "pn_vrouter_name": {
            "required": true,
            "description": [
                "Specify a name for the vRouter service."
            ]
        },
        "pn_override_capability": {
            "description": [
                "Specify if you want to override capability."
            ]
        },
        "pn_route_mapin": {
            "description": [
                "Specify inbound route map for neighbor."
            ]
        },
        "pn_soft_reconfig": {
            "description": [
                "Specify if you want a soft reconfiguration of inbound traffic."
            ]
        },
        "pn_ebgp": {
            "description": [
                "Specify a value for external BGP to accept or attempt BGP connections to external peers, not directly connected, on the network. This is a value between 1 and 255."
            ]
        },
        "pn_prefix_listin": {
            "description": [
                "Specify the prefix list to filter traffic inbound."
            ]
        },
        "pn_bfd": {
            "description": [
                "Specify if you want BFD protocol support for fault detection."
            ]
        },
        "pn_password": {
            "description": [
                "Specify a password, if desired."
            ]
        },
        "pn_route_reflector": {
            "description": [
                "Specify if a route reflector client is used."
            ]
        },
        "pn_keepalive": {
            "description": [
                "Specify BGP neighbor keepalive interval in seconds."
            ]
        },
        "pn_max_prefix_warn": {
            "description": [
                "Specify if you want a warning message when the maximum number of prefixes is exceeded."
            ]
        },
        "pn_multiprotocol": {
            "description": [
                "Specify a multi-protocol for BGP."
            ],
            "choices": [
                "ipv4-unicast",
                "ipv6-unicast"
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_default_originate": {
            "description": [
                "Specify if you want announce default routes to the neighbor or not."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_weight": {
            "description": [
                "Specify a default weight value between 0 and 65535 for the neighbor routes."
            ]
        },
        "pn_prefix_listout": {
            "description": [
                "Specify the prefix list to filter traffic outbound."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to add bgp, 'absent' to remove bgp and 'update' to modify bgp."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_remote_as": {
            "description": [
                "Specify the remote Autonomous System(AS) number. This value is between 1 and 4294967295.",
                "Required for vrouter-bgp-add."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the cli on."
            ]
        },
        "pn_holdtime": {
            "description": [
                "Specify BGP neighbor holdtime in seconds."
            ]
        },
        "pn_next_hop_self": {
            "description": [
                "Specify if the next-hop is the same router or not."
            ]
        }
    },
    "module": "pn_vrouterbgp"
}, {
    "short_description": "CLI command to add/remove/modify vrouter-interface.",
    "deprecated": null,
    "options": {
        "pn_nic_enable": {
            "description": [
                "Specify if the NIC is enabled or not"
            ]
        },
        "pn_vrouter_name": {
            "required": true,
            "description": [
                "Specify the name of the vRouter interface."
            ]
        },
        "pn_vrrp_adv_int": {
            "description": [
                "Specify a VRRP advertisement interval in milliseconds. The range is from 30 to 40950 with a default value of 1000."
            ]
        },
        "pn_vrrp_priority": {
            "description": [
                "Specify the priority for the VRRP interface. This is a value between 1 (lowest) and 255 (highest)."
            ]
        },
        "pn_alias": {
            "description": [
                "Specify an alias for the interface."
            ]
        },
        "pn_secondary_macs": {
            "description": [
                "Specify a secondary MAC address for the interface."
            ]
        },
        "pn_interface_ip": {
            "description": [
                "Specify the IP address of the interface in x.x.x.x/n format."
            ]
        },
        "pn_vlan": {
            "description": [
                "Specify the VLAN identifier. This is a value between 1 and 4092."
            ]
        },
        "pn_vxlan": {
            "description": [
                "Specify the VXLAN identifier. This is a value between 1 and 16777215."
            ]
        },
        "pn_exclusive": {
            "description": [
                "Specify if the interface is exclusive to the configuration. Exclusive means that other configurations cannot use the interface. Exclusive is specified when you configure the interface as span interface and allows higher throughput through the interface."
            ]
        },
        "pn_nic_str": {
            "description": [
                "Specify the type of NIC. Used for vrouter-interface remove/modify."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_vrrp_id": {
            "description": [
                "Specify the ID for the VRRP interface. The IDs on both vRouters must be the same IS number."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to add vrouter interface, 'absent' to remove vrouter interface and 'update' to modify vrouter interface."
            ],
            "choices": [
                "present",
                "absent",
                "update"
            ]
        },
        "pn_interface": {
            "description": [
                "Specify if the interface is management, data or span interface."
            ],
            "choices": [
                "mgmt",
                "data",
                "span"
            ]
        },
        "pn_l3port": {
            "description": [
                "Specify a Layer 3 port for the interface."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch to run the cli on."
            ]
        },
        "pn_assignment": {
            "description": [
                "Specify the DHCP method for IP address assignment."
            ],
            "choices": [
                "none",
                "dhcp",
                "dhcpv6",
                "autov6"
            ]
        }
    },
    "module": "pn_vrouterif"
}, {
    "short_description": "CLI command to add/remove vrouter-loopback-interface.",
    "deprecated": null,
    "options": {
        "pn_interface_ip": {
            "required": true,
            "description": [
                "Specify the IP address."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State the action to perform. Use 'present' to add vrouter loopback interface and 'absent' to remove vrouter loopback interface."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "pn_vrouter_name": {
            "required": true,
            "description": [
                "Specify the name of the vRouter."
            ]
        },
        "pn_clipassword": {
            "required": false,
            "description": [
                "Provide login password if user is not root."
            ]
        },
        "pn_cliusername": {
            "required": false,
            "description": [
                "Provide login username if user is not root."
            ]
        },
        "pn_cliswitch": {
            "required": false,
            "description": [
                "Target switch(es) to run the cli on."
            ]
        },
        "pn_index": {
            "description": [
                "Specify the interface index from 1 to 255."
            ]
        }
    },
    "module": "pn_vrouterlbif"
}, {
    "short_description": "Package manager for Gentoo",
    "deprecated": null,
    "options": {
        "nodeps": {
            "default": false,
            "required": false,
            "description": [
                "Only merge packages but not their dependencies (--nodeps)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "onlydeps": {
            "default": false,
            "required": false,
            "description": [
                "Only merge packages' dependencies but not the packages (--onlydeps)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "newuse": {
            "default": false,
            "required": false,
            "description": [
                "Include installed packages where USE flags have changed (--newuse)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "oneshot": {
            "default": false,
            "required": false,
            "description": [
                "Do not add the packages to the world file (--oneshot)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "update": {
            "default": false,
            "required": false,
            "description": [
                "Update packages to the best version available (--update)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "deep": {
            "default": false,
            "required": false,
            "description": [
                "Consider the entire dependency tree of packages (--deep)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "sync": {
            "default": null,
            "required": false,
            "description": [
                "Sync package repositories first",
                "If yes, perform \"emerge --sync\"",
                "If web, perform \"emerge-webrsync\""
            ],
            "choices": [
                "web",
                "yes",
                "no"
            ]
        },
        "keepgoing": {
            "default": false,
            "required": false,
            "description": [
                "Continue as much as possible after an error."
            ],
            "version_added": 2.3,
            "choices": [
                "yes",
                "no"
            ]
        },
        "depclean": {
            "default": false,
            "required": false,
            "description": [
                "Remove packages not needed by explicitly merged packages (--depclean)",
                "If no package is specified, clean up the world's dependencies",
                "Otherwise, --depclean serves as a dependency aware version of --unmerge"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "jobs": {
            "default": "None",
            "required": false,
            "description": [
                "Specifies the number of packages to build simultaneously."
            ],
            "version_added": 2.3
        },
        "noreplace": {
            "default": false,
            "required": false,
            "description": [
                "Do not re-emerge installed packages (--noreplace)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "loadavg": {
            "default": "None",
            "required": false,
            "description": [
                "Specifies that no new builds should be started if there are",
                "other builds running and the load average is at least LOAD"
            ],
            "version_added": 2.3
        },
        "verbose": {
            "default": false,
            "required": false,
            "description": [
                "Run emerge in verbose mode (--verbose)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "getbinpkg": {
            "default": false,
            "required": false,
            "description": [
                "Prefer packages specified at PORTAGE_BINHOST in make.conf"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "package": {
            "default": null,
            "required": false,
            "description": [
                "Package atom or set, e.g. C(sys-apps/foo) or C(>foo-2.13) or C(@world)"
            ]
        },
        "quiet": {
            "default": false,
            "required": false,
            "description": [
                "Run emerge in quiet mode (--quiet)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "State of the package atom"
            ],
            "choices": [
                "present",
                "installed",
                "emerged",
                "absent",
                "removed",
                "unmerged",
                "latest"
            ]
        },
        "changed_use": {
            "default": false,
            "required": false,
            "description": [
                "Include installed packages where USE flags have changed, except when",
                "flags that the user has not enabled are added or removed",
                "(--changed-use)"
            ],
            "version_added": 1.8,
            "choices": [
                "yes",
                "no"
            ]
        },
        "usepkgonly": {
            "default": false,
            "required": false,
            "description": [
                "Merge only binaries (no compiling). This sets getbinpkg=yes."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "portage"
}, {
    "short_description": "Installing packages from FreeBSD's ports system",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "state of the package"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "use_packages": {
            "default": true,
            "required": false,
            "description": [
                "use packages instead of ports whenever available"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "name of package to install/remove"
            ]
        }
    },
    "module": "portinstall"
}, {
    "short_description": "Add or remove PostgreSQL databases from a remote host.",
    "deprecated": null,
    "options": {
        "ssl_rootcert": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the name of a file containing SSL certificate authority (CA) certificate(s).",
                "If the file exists, the server's certificate will be verified to be signed by one of these authorities."
            ],
            "version_added": "2.3"
        },
        "ssl_mode": {
            "default": "prefer",
            "required": false,
            "description": [
                "Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.",
                "See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.",
                "Default of C(prefer) matches libpq default."
            ],
            "version_added": "2.3",
            "choices": [
                "disable",
                "allow",
                "prefer",
                "require",
                "verify-ca",
                "verify-full"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "name of the database to add or remove"
            ]
        },
        "encoding": {
            "default": null,
            "required": false,
            "description": [
                "Encoding of the database"
            ]
        },
        "login_user": {
            "default": "postgres",
            "required": false,
            "description": [
                "The username used to authenticate with"
            ]
        },
        "lc_collate": {
            "default": null,
            "required": false,
            "description": [
                "Collation order (LC_COLLATE) to use in the database. Must match collation order of template database unless C(template0) is used as template."
            ]
        },
        "lc_ctype": {
            "default": null,
            "required": false,
            "description": [
                "Character classification (LC_CTYPE) to use in the database (e.g. lower, upper, ...) Must match LC_CTYPE of template database unless C(template0) is used as template."
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        },
        "login_unix_socket": {
            "default": null,
            "required": false,
            "description": [
                "Path to a Unix domain socket for local connections"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The database state"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "template": {
            "default": null,
            "required": false,
            "description": [
                "Template used to create the database"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with"
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the role to set as owner of the database"
            ]
        },
        "login_host": {
            "default": null,
            "required": false,
            "description": [
                "Host running the database"
            ]
        }
    },
    "module": "postgresql_db"
}, {
    "short_description": "Add or remove PostgreSQL extensions from a database.",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The database extension state"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "name of the extension to add or remove"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with"
            ]
        },
        "login_user": {
            "default": null,
            "required": false,
            "description": [
                "The username used to authenticate with"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "Host running the database"
            ]
        },
        "db": {
            "default": null,
            "required": true,
            "description": [
                "name of the database to add or remove the extension to/from"
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        }
    },
    "module": "postgresql_ext"
}, {
    "short_description": "Adds, removes or changes procedural languages with a PostgreSQL database.",
    "deprecated": null,
    "options": {
        "lang": {
            "default": null,
            "required": true,
            "description": [
                "name of the procedural language to add, remove or change"
            ]
        },
        "force_trust": {
            "default": false,
            "required": false,
            "description": [
                "marks the language as trusted, even if it's marked as untrusted in pg_pltemplate.",
                "use with care!"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "login_user": {
            "default": "postgres",
            "required": false,
            "description": [
                "User used to authenticate with PostgreSQL"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "Host running PostgreSQL where you want to execute the actions."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "name of database where the language will be added, removed or changed"
            ]
        },
        "cascade": {
            "default": false,
            "required": false,
            "description": [
                "when dropping a language, also delete object that depend on this language.",
                "only used when C(state=absent)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The state of the language for the selected database"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "Password used to authenticate with PostgreSQL (must match C(login_user))"
            ]
        },
        "trust": {
            "default": false,
            "required": false,
            "description": [
                "make this language trusted for the selected db"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "fail_on_drop": {
            "default": "yes",
            "required": false,
            "description": [
                "if C(yes), fail when removing a language. Otherwise just log and continue",
                "in some cases, it is not possible to remove a language (used by the db-system). When         dependencies block the removal, consider using C(cascade)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        }
    },
    "module": "postgresql_lang"
}, {
    "short_description": "Grant or revoke privileges on PostgreSQL database objects.",
    "deprecated": null,
    "options": {
        "objs": {
            "required": false,
            "description": [
                "Comma separated list of database objects to set privileges on.",
                "If I(type) is C(table) or C(sequence), the special value C(ALL_IN_SCHEMA) can be provided instead to specify all database objects of type I(type) in the schema specified via I(schema). (This also works with PostgreSQL < 9.0.)",
                "If I(type) is C(database), this parameter can be omitted, in which case privileges are set for the database specified via I(database).",
                "If I(type) is I(function), colons (\":\") in object names will be replaced with commas (needed to specify function signatures, see examples)",
                "Alias: I(obj)"
            ]
        },
        "ssl_rootcert": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the name of a file containing SSL certificate authority (CA) certificate(s). If the file exists, the server's certificate will be verified to be signed by one of these authorities."
            ],
            "version_added": "2.3"
        },
        "ssl_mode": {
            "default": "prefer",
            "required": false,
            "description": [
                "Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.",
                "See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.",
                "Default of C(prefer) matches libpq default."
            ],
            "version_added": "2.3",
            "choices": [
                "disable",
                "allow",
                "prefer",
                "require",
                "verify-ca",
                "verify-full"
            ]
        },
        "roles": {
            "required": true,
            "description": [
                "Comma separated list of role (user/group) names to set permissions for.",
                "The special value C(PUBLIC) can be provided instead to set permissions for the implicitly defined PUBLIC group.",
                "Alias: I(role)"
            ]
        },
        "privs": {
            "required": false,
            "description": [
                "Comma separated list of privileges to grant/revoke.",
                "Alias: I(priv)"
            ]
        },
        "database": {
            "required": true,
            "description": [
                "Name of database to connect to.",
                "Alias: I(db)"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "If C(present), the specified privileges are granted, if C(absent) they are revoked."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "unix_socket": {
            "default": null,
            "required": false,
            "description": [
                "Path to a Unix domain socket for local connections.",
                "Alias: I(login_unix_socket)"
            ]
        },
        "host": {
            "default": null,
            "required": false,
            "description": [
                "Database host address. If unspecified, connect via Unix socket.",
                "Alias: I(login_host)"
            ]
        },
        "login": {
            "default": "postgres",
            "description": [
                "The username to authenticate with.",
                "Alias: I(login_user)"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "The password to authenticate with.",
                "Alias: I(login_password))"
            ]
        },
        "type": {
            "default": "table",
            "required": false,
            "description": [
                "Type of database object to set privileges on."
            ],
            "choices": [
                "table",
                "sequence",
                "function",
                "database",
                "schema",
                "language",
                "tablespace",
                "group"
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        },
        "grant_option": {
            "required": false,
            "description": [
                "Whether C(role) may grant/revoke the specified privileges/group memberships to others.",
                "Set to C(no) to revoke GRANT OPTION, leave unspecified to make no changes.",
                "I(grant_option) only has an effect if I(state) is C(present).",
                "Alias: I(admin_option)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "schema": {
            "required": false,
            "description": [
                "Schema that contains the database objects specified via I(objs).",
                "May only be provided if I(type) is C(table), C(sequence) or C(function). Defaults to  C(public) in these cases."
            ]
        }
    },
    "module": "postgresql_privs"
}, {
    "short_description": "Add or remove PostgreSQL schema from a remote host",
    "deprecated": null,
    "options": {
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the schema to add or remove."
            ]
        },
        "database": {
            "default": "postgres",
            "required": false,
            "description": [
                "Name of the database to connect to."
            ]
        },
        "login_user": {
            "default": null,
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "Host running the database."
            ]
        },
        "login_unix_socket": {
            "default": null,
            "required": false,
            "description": [
                "Path to a Unix domain socket for local connections."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The schema state."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the role to set as owner of the schema."
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        }
    },
    "module": "postgresql_schema"
}, {
    "short_description": "Adds or removes a users (roles) from a PostgreSQL database.",
    "deprecated": null,
    "options": {
        "ssl_rootcert": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the name of a file containing SSL certificate authority (CA) certificate(s). If the file exists, the server's certificate will be verified to be signed by one of these authorities."
            ],
            "version_added": "2.3"
        },
        "ssl_mode": {
            "default": "prefer",
            "required": false,
            "description": [
                "Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.",
                "See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.",
                "Default of C(prefer) matches libpq default."
            ],
            "version_added": "2.3",
            "choices": [
                "disable",
                "allow",
                "prefer",
                "require",
                "verify-ca",
                "verify-full"
            ]
        },
        "login_user": {
            "default": "postgres",
            "required": false,
            "description": [
                "User (role) used to authenticate with PostgreSQL"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "Host running PostgreSQL."
            ]
        },
        "expires": {
            "default": null,
            "required": false,
            "description": [
                "sets the user's password expiration."
            ],
            "version_added": "1.4"
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "name of database where permissions will be granted"
            ]
        },
        "login_unix_socket": {
            "default": null,
            "required": false,
            "description": [
                "Path to a Unix domain socket for local connections"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "Password used to authenticate with PostgreSQL"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "set the user's password, before 1.4 this was required.",
                "When passing an encrypted password, the encrypted parameter must also be true, and it must be generated with the format C('str[\"md5\"] + md5[ password + username ]'), resulting in a total of 35 characters.  An easy way to do this is: C(echo \"md5`echo -n \"verysecretpasswordJOE\" | md5`\"). Note that if encrypted is set, the stored password will be hashed whether or not it is pre-encrypted."
            ]
        },
        "port": {
            "default": 5432,
            "required": false,
            "description": [
                "Database port to connect to."
            ]
        },
        "fail_on_user": {
            "default": "yes",
            "required": false,
            "description": [
                "if C(yes), fail when user can't be removed. Otherwise just log and continue"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "priv": {
            "default": null,
            "required": false,
            "description": [
                "PostgreSQL privileges string in the format: C(table:priv1,priv2)"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "name of the user (role) to add or remove"
            ]
        },
        "no_password_changes": {
            "default": "no",
            "required": false,
            "description": [
                "if C(yes), don't inspect database for password changes. Effective when C(pg_authid) is not accessible (such as AWS RDS). Otherwise, make password changes as necessary."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The user (role) state"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "encrypted": {
            "default": false,
            "required": false,
            "description": [
                "whether the password is stored hashed in the database. boolean. Passwords can be passed already hashed or unhashed, and postgresql ensures the stored password is hashed when encrypted is set."
            ],
            "version_added": "1.4"
        },
        "role_attr_flags": {
            "default": "",
            "required": false,
            "description": [
                "PostgreSQL role attributes string in the format: CREATEDB,CREATEROLE,SUPERUSER"
            ],
            "choices": [
                "[NO]SUPERUSER",
                "[NO]CREATEROLE",
                "[NO]CREATEUSER",
                "[NO]CREATEDB",
                "[NO]INHERIT",
                "[NO]LOGIN",
                "[NO]REPLICATION"
            ]
        }
    },
    "module": "postgresql_user"
}, {
    "short_description": "Create, destroy, start, stop, and reboot a ProfitBricks virtual machine.",
    "deprecated": null,
    "options": {
        "lan": {
            "default": 1,
            "required": false,
            "description": [
                "The ID of the LAN you wish to add the servers to."
            ]
        },
        "image_password": {
            "required": false,
            "description": [
                "Password set for the administrative user."
            ],
            "version_added": "2.2"
        },
        "bus": {
            "default": "VIRTIO",
            "required": false,
            "description": [
                "The bus type for the volume."
            ],
            "choices": [
                "IDE",
                "VIRTIO"
            ]
        },
        "image": {
            "required": true,
            "description": [
                "The system image ID for creating the virtual machine, e.g. a3eae284-a2fe-11e4-b187-5f1f641608c8."
            ]
        },
        "ram": {
            "default": 2048,
            "required": false,
            "description": [
                "The amount of memory to allocate to the virtual machine."
            ]
        },
        "instance_ids": {
            "required": false,
            "description": [
                "list of instance ids, currently only used when state='absent' to remove instances."
            ]
        },
        "subscription_password": {
            "default": null,
            "required": false,
            "description": [
                "THe ProfitBricks password. Overrides the PB_PASSWORD environment variable."
            ]
        },
        "wait_timeout": {
            "default": 600,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "assign_public_ip": {
            "default": false,
            "required": false,
            "description": [
                "This will assign the machine to the public LAN. If no LAN exists with public Internet access it is created."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "wait for the instance to be in state 'running' before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "count": {
            "default": 1,
            "required": false,
            "description": [
                "The number of virtual machines to create."
            ]
        },
        "datacenter": {
            "default": null,
            "required": false,
            "description": [
                "The datacenter to provision this virtual machine."
            ]
        },
        "remove_boot_volume": {
            "default": "yes",
            "required": false,
            "description": [
                "remove the bootVolume of the virtual machine you're destroying."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "ssh_keys": {
            "required": false,
            "description": [
                "Public SSH keys allowing access to the virtual machine."
            ],
            "version_added": "2.2"
        },
        "subscription_user": {
            "default": null,
            "required": false,
            "description": [
                "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environment variable."
            ]
        },
        "cpu_family": {
            "default": "AMD_OPTERON",
            "required": false,
            "description": [
                "The CPU family type to allocate to the virtual machine."
            ],
            "version_added": "2.2",
            "choices": [
                "AMD_OPTERON",
                "INTEL_XEON"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the virtual machine."
            ]
        },
        "volume_size": {
            "default": 10,
            "required": false,
            "description": [
                "The size in GB of the boot volume."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "create or terminate instances"
            ],
            "choices": [
                "running",
                "stopped",
                "absent",
                "present"
            ]
        },
        "location": {
            "default": "us/las",
            "required": false,
            "description": [
                "The datacenter location. Use only if you want to create the Datacenter or else this value is ignored."
            ],
            "choices": [
                "us/las",
                "de/fra",
                "de/fkb"
            ]
        },
        "auto_increment": {
            "default": true,
            "description": [
                "Whether or not to increment a single number in the name for created virtual machines."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "cores": {
            "default": 2,
            "required": false,
            "description": [
                "The number of CPU cores to allocate to the virtual machine."
            ]
        }
    },
    "module": "profitbricks"
}, {
    "short_description": "Create or destroy a ProfitBricks Virtual Datacenter.",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "The name of the virtual datacenter."
            ]
        },
        "subscription_user": {
            "required": false,
            "description": [
                "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environment variable."
            ]
        },
        "subscription_password": {
            "required": false,
            "description": [
                "THe ProfitBricks password. Overrides the PB_PASSWORD environment variable."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "create or terminate datacenters"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 600,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "location": {
            "default": "us/las",
            "required": false,
            "description": [
                "The datacenter location."
            ],
            "choices": [
                "us/las",
                "de/fra",
                "de/fkb"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "wait for the datacenter to be created before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "description": {
            "required": false,
            "description": [
                "The description of the virtual datacenter."
            ]
        }
    },
    "module": "profitbricks_datacenter"
}, {
    "short_description": "Create or Remove a NIC.",
    "deprecated": null,
    "options": {
        "datacenter": {
            "required": true,
            "description": [
                "The datacenter in which to operate."
            ]
        },
        "lan": {
            "required": true,
            "description": [
                "The LAN to place the NIC on. You can pass a LAN that doesn't exist and it will be created. Required on create."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name or ID of the NIC. This is only required on deletes, but not on create."
            ]
        },
        "subscription_user": {
            "required": false,
            "description": [
                "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environment variable."
            ]
        },
        "server": {
            "required": true,
            "description": [
                "The server name or ID."
            ]
        },
        "subscription_password": {
            "required": false,
            "description": [
                "THe ProfitBricks password. Overrides the PB_PASSWORD environment variable."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 600,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "wait for the operation to complete before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "profitbricks_nic"
}, {
    "short_description": "Create or destroy a volume.",
    "deprecated": null,
    "options": {
        "image_password": {
            "required": false,
            "description": [
                "Password set for the administrative user."
            ],
            "version_added": "2.2"
        },
        "licence_type": {
            "default": "UNKNOWN",
            "required": false,
            "description": [
                "The licence type for the volume. This is used when the image is non-standard."
            ],
            "choices": [
                "LINUX",
                "WINDOWS",
                "UNKNOWN",
                "OTHER"
            ]
        },
        "bus": {
            "default": "VIRTIO",
            "required": false,
            "description": [
                "The bus type."
            ],
            "choices": [
                "IDE",
                "VIRTIO"
            ]
        },
        "image": {
            "required": true,
            "description": [
                "The system image ID for the volume, e.g. a3eae284-a2fe-11e4-b187-5f1f641608c8. This can also be a snapshot image ID."
            ]
        },
        "instance_ids": {
            "required": false,
            "description": [
                "list of instance ids, currently only used when state='absent' to remove instances."
            ]
        },
        "subscription_password": {
            "required": false,
            "description": [
                "THe ProfitBricks password. Overrides the PB_PASSWORD environment variable."
            ]
        },
        "wait_timeout": {
            "default": 600,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "disk_type": {
            "default": "HDD",
            "required": false,
            "description": [
                "The disk type of the volume."
            ],
            "choices": [
                "HDD",
                "SSD"
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "wait for the datacenter to be created before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "count": {
            "default": 1,
            "required": false,
            "description": [
                "The number of volumes you wish to create."
            ]
        },
        "datacenter": {
            "required": true,
            "description": [
                "The datacenter in which to create the volumes."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the volumes. You can enumerate the names using auto_increment."
            ]
        },
        "subscription_user": {
            "required": false,
            "description": [
                "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environment variable."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "create or terminate datacenters"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auto_increment": {
            "default": true,
            "description": [
                "Whether or not to increment a single number in the name for created virtual machines."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "size": {
            "default": 10,
            "required": false,
            "description": [
                "The size of the volume."
            ]
        },
        "ssh_keys": {
            "required": false,
            "description": [
                "Public SSH keys allowing access to the virtual machine."
            ],
            "version_added": "2.2"
        }
    },
    "module": "profitbricks_volume"
}, {
    "short_description": "Attach or detach a volume.",
    "deprecated": null,
    "options": {
        "datacenter": {
            "required": true,
            "description": [
                "The datacenter in which to operate."
            ]
        },
        "subscription_user": {
            "required": false,
            "description": [
                "The ProfitBricks username. Overrides the PB_SUBSCRIPTION_ID environment variable."
            ]
        },
        "server": {
            "required": true,
            "description": [
                "The name of the server you wish to detach or attach the volume."
            ]
        },
        "volume": {
            "required": true,
            "description": [
                "The volume name or ID."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 600,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "subscription_password": {
            "required": false,
            "description": [
                "THe ProfitBricks password. Overrides the PB_PASSWORD environment variable."
            ]
        },
        "wait": {
            "default": "yes",
            "required": false,
            "description": [
                "wait for the operation to complete before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "profitbricks_volume_attachments"
}, {
    "short_description": "management of instances in Proxmox VE cluster",
    "deprecated": null,
    "options": {
        "node": {
            "default": null,
            "required": false,
            "description": [
                "Proxmox VE node, when new VM will be created",
                "required only for C(state=present)",
                "for another states will be autodiscovered"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "forcing operations",
                "can be used only with states C(present), C(stopped), C(restarted)",
                "with C(state=present) force option allow to overwrite existing container",
                "with states C(stopped) , C(restarted) allow to force stop instance"
            ]
        },
        "cpuunits": {
            "default": 1000,
            "required": false,
            "description": [
                "CPU weight for a VM"
            ]
        },
        "vmid": {
            "default": null,
            "required": false,
            "description": [
                "the instance id",
                "if not set, the next available VM ID will be fetched from ProxmoxAPI.",
                "if not set, will be fetched from PromoxAPI based on the hostname"
            ]
        },
        "api_password": {
            "default": null,
            "required": false,
            "description": [
                "the password to authenticate with",
                "you can use PROXMOX_PASSWORD environment variable"
            ]
        },
        "cpus": {
            "default": 1,
            "required": false,
            "description": [
                "numbers of allocated cpus for instance"
            ]
        },
        "ostemplate": {
            "default": null,
            "required": false,
            "description": [
                "the template for VM creating",
                "required only for C(state=present)"
            ]
        },
        "unprivileged": {
            "default": false,
            "required": false,
            "description": [
                "Indicate if the container should be unprivileged"
            ],
            "version_added": "2.3"
        },
        "disk": {
            "default": 3,
            "required": false,
            "description": [
                "hard disk size in GB for instance"
            ]
        },
        "ip_address": {
            "default": null,
            "required": false,
            "description": [
                "specifies the address the container will be assigned"
            ]
        },
        "pool": {
            "default": null,
            "required": false,
            "description": [
                "Proxmox VE resource pool"
            ],
            "version_added": "2.3"
        },
        "api_host": {
            "required": true,
            "description": [
                "the host of the Proxmox VE cluster"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "the instance root password",
                "required only for C(state=present)"
            ]
        },
        "searchdomain": {
            "default": null,
            "required": false,
            "description": [
                "sets DNS search domain for a container"
            ]
        },
        "netif": {
            "default": null,
            "required": false,
            "description": [
                "specifies network interfaces for the container. As a hash/dictionary defining interfaces."
            ]
        },
        "api_user": {
            "required": true,
            "description": [
                "the user to authenticate with"
            ]
        },
        "validate_certs": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "enable / disable https certificate verification"
            ]
        },
        "hostname": {
            "default": null,
            "required": false,
            "description": [
                "the instance hostname",
                "required only for C(state=present)",
                "must be unique if vmid is not passed"
            ]
        },
        "storage": {
            "default": "local",
            "required": false,
            "description": [
                "target storage"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the instance"
            ],
            "choices": [
                "present",
                "started",
                "absent",
                "stopped",
                "restarted"
            ]
        },
        "swap": {
            "default": 0,
            "required": false,
            "description": [
                "swap memory size in MB for instance"
            ]
        },
        "timeout": {
            "default": 30,
            "required": false,
            "description": [
                "timeout for operations"
            ]
        },
        "memory": {
            "default": 512,
            "required": false,
            "description": [
                "memory size in MB for instance"
            ]
        },
        "mounts": {
            "default": null,
            "required": false,
            "description": [
                "specifies additional mounts (separate disks) for the container. As a hash/dictionary defining mount points"
            ],
            "version_added": "2.2"
        },
        "nameserver": {
            "default": null,
            "required": false,
            "description": [
                "sets DNS server IP address for a container"
            ]
        },
        "pubkey": {
            "default": null,
            "description": [
                "Public key to add to /root/.ssh/authorized_keys. This was added on Proxmox 4.2, it is ignored for earlier versions"
            ],
            "version_added": "2.3"
        },
        "onboot": {
            "default": false,
            "required": false,
            "description": [
                "specifies whether a VM will be started during system bootup"
            ]
        }
    },
    "module": "proxmox"
}, {
    "short_description": "Management of Qemu(KVM) Virtual Machines in Proxmox VE cluster.",
    "deprecated": null,
    "options": {
        "revert": {
            "default": null,
            "required": false,
            "description": [
                "Revert a pending change."
            ]
        },
        "boot": {
            "default": "cnd",
            "required": false,
            "description": [
                "Specify the boot order -> boot on floppy C(a), hard disk C(c), CD-ROM C(d), or network C(n).",
                "You can combine to set order."
            ]
        },
        "migrate_speed": {
            "default": null,
            "required": false,
            "description": [
                "Sets maximum speed (in MB/s) for migrations.",
                "A value of 0 is no limit."
            ]
        },
        "vga": {
            "default": "std",
            "required": false,
            "description": [
                "Select VGA type. If you want to use high resolution modes (>= 1280x1024x16) then you should use option 'std' or 'vmware'."
            ],
            "choices": [
                "std",
                "cirrus",
                "vmware",
                "qxl",
                "serial0",
                "serial1",
                "serial2",
                "serial3",
                "qxl2",
                "qxl3",
                "qxl4"
            ]
        },
        "keyboard": {
            "default": null,
            "required": false,
            "description": [
                "Sets the keyboard layout for VNC server."
            ]
        },
        "watchdog": {
            "default": null,
            "required": false,
            "description": [
                "Creates a virtual hardware watchdog device."
            ]
        },
        "sockets": {
            "default": 1,
            "required": false,
            "description": [
                "Sets the number of CPU sockets. (1 - N)."
            ]
        },
        "digest": {
            "default": null,
            "required": false,
            "description": [
                "Specify if to prevent changes if current configuration file has different SHA1 digest.",
                "This can be used to prevent concurrent modifications."
            ]
        },
        "tablet": {
            "default": "no",
            "required": false,
            "description": [
                "Enables/disables the USB tablet device."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "bios": {
            "default": null,
            "required": false,
            "description": [
                "Specify the BIOS implementation."
            ],
            "choices": [
                "seabios",
                "ovmf"
            ]
        },
        "hostpci": {
            "default": null,
            "required": false,
            "description": [
                "Specify a hash/dictionary of map host pci devices into guest. C(hostpci='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(hostpci[n]) where 0 ≤ n ≤ N.",
                "Values allowed are -  C(\"host=\"HOSTPCIID[;HOSTPCIID2...]\",pcie=\"1|0\",rombar=\"1|0\",x-vga=\"1|0\"\").",
                "The C(host) parameter is Host PCI device pass through. HOSTPCIID syntax is C(bus:dev.func) (hexadecimal numbers).",
                "C(pcie=boolean) I(default=0) Choose the PCI-express bus (needs the q35 machine model).",
                "C(rombar=boolean) I(default=1) Specify whether or not the device’s ROM will be visible in the guest’s memory map.",
                "C(x-vga=boolean) I(default=0) Enable vfio-vga device support.",
                "/!\\ This option allows direct access to host hardware. So it is no longer possible to migrate such machines - use with special care."
            ]
        },
        "autostart": {
            "default": "no",
            "required": false,
            "description": [
                "Specify, if the VM should be automatically restarted after crash (currently ignored in PVE API)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "memory": {
            "default": 512,
            "required": false,
            "description": [
                "Memory size in MB for instance."
            ]
        },
        "migrate_downtime": {
            "default": null,
            "required": false,
            "description": [
                "Sets maximum tolerated downtime (in seconds) for migrations."
            ]
        },
        "localtime": {
            "default": null,
            "required": false,
            "description": [
                "Sets the real time clock to local time.",
                "This is enabled by default if ostype indicates a Microsoft OS."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "virtio": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of volume used as VIRTIO hard disk. C(virtio='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(virto[n]) where 0 ≤ n ≤ 15.",
                "Values allowed are -  C(\"storage:size,format=value\").",
                "C(storage) is the storage identifier where to create the disk.",
                "C(size) is the size of the disk in GB.",
                "C(format) is the drive’s backing file’s data format. C(qcow2|raw|subvol)."
            ]
        },
        "format": {
            "default": "qcow2",
            "required": false,
            "description": [
                "Target drive’s backing file’s data format.",
                "Used only with clone"
            ],
            "choices": [
                "cloop",
                "cow",
                "qcow",
                "qcow2",
                "qed",
                "raw",
                "vmdk"
            ]
        },
        "snapname": {
            "default": null,
            "required": false,
            "description": [
                "The name of the snapshot. Used only with clone."
            ]
        },
        "hotplug": {
            "default": null,
            "required": false,
            "description": [
                "Selectively enable hotplug features.",
                "This is a comma separated list of hotplug features C('network', 'disk', 'cpu', 'memory' and 'usb').",
                "Value 0 disables hotplug completely and value 1 is an alias for the default C('network,disk,usb')."
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the VM name. Only used on the configuration web interface.",
                "Required only for C(state=present)."
            ]
        },
        "target": {
            "default": null,
            "required": false,
            "description": [
                "Target node. Only allowed if the original VM is on shared storage.",
                "Used only with clone"
            ]
        },
        "vmid": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the VM ID. Instead use I(name) parameter.",
                "If vmid is not set, the next available VM ID will be fetched from ProxmoxAPI."
            ]
        },
        "bootdisk": {
            "default": null,
            "required": false,
            "description": [
                "Enable booting from specified disk. C((ide|sata|scsi|virtio)\\d+)"
            ]
        },
        "vcpus": {
            "default": null,
            "required": false,
            "description": [
                "Sets number of hotplugged vcpus."
            ]
        },
        "newid": {
            "default": null,
            "required": false,
            "description": [
                "VMID for the clone. Used only with clone.",
                "If newid is not set, the next available VM ID will be fetched from ProxmoxAPI."
            ]
        },
        "timeout": {
            "default": 30,
            "required": false,
            "description": [
                "Timeout for operations."
            ]
        },
        "skiplock": {
            "default": null,
            "required": false,
            "description": [
                "Ignore locks",
                "Only root is allowed to use this option."
            ]
        },
        "validate_certs": {
            "default": "no",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "onboot": {
            "default": "yes",
            "required": false,
            "description": [
                "Specifies whether a VM will be started during system bootup."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "delete": {
            "default": null,
            "required": false,
            "description": [
                "Specify a list of settings you want to delete."
            ]
        },
        "force": {
            "default": null,
            "required": false,
            "description": [
                "Allow to force stop VM.",
                "Can be used only with states C(stopped), C(restarted)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "lock": {
            "default": null,
            "required": false,
            "description": [
                "Lock/unlock the VM."
            ],
            "choices": [
                "migrate",
                "backup",
                "snapshot",
                "rollback"
            ]
        },
        "startup": {
            "default": null,
            "required": false,
            "description": [
                "Startup and shutdown behavior. C([[order=]\\d+] [,up=\\d+] [,down=\\d+]).",
                "Order is a non-negative number defining the general startup order.",
                "Shutdown in done with reverse ordering."
            ]
        },
        "agent": {
            "default": null,
            "required": false,
            "description": [
                "Specify if the QEMU GuestAgent should be enabled/disabled."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "freeze": {
            "default": null,
            "required": false,
            "description": [
                "Specify if PVE should freeze CPU at startup (use 'c' monitor command to start execution)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "serial": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of serial device to create inside the VM. C('{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - serial[n](str; required) where 0 ≤ n ≤ 3.",
                "Values allowed are - C((/dev/.+|socket)).",
                "/!\\ If you pass through a host serial device, it is no longer possible to migrate such machines - use with special care."
            ]
        },
        "startdate": {
            "default": null,
            "required": false,
            "description": [
                "Sets the initial date of the real time clock.",
                "Valid format for date are C('now') or C('2016-09-25T16:01:21') or C('2016-09-25')."
            ]
        },
        "balloon": {
            "default": 0,
            "required": false,
            "description": [
                "Specify the amount of RAM for the VM in MB.",
                "Using zero disables the balloon driver."
            ]
        },
        "cpuunits": {
            "default": 1000,
            "required": false,
            "description": [
                "Specify CPU weight for a VM.",
                "You can disable fair-scheduler configuration by setting this to 0"
            ]
        },
        "storage": {
            "default": null,
            "required": false,
            "description": [
                "Target storage for full clone."
            ]
        },
        "reboot": {
            "default": null,
            "required": false,
            "description": [
                "Allow reboot. If set to yes, the VM exit on reboot."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "shares": {
            "default": null,
            "required": false,
            "description": [
                "Rets amount of memory shares for auto-ballooning. (0 - 50000).",
                "The larger the number is, the more memory this VM gets.",
                "The number is relative to weights of all other running VMs.",
                "Using 0 disables auto-ballooning, this means no limit."
            ]
        },
        "machine": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the Qemu machine type.",
                "type => C((pc|pc(-i440fx)?-\\d+\\.\\d+(\\.pxe)?|q35|pc-q35-\\d+\\.\\d+(\\.pxe)?))"
            ]
        },
        "sata": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of volume used as sata hard disk or CD-ROM. C(sata='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(sata[n]) where 0 ≤ n ≤ 5.",
                "Values allowed are -  C(\"storage:size,format=value\").",
                "C(storage) is the storage identifier where to create the disk.",
                "C(size) is the size of the disk in GB.",
                "C(format) is the drive’s backing file’s data format. C(qcow2|raw|subvol)."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicates desired state of the instance.",
                "If C(current), the current state of the VM will be fecthed. You can access it with C(results.status)"
            ],
            "choices": [
                "present",
                "started",
                "absent",
                "stopped",
                "restarted",
                "current"
            ]
        },
        "template": {
            "default": "no",
            "required": false,
            "description": [
                "Enables/disables the template."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "net": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of network interfaces for the VM. C(net='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(net[n]) where 0 ≤ n ≤ N.",
                "Values allowed are - C(\"model=\"XX:XX:XX:XX:XX:XX\",brigde=\"value\",rate=\"value\",tag=\"value\",firewall=\"1|0\",trunks=\"vlanid\"\").",
                "Model is one of C(e1000 e1000-82540em e1000-82544gc e1000-82545em i82551 i82557b i82559er ne2k_isa ne2k_pci pcnet rtl8139 virtio vmxnet3).",
                "C(XX:XX:XX:XX:XX:XX) should be an unique MAC address. This is automatically generated if not specified.",
                "The C(bridge) parameter can be used to automatically add the interface to a bridge device. The Proxmox VE standard bridge is called 'vmbr0'.",
                "Option C(rate) is used to limit traffic bandwidth from and to this interface. It is specified as floating point number, unit is 'Megabytes per second'.",
                "If you specify no bridge, we create a kvm 'user' (NATed) network device, which provides DHCP and DNS services."
            ]
        },
        "acpi": {
            "default": "yes",
            "required": false,
            "description": [
                "Specify if ACPI should be enables/disabled."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "node": {
            "default": null,
            "required": false,
            "description": [
                "Proxmox VE node, where the new VM will be created.",
                "Only required for C(state=present).",
                "For other states, it will be autodiscovered."
            ]
        },
        "full": {
            "default": true,
            "required": false,
            "description": [
                "Create a full copy of all disk. This is always done when you clone a normal VM.",
                "For VM templates, we try to create a linked clone by default.",
                "Used only with clone"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Specify the description for the VM. Only used on the configuration web interface.",
                "This is saved as comment inside the configuration file."
            ]
        },
        "scsihw": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the SCSI controller model."
            ],
            "choices": [
                "lsi",
                "lsi53c810",
                "virtio-scsi-pci",
                "virtio-scsi-single",
                "megasas",
                "pvscsi"
            ]
        },
        "clone": {
            "default": null,
            "required": false,
            "description": [
                "Name of VM to be cloned. If C(vmid) is setted, C(clone) can take arbitrary value but required for intiating the clone."
            ]
        },
        "args": {
            "default": "-serial unix:/var/run/qemu-server/VMID.serial,server,nowait",
            "required": false,
            "description": [
                "Pass arbitrary arguments to kvm.",
                "This option is for experts only!"
            ]
        },
        "api_password": {
            "default": null,
            "required": false,
            "description": [
                "Specify the password to authenticate with.",
                "You can use C(PROXMOX_PASSWORD) environment variable."
            ]
        },
        "tdf": {
            "default": null,
            "required": false,
            "description": [
                "Enables/disables time drift fix."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "update": {
            "default": "no",
            "required": false,
            "description": [
                "If C(yes), the VM will be update with new value.",
                "Cause of the operations of the API and security reasons, I have disabled the update of the following parameters",
                "C(net, virtio, ide, sata, scsi). Per example updating C(net) update the MAC address and C(virtio) create always new disk..."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "kvm": {
            "default": "yes",
            "required": false,
            "description": [
                "Enable/disable KVM hardware virtualization."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "ostype": {
            "default": "l26",
            "required": false,
            "description": [
                "Specifies guest operating system. This is used to enable special optimization/features for specific operating systems.",
                "The l26 is Linux 2.6/3.X Kernel."
            ],
            "choices": [
                "other",
                "wxp",
                "w2k",
                "w2k3",
                "w2k8",
                "wvista",
                "win7",
                "win8",
                "l24",
                "l26",
                "solaris"
            ]
        },
        "protection": {
            "default": null,
            "required": false,
            "description": [
                "Enable/disable the protection flag of the VM. This will enable/disable the remove VM and remove disk operations."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "numa": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionaries of NUMA topology. C(numa='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(numa[n]) where 0 ≤ n ≤ N.",
                "Values allowed are - C(\"cpu=\"<id[-id];...>\",hostnodes=\"<id[-id];...>\",memory=\"number\",policy=\"(bind|interleave|preferred)\"\").",
                "C(cpus) CPUs accessing this NUMA node.",
                "C(hostnodes) Host NUMA nodes to use.",
                "C(memory) Amount of memory this NUMA node provides.",
                "C(policy) NUMA allocation policy."
            ]
        },
        "parallel": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of map host parallel devices. C(parallel='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - (parallel[n]) where 0 ≤ n ≤ 2.",
                "Values allowed are - C(\"/dev/parport\\d+|/dev/usb/lp\\d+\")."
            ]
        },
        "pool": {
            "default": null,
            "required": false,
            "description": [
                "Add the new VM to the specified pool."
            ]
        },
        "api_host": {
            "required": true,
            "description": [
                "Specify the target host of the Proxmox VE cluster."
            ]
        },
        "cpulimit": {
            "default": null,
            "required": false,
            "description": [
                "Specify if CPU usage will be limited. Value 0 indicates no CPU limit.",
                "If the computer has 2 CPUs, it has total of '2' CPU time"
            ]
        },
        "api_user": {
            "required": true,
            "description": [
                "Specify the user to authenticate with."
            ]
        },
        "hugepages": {
            "default": null,
            "required": false,
            "description": [
                "Enable/disable hugepages memory."
            ],
            "choices": [
                "any",
                "2",
                "1024"
            ]
        },
        "smbios": {
            "default": null,
            "required": false,
            "description": [
                "Specifies SMBIOS type 1 fields."
            ]
        },
        "cores": {
            "default": 1,
            "required": false,
            "description": [
                "Specify number of cores per socket."
            ]
        },
        "scsi": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of volume used as SCSI hard disk or CD-ROM. C(scsi='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(sata[n]) where 0 ≤ n ≤ 13.",
                "Values allowed are -  C(\"storage:size,format=value\").",
                "C(storage) is the storage identifier where to create the disk.",
                "C(size) is the size of the disk in GB.",
                "C(format) is the drive’s backing file’s data format. C(qcow2|raw|subvol)."
            ]
        },
        "ide": {
            "default": null,
            "required": false,
            "description": [
                "A hash/dictionary of volume used as IDE hard disk or CD-ROM. C(ide='{\"key\":\"value\", \"key\":\"value\"}').",
                "Keys allowed are - C(ide[n]) where 0 ≤ n ≤ 3.",
                "Values allowed are - C(\"storage:size,format=value\").",
                "C(storage) is the storage identifier where to create the disk.",
                "C(size) is the size of the disk in GB.",
                "C(format) is the drive’s backing file’s data format. C(qcow2|raw|subvol)."
            ]
        },
        "cpu": {
            "default": "kvm64",
            "required": false,
            "description": [
                "Specify emulated CPU type."
            ]
        }
    },
    "module": "proxmox_kvm"
}, {
    "short_description": "management of OS templates in Proxmox VE cluster",
    "deprecated": null,
    "options": {
        "node": {
            "default": null,
            "required": true,
            "description": [
                "Proxmox VE node, when you will operate with template"
            ]
        },
        "src": {
            "default": null,
            "required": false,
            "description": [
                "path to uploaded file",
                "required only for C(state=present)"
            ],
            "aliases": [
                "path"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "can be used only with C(state=present), exists template will be overwritten"
            ]
        },
        "api_host": {
            "required": true,
            "description": [
                "the host of the Proxmox VE cluster"
            ]
        },
        "api_user": {
            "required": true,
            "description": [
                "the user to authenticate with"
            ]
        },
        "api_password": {
            "default": null,
            "required": false,
            "description": [
                "the password to authenticate with",
                "you can use PROXMOX_PASSWORD environment variable"
            ]
        },
        "storage": {
            "default": "local",
            "required": false,
            "description": [
                "target storage"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the template"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "content_type": {
            "default": "vztmpl",
            "required": false,
            "description": [
                "content type",
                "required only for C(state=present)"
            ],
            "choices": [
                "vztmpl",
                "iso"
            ]
        },
        "timeout": {
            "default": 30,
            "required": false,
            "description": [
                "timeout for operations"
            ]
        },
        "validate_certs": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "enable / disable https certificate verification"
            ]
        },
        "template": {
            "default": null,
            "required": false,
            "description": [
                "the template name",
                "required only for states C(absent), C(info)"
            ]
        }
    },
    "module": "proxmox_template"
}, {
    "short_description": "Adds or removes mysql hosts from proxysql admin interface.",
    "deprecated": null,
    "options": {
        "status": {
            "description": [
                "ONLINE - Backend server is fully operational. OFFLINE_SOFT - When a server is put into C(OFFLINE_SOFT) mode, connections are kept in use until the current transaction is completed. This allows to gracefully detach a backend. OFFLINE_HARD - When a server is put into C(OFFLINE_HARD) mode, the existing connections are dropped, while new incoming connections aren't accepted either.\nIf omitted the proxysql database default for I(status) is C(ONLINE)."
            ],
            "choices": [
                "ONLINE",
                "OFFLINE_SOFT",
                "OFFLINE_HARD"
            ]
        },
        "comment": {
            "default": "",
            "description": [
                "Text field that can be used for any purposed defined by the user. Could be a description of what the host stores, a reminder of when the host was added or disabled, or a JSON processed by some checker script."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "weight": {
            "description": [
                "The bigger the weight of a server relative to other weights, the higher the probability of the server being chosen from the hostgroup. If omitted the proxysql database default for I(weight) is 1."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "use_ssl": {
            "description": [
                "If I(use_ssl) is set to C(True), connections to this server will be made using SSL connections. If omitted the proxysql database default for I(use_ssl) is C(False)."
            ]
        },
        "port": {
            "default": 3306,
            "description": [
                "The port at which the mysqld instance can be contacted."
            ]
        },
        "max_connections": {
            "description": [
                "The maximum number of connections ProxySQL will open to this backend server. If omitted the proxysql database default for I(max_connections) is 1000."
            ]
        },
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "compression": {
            "description": [
                "If the value of I(compression) is greater than 0, new connections to that server will use compression. If omitted the proxysql database default for I(compression) is 0."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The ip address at which the mysqld instance can be contacted."
            ]
        },
        "hostgroup_id": {
            "default": 0,
            "description": [
                "The hostgroup in which this mysqld instance is included. An instance can be part of one or more hostgroups."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present) - adds the host, when C(absent) - removes the host."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "max_latency_ms": {
            "description": [
                "Ping time is monitored regularly. If a host has a ping time greater than I(max_latency_ms) it is excluded from the connection pool (although the server stays ONLINE). If omitted the proxysql database default for I(max_latency_ms) is 0."
            ]
        },
        "max_replication_lag": {
            "description": [
                "If greater than 0, ProxySQL will reguarly monitor replication lag. If replication lag goes above I(max_replication_lag), proxysql will temporarily shun the server until replication catches up. If omitted the proxysql database default for I(max_replication_lag) is 0."
            ]
        }
    },
    "module": "proxysql_backend_servers"
}, {
    "short_description": "Gets or sets the proxysql global variables.",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "value": {
            "description": [
                "Defines a value the variable specified using I(variable) should be set to."
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "variable": {
            "required": true,
            "description": [
                "Defines which variable should be returned, or if I(value) is specified which variable should be updated."
            ]
        }
    },
    "module": "proxysql_global_variables"
}, {
    "short_description": "Writes the proxysql configuration settings between layers.",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "direction": {
            "required": true,
            "description": [
                "FROM - denotes we're reading values FROM the supplied I(config_layer) and writing to the next layer. TO - denotes we're reading from the previous layer and writing TO the supplied I(config_layer).\""
            ],
            "choices": [
                "FROM",
                "TO"
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "config_settings": {
            "required": true,
            "description": [
                "The I(config_settings) specifies which configuration we're writing."
            ],
            "choices": [
                "MYSQL USERS",
                "MYSQL SERVERS",
                "MYSQL QUERY RULES",
                "MYSQL VARIABLES",
                "ADMIN VARIABLES",
                "SCHEDULER"
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "action": {
            "required": true,
            "description": [
                "The supplied I(action) combines with the supplied I(direction) to provide the semantics of how we want to move the I(config_settings) between the I(config_layers)."
            ],
            "choices": [
                "LOAD",
                "SAVE"
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "config_layer": {
            "required": true,
            "description": [
                "RUNTIME - represents the in-memory data structures of ProxySQL used by the threads that are handling the requests. MEMORY - (sometimes also referred as main) represents the in-memory SQLite3 database. DISK - represents the on-disk SQLite3 database. CONFIG - is the classical config file. You can only LOAD FROM the config file."
            ],
            "choices": [
                "MEMORY",
                "DISK",
                "RUNTIME",
                "CONFIG"
            ]
        }
    },
    "module": "proxysql_manage_config"
}, {
    "short_description": "Adds or removes mysql users from proxysql admin interface.",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "Name of the user connecting to the mysqld or ProxySQL instance."
            ]
        },
        "default_hostgroup": {
            "description": [
                "If there is no matching rule for the queries sent by this user, the traffic it generates is sent to the specified hostgroup. If omitted the proxysql database default for I(use_ssl) is 0."
            ]
        },
        "frontend": {
            "default": true,
            "description": [
                "If I(frontend) is set to C(True), this (username, password) pair is used for authenticating to the mysqld servers against any hostgroup."
            ]
        },
        "default_schema": {
            "description": [
                "The schema to which the connection should change to by default."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "fast_forward": {
            "description": [
                "If I(fast_forward) is set to C(True), I(fast_forward) will bypass the query processing layer (rewriting, caching) and pass through the query directly as is to the backend server. If omitted the proxysql database default for I(fast_forward) is C(False)."
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "active": {
            "description": [
                "A user with I(active) set to C(False) will be tracked in the database, but will be never loaded in the in-memory data structures. If omitted the proxysql database default for I(active) is C(True)."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "password": {
            "description": [
                "Password of the user connecting to the mysqld or ProxySQL instance."
            ]
        },
        "max_connections": {
            "description": [
                "The maximum number of connections ProxySQL will open to the backend for this user. If omitted the proxysql database default for I(max_connections) is 10000."
            ]
        },
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "transaction_persistent": {
            "description": [
                "If this is set for the user with which the MySQL client is connecting to ProxySQL (thus a \"frontend\" user), transactions started within a hostgroup will remain within that hostgroup regardless of any other rules. If omitted the proxysql database default for I(transaction_persistent) is C(False)."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present) - adds the user, when C(absent) - removes the user."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "use_ssl": {
            "description": [
                "If I(use_ssl) is set to C(True), connections by this user will be made using SSL connections. If omitted the proxysql database default for I(use_ssl) is C(False)."
            ]
        },
        "backend": {
            "default": true,
            "description": [
                "If I(backend) is set to C(True), this (username, password) pair is used for authenticating to the ProxySQL instance."
            ]
        }
    },
    "module": "proxysql_mysql_users"
}, {
    "short_description": "Modifies query rules using the proxysql admin interface.",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Free form text field, usable for a descriptive comment of the query rule."
            ]
        },
        "flagOUT": {
            "description": [
                "Used in combination with I(flagIN) and apply to create chains of rules. When set, I(flagOUT) signifies the I(flagIN) to be used in the next chain of rules."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "match_pattern": {
            "description": [
                "Regular expression that matches the query text. The dialect of regular expressions used is that of re2 - https://github.com/google/re2"
            ]
        },
        "mirror_flagOUT": {
            "description": [
                "Enables query mirroring. If set I(mirror_flagOUT) can be used to evaluates the mirrored query against the specified chain of rules."
            ]
        },
        "apply": {
            "description": [
                "Used in combination with I(flagIN) and I(flagOUT) to create chains of rules. Setting apply to True signifies the last rule to be applied."
            ]
        },
        "schemaname": {
            "description": [
                "Filtering criteria matching schemaname. If I(schemaname) is non-NULL, a query will match only if the connection uses schemaname as its default schema."
            ]
        },
        "replace_pattern": {
            "description": [
                "This is the pattern with which to replace the matched pattern. Note that this is optional, and when omitted, the query processor will only cache, route, or set other parameters without rewriting."
            ]
        },
        "digest": {
            "description": [
                "Match queries with a specific digest, as returned by stats_mysql_query_digest.digest."
            ]
        },
        "match_digest": {
            "description": [
                "Regular expression that matches the query digest. The dialect of regular expressions used is that of re2 - https://github.com/google/re2"
            ]
        },
        "mirror_hostgroup": {
            "description": [
                "Enables query mirroring. If set I(mirror_hostgroup) can be used to mirror queries to the same or different hostgroup."
            ]
        },
        "log": {
            "description": [
                "Query will be logged."
            ]
        },
        "delay": {
            "description": [
                "Number of milliseconds to delay the execution of the query. This is essentially a throttling mechanism and QoS, and allows a way to give priority to queries over others. This value is added to the mysql-default_query_delay global variable that applies to all queries."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present) - adds the rule, when C(absent) - removes the rule."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "proxy_addr": {
            "description": [
                "Match incoming traffic on a specific local IP."
            ]
        },
        "username": {
            "description": [
                "Filtering criteria matching username.  If I(username) is non-NULL, a query will match only if the connection is made with the correct username."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "retries": {
            "description": [
                "The maximum number of times a query needs to be re-executed in case of detected failure during the execution of the query. If retries is not specified, the global variable mysql-query_retries_on_failure applies."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "destination_hostgroup": {
            "description": [
                "Route matched queries to this hostgroup. This happens unless there is a started transaction and the logged in user has I(transaction_persistent) set to C(True) (see M(proxysql_mysql_users))."
            ]
        },
        "proxy_port": {
            "description": [
                "Match incoming traffic on a specific local port."
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "active": {
            "description": [
                "A rule with I(active) set to C(False) will be tracked in the database, but will be never loaded in the in-memory data structures."
            ]
        },
        "cache_ttl": {
            "description": [
                "The number of milliseconds for which to cache the result of the query. Note in ProxySQL 1.1 I(cache_ttl) was in seconds."
            ]
        },
        "error_msg": {
            "description": [
                "Query will be blocked, and the specified error_msg will be returned to the client."
            ]
        },
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "negate_match_pattern": {
            "description": [
                "If I(negate_match_pattern) is set to C(True), only queries not matching the query text will be considered as a match. This acts as a NOT operator in front of the regular expression matching against match_pattern."
            ]
        },
        "flagIN": {
            "description": [
                "Used in combination with I(flagOUT) and I(apply) to create chains of rules."
            ]
        },
        "client_addr": {
            "description": [
                "Match traffic from a specific source."
            ]
        },
        "timeout": {
            "description": [
                "The maximum timeout in milliseconds with which the matched or rewritten query should be executed. If a query run for longer than the specific threshold, the query is automatically killed. If timeout is not specified, the global variable mysql-default_query_timeout applies."
            ]
        },
        "force_delete": {
            "default": false,
            "description": [
                "By default we avoid deleting more than one schedule in a single batch, however if you need this behaviour and you're not concerned about the schedules deleted, you can set I(force_delete) to C(True)."
            ]
        },
        "rule_id": {
            "description": [
                "The unique id of the rule. Rules are processed in rule_id order."
            ]
        }
    },
    "module": "proxysql_query_rules"
}, {
    "short_description": "Manages replication hostgroups using the proxysql admin interface.",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Text field that can be used for any purposed defined by the user."
            ]
        },
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "reader_hostgroup": {
            "required": true,
            "description": [
                "Id of the reader hostgroup."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "writer_hostgroup": {
            "required": true,
            "description": [
                "Id of the writer hostgroup."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present) - adds the replication hostgroup, when C(absent) - removes the replication hostgroup."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        }
    },
    "module": "proxysql_replication_hostgroups"
}, {
    "short_description": "Adds or removes schedules from proxysql admin interface.",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Text field that can be used for any purposed defined by the user."
            ]
        },
        "config_file": {
            "default": "",
            "description": [
                "Specify a config file from which login_user and login_password are to be read."
            ]
        },
        "login_user": {
            "default": "None",
            "description": [
                "The username used to authenticate to ProxySQL admin interface."
            ]
        },
        "arg2": {
            "description": [
                "Argument that can be passed to the job."
            ]
        },
        "arg3": {
            "description": [
                "Argument that can be passed to the job."
            ]
        },
        "arg4": {
            "description": [
                "Argument that can be passed to the job."
            ]
        },
        "arg5": {
            "description": [
                "Argument that can be passed to the job."
            ]
        },
        "interval_ms": {
            "default": 10000,
            "description": [
                "How often (in millisecond) the job will be started. The minimum value for I(interval_ms) is 100 milliseconds."
            ]
        },
        "load_to_runtime": {
            "default": true,
            "description": [
                "Dynamically load mysql host config to runtime memory."
            ]
        },
        "login_password": {
            "default": "None",
            "description": [
                "The password used to authenticate to ProxySQL admin interface."
            ]
        },
        "active": {
            "default": true,
            "description": [
                "A schedule with I(active) set to C(False) will be tracked in the database, but will be never loaded in the in-memory data structures."
            ]
        },
        "login_port": {
            "default": 6032,
            "description": [
                "The port used to connect to ProxySQL admin interface."
            ]
        },
        "force_delete": {
            "default": false,
            "description": [
                "By default we avoid deleting more than one schedule in a single batch, however if you need this behaviour and you're not concerned about the schedules deleted, you can set I(force_delete) to C(True)."
            ]
        },
        "save_to_disk": {
            "default": true,
            "description": [
                "Save mysql host config to sqlite db on disk to persist the configuration."
            ]
        },
        "filename": {
            "required": true,
            "description": [
                "Full path of the executable to be executed."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present) - adds the schedule, when C(absent) - removes the schedule."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "arg1": {
            "description": [
                "Argument that can be passed to the job."
            ]
        },
        "login_host": {
            "default": "127.0.0.1",
            "description": [
                "The host used to connect to ProxySQL admin interface."
            ]
        }
    },
    "module": "proxysql_scheduler"
}, {
    "short_description": "PubNub blocks management module.",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of managed block which will be later visible on admin.pubnub.com."
            ]
        },
        "keyset": {
            "required": true,
            "description": [
                "Name of application's keys set which is bound to managed blocks."
            ]
        },
        "changes": {
            "default": {},
            "required": false,
            "description": [
                "List of fields which should be changed by block itself (doesn't affect any event handlers).",
                "Possible options for change is: C(name)."
            ]
        },
        "cache": {
            "default": {},
            "required": false,
            "description": "In case if single play use blocks management module few times it is preferred to enabled 'caching' by making previous module to share gathered artifacts and pass them to this parameter.\n"
        },
        "application": {
            "required": true,
            "description": [
                "Name of target PubNub application for which blocks configuration on specific C(keyset) will be done."
            ]
        },
        "state": {
            "default": "started",
            "required": false,
            "description": [
                "Intended block state after event handlers creation / update process will be completed."
            ],
            "choices": [
                "started",
                "stopped",
                "present",
                "absent"
            ]
        },
        "password": {
            "required": false,
            "description": [
                "Password which match to account to which specified C(email) belong.",
                "Not required if C(cache) contains result of previous module call (in same play)."
            ]
        },
        "validate_certs": {
            "default": true,
            "required": false,
            "description": [
                "This key allow to try skip certificates check when performing REST API calls. Sometimes host may have issues with certificates on it and this will cause problems to call PubNub REST API.",
                "If check should be ignored C(False) should be passed to this parameter."
            ]
        },
        "email": {
            "required": false,
            "description": [
                "Email from account for which new session should be started.",
                "Not required if C(cache) contains result of previous module call (in same play)."
            ]
        },
        "event_handlers": {
            "default": [],
            "required": false,
            "description": [
                "List of event handlers which should be updated for specified block C(name).",
                "Each entry for new event handler should contain: C(name), C(src), C(channels), C(event). C(name) used as event handler name which can be used later to make changes to it.",
                "C(src) is full path to file with event handler code.",
                "C(channels) is name of channel from which event handler is waiting for events.",
                "C(event) is type of event which is able to trigger event handler: I(js-before-publish), I(js-after-publish), I(js-after-presence).",
                "Each entry for existing handlers should contain C(name) (so target handler can be identified). Rest parameters (C(src), C(channels) and C(event)) can be added if changes required for them.",
                "It is possible to rename event handler by adding C(changes) key to event handler payload and pass dictionary, which will contain single key C(name), where new name should be passed.",
                "To remove particular event handler it is possible to set C(state) for it to C(absent) and it will be removed."
            ]
        },
        "description": {
            "default": "New block",
            "required": false,
            "description": [
                "Short block description which will be later visible on admin.pubnub.com. Used only if block doesn't exists and won't change description for existing block."
            ]
        }
    },
    "module": "pubnub_blocks"
}, {
    "short_description": "Add or remove Pulp repos from a remote host.",
    "deprecated": null,
    "options": {
        "feed": {
            "default": null,
            "required": false,
            "description": [
                "Upstream feed URL to receive updates from."
            ]
        },
        "repo_type": {
            "default": "rpm",
            "description": [
                "Repo plugin type to use (i.e. C(rpm), C(docker))."
            ]
        },
        "pulp_host": {
            "default": "http://127.0.0.1",
            "description": [
                "URL of the pulp server to connect to."
            ]
        },
        "relative_url": {
            "default": null,
            "required": true,
            "description": [
                "Relative URL for the local repository."
            ]
        },
        "force_basic_auth": {
            "default": "no",
            "required": false,
            "description": [
                "httplib2, the library used by the M(uri) module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "importer_ssl_client_cert": {
            "default": null,
            "required": false,
            "description": [
                "Certificate used as the client certificate when synchronizing the repository. This is used to communicate authentication information to the feed source. The value to this option must be the full path to the certificate. The specified file may be the certificate itself or a single file containing both the certificate and private key. This can be the file content or the path to the file."
            ]
        },
        "proxy_port": {
            "default": null,
            "required": false,
            "description": [
                "Proxy port setting for the pulp repository importer."
            ]
        },
        "serve_http": {
            "default": false,
            "required": false,
            "description": [
                "Make the repo available over HTTP."
            ]
        },
        "wait_for_completion": {
            "default": "no",
            "required": false,
            "description": [
                "Wait for asynchronous tasks to complete before returning."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "add_export_distributor": {
            "default": false,
            "required": false,
            "description": [
                "Whether or not to add the export distributor to new C(rpm) repositories."
            ]
        },
        "url_password": {
            "required": false,
            "description": [
                "The password for use in HTTP basic authentication to the pulp API. If the I(url_username) parameter is not specified, the I(url_password) parameter will not be used."
            ]
        },
        "importer_ssl_client_key": {
            "default": null,
            "required": false,
            "description": [
                "Private key to the certificate specified in I(importer_ssl_client_cert), assuming it is not included in the certificate file itself. This can be the file content or the path to the file."
            ]
        },
        "publish_distributor": {
            "required": false,
            "description": [
                "Distributor to use when state is C(publish). The default is to publish all distributors."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the repo to add or remove. This correlates to repo-id in Pulp."
            ]
        },
        "proxy_host": {
            "default": null,
            "required": false,
            "description": [
                "Proxy url setting for the pulp repository importer. This is in the format scheme://host."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The repo state. A state of C(sync) will queue a sync of the repo. This is asynchronous but not delayed like a scheduled sync. A state of C(publish) will use the repository's distributor to publish the content."
            ],
            "choices": [
                "present",
                "absent",
                "sync",
                "publish"
            ]
        },
        "serve_https": {
            "default": true,
            "required": false,
            "description": [
                "Make the repo available over HTTPS."
            ]
        },
        "importer_ssl_ca_cert": {
            "default": null,
            "required": false,
            "description": [
                "CA certificate string used to validate the feed source SSL certificate. This can be the file content or the path to the file."
            ]
        },
        "url_username": {
            "required": false,
            "description": [
                "The username for use in HTTP basic authentication to the pulp API."
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "pulp_repo"
}, {
    "short_description": "Runs puppet",
    "deprecated": null,
    "options": {
        "logdest": {
            "default": "stdout",
            "required": false,
            "description": [
                "Where the puppet logs should go, if puppet apply is being used"
            ],
            "version_added": "2.1",
            "choices": [
                "stdout",
                "syslog"
            ]
        },
        "execute": {
            "default": "None",
            "required": false,
            "description": [
                "Execute a specific piece of Puppet code. It has no effect with a puppetmaster."
            ],
            "version_added": "2.1"
        },
        "facter_basename": {
            "default": "ansible",
            "required": false,
            "description": [
                "Basename of the facter output file"
            ]
        },
        "tags": {
            "default": "None",
            "required": false,
            "description": [
                "A comma-separated list of puppet tags to be used."
            ],
            "version_added": "2.1"
        },
        "puppetmaster": {
            "default": "None",
            "required": false,
            "description": [
                "The hostname of the puppetmaster to contact."
            ]
        },
        "certname": {
            "default": "None",
            "required": false,
            "description": [
                "The name to use when handling certificates."
            ],
            "version_added": "2.1"
        },
        "manifest": {
            "default": "None",
            "required": false,
            "description": [
                "Path to the manifest file to run puppet apply on."
            ]
        },
        "environment": {
            "default": "None",
            "required": false,
            "description": [
                "Puppet environment to be used."
            ]
        },
        "timeout": {
            "default": "30m",
            "required": false,
            "description": [
                "How long to wait for I(puppet) to finish."
            ]
        },
        "facts": {
            "default": "None",
            "required": false,
            "description": [
                "A dict of values to pass in as persistent external facter facts"
            ]
        }
    },
    "module": "puppet"
}, {
    "short_description": "Sends notifications to Pushbullet",
    "deprecated": null,
    "options": {
        "body": {
            "required": false,
            "description": [
                "Body of the notification, e.g. Details of the fault you're alerting."
            ]
        },
        "title": {
            "required": true,
            "description": [
                "Title of the notification."
            ]
        },
        "device": {
            "default": null,
            "required": false,
            "description": [
                "The device NAME you wish to send a push notification, as seen on the Pushbullet main page."
            ]
        },
        "push_type": {
            "default": "note",
            "required": false,
            "description": [
                "Thing you wish to push."
            ],
            "choices": [
                "note",
                "link"
            ]
        },
        "api_key": {
            "required": true,
            "description": [
                "Push bullet API token"
            ]
        },
        "channel": {
            "default": null,
            "required": false,
            "description": [
                "The channel TAG you wish to broadcast a push notification, as seen on the \"My Channels\" > \"Edit your channel\" at Pushbullet page."
            ]
        }
    },
    "module": "pushbullet"
}, {
    "short_description": "Send notifications via U(https://pushover.net)",
    "deprecated": null,
    "options": {
        "msg": {
            "required": true,
            "description": [
                "What message you wish to send."
            ]
        },
        "user_key": {
            "required": true,
            "description": [
                "Pushover issued authentication key for your user."
            ]
        },
        "app_token": {
            "required": true,
            "description": [
                "Pushover issued token identifying your pushover app."
            ]
        },
        "pri": {
            "required": false,
            "description": [
                "Message priority (see U(https://pushover.net) for details.)"
            ]
        }
    },
    "module": "pushover"
}, {
    "short_description": "Add/Remove floating IP from an instance",
    "deprecated": "Deprecated in 2.0. Use M(os_floating_ip) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "instance_name": {
            "default": "None",
            "required": true,
            "description": [
                "The name of the instance to which the IP address should be assigned"
            ]
        },
        "login_tenant_name": {
            "default": "yes",
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone url for authentication"
            ]
        },
        "internal_network_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the network of the port to associate with the floating ip. Necessary when VM multiple networks."
            ],
            "version_added": "1.5"
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "network_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the network from which IP has to be assigned to VM. Please make sure the network is an external network"
            ]
        }
    },
    "module": "quantum_floating_ip"
}, {
    "short_description": "Associate or disassociate a particular floating IP with an instance",
    "deprecated": "Deprecated in 2.0. Use M(os_floating_ip) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "name of the region"
            ]
        },
        "instance_name": {
            "default": "None",
            "required": true,
            "description": [
                "name of the instance to which the public IP should be assigned"
            ]
        },
        "login_tenant_name": {
            "default": true,
            "required": true,
            "description": [
                "the tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "indicates the desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "the keystone url for authentication"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "ip_address": {
            "default": "None",
            "required": true,
            "description": [
                "floating ip that should be assigned to the instance"
            ]
        }
    },
    "module": "quantum_floating_ip_associate"
}, {
    "short_description": "Creates/Removes networks from OpenStack",
    "deprecated": "Deprecated in 2.0. Use M(os_network) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "provider_network_type": {
            "default": "None",
            "required": false,
            "description": [
                "The type of the network to be created, gre, vlan, local. Available types depend on the plugin. The Quantum service decides if not specified."
            ]
        },
        "admin_state_up": {
            "default": true,
            "required": false,
            "description": [
                "Whether the state should be marked as up or down"
            ]
        },
        "router_external": {
            "default": false,
            "required": false,
            "description": [
                "If 'yes', specifies that the virtual network is a external network (public)."
            ]
        },
        "tenant_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the tenant for whom the network is created"
            ]
        },
        "provider_physical_network": {
            "default": "None",
            "required": false,
            "description": [
                "The physical network which would realize the virtual network for flat and vlan networks."
            ]
        },
        "login_tenant_name": {
            "default": "yes",
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone url for authentication"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "shared": {
            "default": false,
            "required": false,
            "description": [
                "Whether this network is shared or not"
            ]
        },
        "provider_segmentation_id": {
            "default": "None",
            "required": false,
            "description": [
                "The id that has to be assigned to the network, in case of vlan networks that would be vlan id and for gre the tunnel id"
            ]
        },
        "name": {
            "default": "None",
            "required": true,
            "description": [
                "Name to be assigned to the network"
            ]
        }
    },
    "module": "quantum_network"
}, {
    "short_description": "Create or Remove router from openstack",
    "deprecated": "Deprecated in 2.0. Use M(os_router) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "admin_state_up": {
            "default": true,
            "required": false,
            "description": [
                "desired admin state of the created router ."
            ]
        },
        "tenant_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the tenant for which the router has to be created, if none router would be created for the login tenant."
            ]
        },
        "login_tenant_name": {
            "default": "yes",
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone url for authentication"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "name": {
            "default": "None",
            "required": true,
            "description": [
                "Name to be give to the router"
            ]
        }
    },
    "module": "quantum_router"
}, {
    "short_description": "set/unset a gateway interface for the router with the specified external network",
    "deprecated": "Deprecated in 2.0. Use M(os_router) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "router_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the router to which the gateway should be attached."
            ]
        },
        "login_tenant_name": {
            "default": "yes",
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone URL for authentication"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "network_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the external network which should be attached to the router."
            ]
        }
    },
    "module": "quantum_router_gateway"
}, {
    "short_description": "Attach/Detach a subnet's interface to a router",
    "deprecated": "Deprecated in 2.0. Use M(os_router) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "tenant_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the tenant whose subnet has to be attached."
            ]
        },
        "login_tenant_name": {
            "default": "yes",
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone URL for authentication"
            ]
        },
        "login_password": {
            "default": "yes",
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "subnet_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the subnet to whose interface should be attached to the router."
            ]
        },
        "router_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the router to which the subnet's interface should be attached."
            ]
        }
    },
    "module": "quantum_router_interface"
}, {
    "short_description": "Add/remove subnet from a network",
    "deprecated": "Deprecated in 2.0. Use M(os_subnet) instead.",
    "options": {
        "region_name": {
            "default": "None",
            "required": false,
            "description": [
                "Name of the region"
            ]
        },
        "tenant_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the tenant for whom the subnet should be created"
            ]
        },
        "auth_url": {
            "default": "http://127.0.0.1:35357/v2.0/",
            "required": false,
            "description": [
                "The keystone URL for authentication"
            ]
        },
        "login_password": {
            "default": true,
            "required": true,
            "description": [
                "Password of login user"
            ]
        },
        "login_username": {
            "default": "admin",
            "required": true,
            "description": [
                "login username to authenticate to keystone"
            ]
        },
        "cidr": {
            "default": "None",
            "required": true,
            "description": [
                "The CIDR representation of the subnet that should be assigned to the subnet"
            ]
        },
        "network_name": {
            "default": "None",
            "required": true,
            "description": [
                "Name of the network to which the subnet should be attached"
            ]
        },
        "allocation_pool_end": {
            "default": "None",
            "required": false,
            "description": [
                "From the subnet pool the last IP that should be assigned to the virtual machines"
            ]
        },
        "name": {
            "default": "None",
            "required": true,
            "description": [
                "The name of the subnet that should be created"
            ]
        },
        "enable_dhcp": {
            "default": true,
            "required": false,
            "description": [
                "Whether DHCP should be enabled for this subnet."
            ]
        },
        "dns_nameservers": {
            "default": "None",
            "required": false,
            "description": [
                "DNS nameservers for this subnet, comma-separated"
            ],
            "version_added": "1.4"
        },
        "login_tenant_name": {
            "default": true,
            "required": true,
            "description": [
                "The tenant name of the login user"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "allocation_pool_start": {
            "default": "None",
            "required": false,
            "description": [
                "From the subnet pool the starting address from which the IP should be allocated"
            ]
        },
        "gateway_ip": {
            "default": "None",
            "required": false,
            "description": [
                "The ip that would be assigned to the gateway for this subnet"
            ]
        },
        "ip_version": {
            "default": 4,
            "required": false,
            "description": [
                "The IP version of the subnet 4 or 6"
            ]
        }
    },
    "module": "quantum_subnet"
}, {
    "short_description": "This module manages rabbitMQ bindings",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 15672,
            "required": false,
            "description": [
                "rabbitMQ management api port"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "source exchange to create binding on"
            ],
            "aliases": [
                "src",
                "source"
            ]
        },
        "login_user": {
            "default": "guest",
            "required": false,
            "description": [
                "rabbitMQ user for connection"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "rabbitMQ host for connection"
            ]
        },
        "destination": {
            "required": true,
            "description": [
                "destination exchange or queue for the binding"
            ],
            "aliases": [
                "dst",
                "dest"
            ]
        },
        "routing_key": {
            "default": "#",
            "required": false,
            "description": [
                "routing key for the binding",
                "default is"
            ]
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "rabbitMQ virtual host",
                "default vhost is /"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the exchange should be present or absent",
                "Only present implemented atm"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "arguments": {
            "default": {},
            "required": false,
            "description": [
                "extra arguments for exchange. If defined this argument is a key/value dictionary"
            ]
        },
        "login_password": {
            "default": false,
            "required": false,
            "description": [
                "rabbitMQ password for connection"
            ]
        },
        "destination_type": {
            "choices": [
                "queue",
                "exchange"
            ],
            "required": true,
            "description": [
                "Either queue or exchange"
            ],
            "aliases": [
                "type",
                "dest_type"
            ]
        }
    },
    "module": "rabbitmq_binding"
}, {
    "short_description": "This module manages rabbitMQ exchanges",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 15672,
            "required": false,
            "description": [
                "rabbitMQ management api port"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the exchange to create"
            ]
        },
        "login_user": {
            "default": "guest",
            "required": false,
            "description": [
                "rabbitMQ user for connection"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "rabbitMQ host for connection"
            ]
        },
        "durable": {
            "default": true,
            "required": false,
            "description": [
                "whether exchange is durable or not"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "exchange_type": {
            "default": "direct",
            "choices": [
                "fanout",
                "direct",
                "headers",
                "topic"
            ],
            "required": false,
            "description": [
                "type for the exchange"
            ],
            "aliases": [
                "type"
            ]
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "rabbitMQ virtual host"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the exchange should be present or absent",
                "Only present implemented atm"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "internal": {
            "default": false,
            "required": false,
            "description": [
                "exchange is available only for other exchanges"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "arguments": {
            "default": {},
            "required": false,
            "description": [
                "extra arguments for exchange. If defined this argument is a key/value dictionary"
            ]
        },
        "login_password": {
            "default": false,
            "required": false,
            "description": [
                "rabbitMQ password for connection"
            ]
        },
        "auto_delete": {
            "default": false,
            "required": false,
            "description": [
                "if the exchange should delete itself after all queues/exchanges unbound from it"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rabbitmq_exchange"
}, {
    "short_description": "Adds or removes parameters to RabbitMQ",
    "deprecated": null,
    "options": {
        "node": {
            "default": "rabbit",
            "required": false,
            "description": [
                "erlang node name of the rabbit we wish to configure"
            ],
            "version_added": "1.2"
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "vhost to apply access privileges."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify if user is to be added or removed"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the parameter being set"
            ]
        },
        "component": {
            "default": null,
            "required": true,
            "description": [
                "Name of the component of which the parameter is being set"
            ]
        },
        "value": {
            "default": null,
            "required": false,
            "description": [
                "Value of the parameter, as a JSON term"
            ]
        }
    },
    "module": "rabbitmq_parameter"
}, {
    "short_description": "Adds or removes plugins to RabbitMQ",
    "deprecated": null,
    "options": {
        "state": {
            "default": "enabled",
            "required": false,
            "description": [
                "Specify if plugins are to be enabled or disabled"
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "new_only": {
            "default": "no",
            "required": false,
            "description": [
                "Only enable missing plugins",
                "Does not disable plugins that are not in the names list"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "prefix": {
            "default": null,
            "required": false,
            "description": [
                "Specify a custom install prefix to a Rabbit"
            ],
            "version_added": "1.3"
        },
        "names": {
            "default": null,
            "required": true,
            "description": [
                "Comma-separated list of plugin names"
            ],
            "aliases": [
                "name"
            ]
        }
    },
    "module": "rabbitmq_plugin"
}, {
    "short_description": "Manage the state of policies in RabbitMQ.",
    "deprecated": null,
    "options": {
        "node": {
            "default": "rabbit",
            "required": false,
            "description": [
                "Erlang node name of the rabbit we wish to configure."
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "The name of the policy to manage."
            ]
        },
        "tags": {
            "default": null,
            "required": true,
            "description": [
                "A dict or string describing the policy."
            ]
        },
        "pattern": {
            "default": null,
            "required": true,
            "description": [
                "A regex of queues to apply the policy to."
            ]
        },
        "priority": {
            "default": 0,
            "required": false,
            "description": [
                "The priority of the policy."
            ]
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "The name of the vhost to apply to."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "The state of the policy."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "apply_to": {
            "default": "all",
            "required": false,
            "description": [
                "What the policy applies to. Requires RabbitMQ 3.2.0 or later."
            ],
            "version_added": "2.1",
            "choices": [
                "all",
                "exchanges",
                "queues"
            ]
        }
    },
    "module": "rabbitmq_policy"
}, {
    "short_description": "This module manages rabbitMQ queues",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 15672,
            "required": false,
            "description": [
                "rabbitMQ management api port"
            ]
        },
        "dead_letter_exchange": {
            "default": "None",
            "required": false,
            "description": [
                "Optional name of an exchange to which messages will be republished if they",
                "are rejected or expire"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the queue to create"
            ]
        },
        "durable": {
            "default": true,
            "required": false,
            "description": [
                "whether queue is durable or not"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "login_user": {
            "default": "guest",
            "required": false,
            "description": [
                "rabbitMQ user for connection"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "rabbitMQ host for connection"
            ]
        },
        "login_password": {
            "default": false,
            "required": false,
            "description": [
                "rabbitMQ password for connection"
            ]
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "rabbitMQ virtual host"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the queue should be present or absent",
                "Only present implemented atm"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "max_length": {
            "default": "no limit",
            "required": false,
            "description": [
                "How many messages can the queue contain before it starts rejecting"
            ]
        },
        "arguments": {
            "default": {},
            "required": false,
            "description": [
                "extra arguments for queue. If defined this argument is a key/value dictionary"
            ]
        },
        "message_ttl": {
            "default": "forever",
            "required": false,
            "description": [
                "How long a message can live in queue before it is discarded (milliseconds)"
            ]
        },
        "auto_expires": {
            "default": "forever",
            "required": false,
            "description": [
                "How long a queue can be unused before it is automatically deleted (milliseconds)"
            ]
        },
        "dead_letter_routing_key": {
            "default": "None",
            "required": false,
            "description": [
                "Optional replacement routing key to use when a message is dead-lettered.",
                "Original routing key will be used if unset"
            ]
        },
        "auto_delete": {
            "default": false,
            "required": false,
            "description": [
                "if the queue should delete itself after all queues/queues unbound from it"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rabbitmq_queue"
}, {
    "short_description": "Adds or removes users to RabbitMQ",
    "deprecated": null,
    "options": {
        "node": {
            "default": "rabbit",
            "required": false,
            "description": [
                "erlang node name of the rabbit we wish to configure"
            ],
            "version_added": "1.2"
        },
        "force": {
            "default": "no",
            "required": false,
            "description": [
                "Deletes and recreates the user."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "tags": {
            "default": null,
            "required": false,
            "description": [
                "User tags specified as comma delimited"
            ]
        },
        "read_priv": {
            "default": "^$",
            "required": false,
            "description": [
                "Regular expression to restrict configure actions on a resource for the specified vhost.",
                "By default all actions are restricted.",
                "This option will be ignored when permissions option is used."
            ]
        },
        "write_priv": {
            "default": "^$",
            "required": false,
            "description": [
                "Regular expression to restrict configure actions on a resource for the specified vhost.",
                "By default all actions are restricted.",
                "This option will be ignored when permissions option is used."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify if user is to be added or removed"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "user": {
            "default": null,
            "required": true,
            "description": [
                "Name of user to add"
            ],
            "aliases": [
                "username",
                "name"
            ]
        },
        "configure_priv": {
            "default": "^$",
            "required": false,
            "description": [
                "Regular expression to restrict configure actions on a resource for the specified vhost.",
                "By default all actions are restricted.",
                "This option will be ignored when permissions option is used."
            ]
        },
        "vhost": {
            "default": "/",
            "required": false,
            "description": [
                "vhost to apply access privileges.",
                "This option will be ignored when permissions option is used."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Password of user to add.",
                "To change the password of an existing user, you must also specify C(force=yes)."
            ]
        },
        "permissions": {
            "default": [],
            "required": false,
            "description": [
                "a list of dicts, each dict contains vhost, configure_priv, write_priv, and read_priv, and represents a permission rule for that vhost.",
                "This option should be preferable when you care about all permissions of the user.",
                "You should use vhost, configure_priv, write_priv, and read_priv options instead if you care about permissions for just some vhosts."
            ]
        }
    },
    "module": "rabbitmq_user"
}, {
    "short_description": "Manage the state of a virtual host in RabbitMQ",
    "deprecated": null,
    "options": {
        "node": {
            "default": "rabbit",
            "required": false,
            "description": [
                "erlang node name of the rabbit we wish to configure"
            ],
            "version_added": "1.2"
        },
        "tracing": {
            "default": "no",
            "choices": [
                "yes",
                "no"
            ],
            "description": [
                "Enable/disable tracing for a vhost"
            ],
            "aliases": [
                "trace"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "The state of vhost"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "The name of the vhost to manage"
            ],
            "aliases": [
                "vhost"
            ]
        }
    },
    "module": "rabbitmq_vhost"
}, {
    "short_description": "Executes a low-down and dirty SSH command",
    "deprecated": null,
    "options": {
        "free_form": {
            "required": true,
            "description": [
                "the raw module takes a free form command to run. There is no parameter actually named 'free form'; see the examples!"
            ]
        },
        "executable": {
            "required": false,
            "description": [
                "change the shell used to execute the command. Should be an absolute path to the executable.",
                "when using privilege escalation (C(become)), a default shell will be assigned if one is not provided as privilege escalation requires a shell."
            ],
            "version_added": "1.0"
        }
    },
    "module": "raw"
}, {
    "short_description": "create / delete an instance in Rackspace Public Cloud",
    "deprecated": null,
    "options": {
        "files": {
            "default": null,
            "description": [
                "Files to insert into the instance. remotefilename:localcontent"
            ]
        },
        "boot_volume_terminate": {
            "default": false,
            "description": [
                "Whether the I(boot_volume) or newly created volume from I(image) will be terminated when the server is terminated"
            ],
            "version_added": 1.9
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "auto_increment": {
            "default": true,
            "description": [
                "Whether or not to increment a single number with the name of the created servers. Only applicable when used with the I(group) attribute or meta key."
            ],
            "version_added": 1.5,
            "choices": [
                "yes",
                "no"
            ]
        },
        "image": {
            "default": null,
            "description": [
                "image to use for the instance. Can be an C(id), C(human_id) or C(name). With I(boot_from_volume), a Cloud Block Storage volume will be created with this image"
            ]
        },
        "user_data": {
            "description": [
                "Data to be uploaded to the servers config drive. This option implies I(config_drive). Can be a file path or a string"
            ],
            "version_added": 1.7
        },
        "boot_volume": {
            "description": [
                "Cloud Block Storage ID or Name to use as the boot volume of the instance"
            ],
            "version_added": 1.9
        },
        "count_offset": {
            "default": 1,
            "description": [
                "number count to start at"
            ],
            "version_added": 1.4
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of metadata to associate with the instance"
            ]
        },
        "instance_ids": {
            "description": [
                "list of instance ids, currently only used when state='absent' to remove instances"
            ],
            "version_added": 1.4
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "flavor": {
            "default": null,
            "description": [
                "flavor to use for the instance"
            ]
        },
        "networks": {
            "default": [
                "public",
                "private"
            ],
            "description": [
                "The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces. Can be C(id) or C(label)."
            ],
            "version_added": 1.4
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the instance to be in state 'running' before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "boot_from_volume": {
            "default": "no",
            "description": [
                "Whether or not to boot the instance from a Cloud Block Storage volume. If C(yes) and I(image) is specified a new volume will be created at boot time. I(boot_volume_size) is required with I(image) to create a new volume at boot time."
            ],
            "version_added": 1.9,
            "choices": [
                "yes",
                "no"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "group": {
            "description": [
                "host group to assign to server, is also used for idempotent operations to ensure a specific number of instances"
            ],
            "version_added": 1.4
        },
        "name": {
            "default": null,
            "description": [
                "Name to give the instance"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "extra_client_args": {
            "description": [
                "A hash of key/value pairs to be used when creating the cloudservers client. This is considered an advanced option, use it wisely and with caution."
            ],
            "version_added": 1.6
        },
        "exact_count": {
            "default": false,
            "description": [
                "Explicitly ensure an exact count of instances, used with state=active/present. If specified as C(yes) and I(count) is less than the servers matched, servers will be deleted to match the count. If the number of matched servers is fewer than specified in I(count) additional servers will be added."
            ],
            "version_added": 1.4,
            "choices": [
                "yes",
                "no"
            ]
        },
        "disk_config": {
            "default": "auto",
            "description": [
                "Disk partitioning strategy"
            ],
            "version_added": "1.4",
            "choices": [
                "auto",
                "manual"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "count": {
            "default": 1,
            "description": [
                "number of instances to launch"
            ],
            "version_added": 1.4
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "key_name": {
            "default": null,
            "description": [
                "key pair to use on the instance"
            ],
            "aliases": [
                "keypair"
            ]
        },
        "boot_volume_size": {
            "default": 100,
            "description": [
                "Size of the volume to create in Gigabytes. This is only required with I(image) and I(boot_from_volume)."
            ],
            "version_added": 1.9
        },
        "extra_create_args": {
            "description": [
                "A hash of key/value pairs to be used when creating a new server. This is considered an advanced option, use it wisely and with caution."
            ],
            "version_added": 1.6
        },
        "config_drive": {
            "default": false,
            "description": [
                "Attach read-only configuration drive to server as label config-2"
            ],
            "version_added": 1.7,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rax"
}, {
    "short_description": "Manipulate Rackspace Cloud Block Storage Volumes",
    "deprecated": null,
    "options": {
        "size": {
            "default": 100,
            "required": true,
            "description": [
                "Size of the volume to create in Gigabytes"
            ]
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "description": {
            "default": null,
            "description": [
                "Description to give the volume being created"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "image": {
            "default": null,
            "description": [
                "image to use for bootable volumes. Can be an C(id), C(human_id) or C(name). This option requires C(pyrax>=1.9.3)"
            ],
            "version_added": 1.9
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "volume_type": {
            "default": "SATA",
            "required": true,
            "description": [
                "Type of the volume being created"
            ],
            "choices": [
                "SATA",
                "SSD"
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of metadata to associate with the volume"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "snapshot_id": {
            "default": null,
            "description": [
                "The id of the snapshot to create the volume from"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the volume to be in state 'available' before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name to give the volume being created"
            ]
        }
    },
    "module": "rax_cbs"
}, {
    "short_description": "Manipulate Rackspace Cloud Block Storage Volume Attachments",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "volume": {
            "default": null,
            "required": true,
            "description": [
                "Name or id of the volume to attach/detach"
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "device": {
            "default": null,
            "required": true,
            "description": [
                "The device path to attach the volume to, e.g. /dev/xvde"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the volume to be in 'in-use'/'available' state before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "server": {
            "default": null,
            "required": true,
            "description": [
                "Name or id of the server to attach/detach"
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        }
    },
    "module": "rax_cbs_attachments"
}, {
    "short_description": "create/delete or resize a Rackspace Cloud Databases instance",
    "deprecated": null,
    "options": {
        "cdb_type": {
            "default": "MySQL",
            "description": [
                "type of instance (i.e. MySQL, MariaDB, Percona)"
            ],
            "version_added": "2.0",
            "aliases": [
                "type"
            ]
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "name": {
            "default": null,
            "description": [
                "Name of the databases server instance"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "cdb_version": {
            "choices": [
                "5.1",
                "5.6",
                "10"
            ],
            "description": [
                "version of database (MySQL supports 5.1 and 5.6, MariaDB supports 10, Percona supports 5.6)"
            ],
            "version_added": "2.0",
            "aliases": [
                "version"
            ]
        },
        "volume": {
            "default": 2,
            "description": [
                "Volume size of the database 1-150GB"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "flavor": {
            "default": 1,
            "description": [
                "flavor to use for the instance 1 to 6 (i.e. 512MB to 16GB)"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the instance to be in state 'running' before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rax_cdb"
}, {
    "short_description": "create / delete a database in the Cloud Databases",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "name": {
            "default": null,
            "description": [
                "Name to give to the database"
            ]
        },
        "cdb_id": {
            "default": null,
            "description": [
                "The databases server UUID"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "collate": {
            "default": "utf8_general_ci",
            "description": [
                "Set of rules for comparing characters in a character set"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "character_set": {
            "default": "utf8",
            "description": [
                "Set of symbols and encodings"
            ]
        }
    },
    "module": "rax_cdb_database"
}, {
    "short_description": "create / delete a Rackspace Cloud Database",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "db_password": {
            "default": null,
            "description": [
                "Database user password"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "databases": {
            "default": [],
            "description": [
                "Name of the databases that the user can access"
            ]
        },
        "host": {
            "default": "%",
            "description": [
                "Specifies the host from which a user is allowed to connect to the database. Possible values are a string containing an IPv4 address or \"%\" to allow connecting from any host"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "db_username": {
            "default": null,
            "description": [
                "Name of the database user"
            ]
        },
        "cdb_id": {
            "default": null,
            "description": [
                "The databases server UUID"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        }
    },
    "module": "rax_cdb_user"
}, {
    "short_description": "create / delete a load balancer in Rackspace Public Cloud",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "protocol": {
            "default": "HTTP",
            "description": [
                "Protocol for the balancer being created"
            ],
            "choices": [
                "DNS_TCP",
                "DNS_UDP",
                "FTP",
                "HTTP",
                "HTTPS",
                "IMAPS",
                "IMAPv4",
                "LDAP",
                "LDAPS",
                "MYSQL",
                "POP3",
                "POP3S",
                "SMTP",
                "TCP",
                "TCP_CLIENT_FIRST",
                "UDP",
                "UDP_STREAM",
                "SFTP"
            ]
        },
        "name": {
            "default": null,
            "description": [
                "Name to give the load balancer"
            ]
        },
        "algorithm": {
            "default": "LEAST_CONNECTIONS",
            "description": [
                "algorithm for the balancer being created"
            ],
            "choices": [
                "RANDOM",
                "LEAST_CONNECTIONS",
                "ROUND_ROBIN",
                "WEIGHTED_LEAST_CONNECTIONS",
                "WEIGHTED_ROUND_ROBIN"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "vip_id": {
            "description": [
                "Virtual IP ID to use when creating the load balancer for purposes of sharing an IP with another load balancer of another protocol"
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of metadata to associate with the instance"
            ]
        },
        "timeout": {
            "default": 30,
            "description": [
                "timeout for communication between the balancer and the node"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "type": {
            "default": "PUBLIC",
            "description": [
                "type of interface for the balancer being created"
            ],
            "choices": [
                "PUBLIC",
                "SERVICENET"
            ]
        },
        "port": {
            "default": 80,
            "description": [
                "Port for the balancer being created"
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the balancer to be in state 'running' before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rax_clb"
}, {
    "short_description": "add, modify and remove nodes from a Rackspace Cloud Load Balancer",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "weight": {
            "required": false,
            "description": [
                "Weight of node"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "load_balancer_id": {
            "required": true,
            "description": [
                "Load balancer id"
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the node"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 30,
            "required": false,
            "description": [
                "How long to wait before giving up and returning an error"
            ]
        },
        "condition": {
            "required": false,
            "description": [
                "Condition for the node, which determines its role within the load balancer"
            ],
            "choices": [
                "enabled",
                "disabled",
                "draining"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "address": {
            "required": false,
            "description": [
                "IP address or domain name of the node"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "type": {
            "required": false,
            "description": [
                "Type of node"
            ],
            "choices": [
                "primary",
                "secondary"
            ]
        },
        "port": {
            "required": false,
            "description": [
                "Port number of the load balanced service on the node"
            ]
        },
        "node_id": {
            "required": false,
            "description": [
                "Node id"
            ]
        },
        "wait": {
            "default": "no",
            "required": false,
            "description": [
                "Wait for the load balancer to become active before returning"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rax_clb_nodes"
}, {
    "short_description": "Manage SSL termination for a Rackspace Cloud Load Balancer.",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "private_key": {
            "description": [
                "The private SSL key as a string in PEM format."
            ]
        },
        "certificate": {
            "description": [
                "The public SSL certificates as a string in PEM format."
            ]
        },
        "enabled": {
            "default": true,
            "description": [
                "If set to \"false\", temporarily disable SSL termination without discarding",
                "existing credentials."
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "https_redirect": {
            "description": [
                "If \"true\", the load balancer will redirect HTTP traffic to HTTPS.",
                "Requires \"secure_traffic_only\" to be true. Incurs an implicit wait if SSL",
                "termination is also applied or removed."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "If set to \"present\", SSL termination will be added to this load balancer.",
                "If \"absent\", SSL termination will be removed instead."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "How long before \"wait\" gives up, in seconds."
            ]
        },
        "intermediate_certificate": {
            "description": [
                "One or more intermediate certificate authorities as a string in PEM",
                "format, concatenated into a single string."
            ]
        },
        "secure_traffic_only": {
            "default": false,
            "description": [
                "If \"true\", the load balancer will *only* accept secure traffic."
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "secure_port": {
            "default": 443,
            "description": [
                "The port to listen for secure traffic."
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "loadbalancer": {
            "required": true,
            "description": [
                "Name or ID of the load balancer on which to manage SSL termination."
            ]
        },
        "wait": {
            "default": false,
            "description": [
                "Wait for the balancer to be in state \"running\" before turning."
            ]
        }
    },
    "module": "rax_clb_ssl"
}, {
    "short_description": "Manage domains on Rackspace Cloud DNS",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Brief description of the domain. Maximum length of 160 characters"
            ]
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "name": {
            "description": [
                "Domain name to create"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "ttl": {
            "default": 3600,
            "description": [
                "Time to live of domain in seconds"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "email": {
            "description": [
                "Email address of the domain administrator"
            ]
        }
    },
    "module": "rax_dns"
}, {
    "short_description": "Manage DNS records on Rackspace Cloud DNS",
    "deprecated": null,
    "options": {
        "comment": {
            "description": [
                "Brief description of the domain. Maximum length of 160 characters"
            ]
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "domain": {
            "description": [
                "Domain name to create the record in. This is an invalid option when type=PTR"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "FQDN record name to create"
            ]
        },
        "data": {
            "required": true,
            "description": [
                "IP address for A/AAAA record, FQDN for CNAME/MX/NS, or text data for SRV/TXT"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "server": {
            "description": [
                "Server ID to create a PTR record for. Only used with type=PTR"
            ],
            "version_added": 1.7
        },
        "priority": {
            "description": [
                "Required for MX and SRV records, but forbidden for other record types. If specified, must be an integer from 0 to 65535."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "loadbalancer": {
            "description": [
                "Load Balancer ID to create a PTR record for. Only used with type=PTR"
            ],
            "version_added": 1.7
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "ttl": {
            "default": 3600,
            "description": [
                "Time to live of record in seconds"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "type": {
            "required": true,
            "description": [
                "DNS record type"
            ],
            "choices": [
                "A",
                "AAAA",
                "CNAME",
                "MX",
                "NS",
                "SRV",
                "TXT",
                "PTR"
            ]
        },
        "overwrite": {
            "default": true,
            "description": [
                "Add new records if data doesn't match, instead of updating existing record with matching name. If there are already multiple records with matching name and overwrite=true, this module will fail."
            ],
            "version_added": 2.1
        }
    },
    "module": "rax_dns_record"
}, {
    "short_description": "Gather facts for Rackspace Cloud Servers",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "name": {
            "default": null,
            "description": [
                "Server name to retrieve facts for"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "address": {
            "description": [
                "Server IP address to retrieve facts for, will match any IP assigned to the server"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "id": {
            "description": [
                "Server ID to retrieve facts for"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_facts"
}, {
    "short_description": "Manipulate Rackspace Cloud Files Containers",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "web_index": {
            "description": [
                "Sets an object to be presented as the HTTP index page when accessed by the CDN URL"
            ]
        },
        "container": {
            "required": true,
            "description": [
                "The container to use for container or metadata operations."
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "private": {
            "description": [
                "Used to set a container as private, removing it from the CDN.  B(Warning!) Private containers, if previously made public, can have live objects available until the TTL on cached objects expires"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "clear_meta": {
            "default": "no",
            "description": [
                "Optionally clear existing metadata when applying metadata to existing containers. Selecting this option is only appropriate when setting type=meta"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "meta": {
            "description": [
                "A hash of items to set as metadata values on a container"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "ttl": {
            "description": [
                "In seconds, set a container-wide TTL for all objects cached on CDN edge nodes. Setting a TTL is only appropriate for containers that are public"
            ]
        },
        "web_error": {
            "description": [
                "Sets an object to be presented as the HTTP error page when accessed by the CDN URL"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "type": {
            "default": "file",
            "description": [
                "Type of object to do work on, i.e. metadata object or a container object"
            ],
            "choices": [
                "file",
                "meta"
            ]
        },
        "public": {
            "description": [
                "Used to set a container as public, available via the Cloud Files CDN"
            ]
        }
    },
    "module": "rax_files"
}, {
    "short_description": "Upload, download, and delete objects in Rackspace Cloud Files",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "src": {
            "default": null,
            "description": [
                "Source from which to upload files.  Used to specify a remote object as a source for an operation, i.e. a file name, \"file1\", or a comma-separated list of remote objects, \"file1,file2,file17\".  src and dest are mutually exclusive on remote-only object operations"
            ]
        },
        "container": {
            "default": null,
            "required": true,
            "description": [
                "The container to use for file object operations."
            ]
        },
        "dest": {
            "description": [
                "The destination of a \"get\" operation; i.e. a local directory, \"/home/user/myfolder\". Used to specify the destination of an operation on a remote object; i.e. a file name, \"file1\", or a comma-separated list of remote objects, \"file1,file2,file17\""
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "expires": {
            "default": null,
            "description": [
                "Used to set an expiration on a file or folder uploaded to Cloud Files. Requires an integer, specifying expiration in seconds"
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "clear_meta": {
            "default": "no",
            "description": [
                "Optionally clear existing metadata when applying metadata to existing objects. Selecting this option is only appropriate when setting type=meta"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of items to set as metadata values on an uploaded file or folder"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "type": {
            "default": "file",
            "description": [
                "Type of object to do work on",
                "Metadata object or a file object"
            ],
            "choices": [
                "file",
                "meta"
            ]
        },
        "method": {
            "default": "get",
            "description": [
                "The method of operation to be performed.  For example, put to upload files to Cloud Files, get to download files from Cloud Files or delete to delete remote objects in Cloud Files"
            ],
            "choices": [
                "get",
                "put",
                "delete"
            ]
        },
        "structure": {
            "default": "yes",
            "description": [
                "Used to specify whether to maintain nested directory structure when downloading objects from Cloud Files.  Setting to false downloads the contents of a container to a single, flat directory"
            ],
            "choices": [
                true,
                "no"
            ]
        }
    },
    "module": "rax_files_objects"
}, {
    "short_description": "Load Rackspace Cloud Identity",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_identity"
}, {
    "short_description": "Create a keypair for use with Rackspace Cloud Servers",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "public_key": {
            "default": null,
            "description": [
                "Public Key string to upload. Can be a file path or string"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of keypair"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_keypair"
}, {
    "short_description": "Manipulate metadata for Rackspace Cloud Servers",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "name": {
            "default": null,
            "description": [
                "Server name to modify metadata for"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of metadata to associate with the instance"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "address": {
            "description": [
                "Server IP address to modify metadata for, will match any IP assigned to the server"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "id": {
            "description": [
                "Server ID to modify metadata for"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_meta"
}, {
    "short_description": "Create or delete a Rackspace Cloud Monitoring alarm.",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "entity_id": {
            "required": true,
            "description": [
                "ID of the entity this alarm is attached to. May be acquired by registering the value of a rax_mon_entity task."
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "notification_plan_id": {
            "required": true,
            "description": [
                "ID of the notification plan to trigger if this alarm fires. May be acquired by registering the value of a rax_mon_notification_plan task."
            ]
        },
        "check_id": {
            "required": true,
            "description": [
                "ID of the check that should be alerted on. May be acquired by registering the value of a rax_mon_check task."
            ]
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "required": true,
            "description": [
                "Friendly name for this alarm, used to achieve idempotence. Must be a String between 1 and 255 characters long."
            ]
        },
        "disabled": {
            "description": [
                "If yes, create this alarm, but leave it in an inactive state. Defaults to no."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Ensure that the alarm with this C(label) exists or does not exist."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "criteria": {
            "description": [
                "Alarm DSL that describes alerting conditions and their output states. Must be between 1 and 16384 characters long. See http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/alerts-language.html for a reference on the alerting language."
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "metadata": {
            "description": [
                "Arbitrary key/value pairs to accompany the alarm. Must be a hash of String keys and values between 1 and 255 characters long."
            ]
        }
    },
    "module": "rax_mon_alarm"
}, {
    "short_description": "Create or delete a Rackspace Cloud Monitoring check for an existing entity.",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "entity_id": {
            "required": true,
            "description": [
                "ID of the rax_mon_entity to target with this check."
            ]
        },
        "check_type": {
            "required": true,
            "description": [
                "The type of check to create. C(remote.) checks may be created on any rax_mon_entity. C(agent.) checks may only be created on rax_mon_entities that have a non-null C(agent_id)."
            ],
            "choices": [
                "remote.dns",
                "remote.ftp-banner",
                "remote.http",
                "remote.imap-banner",
                "remote.mssql-banner",
                "remote.mysql-banner",
                "remote.ping",
                "remote.pop3-banner",
                "remote.postgresql-banner",
                "remote.smtp-banner",
                "remote.smtp",
                "remote.ssh",
                "remote.tcp",
                "remote.telnet-banner",
                "agent.filesystem",
                "agent.memory",
                "agent.load_average",
                "agent.cpu",
                "agent.disk",
                "agent.network",
                "agent.plugin"
            ]
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "period": {
            "description": [
                "The number of seconds between each time the check is performed. Must be greater than the minimum period set on your account."
            ]
        },
        "disabled": {
            "description": [
                "If \"yes\", ensure the check is created, but don't actually use it yet."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "target_hostname": {
            "description": [
                "One of `target_hostname` and `target_alias` is required for remote.* checks, but prohibited for agent.* checks. The hostname this check should target. Must be a valid IPv4, IPv6, or FQDN."
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "target_alias": {
            "description": [
                "One of `target_alias` and `target_hostname` is required for remote.* checks, but prohibited for agent.* checks. Use the corresponding key in the entity's `ip_addresses` hash to resolve an IP address to target."
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "required": true,
            "description": [
                "Defines a label for this check, between 1 and 64 characters long."
            ]
        },
        "state": {
            "description": [
                "Ensure that a check with this C(label) exists or does not exist."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "details": {
            "description": [
                "Additional details specific to the check type. Must be a hash of strings between 1 and 255 characters long, or an array or object containing 0 to 256 items."
            ]
        },
        "timeout": {
            "description": [
                "The number of seconds this check will wait when attempting to collect results. Must be less than the period."
            ]
        },
        "monitoring_zones_poll": {
            "description": [
                "Comma-separated list of the names of the monitoring zones the check should run from. Available monitoring zones include mzdfw, mzhkg, mziad, mzlon, mzord and mzsyd. Required for remote.* checks; prohibited for agent.* checks."
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "metadata": {
            "description": [
                "Hash of arbitrary key-value pairs to accompany this check if it fires. Keys and values must be strings between 1 and 255 characters long."
            ]
        }
    },
    "module": "rax_mon_check"
}, {
    "short_description": "Create or delete a Rackspace Cloud Monitoring entity",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "required": true,
            "description": [
                "Defines a name for this entity. Must be a non-empty string between 1 and 255 characters long."
            ]
        },
        "state": {
            "description": [
                "Ensure that an entity with this C(name) exists or does not exist."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "agent_id": {
            "description": [
                "Rackspace monitoring agent on the target device to which this entity is bound. Necessary to collect C(agent.) rax_mon_checks against this entity."
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "named_ip_addresses": {
            "description": [
                "Hash of IP addresses that may be referenced by name by rax_mon_checks added to this entity. Must be a dictionary of with keys that are names between 1 and 64 characters long, and values that are valid IPv4 or IPv6 addresses."
            ]
        },
        "metadata": {
            "description": [
                "Hash of arbitrary C(name), C(value) pairs that are passed to associated rax_mon_alarms. Names and values must all be between 1 and 255 characters long."
            ]
        }
    },
    "module": "rax_mon_entity"
}, {
    "short_description": "Create or delete a Rackspace Cloud Monitoring notification.",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "required": true,
            "description": [
                "Defines a friendly name for this notification. String between 1 and 255 characters long."
            ]
        },
        "state": {
            "description": [
                "Ensure that the notification with this C(label) exists or does not exist."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "details": {
            "required": true,
            "description": [
                "Dictionary of key-value pairs used to initialize the notification. Required keys and meanings vary with notification type. See http://docs.rackspace.com/cm/api/v1.0/cm-devguide/content/ service-notification-types-crud.html for details."
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "notification_type": {
            "required": true,
            "description": [
                "A supported notification type."
            ],
            "choices": [
                "webhook",
                "email",
                "pagerduty"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_mon_notification"
}, {
    "short_description": "Create or delete a Rackspace Cloud Monitoring notification plan.",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "warning_state": {
            "description": [
                "Notification list to use when the alarm state is WARNING. Must be an array of valid rax_mon_notification ids."
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "critical_state": {
            "description": [
                "Notification list to use when the alarm state is CRITICAL. Must be an array of valid rax_mon_notification ids."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "required": true,
            "description": [
                "Defines a friendly name for this notification plan. String between 1 and 255 characters long."
            ]
        },
        "ok_state": {
            "description": [
                "Notification list to use when the alarm state is OK. Must be an array of valid rax_mon_notification ids."
            ]
        },
        "state": {
            "description": [
                "Ensure that the notification plan with this C(label) exists or does not exist."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_mon_notification_plan"
}, {
    "short_description": "create / delete an isolated network in Rackspace Public Cloud",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "identity_type": {
            "default": "rackspace",
            "description": [
                "Authentication mechanism to use, such as rackspace or keystone."
            ],
            "version_added": 1.5
        },
        "tenant_id": {
            "description": [
                "The tenant ID used for authentication."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "label": {
            "default": null,
            "description": [
                "Label (name) to give the network"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "tenant_name": {
            "description": [
                "The tenant name used for authentication."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "cidr": {
            "default": null,
            "description": [
                "cidr of the network being created"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "auth_endpoint": {
            "default": "https://identity.api.rackspacecloud.com/v2.0/",
            "description": [
                "The URI of the authentication service."
            ],
            "version_added": 1.5
        }
    },
    "module": "rax_network"
}, {
    "short_description": "create / delete a queue in Rackspace Public Cloud",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "name": {
            "default": null,
            "description": [
                "Name to give the queue"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        }
    },
    "module": "rax_queue"
}, {
    "short_description": "Manipulate Rackspace Cloud Autoscale Groups",
    "deprecated": null,
    "options": {
        "files": {
            "default": null,
            "description": [
                "Files to insert into the instance. Hash of C(remotepath: localpath)"
            ]
        },
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "key_name": {
            "default": null,
            "description": [
                "key pair to use on the instance"
            ]
        },
        "image": {
            "required": true,
            "description": [
                "image to use for the instance. Can be an C(id), C(human_id) or C(name)"
            ]
        },
        "user_data": {
            "description": [
                "Data to be uploaded to the servers config drive. This option implies I(config_drive). Can be a file path or a string"
            ],
            "version_added": 1.8
        },
        "min_entities": {
            "required": true,
            "description": [
                "The minimum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "cooldown": {
            "description": [
                "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "flavor": {
            "required": true,
            "description": [
                "flavor to use for the instance"
            ]
        },
        "networks": {
            "default": [
                "public",
                "private"
            ],
            "description": [
                "The network to attach to the instances. If specified, you must include ALL networks including the public and private interfaces. Can be C(id) or C(label)."
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "wait for the scaling group to finish provisioning the minimum amount of servers"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "max_entities": {
            "required": true,
            "description": [
                "The maximum number of entities that are allowed in the scaling group. Must be an integer between 0 and 1000."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name to give the scaling group"
            ]
        },
        "server_name": {
            "required": true,
            "description": [
                "The base name for servers created by Autoscale"
            ]
        },
        "loadbalancers": {
            "description": [
                "List of load balancer C(id) and C(port) hashes"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "disk_config": {
            "default": "auto",
            "description": [
                "Disk partitioning strategy"
            ],
            "choices": [
                "auto",
                "manual"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "meta": {
            "default": null,
            "description": [
                "A hash of metadata to associate with the instance"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "config_drive": {
            "default": false,
            "description": [
                "Attach read-only configuration drive to server as label config-2"
            ],
            "version_added": 1.8,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "rax_scaling_group"
}, {
    "short_description": "Manipulate Rackspace Cloud Autoscale Scaling Policy",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "Rackspace username, overrides I(credentials)."
            ]
        },
        "is_percent": {
            "default": false,
            "description": [
                "Whether the value in I(change) is a percent value"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name to give the policy"
            ]
        },
        "scaling_group": {
            "required": true,
            "description": [
                "Name of the scaling group that this policy will be added to"
            ]
        },
        "env": {
            "description": [
                "Environment as configured in I(~/.pyrax.cfg), see U(https://github.com/rackspace/pyrax/blob/master/docs/getting_started.md#pyrax-configuration)."
            ],
            "version_added": 1.5
        },
        "region": {
            "default": "DFW",
            "description": [
                "Region to create an instance in."
            ]
        },
        "verify_ssl": {
            "description": [
                "Whether or not to require SSL validation of API endpoints."
            ],
            "version_added": 1.5
        },
        "cron": {
            "description": [
                "The time when the policy will be executed, as a cron entry. For example, if this is parameter is set to C(1 0 * * *)"
            ]
        },
        "desired_capacity": {
            "description": [
                "The desired server capacity of the scaling the group; that is, how many servers should be in the scaling group."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the resource"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "cooldown": {
            "description": [
                "The period of time, in seconds, that must pass before any scaling can occur after the previous scaling. Must be an integer between 0 and 86400 (24 hrs)."
            ]
        },
        "at": {
            "description": [
                "The UTC time when this policy will be executed. The time must be formatted according to C(yyyy-MM-dd'T'HH:mm:ss.SSS) such as C(2013-05-19T08:07:08Z)"
            ]
        },
        "policy_type": {
            "required": true,
            "description": [
                "The type of policy that will be executed for the current release."
            ],
            "choices": [
                "webhook",
                "schedule"
            ]
        },
        "credentials": {
            "default": null,
            "description": [
                "File to find the Rackspace credentials in. Ignored if I(api_key) and I(username) are provided."
            ],
            "aliases": [
                "creds_file"
            ]
        },
        "api_key": {
            "description": [
                "Rackspace API key, overrides I(credentials)."
            ],
            "aliases": [
                "password"
            ]
        },
        "change": {
            "description": [
                "The change, either as a number of servers or as a percentage, to make in the scaling group. If this is a percentage, you must set I(is_percent) to C(true) also."
            ]
        }
    },
    "module": "rax_scaling_policy"
}, {
    "short_description": "create, delete, or modify an Amazon rds instance",
    "deprecated": null,
    "options": {
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "db_engine": {
            "default": null,
            "required": false,
            "description": [
                "The type of database.  Used only when command=create.",
                "mariadb was added in version 2.2"
            ],
            "choices": [
                "mariadb",
                "MySQL",
                "oracle-se1",
                "oracle-se",
                "oracle-ee",
                "sqlserver-ee",
                "sqlserver-se",
                "sqlserver-ex",
                "sqlserver-web",
                "postgres",
                "aurora"
            ]
        },
        "iops": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the number of IOPS for the instance.  Used only when command=create or command=modify. Must be an integer greater than 1000."
            ]
        },
        "backup_window": {
            "default": null,
            "required": false,
            "description": [
                "Backup window in format of hh24:mi-hh24:mi.  If not specified then a random backup window is assigned. Used only when command=create or command=modify."
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "backup_retention": {
            "default": null,
            "required": false,
            "description": [
                "Number of days backups are retained.  Set to 0 to disable backups.  Default is 1 day.  Valid range: 0-35. Used only when command=create or command=modify."
            ]
        },
        "port": {
            "default": "3306 for mysql, 1521 for Oracle, 1433 for SQL Server, 5432 for PostgreSQL.",
            "required": false,
            "description": [
                "Port number that the DB instance uses for connections. Used only when command=create or command=replicate.",
                "Prior to 2.0 it always defaults to null and the API would use 3306, it had to be set to other DB default values when not using MySql. Starting at 2.0 it automatically defaults to what is expected for each c(db_engine)."
            ]
        },
        "security_groups": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of one or more security groups.  Used only when command=create or command=modify."
            ]
        },
        "size": {
            "default": null,
            "required": false,
            "description": [
                "Size in gigabytes of the initial storage for the DB instance. Used only when command=create or command=modify."
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "subnet": {
            "default": null,
            "required": false,
            "description": [
                "VPC subnet group.  If specified then a VPC instance is created. Used only when command=create."
            ]
        },
        "vpc_security_groups": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of one or more vpc security group ids. Also requires `subnet` to be specified. Used only when command=create or command=modify."
            ]
        },
        "upgrade": {
            "default": false,
            "required": false,
            "description": [
                "Indicates that minor version upgrades should be applied automatically. Used only when command=create or command=replicate."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "zone": {
            "default": null,
            "required": false,
            "description": [
                "availability zone in which to launch the instance. Used only when command=create, command=replicate or command=restore."
            ],
            "aliases": [
                "aws_zone",
                "ec2_zone"
            ]
        },
        "instance_type": {
            "default": null,
            "required": false,
            "description": [
                "The instance type of the database.  Must be specified when command=create. Optional when command=replicate, command=modify or command=restore. If not specified then the replica inherits the same instance type as the source instance."
            ]
        },
        "source_instance": {
            "default": null,
            "required": false,
            "description": [
                "Name of the database to replicate. Used only when command=replicate."
            ]
        },
        "parameter_group": {
            "default": null,
            "required": false,
            "description": [
                "Name of the DB parameter group to associate with this instance.  If omitted then the RDS default DBParameterGroup will be used. Used only when command=create or command=modify."
            ]
        },
        "command": {
            "required": true,
            "description": [
                "Specifies the action to take. The 'reboot' option is available starting at version 2.0"
            ],
            "choices": [
                "create",
                "replicate",
                "delete",
                "facts",
                "modify",
                "promote",
                "snapshot",
                "reboot",
                "restore"
            ]
        },
        "multi_zone": {
            "default": null,
            "required": false,
            "description": [
                "Specifies if this is a Multi-availability-zone deployment. Can not be used in conjunction with zone parameter. Used only when command=create or command=modify."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "new_instance_name": {
            "default": null,
            "required": false,
            "description": [
                "Name to rename an instance to. Used only when command=modify."
            ],
            "version_added": "1.5"
        },
        "username": {
            "default": null,
            "required": false,
            "description": [
                "Master database username. Used only when command=create."
            ]
        },
        "tags": {
            "default": null,
            "required": false,
            "description": [
                "tags dict to apply to a resource. Used with command=create, command=replicate, command=restore. Requires boto >= 2.26.0"
            ],
            "version_added": "1.9"
        },
        "db_name": {
            "default": null,
            "required": false,
            "description": [
                "Name of a database to create within the instance.  If not specified then no database is created. Used only when command=create."
            ]
        },
        "license_model": {
            "default": null,
            "required": false,
            "description": [
                "The license model for this DB instance. Used only when command=create or command=restore."
            ],
            "choices": [
                "license-included",
                "bring-your-own-license",
                "general-public-license",
                "postgresql-license"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Password for the master database username. Used only when command=create or command=modify."
            ]
        },
        "apply_immediately": {
            "default": false,
            "description": [
                "Used only when command=modify.  If enabled, the modifications will be applied as soon as possible rather than waiting for the next preferred maintenance window."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "wait": {
            "default": "no",
            "required": false,
            "description": [
                "When command=create, replicate, modify or restore then wait for the database to enter the 'available' state.  When command=delete wait for the database to be terminated."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "character_set_name": {
            "default": null,
            "required": false,
            "description": [
                "Associate the DB instance with a specified character set. Used with command=create."
            ],
            "version_added": "1.9"
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "option_group": {
            "default": null,
            "required": false,
            "description": [
                "The name of the option group to use.  If not specified then the default option group is used. Used only when command=create."
            ]
        },
        "engine_version": {
            "default": null,
            "required": false,
            "description": [
                "Version number of the database engine to use. Used only when command=create. If not specified then the current Amazon RDS default engine version is used."
            ]
        },
        "instance_name": {
            "default": null,
            "required": false,
            "description": [
                "Database instance identifier. Required except when using command=facts or command=delete on just a snapshot"
            ]
        },
        "force_failover": {
            "default": "no",
            "required": false,
            "description": [
                "Used only when command=reboot.  If enabled, the reboot is done using a MultiAZ failover."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "snapshot": {
            "default": null,
            "required": false,
            "description": [
                "Name of snapshot to take. When command=delete, if no snapshot name is provided then no snapshot is taken. If used with command=delete with no instance_name, the snapshot is deleted. Used with command=facts, command=delete or command=snapshot."
            ]
        },
        "publicly_accessible": {
            "default": null,
            "required": false,
            "description": [
                "explicitly set whether the resource should be publicly accessible or not. Used with command=create, command=replicate. Requires boto >= 2.26.0"
            ],
            "version_added": "1.9"
        },
        "maint_window": {
            "default": null,
            "required": false,
            "description": [
                "Maintenance window in format of ddd:hh24:mi-ddd:hh24:mi.  (Example: Mon:22:00-Mon:23:15) If not specified then a random maintenance window is assigned. Used only when command=create or command=modify."
            ]
        }
    },
    "module": "rds"
}, {
    "short_description": "manage RDS parameter groups",
    "deprecated": null,
    "options": {
        "engine": {
            "default": null,
            "aliases": [],
            "required": false,
            "description": [
                "The type of database for this group. Required for state=present."
            ],
            "choices": [
                "aurora5.6",
                "mariadb10.0",
                "mariadb10.1",
                "mysql5.1",
                "mysql5.5",
                "mysql5.6",
                "mysql5.7",
                "oracle-ee-11.2",
                "oracle-ee-12.1",
                "oracle-se-11.2",
                "oracle-se-12.1",
                "oracle-se1-11.2",
                "oracle-se1-12.1",
                "postgres9.3",
                "postgres9.4",
                "postgres9.5",
                "postgres9.6",
                "sqlserver-ee-10.5'",
                "sqlserver-ee-11.0",
                "sqlserver-ex-10.5",
                "sqlserver-ex-11.0",
                "sqlserver-ex-12.0",
                "sqlserver-se-10.5",
                "sqlserver-se-11.0",
                "sqlserver-se-12.0",
                "sqlserver-web-10.5",
                "sqlserver-web-11.0",
                "sqlserver-web-12.0"
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Database parameter group identifier."
            ],
            "aliases": []
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "immediate": {
            "default": null,
            "required": false,
            "description": [
                "Whether to apply the changes immediately, or after the next reboot of any associated instances."
            ],
            "aliases": []
        },
        "state": {
            "default": "present",
            "aliases": [],
            "required": true,
            "description": [
                "Specifies whether the group should be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "params": {
            "default": null,
            "required": false,
            "description": [
                "Map of parameter names and values. Numeric values may be represented as K for kilo (1024), M for mega (1024^2), G for giga (1024^3), or T for tera (1024^4), and these values will be expanded into the appropriate number before being set in the parameter group."
            ],
            "aliases": []
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Database parameter group description. Only set when a new group is added."
            ],
            "aliases": []
        }
    },
    "module": "rds_param_group"
}, {
    "short_description": "manage RDS database subnet groups",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "subnets": {
            "default": null,
            "required": false,
            "description": [
                "List of subnet IDs that make up the database subnet group."
            ],
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Database subnet group identifier."
            ],
            "aliases": []
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "state": {
            "default": "present",
            "aliases": [],
            "required": true,
            "description": [
                "Specifies whether the subnet should be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Database subnet group description. Only set when a new group is added."
            ],
            "aliases": []
        }
    },
    "module": "rds_subnet_group"
}, {
    "short_description": "Manage registration and subscriptions to RHSM using the C(subscription-manager) command",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "access.redhat.com or Sat6  username"
            ]
        },
        "server_hostname": {
            "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
            "required": false,
            "description": [
                "Specify an alternative Red Hat Subscription Management or Sat6 server"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "access.redhat.com or Sat6 password"
            ]
        },
        "consumer_type": {
            "default": null,
            "required": false,
            "description": [
                "The type of unit to register, defaults to system"
            ],
            "version_added": "2.1"
        },
        "org_id": {
            "default": null,
            "required": false,
            "description": [
                "Organization ID to use in conjunction with activationkey"
            ],
            "version_added": "2.0"
        },
        "consumer_id": {
            "default": null,
            "required": false,
            "description": [
                "References an existing consumer ID to resume using a previous registration\nfor this system. If the  system's identity certificate is lost or corrupted,\nthis option allows it to resume using its previous identity and subscriptions.\nThe default is to not specify a consumer ID so a new ID is created.\n"
            ],
            "version_added": "2.1"
        },
        "environment": {
            "default": null,
            "required": false,
            "description": [
                "Register with a specific environment in the destination org. Used with Red Hat Satellite 6.x or Katello"
            ],
            "version_added": "2.2"
        },
        "force_register": {
            "default": false,
            "required": false,
            "description": [
                "Register the system even if it is already registered"
            ],
            "version_added": "2.2"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "whether to register and subscribe (C(present)), or unregister (C(absent)) a system"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "autosubscribe": {
            "default": false,
            "required": false,
            "description": [
                "Upon successful registration, auto-consume available subscriptions"
            ]
        },
        "activationkey": {
            "default": null,
            "required": false,
            "description": [
                "supply an activation key for use with registration"
            ]
        },
        "server_insecure": {
            "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
            "required": false,
            "description": [
                "Enable or disable https server certificate verification when connecting to C(server_hostname)"
            ]
        },
        "consumer_name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the system to register, defaults to the hostname"
            ],
            "version_added": "2.1"
        },
        "rhsm_baseurl": {
            "default": "Current value from C(/etc/rhsm/rhsm.conf) is the default",
            "required": false,
            "description": [
                "Specify CDN baseurl"
            ]
        },
        "pool": {
            "default": "^$",
            "required": false,
            "description": [
                "Specify a subscription pool name to consume.  Regular expressions accepted."
            ]
        }
    },
    "module": "redhat_subscription"
}, {
    "short_description": "Various redis commands, slave and flush",
    "deprecated": null,
    "options": {
        "login_port": {
            "default": 6379,
            "required": false,
            "description": [
                "The port to connect to"
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "A redis config key."
            ],
            "version_added": 1.6
        },
        "flush_mode": {
            "default": "all",
            "required": false,
            "description": [
                "Type of flush (all the dbs in a redis instance or a specific one) [flush command]"
            ],
            "choices": [
                "all",
                "db"
            ]
        },
        "master_host": {
            "default": null,
            "required": false,
            "description": [
                "The host of the master instance [slave command]"
            ]
        },
        "login_host": {
            "default": "localhost",
            "required": false,
            "description": [
                "The host running the database"
            ]
        },
        "master_port": {
            "default": null,
            "required": false,
            "description": [
                "The port of the master instance [slave command]"
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "The database to flush (used in db mode) [flush command]"
            ]
        },
        "value": {
            "default": null,
            "required": false,
            "description": [
                "A redis config value."
            ],
            "version_added": 1.6
        },
        "command": {
            "default": null,
            "required": true,
            "description": [
                "The selected redis command"
            ],
            "choices": [
                "slave",
                "flush",
                "config"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with (usually not used)"
            ]
        },
        "slave_mode": {
            "default": "slave",
            "required": false,
            "description": [
                "the mode of the redis instance [slave command]"
            ],
            "choices": [
                "master",
                "slave"
            ]
        }
    },
    "module": "redis"
}, {
    "short_description": "create, delete, or modify an Amazon Redshift instance",
    "deprecated": null,
    "options": {
        "cluster_parameter_group_name": {
            "default": null,
            "description": [
                "name of the cluster parameter group"
            ],
            "aliases": [
                "param_group_name"
            ]
        },
        "username": {
            "description": [
                "Master database username. Used only when command=create."
            ]
        },
        "new_cluster_identifier": {
            "default": null,
            "description": [
                "Only used when command=modify."
            ],
            "aliases": [
                "new_identifier"
            ]
        },
        "number_of_nodes": {
            "default": null,
            "description": [
                "Number of nodes. Only used when cluster_type=multi-node."
            ]
        },
        "availability_zone": {
            "description": [
                "availability zone in which to launch cluster"
            ],
            "aliases": [
                "zone",
                "aws_zone"
            ]
        },
        "encrypted": {
            "default": false,
            "description": [
                "if the cluster is encrypted or not"
            ]
        },
        "node_type": {
            "description": [
                "The node type of the cluster. Must be specified when command=create."
            ],
            "choices": [
                "ds1.xlarge",
                "ds1.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge",
                "dc1.large",
                "dc1.8xlarge",
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge"
            ]
        },
        "db_name": {
            "default": null,
            "description": [
                "Name of the database."
            ]
        },
        "publicly_accessible": {
            "default": false,
            "description": [
                "if the cluster is accessible publicly or not"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "password": {
            "description": [
                "Master database password. Used only when command=create."
            ]
        },
        "port": {
            "default": null,
            "description": [
                "which port the cluster is listining"
            ]
        },
        "wait": {
            "default": "no",
            "description": [
                "When command=create, modify or restore then wait for the database to enter the 'available' state. When command=delete wait for the database to be terminated."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "allow_version_upgrade": {
            "default": true,
            "description": [
                "flag to determinate if upgrade of version is possible"
            ],
            "aliases": [
                "version_upgrade"
            ]
        },
        "cluster_type": {
            "default": "single-node",
            "description": [
                "The type of cluster."
            ],
            "choices": [
                "multi-node",
                "single-node"
            ]
        },
        "elastic_ip": {
            "default": null,
            "description": [
                "if the cluster has an elastic IP or not"
            ]
        },
        "cluster_subnet_group_name": {
            "description": [
                "which subnet to place the cluster"
            ],
            "aliases": [
                "subnet"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "wait_timeout": {
            "default": 300,
            "description": [
                "how long before wait gives up, in seconds"
            ]
        },
        "command": {
            "required": true,
            "description": [
                "Specifies the action to take."
            ],
            "choices": [
                "create",
                "facts",
                "delete",
                "modify"
            ]
        },
        "cluster_security_groups": {
            "default": null,
            "description": [
                "in which security group the cluster belongs"
            ],
            "aliases": [
                "security_groups"
            ]
        },
        "automated_snapshot_retention_period": {
            "default": null,
            "description": [
                "period when the snapshot take place"
            ],
            "aliases": [
                "retention_period"
            ]
        },
        "identifier": {
            "required": true,
            "description": [
                "Redshift cluster identifier."
            ]
        },
        "cluster_version": {
            "default": null,
            "aliases": [
                "version"
            ],
            "description": [
                "which version the cluster should have"
            ],
            "choices": [
                "1.0"
            ]
        },
        "preferred_maintenance_window": {
            "default": null,
            "description": [
                "maintenance window"
            ],
            "aliases": [
                "maintance_window",
                "maint_window"
            ]
        },
        "vpc_security_group_ids": {
            "default": null,
            "description": [
                "VPC security group"
            ],
            "aliases": [
                "vpc_security_groups"
            ]
        }
    },
    "module": "redshift"
}, {
    "short_description": "mange Redshift cluster subnet groups",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "group_name": {
            "required": true,
            "description": [
                "Cluster subnet group name."
            ],
            "aliases": [
                "name"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Specifies whether the subnet should be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "group_subnets": {
            "default": null,
            "required": false,
            "description": [
                "List of subnet IDs that make up the cluster subnet group."
            ],
            "aliases": [
                "subnets"
            ]
        },
        "group_description": {
            "default": null,
            "required": false,
            "description": [
                "Database subnet group description."
            ],
            "aliases": [
                "description"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "redshift_subnet_group"
}, {
    "short_description": "Replace all instances of a particular string in a file using a back-referenced regular expression.",
    "deprecated": null,
    "options": {
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Name of the group that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "unsafe_writes": {
            "default": false,
            "required": false,
            "description": [
                "Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner.",
                "This boolean option allows ansible to fall back to unsafe methods of updating files for those cases in which you do not have any other choice. Be aware that this is subject to race conditions and can lead to data corruption."
            ],
            "version_added": "2.2"
        },
        "selevel": {
            "default": "s0",
            "required": false,
            "description": [
                "Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
            ]
        },
        "regexp": {
            "required": true,
            "description": [
                "The regular expression to look for in the contents of the file. Uses Python regular expressions; see U(http://docs.python.org/2/library/re.html). Uses multiline mode, which means C(^) and C($) match the beginning and end respectively of I(each line) of the file."
            ]
        },
        "seuser": {
            "default": null,
            "required": false,
            "description": [
                "User part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available."
            ]
        },
        "setype": {
            "default": null,
            "required": false,
            "description": [
                "Type part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "replace": {
            "required": false,
            "description": [
                "The string to replace regexp matches. May contain backreferences that will get expanded with the regexp capture groups if the regexp matches. If not set, matches are removed entirely."
            ]
        },
        "serole": {
            "default": null,
            "required": false,
            "description": [
                "Role part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
            ]
        },
        "others": {
            "required": false,
            "description": [
                "All arguments accepted by the M(file) module also work here."
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the user that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "follow": {
            "default": "no",
            "required": false,
            "description": [
                "This flag indicates that filesystem links, if they exist, should be followed."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "The file to modify.",
                "Before 2.3 this option was only usable as I(dest), I(destfile) and I(name)."
            ],
            "aliases": [
                "dest",
                "destfile",
                "name"
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": [
                "Attributes the file or directory should have. To get supported flags look at the man page for I(chattr) on the target system. This string should contain the attributes in the same order as the one displayed by I(lsattr)."
            ],
            "version_added": "2.3",
            "aliases": [
                "attr"
            ]
        },
        "backup": {
            "default": "no",
            "required": false,
            "description": [
                "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate": {
            "default": "None",
            "required": false,
            "description": [
                "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
            ]
        }
    },
    "module": "replace"
}, {
    "short_description": "RHEV/oVirt automation",
    "deprecated": null,
    "options": {
        "vmhost": {
            "required": false,
            "description": [
                "The host you wish your VM to run on."
            ]
        },
        "vmmem": {
            "default": "1",
            "required": false,
            "description": [
                "The amount of memory you want your VM to use (in GB)."
            ]
        },
        "cd_drive": {
            "default": null,
            "required": false,
            "description": [
                "The CD you wish to have mounted on the VM when I(state = 'CD')."
            ]
        },
        "image": {
            "default": null,
            "required": false,
            "description": [
                "The template to use for the VM."
            ]
        },
        "cpu_share": {
            "default": "0",
            "required": false,
            "description": [
                "This parameter is used to configure the cpu share."
            ]
        },
        "insecure_api": {
            "default": false,
            "required": false,
            "description": [
                "A boolean switch to make a secure or insecure connection to the server."
            ]
        },
        "cluster": {
            "required": false,
            "description": [
                "The rhev/ovirt cluster in which you want you VM to start."
            ]
        },
        "user": {
            "default": "admin@internal",
            "required": false,
            "description": [
                "The user to authenticate with."
            ]
        },
        "port": {
            "default": "443",
            "required": false,
            "description": [
                "The port on which the API is reacheable."
            ]
        },
        "vm_ha": {
            "default": true,
            "required": false,
            "description": [
                "To make your VM High Available."
            ]
        },
        "disks": {
            "required": false,
            "description": [
                "This option uses complex arguments and is a list of disks with the options name, size and domain."
            ]
        },
        "datacenter": {
            "default": "Default",
            "required": false,
            "description": [
                "The rhev/ovirt datacenter in which you want you VM to start."
            ]
        },
        "name": {
            "description": [
                "The name of the VM."
            ]
        },
        "ifaces": {
            "required": false,
            "description": [
                "This option uses complex arguments and is a list of interfaces with the options name and vlan."
            ],
            "aliases": [
                "nics",
                "interfaces"
            ]
        },
        "server": {
            "default": "127.0.0.1",
            "required": false,
            "description": [
                "The name/ip of your RHEV-m/oVirt instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "This serves to create/remove/update or powermanage your VM."
            ],
            "choices": [
                "ping",
                "present",
                "absent",
                "up",
                "down",
                "restarted",
                "cd",
                "info"
            ]
        },
        "osver": {
            "default": "rhel_6x64",
            "required": false,
            "description": [
                "The operationsystem option in RHEV/oVirt."
            ]
        },
        "mempol": {
            "default": "1",
            "required": false,
            "description": [
                "The minimum amount of memory you wish to reserve for this system."
            ]
        },
        "timeout": {
            "default": null,
            "required": false,
            "description": [
                "The timeout you wish to define for power actions.",
                "When I(state = 'up')",
                "When I(state = 'down')",
                "When I(state = 'restarted')"
            ]
        },
        "del_prot": {
            "default": true,
            "required": false,
            "description": [
                "This option sets the delete protection checkbox."
            ]
        },
        "boot_order": {
            "default": [
                "network",
                "hd"
            ],
            "required": false,
            "description": [
                "This option uses complex arguments and is a list of items that specify the bootorder."
            ]
        },
        "type": {
            "default": "server",
            "required": false,
            "description": [
                "To define if the VM is a server or desktop."
            ],
            "choices": [
                "server",
                "desktop",
                "host"
            ]
        },
        "vmcpu": {
            "default": "2",
            "required": false,
            "description": [
                "The number of CPUs you want in your VM."
            ]
        }
    },
    "module": "rhevm"
}, {
    "short_description": "Adds or removes Red Hat software channels",
    "deprecated": null,
    "options": {
        "sysname": {
            "default": null,
            "required": true,
            "description": [
                "name of the system as it is known in RHN/Satellite"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "whether the channel should be present or not"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "name of the software channel"
            ]
        },
        "url": {
            "required": true,
            "description": [
                "The full url to the RHN/Satellite api"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "the user's password"
            ]
        },
        "user": {
            "required": true,
            "description": [
                "RHN/Satellite user"
            ]
        }
    },
    "module": "rhn_channel"
}, {
    "short_description": "Manage Red Hat Network registration using the C(rhnreg_ks) command",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "Red Hat Network username"
            ]
        },
        "systemorgid": {
            "default": "None",
            "required": false,
            "description": [
                "supply an organizational id for use with registration"
            ],
            "version_added": "2.1"
        },
        "enable_eus": {
            "default": false,
            "required": false,
            "description": [
                "If true, extended update support will be requested."
            ]
        },
        "server_url": {
            "default": "Current value of I(serverURL) from C(/etc/sysconfig/rhn/up2date) is the default",
            "required": false,
            "description": [
                "Specify an alternative Red Hat Network server URL"
            ]
        },
        "channels": {
            "default": [],
            "required": false,
            "description": [
                "Optionally specify a list of comma-separated channels to subscribe to upon successful registration."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "whether to register (C(present)), or unregister (C(absent)) a system"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "sslcacert": {
            "default": "None",
            "required": false,
            "description": [
                "supply a custom ssl CA certificate file for use with registration"
            ],
            "version_added": "2.1"
        },
        "activationkey": {
            "default": null,
            "required": false,
            "description": [
                "supply an activation key for use with registration"
            ]
        },
        "profilename": {
            "default": null,
            "required": false,
            "description": [
                "supply an profilename for use with registration"
            ],
            "version_added": "2.0"
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Red Hat Network password"
            ]
        }
    },
    "module": "rhn_register"
}, {
    "short_description": "This module handles some common Riak operations",
    "deprecated": null,
    "options": {
        "target_node": {
            "default": "riak@127.0.0.1",
            "required": false,
            "description": [
                "The target node for certain operations (join, ping)"
            ]
        },
        "config_dir": {
            "default": "/etc/riak",
            "required": false,
            "description": [
                "The path to the riak configuration directory"
            ]
        },
        "wait_for_service": {
            "default": "None",
            "required": false,
            "description": [
                "Waits for a riak service to come online before continuing."
            ],
            "choices": [
                "kv"
            ]
        },
        "http_conn": {
            "default": "127.0.0.1:8098",
            "required": false,
            "description": [
                "The ip address and port that is listening for Riak HTTP queries"
            ]
        },
        "wait_for_ring": {
            "default": null,
            "required": false,
            "description": [
                "Number of seconds to wait for all nodes to agree on the ring."
            ]
        },
        "wait_for_handoffs": {
            "default": null,
            "required": false,
            "description": [
                "Number of seconds to wait for handoffs to complete."
            ]
        },
        "command": {
            "default": null,
            "required": false,
            "description": [
                "The command you would like to perform against the cluster."
            ],
            "choices": [
                "ping",
                "kv_test",
                "join",
                "plan",
                "commit"
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "version_added": "1.5.1",
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "riak"
}, {
    "short_description": "Send notifications to Rocket Chat",
    "deprecated": null,
    "options": {
        "username": {
            "default": "Ansible",
            "required": false,
            "description": [
                "This is the sender of the message."
            ]
        },
        "domain": {
            "required": true,
            "description": [
                "The domain for your environment without protocol. (i.e. C(example.com) or C(chat.example.com))"
            ]
        },
        "protocol": {
            "default": "https",
            "required": false,
            "description": [
                "Specify the protocol used to send notification messages before the webhook url. (i.e. http or https)"
            ],
            "choices": [
                "http",
                "https"
            ]
        },
        "attachments": {
            "default": "None",
            "required": false,
            "description": [
                "Define a list of attachments."
            ]
        },
        "color": {
            "default": "normal",
            "required": false,
            "description": [
                "Allow text to use default colors - use the default of 'normal' to not send a custom color bar at the start of the message"
            ],
            "choices": [
                "normal",
                "good",
                "warning",
                "danger"
            ]
        },
        "icon_url": {
            "default": "https://www.ansible.com/favicon.ico",
            "required": false,
            "description": [
                "URL for the message sender's icon."
            ]
        },
        "token": {
            "required": true,
            "description": [
                "Rocket Chat Incoming Webhook integration token.  This provides authentication to Rocket Chat's Incoming webhook for posting messages."
            ]
        },
        "icon_emoji": {
            "default": "None",
            "required": false,
            "description": [
                "Emoji for the message sender. The representation for the available emojis can be got from Rocket Chat. (for example :thumbsup:) (if I(icon_emoji) is set, I(icon_url) will not be used)"
            ]
        },
        "link_names": {
            "default": 1,
            "required": false,
            "description": [
                "Automatically create links for channels and usernames in I(msg)."
            ],
            "choices": [
                1,
                0
            ]
        },
        "msg": {
            "default": "None",
            "required": false,
            "description": [
                "Message to be sent."
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "channel": {
            "default": "None",
            "required": false,
            "description": [
                "Channel to send the message to. If absent, the message goes to the channel selected for the I(token) specifed during the creation of webhook."
            ]
        }
    },
    "module": "rocketchat"
}, {
    "short_description": "Notify Rollbar about app deployments",
    "deprecated": null,
    "options": {
        "comment": {
            "required": false,
            "description": [
                "Deploy comment (e.g. what is being deployed)."
            ]
        },
        "rollbar_user": {
            "required": false,
            "description": [
                "Rollbar username of the user who deployed."
            ]
        },
        "url": {
            "default": "https://api.rollbar.com/api/1/deploy/",
            "required": false,
            "description": [
                "Optional URL to submit the notification to."
            ]
        },
        "environment": {
            "required": true,
            "description": [
                "Name of the environment being deployed, e.g. 'production'."
            ]
        },
        "token": {
            "required": true,
            "description": [
                "Your project access token."
            ]
        },
        "user": {
            "required": false,
            "description": [
                "User who deployed."
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "revision": {
            "required": true,
            "description": [
                "Revision number/sha being deployed."
            ]
        }
    },
    "module": "rollbar_deployment"
}, {
    "short_description": "add or delete entries in Amazons Route53 DNS service",
    "deprecated": null,
    "options": {
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "health_check": {
            "default": null,
            "required": false,
            "description": [
                "Health check to associate with this record"
            ],
            "version_added": "2.0"
        },
        "weight": {
            "default": null,
            "required": false,
            "description": [
                "Weighted resource record sets only. Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location."
            ],
            "version_added": "2.0"
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "hosted_zone_id": {
            "default": null,
            "required": false,
            "description": [
                "The Hosted Zone ID of the DNS zone to modify"
            ],
            "version_added": "2.0"
        },
        "wait_timeout": {
            "default": 300,
            "required": false,
            "description": [
                "How long to wait for the changes to be replicated, in seconds."
            ],
            "version_added": "2.1"
        },
        "ttl": {
            "default": "3600 (one hour)",
            "required": false,
            "description": [
                "The TTL to give the new record"
            ]
        },
        "overwrite": {
            "default": null,
            "required": false,
            "description": [
                "Whether an existing record should be overwritten on create if values do not match"
            ]
        },
        "wait": {
            "default": false,
            "required": false,
            "description": [
                "Wait until the changes have been replicated to all Amazon Route 53 DNS servers."
            ],
            "version_added": "2.1"
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "alias_hosted_zone_id": {
            "default": null,
            "required": false,
            "description": [
                "The hosted zone identifier."
            ],
            "version_added": "1.9"
        },
        "zone": {
            "required": true,
            "description": [
                "The DNS zone to modify"
            ]
        },
        "record": {
            "required": true,
            "description": [
                "The full DNS record to create or delete"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "region": {
            "default": null,
            "required": false,
            "description": [
                "Latency-based resource record sets only Among resource record sets that have the same combination of DNS name and type, a value that determines which region this should be associated with for the latency-based routing"
            ],
            "version_added": "2.0"
        },
        "retry_interval": {
            "default": 500,
            "required": false,
            "description": [
                "In the case that route53 is still servicing a prior request, this module will wait and try again after this many seconds. If you have many domain names, the default of 500 seconds may be too long."
            ]
        },
        "value": {
            "default": null,
            "required": false,
            "description": [
                "The new value when creating a DNS record.  Multiple comma-spaced values are allowed for non-alias records.  When deleting a record all values for the record must be specified or Route53 will not delete it."
            ]
        },
        "alias": {
            "default": false,
            "required": false,
            "description": [
                "Indicates if this is an alias record."
            ],
            "version_added": "1.9",
            "choices": [
                "True",
                "False"
            ]
        },
        "private_zone": {
            "default": false,
            "required": false,
            "description": [
                "If set to true, the private zone matching the requested name within the domain will be used if there are both public and private zones. The default is to use the public zone."
            ],
            "version_added": "1.9"
        },
        "alias_evaluate_target_health": {
            "default": false,
            "required": false,
            "description": [
                "Whether or not to evaluate an alias target health. Useful for aliases to Elastic Load Balancers."
            ],
            "version_added": "2.1"
        },
        "command": {
            "required": true,
            "description": [
                "Specifies the action to take."
            ],
            "choices": [
                "get",
                "create",
                "delete"
            ]
        },
        "vpc_id": {
            "default": null,
            "required": false,
            "description": [
                "When used in conjunction with private_zone: true, this will only modify records in the private hosted zone attached to this VPC.",
                "This allows you to have multiple private hosted zones, all with the same name, attached to different VPCs."
            ],
            "version_added": "2.0"
        },
        "identifier": {
            "default": null,
            "required": false,
            "description": [
                "Have to be specified for Weighted, latency-based and failover resource record sets only. An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type."
            ],
            "version_added": "2.0"
        },
        "type": {
            "required": true,
            "description": [
                "The type of DNS record to create"
            ],
            "choices": [
                "A",
                "CNAME",
                "MX",
                "AAAA",
                "TXT",
                "PTR",
                "SRV",
                "SPF",
                "NS",
                "SOA"
            ]
        },
        "failover": {
            "default": null,
            "required": false,
            "description": [
                "Failover resource record sets only. Whether this is the primary or secondary resource record set. Allowed values are PRIMARY and SECONDARY"
            ],
            "version_added": "2.0"
        }
    },
    "module": "route53"
}, {
    "short_description": "Retrieves route53 details using AWS methods",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "start_record_name": {
            "required": false,
            "description": [
                "The first name in the lexicographic ordering of domain names that you want the list_command: record_sets to start listing from"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "resource_id": {
            "required": false,
            "description": [
                "The ID/s of the specified resource/s"
            ],
            "aliases": [
                "resource_ids"
            ]
        },
        "hosted_zone_method": {
            "default": "list",
            "required": false,
            "description": [
                "This is used in conjunction with query: hosted_zone. It allows for listing details, counts or tags of various hosted zone details."
            ],
            "choices": [
                "details",
                "list",
                "list_by_name",
                "count",
                "tags"
            ]
        },
        "dns_name": {
            "required": false,
            "description": [
                "The first name in the lexicographic ordering of domain names that you want the list_command to start listing from"
            ]
        },
        "health_check_method": {
            "default": "list",
            "required": false,
            "description": [
                "This is used in conjunction with query: health_check. It allows for listing details, counts or tags of various health check details."
            ],
            "choices": [
                "list",
                "details",
                "status",
                "failure_reason",
                "count",
                "tags"
            ]
        },
        "delegation_set_id": {
            "required": false,
            "description": [
                "The DNS Zone delegation set ID"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "max_items": {
            "required": false,
            "description": [
                "Maximum number of items to return for various get/list requests"
            ]
        },
        "hosted_zone_id": {
            "required": false,
            "description": [
                "The Hosted Zone ID of the DNS zone"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "health_check_id": {
            "required": false,
            "description": [
                "The ID of the health check"
            ]
        },
        "change_id": {
            "required": false,
            "description": [
                "The ID of the change batch request. The value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request."
            ]
        },
        "query": {
            "required": true,
            "description": [
                "specifies the query action to take"
            ],
            "choices": [
                "change",
                "checker_ip_range",
                "health_check",
                "hosted_zone",
                "record_sets",
                "reusable_delegation_set"
            ]
        },
        "next_marker": {
            "required": false,
            "description": [
                "Some requests such as list_command: hosted_zones will return a maximum number of entries - EG 100. If the number of entries exceeds this maximum another request can be sent using the NextMarker entry from the first response to get the next page of results"
            ]
        },
        "type": {
            "required": false,
            "description": [
                "The type of DNS record"
            ],
            "choices": [
                "A",
                "CNAME",
                "MX",
                "AAAA",
                "TXT",
                "PTR",
                "SRV",
                "SPF",
                "NS"
            ]
        }
    },
    "module": "route53_facts"
}, {
    "short_description": "add or delete health-checks in Amazons Route53 DNS service",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "request_interval": {
            "default": 30,
            "required": true,
            "description": [
                "The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request."
            ],
            "choices": [
                10,
                30
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "type": {
            "required": true,
            "description": [
                "The type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy."
            ],
            "choices": [
                "HTTP",
                "HTTPS",
                "HTTP_STR_MATCH",
                "HTTPS_STR_MATCH",
                "TCP"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "fqdn": {
            "required": false,
            "description": [
                "Domain name of the endpoint to check. Either this or `ip_address` has to be provided. When both are given the `fqdn` is used in the `Host:` header of the HTTP request."
            ]
        },
        "port": {
            "default": null,
            "required": false,
            "description": [
                "The port on the endpoint on which you want Amazon Route 53 to perform health checks. Required for TCP checks."
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Specifies the action to take."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "resource_path": {
            "default": null,
            "required": false,
            "description": [
                "The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html.",
                "Required for all checks except TCP.",
                "The path must begin with a /",
                "Maximum 255 characters."
            ]
        },
        "failure_threshold": {
            "default": 3,
            "required": true,
            "description": [
                "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa."
            ],
            "choices": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ]
        },
        "ip_address": {
            "default": null,
            "required": false,
            "description": [
                "IP address of the end-point to check. Either this or `fqdn` has to be provided."
            ]
        },
        "string_match": {
            "default": null,
            "required": false,
            "description": [
                "If the check type is HTTP_STR_MATCH or HTTP_STR_MATCH, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the first 5120 bytes of the response body, Amazon Route 53 considers the resource healthy."
            ]
        }
    },
    "module": "route53_health_check"
}, {
    "short_description": "add or delete Route53 zones",
    "deprecated": null,
    "options": {
        "comment": {
            "default": "",
            "required": false,
            "description": [
                "Comment associated with the zone"
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "vpc_region": {
            "default": null,
            "required": false,
            "description": [
                "The VPC Region the zone should be a part of (if this is going to be a private zone)"
            ]
        },
        "zone": {
            "required": true,
            "description": [
                "The DNS zone record (eg: foo.com.)"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "state": {
            "default": true,
            "required": false,
            "description": [
                "whether or not the zone should exist or not"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "vpc_id": {
            "default": null,
            "required": false,
            "description": [
                "The VPC ID the zone should be a part of (if this is going to be a private zone)"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "route53_zone"
}, {
    "short_description": "Adds or removes a gpg key from the rpm db",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "If the key will be imported or removed from the rpm db."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no) and the C(key) is a url starting with https, SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "key": {
            "default": null,
            "required": true,
            "description": [
                "Key that will be modified. Can be a url, a file, or a keyid if the key already exists in the database."
            ],
            "aliases": []
        }
    },
    "module": "rpm_key"
}, {
    "short_description": "Manage runit services.",
    "deprecated": null,
    "options": {
        "state": {
            "required": false,
            "description": [
                "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service (sv restart) and C(killed) will always bounce the service (sv force-stop). C(reloaded) will send a HUP (sv reload). C(once) will run a normally downed sv once (sv once), not really an idempotent operation."
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "killed",
                "reloaded",
                "once"
            ]
        },
        "enabled": {
            "required": false,
            "description": [
                "Wheater the service is enabled or not, if disabled it also implies stopped."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service to manage."
            ]
        },
        "service_dir": {
            "default": "/var/service",
            "required": false,
            "description": [
                "directory runsv watches for services"
            ]
        },
        "service_src": {
            "default": "/etc/sv",
            "required": false,
            "description": [
                "directory where services are defined, the source of symlinks to service_dir."
            ]
        }
    },
    "module": "runit"
}, {
    "short_description": "manage objects in S3.",
    "deprecated": null,
    "options": {
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "permission": {
            "default": "private",
            "required": false,
            "description": [
                "This option lets the user set the canned permissions on the object/bucket that are created. The permissions that can be set are 'private', 'public-read', 'public-read-write', 'authenticated-read'. Multiple permissions can be specified as a list."
            ],
            "version_added": "2.0"
        },
        "dest": {
            "required": false,
            "description": [
                "The destination file path when downloading an object/key with a GET operation."
            ],
            "version_added": "1.3",
            "aliases": []
        },
        "object": {
            "default": null,
            "required": false,
            "description": [
                "Keyname of the object inside the bucket. Can be used to create \"virtual directories\", see examples."
            ]
        },
        "prefix": {
            "default": null,
            "required": false,
            "description": [
                "Limits the response to keys that begin with the specified prefix for list mode"
            ],
            "version_added": "2.0"
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "marker": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the key to start with when using list mode. Object keys are returned in alphabetical order, starting with key after the marker in order."
            ],
            "version_added": "2.0"
        },
        "ignore_nonexistent_bucket": {
            "default": false,
            "description": [
                "Overrides initial bucket lookups in case bucket or iam policies are restrictive. Example: a user may have the GetObject permission but no other permissions. In this case using the option mode: get will fail without specifying ignore_nonexistent_bucket: True."
            ],
            "version_added": "2.3",
            "aliases": []
        },
        "overwrite": {
            "default": "always",
            "required": false,
            "description": [
                "Force overwrite either locally on the filesystem or remotely with the object/key. Used with PUT and GET operations. Boolean or one of [always, never, different], true is equal to 'always' and false is equal to 'never', new in 2.0"
            ],
            "version_added": "1.2"
        },
        "headers": {
            "default": null,
            "required": false,
            "description": [
                "Custom headers for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
            ],
            "version_added": "2.0"
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "src": {
            "default": null,
            "required": false,
            "description": [
                "The source file path when performing a PUT operation."
            ],
            "version_added": "1.3",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "encrypt": {
            "default": false,
            "required": false,
            "description": [
                "When set for PUT mode, asks for server-side encryption"
            ],
            "version_added": "2.0"
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "rgw": {
            "default": false,
            "description": [
                "Enable Ceph RGW S3 support. This option requires an explicit url via s3_url."
            ],
            "version_added": "2.2"
        },
        "region": {
            "default": null,
            "required": false,
            "description": [
                "AWS region to create the bucket in. If not set then the value of the AWS_REGION and EC2_REGION environment variables are checked, followed by the aws_region and ec2_region settings in the Boto config file.  If none of those are set the region defaults to the S3 Location: US Standard.  Prior to ansible 1.8 this parameter could be specified but had no effect."
            ],
            "version_added": "1.8"
        },
        "bucket": {
            "default": null,
            "required": true,
            "description": [
                "Bucket name."
            ],
            "aliases": []
        },
        "retries": {
            "default": 0,
            "required": false,
            "description": [
                "On recoverable failure, how many times to retry before actually failing."
            ],
            "version_added": "2.0"
        },
        "max_keys": {
            "default": 1000,
            "required": false,
            "description": [
                "Max number of results to return in list mode, set this if you want to retrieve fewer than the default 1000 keys."
            ],
            "version_added": "2.0"
        },
        "version": {
            "default": null,
            "required": false,
            "description": [
                "Version ID of the object inside the bucket. Can be used to get a specific version of a file if versioning is enabled in the target bucket."
            ],
            "version_added": "2.0",
            "aliases": []
        },
        "expiration": {
            "default": 600,
            "required": false,
            "description": [
                "Time limit (in seconds) for the URL generated and returned by S3/Walrus when performing a mode=put or mode=geturl operation."
            ],
            "aliases": []
        },
        "s3_url": {
            "default": null,
            "description": [
                "S3 URL endpoint for usage with Ceph, Eucalypus, fakes3, etc.  Otherwise assumes AWS"
            ],
            "aliases": [
                "S3_URL"
            ]
        },
        "metadata": {
            "default": null,
            "required": false,
            "description": [
                "Metadata for PUT operation, as a dictionary of 'key=value' and 'key=value,key=value'."
            ],
            "version_added": "1.6"
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "mode": {
            "required": true,
            "description": [
                "Switches the module behaviour between put (upload), get (download), geturl (return download url, Ansible 1.3+), getstr (download object as string (1.3+)), list (list keys, Ansible 2.0+), create (bucket), delete (bucket), and delobj (delete object, Ansible 2.0+)."
            ],
            "choices": [
                "get",
                "put",
                "delete",
                "create",
                "geturl",
                "getstr",
                "delobj",
                "list"
            ]
        }
    },
    "module": "s3"
}, {
    "short_description": "Manage S3 buckets in AWS, Ceph, Walrus and FakeS3",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "When trying to delete a bucket, delete all keys in the bucket first (an s3 bucket must be empty for a successful deletion)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the s3 bucket"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "tags": {
            "default": null,
            "required": false,
            "description": [
                "tags dict to apply to bucket"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "ceph": {
            "description": [
                "Enable API compatibility with Ceph. It takes into account the S3 API subset working with Ceph in order to provide the same module behaviour where possible."
            ],
            "version_added": "2.2"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or remove the s3 bucket"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "policy": {
            "default": null,
            "required": false,
            "description": [
                "The JSON policy as a string."
            ]
        },
        "s3_url": {
            "default": null,
            "description": [
                "S3 URL endpoint for usage with Ceph, Eucalypus, fakes3, etc. Otherwise assumes AWS"
            ],
            "aliases": [
                "S3_URL"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "requester_pays": {
            "default": false,
            "required": false,
            "description": [
                "With Requester Pays buckets, the requester instead of the bucket owner pays the cost of the request and the data download from the bucket."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "versioning": {
            "default": null,
            "required": false,
            "description": [
                "Whether versioning is enabled or disabled (note that once versioning is enabled, it can only be suspended)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "s3_bucket"
}, {
    "short_description": "Manage s3 bucket lifecycle rules in AWS",
    "deprecated": null,
    "options": {
        "status": {
            "default": "enabled",
            "required": false,
            "description": [
                "If 'enabled', the rule is currently being applied. If 'disabled', the rule is not currently being applied."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "transition_days": {
            "default": null,
            "required": false,
            "description": [
                "Indicates when, in days, an object transitions to a different storage class. If transition_date is not specified, this parameter is required."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the s3 bucket"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "expiration_date": {
            "default": null,
            "required": false,
            "description": [
                "Indicates the lifetime of the objects that are subject to the rule by the date they will expire. The value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified."
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "prefix": {
            "default": null,
            "required": false,
            "description": [
                "Prefix identifying one or more objects to which the rule applies.  If no prefix is specified, the rule will apply to the whole bucket."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or remove the lifecycle rule"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "storage_class": {
            "default": "glacier",
            "required": false,
            "description": [
                "The storage class to transition to. Currently there are two supported values - 'glacier' or 'standard_ia'.",
                "The 'standard_ia' class is only being available from Ansible version 2.2."
            ],
            "choices": [
                "glacier",
                "standard_ia"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "expiration_days": {
            "default": null,
            "required": false,
            "description": [
                "Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer."
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "rule_id": {
            "default": null,
            "required": false,
            "description": [
                "Unique identifier for the rule. The value cannot be longer than 255 characters. A unique value for the rule will be generated if no value is provided."
            ]
        },
        "transition_date": {
            "default": null,
            "required": false,
            "description": [
                "Indicates the lifetime of the objects that are subject to the rule by the date they will transition to a different storage class. The value must be ISO-8601 format, the time must be midnight and a GMT timezone must be specified. If transition_days is not specified, this parameter is required."
            ]
        }
    },
    "module": "s3_lifecycle"
}, {
    "short_description": "Manage logging facility of an s3 bucket in AWS",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the s3 bucket."
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "target_prefix": {
            "default": "",
            "required": false,
            "description": [
                "The prefix that should be prepended to the generated log files written to the target_bucket."
            ]
        },
        "target_bucket": {
            "default": null,
            "required": false,
            "description": [
                "The bucket to log to. Required when state=present."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Enable or disable logging."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "s3_logging"
}, {
    "short_description": "Efficiently upload multiple files to S3",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "file_change_strategy": {
            "default": "date_size",
            "required": false,
            "description": [
                "Difference determination method to allow changes-only syncing. Unlike rsync, files are not patched- they are fully skipped or fully uploaded.",
                "date_size will upload if file sizes don't match or if local file modified date is newer than s3's version",
                "checksum will compare etag values based on s3's implementation of chunked md5s.",
                "force will always upload all files."
            ],
            "choices": [
                "force",
                "checksum",
                "date_size"
            ]
        },
        "file_root": {
            "required": true,
            "description": [
                "File/directory path for synchronization. This is a local path.",
                "This root path is scrubbed from the key name, so subdirectories will remain as keys."
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "permission": {
            "required": false,
            "description": [
                "Canned ACL to apply to synced files.",
                "Changing this ACL only changes newly synced files, it does not trigger a full reupload."
            ],
            "choices": [
                "",
                "private",
                "public-read",
                "public-read-write",
                "authenticated-read",
                "aws-exec-read",
                "bucket-owner-read",
                "bucket-owner-full-control"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "bucket": {
            "required": true,
            "description": [
                "Bucket name."
            ]
        },
        "mime_map": {
            "required": false,
            "description": [
                "Dict entry from extension to MIME type. This will override any default/sniffed MIME type. For example C({\".txt\": \"application/text\", \".yml\": \"appication/text\"})"
            ]
        },
        "mode": {
            "default": "push",
            "required": true,
            "description": [
                "sync direction."
            ],
            "choices": [
                "push"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "exclude": {
            "default": ".*",
            "required": false,
            "description": [
                "Shell pattern-style file matching.",
                "Used after include to remove files (for instance, skip \"*.txt\")",
                "For multiple patterns, comma-separate them."
            ]
        },
        "include": {
            "default": "*",
            "required": false,
            "description": [
                "Shell pattern-style file matching.",
                "Used before exclude to determine eligible files (for instance, only \"*.gif\")",
                "For multiple patterns, comma-separate them."
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "key_prefix": {
            "required": false,
            "description": [
                "In addition to file path, prepend s3 path with this prefix. Module will add slash at end of prefix if necessary."
            ]
        }
    },
    "module": "s3_sync"
}, {
    "short_description": "Configure an s3 bucket as a website",
    "deprecated": null,
    "options": {
        "redirect_all_requests": {
            "default": null,
            "required": false,
            "description": [
                "Describes the redirect behavior for every request to this s3 bucket website endpoint"
            ]
        },
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "suffix": {
            "default": "index.html",
            "required": false,
            "description": [
                "Suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html). The suffix must not include a slash character."
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "error_key": {
            "default": null,
            "required": false,
            "description": [
                "The object key name to use when a 4XX class error occurs. To remove an error key, set to None."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Add or remove s3 website configuration"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the s3 bucket"
            ]
        }
    },
    "module": "s3_website"
}, {
    "short_description": "Runs a local script on a remote node after transferring it",
    "deprecated": null,
    "options": {
        "creates": {
            "default": null,
            "required": false,
            "description": [
                "a filename, when it already exists, this step will B(not) be run."
            ],
            "version_added": "1.5"
        },
        "free_form": {
            "default": null,
            "required": true,
            "description": [
                "path to the local script file followed by optional arguments. There is no parameter actually named 'free form'; see the examples!"
            ],
            "aliases": []
        },
        "removes": {
            "default": null,
            "required": false,
            "description": [
                "a filename, when it does not exist, this step will B(not) be run."
            ],
            "version_added": "1.5"
        }
    },
    "module": "script"
}, {
    "short_description": "Toggles SELinux booleans.",
    "deprecated": null,
    "options": {
        "state": {
            "default": null,
            "required": true,
            "description": [
                "Desired boolean value"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the boolean to configure"
            ]
        },
        "persistent": {
            "default": false,
            "required": false,
            "description": [
                "Set to C(yes) if the boolean setting should survive a reboot"
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "seboolean"
}, {
    "short_description": "Manages SELinux file context mapping definitions",
    "deprecated": null,
    "options": {
        "reload": {
            "default": true,
            "required": false,
            "description": [
                "Reload SELinux policy after commit."
            ]
        },
        "setype": {
            "default": null,
            "required": true,
            "description": [
                "SELinux type for the specified target."
            ]
        },
        "ftype": {
            "default": "a",
            "required": false,
            "description": [
                "File type."
            ]
        },
        "target": {
            "default": null,
            "required": true,
            "description": [
                "Target path (expression)."
            ],
            "aliases": [
                "path"
            ]
        },
        "selevel": {
            "default": null,
            "required": false,
            "description": [
                "SELinux range for the specified target."
            ],
            "aliases": [
                "serange"
            ]
        },
        "seuser": {
            "default": null,
            "required": false,
            "description": [
                "SELinux user for the specified target."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired boolean value."
            ],
            "choices": [
                "present",
                "absent"
            ]
        }
    },
    "module": "sefcontext"
}, {
    "short_description": "Change policy and state of SELinux",
    "deprecated": null,
    "options": {
        "policy": {
            "default": null,
            "required": false,
            "description": [
                "name of the SELinux policy to use (example: C(targeted)) will be required if state is not C(disabled)"
            ]
        },
        "state": {
            "default": null,
            "required": true,
            "description": [
                "The SELinux mode"
            ],
            "choices": [
                "enforcing",
                "permissive",
                "disabled"
            ]
        },
        "conf": {
            "default": "/etc/selinux/config",
            "required": false,
            "description": [
                "path to the SELinux configuration file, if non-standard"
            ]
        }
    },
    "module": "selinux"
}, {
    "short_description": "Change permissive domain in SELinux policy",
    "deprecated": null,
    "options": {
        "domain": {
            "required": true,
            "description": [
                "the domain that will be added or removed from the list of permissive domains"
            ]
        },
        "no_reload": {
            "default": false,
            "required": false,
            "description": [
                "automatically reload the policy after a change",
                "default is set to 'false' as that's what most people would want after changing one domain",
                "Note that this doesn't work on older version of the library (example EL 6), the module will silently ignore it in this case"
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "store": {
            "default": null,
            "required": false,
            "description": [
                "name of the SELinux policy store to use"
            ]
        },
        "permissive": {
            "required": true,
            "description": [
                "indicate if the domain should or should not be set as permissive"
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "selinux_permissive"
}, {
    "short_description": "Sends an email with the SendGrid API",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "username for logging into the SendGrid account.",
                "Since 2.2 it is only required if api_key is not supplied."
            ]
        },
        "from_name": {
            "default": null,
            "required": false,
            "description": [
                "the name you want to appear in the from field, i.e 'John Doe'"
            ],
            "version_added": 2.2
        },
        "from_address": {
            "required": true,
            "description": [
                "the address in the \"from\" field for the email"
            ]
        },
        "cc": {
            "default": null,
            "required": false,
            "description": [
                "a list of email addresses to cc"
            ],
            "version_added": 2.2
        },
        "subject": {
            "required": true,
            "description": [
                "the desired subject for the email"
            ]
        },
        "bcc": {
            "default": null,
            "required": false,
            "description": [
                "a list of email addresses to bcc"
            ],
            "version_added": 2.2
        },
        "headers": {
            "default": null,
            "required": false,
            "description": [
                "a dict to pass on as headers"
            ],
            "version_added": 2.2
        },
        "to_addresses": {
            "required": true,
            "description": [
                "a list with one or more recipient email addresses"
            ]
        },
        "html_body": {
            "default": false,
            "required": false,
            "description": [
                "whether the body is html content that should be rendered"
            ],
            "version_added": 2.2
        },
        "api_key": {
            "default": null,
            "required": false,
            "description": [
                "sendgrid API key to use instead of username/password"
            ],
            "version_added": 2.2
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "password that corresponds to the username",
                "Since 2.2 it is only required if api_key is not supplied."
            ]
        },
        "attachments": {
            "default": null,
            "required": false,
            "description": [
                "a list of relative or explicit paths of files you want to attach (7MB limit as per SendGrid docs)"
            ],
            "version_added": 2.2
        }
    },
    "module": "sendgrid"
}, {
    "short_description": "Manage Sensu checks",
    "deprecated": null,
    "options": {
        "interval": {
            "default": null,
            "required": false,
            "description": [
                "Check interval in seconds"
            ]
        },
        "handle": {
            "default": true,
            "required": false,
            "description": [
                "Whether the check should be handled or not"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "subscribers": {
            "default": [],
            "required": false,
            "description": [
                "List of subscribers/channels this check should run for",
                "See sensu_subscribers to subscribe a machine to a channel"
            ]
        },
        "metric": {
            "default": false,
            "required": false,
            "description": [
                "Whether the check is a metric"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "subdue_begin": {
            "default": null,
            "required": false,
            "description": [
                "When to disable handling of check failures"
            ]
        },
        "dependencies": {
            "default": [],
            "required": false,
            "description": [
                "Other checks this check depends on, if dependencies fail,",
                "handling of this check will be disabled"
            ]
        },
        "occurrences": {
            "default": 1,
            "required": false,
            "description": [
                "Number of event occurrences before the handler should take action"
            ]
        },
        "low_flap_threshold": {
            "default": null,
            "required": false,
            "description": [
                "The low threshhold for flap detection"
            ]
        },
        "aggregate": {
            "default": false,
            "required": false,
            "description": [
                "Classifies the check as an aggregate check,",
                "making it available via the aggregate API"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "path": {
            "default": "/etc/sensu/conf.d/checks.json",
            "required": false,
            "description": [
                "Path to the json file of the check to be added/removed.",
                "Will be created if it does not exist (unless I(state=absent)).",
                "The parent folders need to exist when I(state=present), otherwise an error will be thrown"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the check",
                "This is the key that is used to determine whether a check exists"
            ]
        },
        "standalone": {
            "default": false,
            "required": false,
            "description": [
                "Whether the check should be scheduled by the sensu client or server",
                "This option obviates the need for specifying the I(subscribers) option"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "Create a backup file (if yes), including the timestamp information so",
                "you can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "handlers": {
            "default": [],
            "required": false,
            "description": [
                "List of handlers to notify when the check fails"
            ]
        },
        "publish": {
            "default": true,
            "required": false,
            "description": [
                "Whether the check should be scheduled at all.",
                "You can still issue it via the sensu api"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "custom": {
            "default": {},
            "required": false,
            "description": [
                "A hash/dictionary of custom parameters for mixing to the configuration.",
                "You can't rewrite others module parameters using this"
            ],
            "version_added": "2.1"
        },
        "source": {
            "default": null,
            "required": false,
            "description": [
                "The check source, used to create a JIT Sensu client for an external resource (e.g. a network switch)."
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the check should be present or not"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "command": {
            "required": true,
            "description": [
                "Path to the sensu check to run (not required when I(state=absent))"
            ]
        },
        "high_flap_threshold": {
            "default": null,
            "required": false,
            "description": [
                "The high threshhold for flap detection"
            ]
        },
        "timeout": {
            "default": 10,
            "required": false,
            "description": [
                "Timeout for the check"
            ]
        },
        "subdue_end": {
            "default": null,
            "required": false,
            "description": [
                "When to enable handling of check failures"
            ]
        },
        "refresh": {
            "default": null,
            "required": false,
            "description": [
                "Number of seconds handlers should wait before taking second action"
            ]
        }
    },
    "module": "sensu_check"
}, {
    "short_description": "Manage Sensu subscriptions",
    "deprecated": null,
    "options": {
        "path": {
            "default": "/etc/sensu/conf.d/subscriptions.json",
            "required": false,
            "description": [
                "Path to the subscriptions json file"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the machine should subscribe or unsubscribe from the channel"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "Create a backup file (if yes), including the timestamp information so you",
                "can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the channel"
            ]
        }
    },
    "module": "sensu_subscription"
}, {
    "short_description": "Manages SELinux network port type definitions",
    "deprecated": null,
    "options": {
        "reload": {
            "default": true,
            "required": false,
            "description": [
                "Reload SELinux policy after commit."
            ]
        },
        "setype": {
            "default": null,
            "required": true,
            "description": [
                "SELinux type for the specified port."
            ]
        },
        "proto": {
            "default": null,
            "required": true,
            "description": [
                "Protocol for the specified port."
            ],
            "choices": [
                "tcp",
                "udp"
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "Desired boolean value."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ports": {
            "default": null,
            "required": true,
            "description": [
                "Ports or port ranges, separated by a comma"
            ]
        }
    },
    "module": "seport"
}, {
    "short_description": "Manages a Serverless Framework project",
    "deprecated": null,
    "options": {
        "region": {
            "default": "us-east-1",
            "required": false,
            "description": [
                "AWS region to deploy the service to"
            ]
        },
        "service_path": {
            "required": true,
            "description": [
                "The path to the root of the Serverless Service to be operated on."
            ]
        },
        "functions": {
            "default": [],
            "required": false,
            "description": [
                "A list of specific functions to deploy. If this is not provided, all functions in the service will be deployed."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Goal state of given stage/project"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "deploy": {
            "default": true,
            "required": false,
            "description": [
                "Whether or not to deploy artifacts after building them. When this option is `false` all the functions will be built, but no stack update will be run to send them out. This is mostly useful for generating artifacts to be stored/deployed elsewhere."
            ]
        }
    },
    "module": "serverless"
}, {
    "short_description": "Manage services.",
    "deprecated": null,
    "options": {
        "use": {
            "default": "auto",
            "description": [
                "The service module actually uses system specific modules, normally through auto detection, this setting can force a specific module.",
                "Normally it uses the value of the 'ansible_service_mgr' fact and falls back to the old 'service' module when none matching is found."
            ],
            "version_added": 2.2
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service."
            ]
        },
        "pattern": {
            "required": false,
            "description": [
                "If the service does not respond to the status command, name a substring to look for as would be found in the output of the I(ps) command as a stand-in for a status result.  If the string is found, the service will be assumed to be running."
            ],
            "version_added": "0.7"
        },
        "enabled": {
            "required": false,
            "description": [
                "Whether the service should start on boot. B(At least one of state and enabled are required.)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "required": false,
            "description": [
                "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service.  C(reloaded) will always reload. B(At least one of state and enabled are required.) Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally."
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "reloaded"
            ]
        },
        "sleep": {
            "required": false,
            "description": [
                "If the service is being C(restarted) then sleep this many seconds between the stop and start command. This helps to workaround badly behaving init scripts that exit immediately after signaling a process to stop."
            ],
            "version_added": "1.3"
        },
        "arguments": {
            "description": [
                "Additional arguments provided on the command line"
            ],
            "aliases": [
                "args"
            ]
        },
        "runlevel": {
            "default": "default",
            "required": false,
            "description": [
                "For OpenRC init scripts (ex: Gentoo) only.  The runlevel that this service belongs to."
            ]
        }
    },
    "module": "service"
}, {
    "short_description": "Set host facts from a task",
    "deprecated": null,
    "options": {
        "key_value": {
            "default": null,
            "required": true,
            "description": [
                "The C(set_fact) module takes key=value pairs as variables to set in the playbook scope. Or alternatively, accepts complex arguments using the C(args:) statement."
            ]
        }
    },
    "module": "set_fact"
}, {
    "short_description": "Set stats for the current ansible run",
    "deprecated": null,
    "options": {
        "aggregate": {
            "default": true,
            "required": false,
            "description": [
                "boolean that indicates if the provided value is aggregated to the existing stat C(yes) or will replace it C(no)"
            ]
        },
        "data": {
            "required": true,
            "description": [
                "A dictionary of which each key represents a stat (or variable) you want to keep track of"
            ]
        },
        "per_host": {
            "default": false,
            "required": false,
            "description": [
                "boolean that indicates if the stats is per host or for all hosts in the run."
            ]
        }
    },
    "module": "set_stats"
}, {
    "short_description": "Gathers facts about remote hosts",
    "deprecated": null,
    "options": {
        "filter": {
            "default": "*",
            "required": false,
            "description": [
                "if supplied, only return facts that match this shell-style (fnmatch) wildcard."
            ],
            "version_added": "1.1"
        },
        "gather_subset": {
            "default": "all",
            "required": false,
            "description": [
                "if supplied, restrict the additional facts collected to the given subset. Possible values: all, hardware, network, virtual, ohai, and facter Can specify a list of values to specify a larger subset. Values can also be used with an initial C(!) to specify that that specific subset should not be collected.  For instance: !hardware, !network, !virtual, !ohai, !facter.  Note that a few facts are always collected.  Use the filter parameter if you do not want to display those."
            ],
            "version_added": "2.1"
        },
        "fact_path": {
            "default": "/etc/ansible/facts.d",
            "required": false,
            "description": [
                "path used for local ansible facts (*.fact) - files in this dir will be run (if executable) and their results be added to ansible_local facts if a file is not executable it is read. Check notes for Windows options. (from 2.1 on) File/results format can be json or ini-format"
            ],
            "version_added": "1.3"
        },
        "gather_timeout": {
            "default": 10,
            "required": false,
            "description": [
                "Set the default timeout in seconds for individual fact gathering"
            ],
            "version_added": "2.2"
        }
    },
    "module": "setup"
}, {
    "short_description": "Manage SolidFire accounts",
    "deprecated": null,
    "options": {
        "new_name": {
            "default": "None",
            "required": false,
            "description": [
                "New name for the user account."
            ]
        },
        "status": {
            "required": false,
            "description": [
                "Status of the account."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password for the specified user."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Unique username for this account. (May be 1 to 64 characters in length)."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the SolidFire cluster."
            ]
        },
        "initiator_secret": {
            "required": false,
            "description": [
                "CHAP secret to use for the initiator. Should be 12-16 characters long and impenetrable.",
                "The CHAP initiator secrets must be unique and cannot be the same as the target CHAP secret.",
                "If not specified, a random secret is created."
            ]
        },
        "username": {
            "required": true,
            "description": [
                "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://goo.gl/ddJa4Q)."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether the specified account should exist or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "attributes": {
            "required": false,
            "description": "List of Name/Value pairs in JSON object format."
        },
        "target_secret": {
            "required": false,
            "description": [
                "CHAP secret to use for the target (mutual CHAP authentication).",
                "Should be 12-16 characters long and impenetrable.",
                "The CHAP target secrets must be unique and cannot be the same as the initiator CHAP secret.",
                "If not specified, a random secret is created."
            ]
        },
        "account_id": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the account to manage or update."
            ]
        }
    },
    "module": "sf_account_manager"
}, {
    "short_description": "Check connectivity to MVIP and SVIP.",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://goo.gl/ddJa4Q)."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the SolidFire cluster."
            ]
        },
        "svip": {
            "default": "None",
            "required": false,
            "description": [
                "Optionally, use to test connection of a different SVIP.",
                "This is not needed to test the connection to the target cluster."
            ]
        },
        "skip": {
            "default": "None",
            "required": false,
            "description": [
                "Skip checking connection to SVIP or MVIP."
            ],
            "choices": [
                "svip",
                "mvip"
            ]
        },
        "mvip": {
            "default": "None",
            "required": false,
            "description": [
                "Optionally, use to test connection of a different MVIP.",
                "This is not needed to test the connection to the target cluster."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password for the specified user."
            ]
        }
    },
    "module": "sf_check_connections"
}, {
    "short_description": "Manage SolidFire snapshot schedules",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://goo.gl/ddJa4Q)."
            ]
        },
        "time_interval_days": {
            "default": 1,
            "required": false,
            "description": "Time interval in days."
        },
        "name": {
            "required": true,
            "description": [
                "Name for the snapshot schedule."
            ]
        },
        "time_interval_minutes": {
            "default": 0,
            "required": false,
            "description": "Time interval in minutes."
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the SolidFire cluster."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether the specified schedule should exist or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "time_interval_hours": {
            "default": 0,
            "required": false,
            "description": "Time interval in hours."
        },
        "paused": {
            "required": false,
            "description": [
                "Pause / Resume a schedule."
            ]
        },
        "schedule_id": {
            "required": false,
            "description": [
                "The schedule ID for the schedule that you want to update or delete."
            ]
        },
        "snapshot_name": {
            "required": false,
            "description": [
                "Name for the created snapshots."
            ]
        },
        "volumes": {
            "required": false,
            "description": [
                "Volume IDs that you want to set the snapshot schedule for.",
                "At least 1 volume ID is required for creating a new schedule.",
                "required when C(state=present)"
            ]
        },
        "starting_date": {
            "required": false,
            "description": [
                "Starting date for the schedule.",
                "Required when C(state=present).",
                "Please use two '-' in the above format, or you may see an error- TypeError, is not JSON serializable description.",
                "Format: C(2016--12--01T00:00:00Z)"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password for the specified user."
            ]
        },
        "recurring": {
            "required": false,
            "description": [
                "Should the schedule recur?"
            ]
        },
        "retention": {
            "required": false,
            "description": [
                "Retention period for the snapshot.",
                "Format is 'HH:mm:ss'."
            ]
        }
    },
    "module": "sf_snapshot_schedule_manager"
}, {
    "short_description": "Manage SolidFire Volume Access Groups",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://goo.gl/ddJa4Q)."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "Password for the specified user."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the volume access group. It is not required to be unique, but recommended."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the SolidFire cluster."
            ]
        },
        "virtual_network_id": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the SolidFire Virtual Network ID to associate the volume access group with."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether the specified volume access group should exist or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "volumes": {
            "default": "None",
            "required": false,
            "description": [
                "List of volumes to initially include in the volume access group. If unspecified, the access group will start without any volumes."
            ]
        },
        "initiators": {
            "default": "None",
            "required": false,
            "description": [
                "List of initiators to include in the volume access group. If unspecified, the access group will start out without configured initiators."
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": "List of Name/Value pairs in JSON object format."
        },
        "virtual_network_tags": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the VLAN Virtual Network Tag to associate the volume access group with."
            ]
        },
        "volume_access_group_id": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the volume access group to modify or delete."
            ]
        }
    },
    "module": "sf_volume_access_group_manager"
}, {
    "short_description": "Manage SolidFire volumes",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://goo.gl/ddJa4Q)."
            ]
        },
        "qos": {
            "default": "None",
            "required": false,
            "description": "Initial quality of service settings for this volume."
        },
        "name": {
            "required": true,
            "description": [
                "The name of the volume to manage."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the SolidFire cluster."
            ]
        },
        "size_unit": {
            "default": "gb",
            "required": false,
            "description": [
                "The unit used to interpret the size parameter."
            ],
            "choices": [
                "bytes",
                "b",
                "kb",
                "mb",
                "gb",
                "tb",
                "pb",
                "eb",
                "zb",
                "yb"
            ]
        },
        "account_id": {
            "required": true,
            "description": [
                "Account ID for the owner of this volume."
            ]
        },
        "access": {
            "default": "None",
            "required": false,
            "description": [
                "Access allowed for the volume.",
                "readOnly: Only read operations are allowed.",
                "readWrite: Reads and writes are allowed.",
                "locked: No reads or writes are allowed.",
                "replicationTarget: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked.",
                "If unspecified, the access settings of the clone will be the same as the source."
            ],
            "choices": [
                "readOnly",
                "readWrite",
                "locked",
                "replicationTarget"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether the specified volume should exist or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "volume_id": {
            "default": "None",
            "required": false,
            "description": [
                "The ID of the volume to manage or update.",
                "In order to create multiple volumes with the same name, but different volume_ids, please declare the I(volume_id) parameter with an arbitary value. However, the specified volume_id will not be assigned to the newly created volume (since it's an auto-generated property)."
            ]
        },
        "512emulation": {
            "required": false,
            "description": [
                "Should the volume provide 512-byte sector emulation?",
                "Required when C(state=present)"
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": "A YAML dictionary of attributes that you would like to apply on this volume."
        },
        "password": {
            "required": true,
            "description": [
                "Password for the specified user."
            ]
        },
        "size": {
            "required": false,
            "description": [
                "The size of the volume in (size_unit).",
                "Required when C(state = present)."
            ]
        }
    },
    "module": "sf_volume_manager"
}, {
    "short_description": "Execute commands in nodes.",
    "deprecated": null,
    "options": {
        "warn": {
            "default": true,
            "required": false,
            "description": [
                "if command warnings are on in ansible.cfg, do not warn about this particular line if set to no/false."
            ],
            "version_added": "1.8"
        },
        "creates": {
            "default": null,
            "required": false,
            "description": [
                "a filename, when it already exists, this step will B(not) be run."
            ]
        },
        "executable": {
            "default": null,
            "required": false,
            "description": [
                "change the shell used to execute the command. Should be an absolute path to the executable."
            ],
            "version_added": "0.9"
        },
        "chdir": {
            "default": null,
            "required": false,
            "description": [
                "cd into this directory before running the command"
            ],
            "version_added": "0.6"
        },
        "removes": {
            "default": null,
            "required": false,
            "description": [
                "a filename, when it does not exist, this step will B(not) be run."
            ],
            "version_added": "0.8"
        },
        "free_form": {
            "default": null,
            "required": true,
            "description": [
                "The shell module takes a free form command to run, as a string.  There's not an actual option named \"free form\".  See the examples!"
            ]
        }
    },
    "module": "shell"
}, {
    "short_description": "create or cancel a virtual instance in SoftLayer",
    "deprecated": null,
    "options": {
        "domain": {
            "default": null,
            "required": false,
            "description": [
                "Domain name to be provided to a virtual instance"
            ]
        },
        "disks": {
            "default": [
                25
            ],
            "required": true,
            "description": [
                "List of disk sizes to be assigned to new virtual instance"
            ]
        },
        "tags": {
            "default": null,
            "required": false,
            "description": [
                "Tag or list of tags to be provided to a virtual instance"
            ]
        },
        "dedicated": {
            "default": false,
            "required": false,
            "description": [
                "Falg to determine if the instance should be deployed in dedicated space"
            ]
        },
        "private": {
            "default": false,
            "required": false,
            "description": [
                "Flag to determine if the instance should be private only"
            ]
        },
        "cpus": {
            "default": null,
            "required": true,
            "description": [
                "Count of cpus to be assigned to new virtual instance"
            ]
        },
        "image_id": {
            "default": null,
            "required": false,
            "description": [
                "Image Template to be used for new virtual instance"
            ]
        },
        "nic_speed": {
            "default": 10,
            "required": false,
            "description": [
                "NIC Speed to be assigned to new virtual instance"
            ]
        },
        "private_vlan": {
            "default": null,
            "required": false,
            "description": [
                "VLAN by its Id to be assigned to the private NIC"
            ]
        },
        "datacenter": {
            "default": null,
            "required": false,
            "description": [
                "Datacenter for the virtual instance to be deployed"
            ]
        },
        "public_vlan": {
            "default": null,
            "required": false,
            "description": [
                "VLAN by its Id to be assigned to the public NIC"
            ]
        },
        "wait": {
            "default": true,
            "required": false,
            "description": [
                "Flag used to wait for active status before returning"
            ]
        },
        "hourly": {
            "default": true,
            "required": false,
            "description": [
                "Flag to determine if the instance should be hourly billed"
            ]
        },
        "ssh_keys": {
            "default": null,
            "required": false,
            "description": [
                "List of ssh keys by their Id to be assigned to a virtual instance"
            ]
        },
        "hostname": {
            "default": null,
            "required": false,
            "description": [
                "Hostname to be provided to a virtual instance"
            ]
        },
        "os_code": {
            "default": null,
            "required": false,
            "description": [
                "OS Code to be used for new virtual instance"
            ]
        },
        "instance_id": {
            "default": null,
            "required": false,
            "description": [
                "Instance Id of the virtual instance to perform action option"
            ]
        },
        "local_disk": {
            "default": true,
            "required": false,
            "description": [
                "Flag to determine if local disk should be used for the new instance"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create, or cancel a virtual instance. Specify \"present\" for create, \"absent\" to cancel."
            ]
        },
        "wait_timeout": {
            "default": 600,
            "required": false,
            "description": [
                "time in seconds before wait returns"
            ]
        },
        "post_uri": {
            "default": null,
            "required": false,
            "description": [
                "URL of a post provisioning script to be loaded and executed on virtual instance"
            ]
        },
        "memory": {
            "default": null,
            "required": true,
            "description": [
                "Amount of memory to be assigned to new virtual instance"
            ]
        }
    },
    "module": "sl_vm"
}, {
    "short_description": "Send Slack notifications",
    "deprecated": null,
    "options": {
        "username": {
            "default": "Ansible",
            "required": false,
            "description": [
                "This is the sender of the message."
            ]
        },
        "domain": {
            "default": "None",
            "required": false,
            "description": [
                "Slack (sub)domain for your environment without protocol. (i.e. C(example.slack.com)) In 1.8 and beyond, this is deprecated and may be ignored.  See token documentation for information."
            ]
        },
        "attachments": {
            "default": "None",
            "required": false,
            "description": [
                "Define a list of attachments. This list mirrors the Slack JSON API. For more information, see https://api.slack.com/docs/attachments"
            ]
        },
        "color": {
            "default": "normal",
            "required": false,
            "description": [
                "Allow text to use default colors - use the default of 'normal' to not send a custom color bar at the start of the message"
            ],
            "version_added": "2.0",
            "choices": [
                "normal",
                "good",
                "warning",
                "danger"
            ]
        },
        "icon_url": {
            "required": false,
            "description": [
                "Url for the message sender's icon (default C(https://www.ansible.com/favicon.ico))"
            ]
        },
        "parse": {
            "default": "None",
            "required": false,
            "description": [
                "Setting for the message parser at Slack"
            ],
            "choices": [
                "full",
                "none"
            ]
        },
        "token": {
            "required": true,
            "description": [
                "Slack integration token.  This authenticates you to the slack service. Prior to 1.8, a token looked like C(3Ffe373sfhRE6y42Fg3rvf4GlK).  In 1.8 and above, ansible adapts to the new slack API where tokens look like C(G922VJP24/D921DW937/3Ffe373sfhRE6y42Fg3rvf4GlK).  If tokens are in the new format then slack will ignore any value of domain.  If the token is in the old format the domain is required.  Ansible has no control of when slack will get rid of the old API.  When slack does that the old format will stop working.  ** Please keep in mind the tokens are not the API tokens but are the webhook tokens.  In slack these are found in the webhook URL which are obtained under the apps and integrations. The incoming webhooks can be added in that area.  In some cases this may be locked by your Slack admin and you must request access.  It is there that the incoming webhooks can be added.  The key is on the end of the URL given to you in that section."
            ]
        },
        "icon_emoji": {
            "default": "None",
            "required": false,
            "description": [
                "Emoji for the message sender. See Slack documentation for options. (if I(icon_emoji) is set, I(icon_url) will not be used)"
            ]
        },
        "link_names": {
            "default": 1,
            "required": false,
            "description": [
                "Automatically create links for channels and usernames in I(msg)."
            ],
            "choices": [
                1,
                0
            ]
        },
        "msg": {
            "default": "None",
            "required": false,
            "description": [
                "Message to send. Note that the module does not handle escaping characters. Plain-text angle brackets and ampersands should be converted to HTML entities (e.g. & to &amp;) before sending. See Slack's documentation (U(https://api.slack.com/docs/message-formatting)) for more."
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "channel": {
            "default": "None",
            "required": false,
            "description": [
                "Channel to send the message to. If absent, the message goes to the channel selected for the I(token)."
            ]
        }
    },
    "module": "slack"
}, {
    "short_description": "Package manager for Slackware >= 12.2",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "state of the package, you can use \"installed\" as an alias for C(present) and removed as one for c(absent)."
            ],
            "choices": [
                "present",
                "absent",
                "latest"
            ]
        },
        "update_cache": {
            "default": false,
            "required": false,
            "description": [
                "update the package database first"
            ],
            "choices": [
                true,
                false
            ]
        },
        "name": {
            "required": true,
            "description": [
                "name of package to install/remove"
            ]
        }
    },
    "module": "slackpkg"
}, {
    "short_description": "Slurps a file from remote nodes",
    "deprecated": null,
    "options": {
        "src": {
            "default": null,
            "required": true,
            "description": [
                "The file on the remote system to fetch. This I(must) be a file, not a directory."
            ],
            "aliases": []
        }
    },
    "module": "slurp"
}, {
    "short_description": "Get SmartOS image details.",
    "deprecated": null,
    "options": {
        "filters": {
            "default": "None",
            "required": false,
            "description": [
                "Criteria for selecting image. Can be any value from image manifest and 'published_date', 'published', 'source', 'clones', and 'size'. More informaton can be found at U(https://smartos.org/man/1m/imgadm) under 'imgadm list'."
            ]
        }
    },
    "module": "smartos_image_facts"
}, {
    "short_description": "Retrieve facts for a device using SNMP.",
    "deprecated": null,
    "options": {
        "username": {
            "required": false,
            "description": [
                "Username for SNMPv3, required if version is v3"
            ]
        },
        "level": {
            "required": false,
            "description": [
                "Authentication level, required if version is v3"
            ],
            "choices": [
                "authPriv",
                "authNoPriv"
            ]
        },
        "privacy": {
            "required": false,
            "description": [
                "Encryption algorithm, required if level is authPriv"
            ],
            "choices": [
                "des",
                "aes"
            ]
        },
        "community": {
            "required": false,
            "description": [
                "The SNMP community string, required if version is v2/v2c"
            ]
        },
        "authkey": {
            "required": false,
            "description": [
                "Authentication key, required if version is v3"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "Set to target snmp server (normally {{inventory_hostname}})"
            ]
        },
        "version": {
            "required": true,
            "description": [
                "SNMP Version to use, v2/v2c or v3"
            ],
            "choices": [
                "v2",
                "v2c",
                "v3"
            ]
        },
        "integrity": {
            "required": false,
            "description": [
                "Hashing algorithm, required if version is v3"
            ],
            "choices": [
                "md5",
                "sha"
            ]
        },
        "privkey": {
            "required": false,
            "description": [
                "Encryption key, required if version is authPriv"
            ]
        }
    },
    "module": "snmp_facts"
}, {
    "short_description": "Send Amazon Simple Notification Service (SNS) messages",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": "None",
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "aws_access_key": {
            "default": "None",
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "http": {
            "required": false,
            "description": [
                "Message to send to HTTP-only subscription"
            ]
        },
        "sqs": {
            "required": false,
            "description": [
                "Message to send to SQS-only subscription"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used."
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "sms": {
            "required": false,
            "description": [
                "Message to send to SMS-only subscription"
            ]
        },
        "topic": {
            "required": true,
            "description": [
                "The topic you want to publish to."
            ]
        },
        "https": {
            "required": false,
            "description": [
                "Message to send to HTTPS-only subscription"
            ]
        },
        "msg": {
            "required": true,
            "description": [
                "Default message to send."
            ],
            "aliases": [
                "default"
            ]
        },
        "message_attributes": {
            "default": "None",
            "required": false,
            "description": [
                "Dictionary of message attributes. These are optional structured data entries to be sent along to the endpoint.",
                "This is in AWS's distinct Name/Type/Value format; see example below."
            ]
        },
        "email": {
            "required": false,
            "description": [
                "Message to send to email-only subscription"
            ]
        },
        "message_structure": {
            "default": "json",
            "required": true,
            "description": [
                "The payload format to use for the message.",
                "This must be 'json' to support non-default messages (`http`, `https`, `email`, `sms`, `sqs`). It must be 'string' to support message_attributes."
            ],
            "choices": [
                "json",
                "string"
            ]
        },
        "subject": {
            "required": false,
            "description": [
                "Subject line for email delivery."
            ]
        }
    },
    "module": "sns"
}, {
    "short_description": "Manages AWS SNS topics and subscriptions",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "display_name": {
            "default": "None",
            "required": false,
            "description": [
                "Display name of the topic"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name or ARN of the SNS topic to converge"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "subscriptions": {
            "default": [],
            "required": false,
            "description": [
                "List of subscriptions to apply to the topic. Note that AWS requires subscriptions to be confirmed, so you will need to confirm any new subscriptions."
            ]
        },
        "delivery_policy": {
            "default": "None",
            "required": false,
            "description": [
                "Delivery policy to apply to the SNS topic"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to create or destroy an SNS topic"
            ],
            "choices": [
                "absent",
                "present"
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "policy": {
            "default": "None",
            "required": false,
            "description": [
                "Policy to apply to the SNS topic"
            ]
        },
        "purge_subscriptions": {
            "default": true,
            "required": false,
            "description": [
                "Whether to purge any subscriptions not listed here. NOTE: AWS does not allow you to purge any PendingConfirmation subscriptions, so if any exist and would be purged, they are silently skipped. This means that somebody could come back later and confirm the subscription. Sorry. Blame Amazon."
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "sns_topic"
}, {
    "short_description": "Manage Solaris zones",
    "deprecated": null,
    "options": {
        "install_options": {
            "default": "empty string",
            "required": false,
            "description": [
                "Extra options to the zoneadm(1M) install command. To automate Solaris 11 zone creation, use this to specify the profile XML file, e.g. install_options=\"-c sc_profile.xml\""
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Zone name."
            ]
        },
        "sparse": {
            "default": false,
            "required": false,
            "description": [
                "Whether to create a sparse (C(true)) or whole root (C(false)) zone."
            ]
        },
        "create_options": {
            "default": "empty string",
            "required": false,
            "description": [
                "Extra options to the zonecfg(1M) create command."
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "C(present), configure and install the zone.",
                "C(installed), synonym for C(present).",
                "C(running), if the zone already exists, boot it, otherwise, configure and install the zone first, then boot it.",
                "C(started), synonym for C(running).",
                "C(stopped), shutdown a zone.",
                "C(absent), destroy the zone.",
                "C(configured), configure the ready so that it's to be attached.",
                "C(attached), attach a zone, but do not boot it.",
                "C(detached), shutdown and detach a zone"
            ],
            "choices": [
                "present",
                "installed",
                "started",
                "running",
                "stopped",
                "absent",
                "configured",
                "attached",
                "detached"
            ]
        },
        "root_password": {
            "default": null,
            "required": false,
            "description": [
                "The password hash for the root account. If not specified, the zone's root account will not have a password."
            ]
        },
        "timeout": {
            "default": 600,
            "required": false,
            "description": [
                "Timeout, in seconds, for zone to boot."
            ]
        },
        "path": {
            "default": null,
            "required": false,
            "description": [
                "The path where the zone will be created. This is required when the zone is created, but not used otherwise."
            ]
        },
        "config": {
            "default": "empty string",
            "required": false,
            "description": [
                "The zonecfg configuration commands for this zone. See zonecfg(1M) for the valid options and syntax. Typically this is a list of options separated by semi-colons or new lines, e.g. \"set auto-boot=true;add net;set physical=bge0;set address=10.1.1.1;end\""
            ]
        },
        "attach_options": {
            "default": "empty string",
            "required": false,
            "description": [
                "Extra options to the zoneadm attach command. For example, this can be used to specify whether a minimum or full update of packages is required and if any packages need to be deleted. For valid values, see zoneadm(1M)"
            ]
        }
    },
    "module": "solaris_zone"
}, {
    "short_description": "Package manager for Source Mage GNU/Linux",
    "deprecated": null,
    "options": {
        "depends": {
            "default": null,
            "required": false,
            "description": [
                "Comma-separated list of _optional_ dependencies to build a spell (or make sure it is built) with; use +/- in front of dependency to turn it on/off ('+' is optional though)",
                "this option is ignored if C(name) parameter is equal to '*' or contains more than one spell",
                "providers must be supplied in the form recognized by Sorcery, e.g. 'openssl(SSL)'"
            ]
        },
        "update_cache": {
            "default": "no",
            "aliases": [
                "update_codex"
            ],
            "required": false,
            "description": [
                "Whether or not to update grimoire collection before casting spells"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the spell",
                "multiple names can be given, separated by commas",
                "special value '*' in conjunction with states C(latest) or C(rebuild) will update or rebuild the whole system respectively"
            ],
            "aliases": [
                "spell"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to cast, dispel or rebuild a package",
                "state C(cast) is an equivalent of C(present), not C(latest)",
                "state C(latest) always triggers C(update_cache=yes)",
                "state C(rebuild) implies cast of all specified spells, not only those existed before"
            ],
            "choices": [
                "present",
                "latest",
                "absent",
                "cast",
                "dispelled",
                "rebuild"
            ]
        },
        "update": {
            "default": "no",
            "required": false,
            "description": [
                "Whether or not to update sorcery scripts at the very first stage"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "cache_valid_time": {
            "default": null,
            "required": false,
            "description": [
                "Time in seconds to invalidate grimoire collection on update",
                "especially useful for SCM and rsync grimoires",
                "makes sense only in pair with C(update_cache)"
            ]
        }
    },
    "module": "sorcery"
}, {
    "short_description": "Creates or deletes AWS SQS queues.",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "message_retention_period": {
            "default": null,
            "required": false,
            "description": [
                "The message retention period in seconds."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the queue."
            ]
        },
        "delivery_delay": {
            "default": null,
            "required": false,
            "description": [
                "The delivery delay in seconds."
            ]
        },
        "default_visibility_timeout": {
            "default": null,
            "required": false,
            "description": [
                "The default visibility timeout in seconds."
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or delete the queue"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "maximum_message_size": {
            "default": null,
            "required": false,
            "description": [
                "The maximum message size in bytes."
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "policy": {
            "default": null,
            "required": false,
            "description": [
                "The json dict policy to attach to queue"
            ],
            "version_added": "2.1"
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "redrive_policy": {
            "default": null,
            "required": false,
            "description": [
                "json dict with the redrive_policy (see example)"
            ],
            "version_added": "2.2"
        },
        "receive_message_wait_time": {
            "default": null,
            "required": false,
            "description": [
                "The receive message wait time in seconds."
            ]
        }
    },
    "module": "sqs_queue"
}, {
    "short_description": "Run commands on remote devices running Nokia SR OS",
    "deprecated": null,
    "options": {
        "retries": {
            "default": 10,
            "required": false,
            "description": [
                "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditions."
            ]
        },
        "commands": {
            "required": true,
            "description": [
                "List of commands to send to the remote SR OS device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired."
            ]
        },
        "interval": {
            "default": 1,
            "required": false,
            "description": [
                "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "wait_for": {
            "default": null,
            "required": false,
            "description": [
                "List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples."
            ],
            "aliases": [
                "waitfor"
            ]
        },
        "match": {
            "default": "all",
            "required": false,
            "description": [
                "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the wait_for must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied."
            ],
            "choices": [
                "any",
                "all"
            ]
        }
    },
    "module": "sros_command"
}, {
    "short_description": "Manage Nokia SR OS device configuration",
    "deprecated": null,
    "options": {
        "src": {
            "default": null,
            "required": false,
            "description": [
                "Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory.  This argument is mutually exclusive with I(lines)."
            ],
            "version_added": "2.2"
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "The force argument instructs the module to not consider the current devices running-config.  When set to true, this will cause the module to push the contents of I(src) into the device without first checking if already configured.",
                "Note this argument should be considered deprecated.  To achieve the equivalent, set the C(match=none) which is idempotent.  This argument will be removed in a future release."
            ],
            "version_added": "2.2",
            "choices": [
                "true",
                "false"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made.  The backup file is written to the C(backup) folder in the playbook root directory.  If the directory does not exist, it is created."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "after": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set."
            ]
        },
        "lines": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config.  Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser."
            ],
            "aliases": [
                "commands"
            ]
        },
        "replace": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the configuration on the device.  If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct."
            ],
            "choices": [
                "line",
                "block"
            ]
        },
        "parents": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of parents that uniquely identify the section the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands."
            ]
        },
        "defaults": {
            "aliases": [
                "detail"
            ],
            "description": [
                "This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the module will get the current config by issuing the command C(show running-config all)."
            ],
            "version_added": "2.2",
            "default": false,
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "save": {
            "default": false,
            "required": false,
            "description": [
                "The C(save) argument instructs the module to save the running- config to the startup-config at the conclusion of the module running.  If check mode is specified, this argument is ignored."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The C(config) argument allows the playbook designer to supply the base configuration to be used to validate configuration changes necessary.  If this argument is provided, the module will not download the running-config from the remote node."
            ],
            "version_added": "2.2"
        },
        "match": {
            "default": "line",
            "required": false,
            "description": [
                "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device."
            ],
            "choices": [
                "line",
                "strict",
                "exact",
                "none"
            ]
        },
        "before": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system."
            ]
        }
    },
    "module": "sros_config"
}, {
    "short_description": "Configure Nokia SR OS rollback",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "The I(state) argument specifies the state of the configuration entries in the devices active configuration.  When the state value is set to C(true) the configuration is present in the devices active configuration.  When the state value is set to C(false) the configuration values are removed from the devices active configuration."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "rescue_location": {
            "default": null,
            "required": false,
            "description": [
                "The I(rescue_location) specifies the location of the rescue file.  This argument supports any valid local or remote URL as specified in SR OS"
            ]
        },
        "remote_max_checkpoints": {
            "default": null,
            "required": false,
            "description": [
                "The I(remote_max_checkpoints) argument configures the maximum number of rollback files that can be transferred and saved to a remote location.  Valid values for this argument are in the range of 1 to 50"
            ]
        },
        "local_max_checkpoints": {
            "default": null,
            "required": false,
            "description": [
                "The I(local_max_checkpoints) argument configures the maximum number of rollback files that can be saved on the devices local compact flash.  Valid values for this argument are in the range of 1 to 50"
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "rollback_location": {
            "default": null,
            "required": false,
            "description": [
                "The I(rollback_location) specifies the location and filename of the rollback checkpoint files.   This argument supports any valid local or remote URL as specified in SR OS"
            ]
        }
    },
    "module": "sros_rollback"
}, {
    "short_description": "Send code deploy and annotation events to stackdriver",
    "deprecated": null,
    "options": {
        "repository": {
            "default": null,
            "required": false,
            "description": [
                "The repository (or project) deployed"
            ]
        },
        "level": {
            "default": "INFO",
            "required": false,
            "description": [
                "one of INFO/WARN/ERROR, defaults to INFO if not supplied.  May affect display."
            ],
            "choices": [
                "INFO",
                "WARN",
                "ERROR"
            ]
        },
        "annotated_by": {
            "default": "Ansible",
            "required": false,
            "description": [
                "The person or robot who the annotation should be attributed to."
            ]
        },
        "deployed_to": {
            "default": null,
            "required": false,
            "description": [
                "The environment code was deployed to. (ie: development, staging, production)"
            ]
        },
        "deployed_by": {
            "default": "Ansible",
            "required": false,
            "description": [
                "The person or robot responsible for deploying the code"
            ]
        },
        "instance_id": {
            "default": null,
            "required": false,
            "description": [
                "id of an EC2 instance that this event should be attached to, which will limit the contexts where this event is shown"
            ]
        },
        "key": {
            "default": null,
            "required": true,
            "description": [
                "API key."
            ]
        },
        "msg": {
            "default": null,
            "required": false,
            "description": [
                "The contents of the annotation message, in plain text.  Limited to 256 characters. Required for annotation."
            ]
        },
        "event_epoch": {
            "default": null,
            "required": false,
            "description": [
                "Unix timestamp of where the event should appear in the timeline, defaults to now. Be careful with this."
            ]
        },
        "revision_id": {
            "default": null,
            "required": false,
            "description": [
                "The revision of the code that was deployed. Required for deploy events"
            ]
        },
        "event": {
            "default": null,
            "required": false,
            "description": [
                "The type of event to send, either annotation or deploy"
            ],
            "choices": [
                "annotation",
                "deploy"
            ]
        }
    },
    "module": "stackdriver"
}, {
    "short_description": "Add or remove host to stacki front-end",
    "deprecated": null,
    "options": {
        "prim_intf_ip": {
            "required": false,
            "description": [
                "IP Address for the primary network interface."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the host to be added to Stacki."
            ]
        },
        "stacki_user": {
            "required": true,
            "description": [
                "Username for authenticating with Stacki API, but if not specified, the environment variable C(stacki_user) is used instead."
            ]
        },
        "stacki_endpoint": {
            "required": true,
            "description": [
                "URL for the Stacki API Endpoint."
            ]
        },
        "prim_intf": {
            "required": false,
            "description": [
                "Name of the primary network interface."
            ]
        },
        "stacki_password": {
            "required": true,
            "description": [
                "Password for authenticating with Stacki API, but if not specified, the environment variable C(stacki_password) is used instead."
            ]
        },
        "force_install": {
            "required": false,
            "description": [
                "Set value to True to force node into install state if it already exists in stacki."
            ]
        },
        "prim_intf_mac": {
            "required": false,
            "description": [
                "MAC Address for the primary PXE boot network interface."
            ]
        }
    },
    "module": "stacki_host"
}, {
    "short_description": "retrieve file or file system status",
    "deprecated": null,
    "options": {
        "get_checksum": {
            "default": true,
            "required": false,
            "description": [
                "Whether to return a checksum of the file (default sha1)"
            ],
            "version_added": "1.8"
        },
        "follow": {
            "default": false,
            "required": false,
            "description": [
                "Whether to follow symlinks"
            ]
        },
        "checksum_algorithm": {
            "aliases": [
                "checksum_algo",
                "checksum"
            ],
            "description": [
                "Algorithm to determine checksum of file. Will throw an error if the host is unable to use specified algorithm."
            ],
            "version_added": "2.0",
            "default": "sha1",
            "required": false,
            "choices": [
                "sha1",
                "sha224",
                "sha256",
                "sha384",
                "sha512"
            ]
        },
        "path": {
            "default": null,
            "required": true,
            "description": [
                "The full path of the file/object to get the facts of"
            ]
        },
        "get_mime": {
            "aliases": [
                "mime",
                "mime_type",
                "mime-type"
            ],
            "description": [
                "Use file magic and return data about the nature of the file. this uses the 'file' utility found on most Linux/Unix systems.",
                "This will add both `mime_type` and 'charset' fields to the return, if possible.",
                "In 2.3 this option changed from 'mime' to 'get_mime' and the default changed to 'Yes'"
            ],
            "version_added": "2.1",
            "default": true,
            "required": false,
            "choices": [
                true,
                false
            ]
        },
        "get_md5": {
            "default": true,
            "required": false,
            "description": [
                "Whether to return the md5 sum of the file.  Will return None if we're unable to use md5 (Common for FIPS-140 compliant systems)"
            ]
        },
        "get_attributes": {
            "default": true,
            "required": false,
            "description": [
                "Get file attributes using lsattr tool if present."
            ],
            "version_added": "2.3",
            "aliases": [
                "attributes",
                "attr"
            ]
        }
    },
    "module": "stat"
}, {
    "short_description": "Create maintenance windows for your status.io dashboard",
    "deprecated": null,
    "options": {
        "maintenance_notify_72_hr": {
            "default": false,
            "required": false,
            "description": [
                "Notify subscribers 72 hours before maintenance start time"
            ]
        },
        "maintenance_notify_now": {
            "default": false,
            "required": false,
            "description": [
                "Notify subscribers now"
            ]
        },
        "start_time": {
            "default": "None",
            "required": false,
            "description": [
                "Time maintenance is expected to start (Hour:Minutes) (UTC)",
                "End Time is worked out from start_time + minutes"
            ]
        },
        "api_id": {
            "required": true,
            "description": [
                "Your unique API ID from status.io"
            ]
        },
        "automation": {
            "default": false,
            "required": false,
            "description": [
                "Automatically start and end the maintenance window"
            ]
        },
        "maintenance_notify_24_hr": {
            "default": false,
            "required": false,
            "description": [
                "Notify subscribers 24 hours before maintenance start time"
            ]
        },
        "all_infrastructure_affected": {
            "default": false,
            "required": false,
            "description": [
                "If it affects all components and containers"
            ]
        },
        "maintenance_id": {
            "default": "None",
            "required": false,
            "description": [
                "The maintenance id number when deleting a maintenance window"
            ]
        },
        "desc": {
            "default": "Created by Ansible",
            "required": false,
            "description": [
                "Message describing the maintenance window"
            ]
        },
        "maintenance_notify_1_hr": {
            "default": false,
            "required": false,
            "description": [
                "Notify subscribers 1 hour before maintenance start time"
            ]
        },
        "title": {
            "default": "A new maintenance window",
            "required": false,
            "description": [
                "A descriptive title for the maintenance window"
            ]
        },
        "url": {
            "default": "https://api.status.io",
            "required": false,
            "description": [
                "Status.io API URL. A private apiary can be used instead."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the package."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "components": {
            "default": "None",
            "required": false,
            "description": [
                "The given name of your component (server name)"
            ],
            "aliases": [
                "component"
            ]
        },
        "statuspage": {
            "required": true,
            "description": [
                "Your unique StatusPage ID from status.io"
            ]
        },
        "api_key": {
            "required": true,
            "description": [
                "Your unique API Key from status.io"
            ]
        },
        "minutes": {
            "default": 10,
            "required": false,
            "description": [
                "The length of time in UTC that the maintenance will run             (starting from playbook runtime)"
            ]
        },
        "start_date": {
            "default": "None",
            "required": false,
            "description": [
                "Date maintenance is expected to start (Month/Day/Year) (UTC)",
                "End Date is worked out from start_date + minutes"
            ]
        },
        "containers": {
            "default": "None",
            "required": false,
            "description": [
                "The given name of your container (data center)"
            ],
            "aliases": [
                "container"
            ]
        }
    },
    "module": "statusio_maintenance"
}, {
    "short_description": "Assume a role using AWS Security Token Service and obtain temporary credentials",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "role_arn": {
            "required": true,
            "description": [
                "The Amazon Resource Name (ARN) of the role that the caller is assuming (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs)"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "duration_seconds": {
            "default": null,
            "required": false,
            "description": [
                "The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds."
            ]
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "mfa_serial_number": {
            "default": null,
            "required": false,
            "description": [
                "he identification number of the MFA device that is associated with the user who is making the AssumeRole call."
            ]
        },
        "role_session_name": {
            "required": true,
            "description": [
                "Name of the role's session - will be used by CloudTrail"
            ]
        },
        "mfa_token": {
            "default": null,
            "required": false,
            "description": [
                "The value provided by the MFA device, if the trust policy of the role being assumed requires MFA."
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "policy": {
            "default": null,
            "required": false,
            "description": [
                "Supplemental policy to use in addition to assumed role's policies."
            ]
        },
        "external_id": {
            "default": null,
            "required": false,
            "description": [
                "A unique identifier that is used by third parties to assume a role in their customers' accounts."
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        }
    },
    "module": "sts_assume_role"
}, {
    "short_description": "Obtain a session token from the AWS Security Token Service",
    "deprecated": null,
    "options": {
        "aws_secret_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS secret key. If not set then the value of the AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_secret_key",
                "secret_key"
            ]
        },
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Uses a boto profile. Only works with boto >= 2.24.0."
            ],
            "version_added": "1.6",
            "aliases": []
        },
        "aws_access_key": {
            "default": null,
            "required": false,
            "description": [
                "AWS access key. If not set then the value of the AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used."
            ],
            "aliases": [
                "ec2_access_key",
                "access_key"
            ]
        },
        "security_token": {
            "default": null,
            "required": false,
            "description": [
                "AWS STS security token. If not set then the value of the AWS_SECURITY_TOKEN or EC2_SECURITY_TOKEN environment variable is used."
            ],
            "version_added": "1.6",
            "aliases": [
                "access_token"
            ]
        },
        "duration_seconds": {
            "default": null,
            "required": false,
            "description": [
                "The duration, in seconds, of the session token. See http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html#API_GetSessionToken_RequestParameters for acceptable and default values."
            ]
        },
        "mfa_serial_number": {
            "default": null,
            "required": false,
            "description": [
                "The identification number of the MFA device that is associated with the user who is making the GetSessionToken call."
            ]
        },
        "mfa_token": {
            "default": null,
            "required": false,
            "description": [
                "The value provided by the MFA device, if the trust policy of the user requires MFA."
            ]
        },
        "ec2_url": {
            "default": null,
            "required": false,
            "description": [
                "Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used."
            ],
            "aliases": []
        },
        "validate_certs": {
            "aliases": [],
            "description": [
                "When set to \"no\", SSL certificates will not be validated for boto versions >= 2.6.0."
            ],
            "version_added": "1.5",
            "default": "yes",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "region": {
            "required": false,
            "description": [
                "The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)"
            ],
            "aliases": [
                "aws_region",
                "ec2_region"
            ]
        }
    },
    "module": "sts_session_token"
}, {
    "short_description": "Deploys a subversion repository.",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "--username parameter passed to svn."
            ]
        },
        "executable": {
            "default": null,
            "required": false,
            "description": [
                "Path to svn executable to use. If not supplied, the normal mechanism for resolving binary paths will be used."
            ],
            "version_added": "1.4"
        },
        "force": {
            "default": "no",
            "required": false,
            "description": [
                "If C(yes), modified files will be discarded. If C(no), module will fail if it encounters modified files. Prior to 1.9 the default was `yes`."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "dest": {
            "default": null,
            "required": true,
            "description": [
                "Absolute path where the repository should be deployed."
            ]
        },
        "update": {
            "default": "yes",
            "required": false,
            "description": [
                "If no, do not retrieve new revisions from the origin repository"
            ],
            "version_added": "2.3",
            "choices": [
                "yes",
                "no"
            ]
        },
        "repo": {
            "default": null,
            "required": true,
            "description": [
                "The subversion URL to the repository."
            ],
            "aliases": [
                "name",
                "repository"
            ]
        },
        "switch": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), do not call svn switch before update."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "export": {
            "default": "no",
            "required": false,
            "description": [
                "If C(yes), do export instead of checkout/update."
            ],
            "version_added": "1.6",
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "--password parameter passed to svn."
            ]
        },
        "checkout": {
            "default": "yes",
            "required": false,
            "description": [
                "If no, do not check out the repository if it does not exist locally"
            ],
            "version_added": "2.3",
            "choices": [
                "yes",
                "no"
            ]
        },
        "revision": {
            "default": "HEAD",
            "required": false,
            "description": [
                "Specific revision to checkout."
            ],
            "aliases": [
                "version"
            ]
        }
    },
    "module": "subversion"
}, {
    "short_description": "Manage the state of a program or group of programs running via supervisord",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "username to use for authentication"
            ],
            "version_added": "1.3"
        },
        "state": {
            "default": null,
            "required": true,
            "description": [
                "The desired state of program/group."
            ],
            "choices": [
                "present",
                "started",
                "stopped",
                "restarted",
                "absent"
            ]
        },
        "supervisorctl_path": {
            "default": null,
            "required": false,
            "description": [
                "path to supervisorctl executable"
            ],
            "version_added": "1.4"
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "The name of the supervisord program or group to manage.",
                "The name will be taken as group name when it ends with a colon I(:)",
                "Group support is only available in Ansible version 1.6 or later."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "password to use for authentication"
            ],
            "version_added": "1.3"
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The supervisor configuration file path"
            ],
            "version_added": "1.3"
        },
        "server_url": {
            "default": null,
            "required": false,
            "description": [
                "URL on which supervisord server is listening"
            ],
            "version_added": "1.3"
        }
    },
    "module": "supervisorctl"
}, {
    "short_description": "Manage daemontools services.",
    "deprecated": null,
    "options": {
        "service_dir": {
            "default": "/service",
            "required": false,
            "description": [
                "directory svscan watches for services"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service to manage."
            ]
        },
        "downed": {
            "default": false,
            "required": false,
            "description": [
                "Should a 'down' file exist or not, if it exists it disables auto startup. defaults to no. Downed does not imply stopped."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "enabled": {
            "required": false,
            "description": [
                "Wheater the service is enabled or not, if disabled it also implies stopped. Make note that a service can be enabled and downed (no auto restart)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "required": false,
            "description": [
                "C(Started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the svc (svc -t) and C(killed) will always bounce the svc (svc -k). C(reloaded) will send a sigusr1 (svc -1). C(once) will run a normally downed svc once (svc -o), not really an idempotent operation."
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "reloaded",
                "once"
            ]
        },
        "service_src": {
            "required": false,
            "description": [
                "directory where services are defined, the source of symlinks to service_dir."
            ]
        }
    },
    "module": "svc"
}, {
    "short_description": "Manage Solaris SVR4 packages",
    "deprecated": null,
    "options": {
        "category": {
            "required": false,
            "description": [
                "Install/Remove category instead of a single package."
            ],
            "version_added": "1.6",
            "choices": [
                "true",
                "false"
            ]
        },
        "src": {
            "description": [
                "Specifies the location to install the package from. Required when C(state=present).",
                "Can be any path acceptable to the C(pkgadd) command's C(-d) option. e.g.: C(somefile.pkg), C(/dir/with/pkgs), C(http:/server/mypkgs.pkg).",
                "If using a file or directory, they must already be accessible by the host. See the M(copy) module for a way to get them there."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether to install (C(present)), or remove (C(absent)) a package.",
                "If the package is to be installed, then I(src) is required.",
                "The SVR4 package system doesn't provide an upgrade operation. You need to uninstall the old, then install the new package."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Package name, e.g. C(SUNWcsr)"
            ]
        },
        "zone": {
            "default": "all",
            "required": false,
            "description": [
                "Whether to install the package only in the current zone, or install it into all zones.",
                "The installation into all zones works only if you are working with the global zone."
            ],
            "version_added": "1.6",
            "choices": [
                "current",
                "all"
            ]
        },
        "response_file": {
            "required": false,
            "description": [
                "Specifies the location of a response file to be used if package expects input on install. (added in Ansible 1.4)"
            ]
        },
        "proxy": {
            "description": [
                "HTTP[s] proxy to be used if C(src) is a URL."
            ]
        }
    },
    "module": "svr4pkg"
}, {
    "short_description": "Manage packages with swdepot package manager (HP-UX)",
    "deprecated": null,
    "options": {
        "state": {
            "aliases": [],
            "description": [
                "whether to install (C(present), C(latest)), or remove (C(absent)) a package."
            ],
            "version_added": 1.4,
            "default": null,
            "required": true,
            "choices": [
                "present",
                "latest",
                "absent"
            ]
        },
        "depot": {
            "aliases": [],
            "description": [
                "The source repository from which install or upgrade a package."
            ],
            "version_added": 1.4,
            "default": null,
            "required": false,
            "choices": []
        },
        "name": {
            "aliases": [],
            "description": [
                "package name."
            ],
            "version_added": 1.4,
            "default": null,
            "required": true,
            "choices": []
        }
    },
    "module": "swdepot"
}, {
    "short_description": "Manages updates and bundles in ClearLinux systems.",
    "deprecated": null,
    "options": {
        "contenturl": {
            "default": null,
            "required": false,
            "description": [
                "URL pointing to the contents of available bundles. If not specified, the contents are retrieved from clearlinux.org."
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the (I)bundle to install or remove."
            ],
            "aliases": [
                "bundle"
            ]
        },
        "format": {
            "default": null,
            "required": false,
            "description": [
                "The format suffix for version file downloads. For example [1,2,3,staging,etc]. If not specified, the default format is used."
            ]
        },
        "url": {
            "default": null,
            "required": false,
            "description": [
                "Overrides both I(contenturl) and I(versionurl)."
            ]
        },
        "verify": {
            "default": null,
            "required": false,
            "description": [
                "Verify content for OS version."
            ]
        },
        "update": {
            "default": false,
            "required": false,
            "description": [
                "Updates the OS to the latest version."
            ]
        },
        "manifest": {
            "default": null,
            "required": false,
            "description": [
                "The manifest contains information about the bundles at certaion version of the OS. Specify a Manifest version to verify against that version or leave unspecified to verify against the current version."
            ],
            "aliases": [
                "release",
                "version"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicates the desired (I)bundle state. C(present) ensures the bundle is installed while C(absent) ensures the (I)bundle is not installed."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "versionurl": {
            "default": null,
            "required": false,
            "description": [
                "URL for version string download."
            ]
        }
    },
    "module": "swupd"
}, {
    "short_description": "A wrapper around rsync to make common tasks in your playbooks quick and easy.",
    "deprecated": null,
    "options": {
        "dirs": {
            "default": "no",
            "required": false,
            "description": [
                "Transfer directories without recursing"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "partial": {
            "default": false,
            "required": false,
            "description": [
                "Tells rsync to keep the partial file which should make a subsequent transfer of the rest of the file much faster."
            ],
            "version_added": "2.0"
        },
        "links": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Copy symlinks as symlinks."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "copy_links": {
            "default": "no",
            "required": false,
            "description": [
                "Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "perms": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Preserve permissions."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "compress": {
            "default": "yes",
            "required": false,
            "description": [
                "Compress file data during the transfer. In most cases, leave this enabled unless it causes problems."
            ],
            "version_added": "1.7",
            "choices": [
                "yes",
                "no"
            ]
        },
        "rsync_timeout": {
            "default": 0,
            "required": false,
            "description": [
                "Specify a --timeout for the rsync command in seconds."
            ]
        },
        "rsync_opts": {
            "default": null,
            "required": false,
            "description": [
                "Specify additional rsync options by passing in an array."
            ],
            "version_added": "1.6"
        },
        "owner": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Preserve owner (super user only)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "set_remote_user": {
            "default": true,
            "description": [
                "put user@ for the remote paths. If you have a custom ssh config to define the remote user for a host that does not match the inventory user, you should set this parameter to \"no\"."
            ]
        },
        "times": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Preserve modification times"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "rsync_path": {
            "required": false,
            "description": [
                "Specify the rsync command to run on the remote host. See C(--rsync-path) on the rsync man page."
            ]
        },
        "dest_port": {
            "default": "Value of ansible_ssh_port for this host, remote_port config setting, or the value from ssh client configuration if none of those are set",
            "description": [
                "Port number for ssh on the destination host. Prior to ansible 2.0, the ansible_ssh_port inventory var took precedence over this value."
            ],
            "version_added": "1.5"
        },
        "src": {
            "required": true,
            "description": [
                "Path on the source host that will be synchronized to the destination; The path can be absolute or relative."
            ]
        },
        "group": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Preserve group"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "existing_only": {
            "default": "no",
            "required": false,
            "description": [
                "Skip creating new files on receiver."
            ],
            "version_added": "1.5",
            "choices": [
                "yes",
                "no"
            ]
        },
        "recursive": {
            "default": "the value of the archive option",
            "required": false,
            "description": [
                "Recurse into directories."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "archive": {
            "default": "yes",
            "required": false,
            "description": [
                "Mirrors the rsync archive flag, enables recursive, links, perms, times, owner, group flags and -D."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "dest": {
            "required": true,
            "description": [
                "Path on the destination host that will be synchronized from the source; The path can be absolute or relative."
            ]
        },
        "mode": {
            "default": "push",
            "required": false,
            "description": [
                "Specify the direction of the synchronization. In push mode the localhost or delegate is the source; In pull mode the remote host in context is the source."
            ],
            "choices": [
                "push",
                "pull"
            ]
        },
        "checksum": {
            "default": "no",
            "required": false,
            "description": [
                "Skip based on checksum, rather than mod-time & size; Note that that \"archive\" option is still enabled by default - the \"checksum\" option will not disable it."
            ],
            "version_added": "1.6",
            "choices": [
                "yes",
                "no"
            ]
        },
        "verify_host": {
            "default": false,
            "required": false,
            "description": [
                "Verify destination host key."
            ],
            "version_added": "2.0"
        },
        "use_ssh_args": {
            "default": "no",
            "description": [
                "Use the ssh_args specified in ansible.cfg"
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "delete": {
            "default": "no",
            "required": false,
            "description": [
                "Delete files in C(dest) that don't exist (after transfer, not before) in the C(src) path. This option requires C(recursive=yes)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "synchronize"
}, {
    "short_description": "Manage entries in sysctl.conf.",
    "deprecated": null,
    "options": {
        "reload": {
            "default": "yes",
            "description": [
                "If C(yes), performs a I(/sbin/sysctl -p) if the C(sysctl_file) is updated. If C(no), does not reload I(sysctl) even if the C(sysctl_file) is updated."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Whether the entry should be present or absent in the sysctl file."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "The dot-separated path (aka I(key)) specifying the sysctl variable."
            ],
            "aliases": [
                "key"
            ]
        },
        "sysctl_set": {
            "default": false,
            "required": false,
            "description": [
                "Verify token value with the sysctl command and set with -w if necessary"
            ],
            "version_added": 1.5,
            "choices": [
                "yes",
                "no"
            ]
        },
        "ignoreerrors": {
            "default": false,
            "description": [
                "Use this option to ignore errors about unknown keys."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "sysctl_file": {
            "default": "/etc/sysctl.conf",
            "required": false,
            "description": [
                "Specifies the absolute path to C(sysctl.conf), if not C(/etc/sysctl.conf)."
            ]
        },
        "value": {
            "default": null,
            "required": false,
            "description": [
                "Desired value of the sysctl key."
            ],
            "aliases": [
                "val"
            ]
        }
    },
    "module": "sysctl"
}, {
    "short_description": "Manage services.",
    "deprecated": null,
    "options": {
        "masked": {
            "default": null,
            "required": false,
            "description": [
                "Whether the unit should be masked or not, a masked unit is impossible to start."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": null,
            "required": false,
            "description": [
                "C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the service. C(reloaded) will always reload."
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "reloaded"
            ]
        },
        "no_block": {
            "default": false,
            "required": false,
            "description": [
                "Do not synchronously wait for the requested operation to finish. Enqueued job will continue without Ansible blocking on its completion."
            ],
            "version_added": "2.3",
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service. When using in a chroot environment you always need to specify the full name i.e. (crond.service)."
            ],
            "aliases": [
                "unit",
                "service"
            ]
        },
        "enabled": {
            "default": null,
            "required": false,
            "description": [
                "Whether the service should start on boot. B(At least one of state and enabled are required.)"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "daemon_reload": {
            "default": false,
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "run daemon-reload before doing any other operations, to make sure systemd has read any changes."
            ],
            "aliases": [
                "daemon-reload"
            ]
        },
        "user": {
            "default": false,
            "required": false,
            "description": [
                "run systemctl talking to the service manager of the calling user, rather than the service manager of the system."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "systemd"
}, {
    "short_description": "Creates/deletes an issue in a Taiga Project Management Platform",
    "deprecated": null,
    "options": {
        "status": {
            "default": "New",
            "required": false,
            "description": [
                "The issue status. Must exist previously."
            ]
        },
        "project": {
            "required": true,
            "description": [
                "Name of the project containing the issue. Must exist previously."
            ]
        },
        "severity": {
            "default": "Normal",
            "required": false,
            "description": [
                "The issue severity. Must exist previously."
            ]
        },
        "tags": {
            "default": [],
            "required": false,
            "description": [
                "A lists of tags to be assigned to the issue."
            ]
        },
        "priority": {
            "default": "Normal",
            "required": false,
            "description": [
                "The issue priority. Must exist previously."
            ]
        },
        "taiga_host": {
            "default": "https://api.taiga.io",
            "required": false,
            "description": [
                "The hostname of the Taiga instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the issue should be present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "attachment": {
            "default": "None",
            "required": false,
            "description": [
                "Path to a file to be attached to the issue."
            ]
        },
        "issue_type": {
            "required": true,
            "description": [
                "The issue type. Must exist previously."
            ]
        },
        "subject": {
            "required": true,
            "description": [
                "The issue subject."
            ]
        },
        "attachment_description": {
            "default": "",
            "required": false,
            "description": [
                "A string describing the file to be attached to the issue."
            ]
        },
        "description": {
            "default": "",
            "required": false,
            "description": [
                "The issue description."
            ]
        }
    },
    "module": "taiga_issue"
}, {
    "short_description": "module for sending notifications via telegram",
    "deprecated": null,
    "options": {
        "msg": {
            "required": true,
            "description": [
                "What message you wish to send."
            ]
        },
        "token": {
            "required": true,
            "description": [
                "Token identifying your telegram bot."
            ]
        },
        "chat_id": {
            "required": true,
            "description": [
                "Telegram group or user chat_id"
            ]
        }
    },
    "module": "telegram"
}, {
    "short_description": "Creates temporary files and directories.",
    "deprecated": null,
    "options": {
        "path": {
            "default": null,
            "required": false,
            "description": [
                "Location where temporary file or directory should be created. If path is not specified default system temporary directory will be used."
            ]
        },
        "state": {
            "default": "file",
            "required": false,
            "description": [
                "Whether to create file or directory."
            ],
            "choices": [
                "file",
                "directory"
            ]
        },
        "prefix": {
            "default": "ansible.",
            "required": false,
            "description": [
                "Prefix of file/directory name created by module."
            ]
        },
        "suffix": {
            "default": "",
            "required": false,
            "description": [
                "Suffix of file/directory name created by module."
            ]
        }
    },
    "module": "tempfile"
}, {
    "short_description": "Templates a file out to a remote server.",
    "deprecated": null,
    "options": {
        "src": {
            "required": true,
            "description": [
                "Path of a Jinja2 formatted template on the Ansible controller. This can be a relative or absolute path."
            ]
        },
        "force": {
            "default": "yes",
            "required": false,
            "description": [
                "the default is C(yes), which will replace the remote file when contents are different than the source.  If C(no), the file will only be transferred if the destination does not exist."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "dest": {
            "required": true,
            "description": [
                "Location to render the template to on the remote machine."
            ]
        },
        "selevel": {
            "default": "s0",
            "required": false,
            "description": [
                "Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
            ]
        },
        "seuser": {
            "default": null,
            "required": false,
            "description": [
                "User part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available."
            ]
        },
        "setype": {
            "default": null,
            "required": false,
            "description": [
                "Type part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "unsafe_writes": {
            "default": false,
            "required": false,
            "description": [
                "Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner.",
                "This boolean option allows ansible to fall back to unsafe methods of updating files for those cases in which you do not have any other choice. Be aware that this is subject to race conditions and can lead to data corruption."
            ],
            "version_added": "2.2"
        },
        "serole": {
            "default": null,
            "required": false,
            "description": [
                "Role part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": [
                "Attributes the file or directory should have. To get supported flags look at the man page for I(chattr) on the target system. This string should contain the attributes in the same order as the one displayed by I(lsattr)."
            ],
            "version_added": "2.3",
            "aliases": [
                "attr"
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the user that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Name of the group that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "validate": {
            "default": "None",
            "required": false,
            "description": [
                "The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the example below. The command is passed securely so shell features like expansion and pipes won't work."
            ]
        },
        "backup": {
            "default": "no",
            "required": false,
            "description": [
                "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "template"
}, {
    "short_description": "Configure timezone setting",
    "deprecated": null,
    "options": {
        "hwclock": {
            "required": false,
            "description": [
                "Whether the hardware clock is in UTC or in local timezone. Default is to keep current setting. Note that this option is recommended not to change and may fail to configure, especially on virtual environments such as AWS. B(At least one of name and hwclock are required.) I(Only used on Linux.)"
            ],
            "aliases": [
                "rtc"
            ]
        },
        "name": {
            "required": false,
            "description": [
                "Name of the timezone for the system clock. Default is to keep current setting. B(At least one of name and hwclock are required.)"
            ]
        }
    },
    "module": "timezone"
}, {
    "short_description": "create, update, or destroy Ansible Tower credential.",
    "deprecated": null,
    "options": {
        "authorize": {
            "default": false,
            "required": false,
            "description": [
                "Should use authroize for net type."
            ]
        },
        "username": {
            "default": null,
            "required": false,
            "description": [
                "Username for this credential. access_key for AWS."
            ]
        },
        "domain": {
            "default": null,
            "required": false,
            "description": [
                "Domain for openstack type."
            ]
        },
        "description": {
            "description": [
                "The description to use for the credential."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "vault_password": {
            "description": [
                "Valut password. Use ASK for prompting."
            ]
        },
        "team": {
            "default": null,
            "required": false,
            "description": [
                "Team that should own this credential."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "host": {
            "default": null,
            "required": false,
            "description": [
                "Host for this credential."
            ]
        },
        "user": {
            "default": null,
            "required": false,
            "description": [
                "User that should own this credential."
            ]
        },
        "become_password": {
            "default": null,
            "required": false,
            "description": [
                "Become password. Use ASK for prompting."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "become_username": {
            "default": null,
            "required": false,
            "description": [
                "Become username. Use ASK for prompting."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Password for this credential. Use ASK for prompting. secret_key for AWS. api_key for RAX."
            ]
        },
        "tenant": {
            "default": null,
            "required": false,
            "description": [
                "Tenant ID for azure_rm type."
            ]
        },
        "subscription": {
            "default": null,
            "required": false,
            "description": [
                "Subscription ID for azure_rm type."
            ]
        },
        "kind": {
            "required": true,
            "description": [
                "Type of credential being added."
            ],
            "choices": [
                "ssh",
                "net",
                "scm",
                "aws",
                "rax",
                "vmware",
                "satellite6",
                "cloudforms",
                "gce",
                "azure",
                "azure_rm",
                "openstack"
            ]
        },
        "become_method": {
            "default": "None",
            "required": false,
            "description": [
                "Become method to Use for privledge escalation."
            ],
            "choices": [
                "None",
                "sudo",
                "su",
                "pbrun",
                "pfexec"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name to use for the credential."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "secret": {
            "default": null,
            "required": false,
            "description": [
                "Secret token for azure_rm type."
            ]
        },
        "project": {
            "default": null,
            "required": false,
            "description": [
                "Project that should for this credential."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "client": {
            "default": null,
            "required": false,
            "description": [
                "Client or application ID for azure_rm type."
            ]
        },
        "ssh_key_data": {
            "default": null,
            "required": false,
            "description": [
                "Path to SSH private key."
            ]
        },
        "ssh_key_unlock": {
            "description": [
                "Unlock password for ssh_key. Use ASK for prompting."
            ]
        },
        "organization": {
            "default": null,
            "required": false,
            "description": [
                "Organization that should own the credential."
            ]
        },
        "authorize_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for net credentials that require authroize."
            ]
        }
    },
    "module": "tower_credential"
}, {
    "short_description": "create, update, or destroy Ansible Tower group.",
    "deprecated": null,
    "options": {
        "credential": {
            "default": null,
            "required": false,
            "description": [
                "Credential to use for the group."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "The description to use for the group."
            ]
        },
        "overwrite_vars": {
            "default": null,
            "required": false,
            "description": [
                "Override vars in child groups and hosts with those from external source."
            ]
        },
        "source_regions": {
            "default": null,
            "required": false,
            "description": [
                "Regions for cloud provider."
            ]
        },
        "variables": {
            "default": null,
            "required": false,
            "description": [
                "Variables to use for the group, use '@' for a file."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "overwrite": {
            "default": false,
            "required": false,
            "description": [
                "Delete child roups and hosts not found in source."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name to use for the group."
            ]
        },
        "source_vars": {
            "default": null,
            "required": false,
            "description": [
                "Override variables from source with variables from this field."
            ]
        },
        "source_script": {
            "default": null,
            "required": false,
            "description": [
                "Inventory script to be used when group type is \"custom\"."
            ]
        },
        "update_on_launch": {
            "default": false,
            "required": false,
            "description": [
                "Refresh inventory data from its source each time a job is run."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "instance_filters": {
            "default": null,
            "required": false,
            "description": [
                "Comma-separated list of filter expressions for matching hosts."
            ]
        },
        "source": {
            "default": "null,",
            "required": false,
            "description": [
                "The source to use for this group."
            ],
            "choices": [
                "manual",
                "file",
                "ec2",
                "rax",
                "vmware",
                "gce",
                "azure",
                "azure_rm",
                "openstack",
                "satellite6",
                "cloudforms",
                "custom"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "group_by": {
            "default": null,
            "required": false,
            "description": [
                "Limit groups automatically created from inventory source."
            ]
        },
        "inventory": {
            "required": true,
            "description": [
                "Inventory the group should be made a member of."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        }
    },
    "module": "tower_group"
}, {
    "short_description": "create, update, or destroy Ansible Tower host.",
    "deprecated": null,
    "options": {
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name to use for the host."
            ]
        },
        "variables": {
            "description": [
                "Variables to use for the host. Use '@' for a file."
            ]
        },
        "enabled": {
            "default": true,
            "required": false,
            "description": [
                "If the host should be enabled."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "inventory": {
            "required": true,
            "description": [
                "Inventory the host should be made a member of."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "The description to use for the host."
            ]
        }
    },
    "module": "tower_host"
}, {
    "short_description": "create, update, or destroy Ansible Tower inventory.",
    "deprecated": null,
    "options": {
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name to use for the inventory."
            ]
        },
        "variables": {
            "default": null,
            "required": false,
            "description": [
                "Inventory variables. Use '@' to get from file."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "organization": {
            "required": true,
            "description": [
                "Organization the inventory belongs to."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "The description to use for the inventory."
            ]
        }
    },
    "module": "tower_inventory"
}, {
    "short_description": "Cancel an Ansible Tower Job.",
    "deprecated": null,
    "options": {
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "job_id": {
            "required": true,
            "description": [
                "ID of the job to cancel"
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "fail_if_not_running": {
            "default": false,
            "description": [
                "Fail loudly if the job_id does not reference a running job."
            ]
        }
    },
    "module": "tower_job_cancel"
}, {
    "short_description": "Launch an Ansible Job.",
    "deprecated": null,
    "options": {
        "credential": {
            "default": null,
            "description": [
                "Credential to use for job, only used if prompt for credential is set."
            ]
        },
        "use_job_endpoint": {
            "default": false,
            "description": [
                "Disable launching jobs from job template."
            ]
        },
        "job_template": {
            "required": true,
            "description": [
                "Name of the job_template to use."
            ]
        },
        "tags": {
            "default": null,
            "description": [
                "Specific tags to use for from playbook."
            ]
        },
        "extra_vars": {
            "default": null,
            "description": [
                "Extra_vars to use for the job_template. Use '@' for a file."
            ]
        },
        "job_explanation": {
            "default": null,
            "description": [
                "Job explanation field."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "job_type": {
            "default": null,
            "description": [
                "Job_type to use for the job, only used if prompt for job_type is set."
            ],
            "choices": [
                "run",
                "check",
                "scan"
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "limit": {
            "default": null,
            "description": [
                "Limit to use for the job_template."
            ]
        },
        "inventory": {
            "default": null,
            "description": [
                "Inventory to use for the job, only used if prompt for inventory is set."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        }
    },
    "module": "tower_job_launch"
}, {
    "short_description": "List Ansible Tower jobs.",
    "deprecated": null,
    "options": {
        "status": {
            "default": null,
            "description": [
                "Only list jobs with this status."
            ],
            "choices": [
                "pending",
                "waiting",
                "running",
                "error",
                "failed",
                "canceled",
                "successful"
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "all_pages": {
            "default": false,
            "description": [
                "Fetch all the pages and return a single result."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "query": {
            "default": null,
            "description": [
                "Query used to further filter the list of jobs. {\"foo\":\"bar\"} will be passed at ?foo=bar"
            ]
        },
        "page": {
            "default": null,
            "description": [
                "Page number of the results to fetch."
            ]
        }
    },
    "module": "tower_job_list"
}, {
    "short_description": "create, update, or destroy Ansible Tower job_template.",
    "deprecated": null,
    "options": {
        "network_credential": {
            "default": null,
            "required": false,
            "description": [
                "The network_credential to use for the job_template."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description to use for the job_template."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "ask_inventory": {
            "default": false,
            "required": false,
            "description": [
                "Propmt user for inventory on launch."
            ]
        },
        "job_type": {
            "required": true,
            "description": [
                "The job_type to use for the job_template."
            ],
            "choices": [
                "run",
                "check",
                "scan"
            ]
        },
        "ask_job_type": {
            "default": false,
            "required": false,
            "description": [
                "Prompt user for job type on launch."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "skip_tags": {
            "default": null,
            "required": false,
            "description": [
                "The skip_tags to use for the job_template."
            ]
        },
        "playbook": {
            "required": true,
            "description": [
                "Playbook to use for the job_template."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "ask_tags": {
            "default": false,
            "required": false,
            "description": [
                "Prompt user for job tags on launch."
            ]
        },
        "host_config_key": {
            "default": null,
            "required": false,
            "description": [
                "Allow provisioning callbacks using this host config key."
            ]
        },
        "machine_credential": {
            "default": null,
            "required": false,
            "description": [
                "Machine_credential to use for the job_template."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "ask_credential": {
            "default": false,
            "required": false,
            "description": [
                "Prompt user for credential on launch."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name to use for the job_template."
            ]
        },
        "job_tags": {
            "default": null,
            "required": false,
            "description": [
                "The job_tags to use for the job_template."
            ]
        },
        "verbosity": {
            "default": null,
            "required": false,
            "description": [
                "Control the output level Ansible produces as the playbook runs."
            ],
            "choices": [
                "verbose",
                "debug"
            ]
        },
        "project": {
            "required": true,
            "description": [
                "Project to use for the job_template."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ask_extra_vars": {
            "default": false,
            "required": false,
            "description": [
                "Prompt user for extra_vars on launch."
            ]
        },
        "extra_vars_path": {
            "default": null,
            "required": false,
            "description": [
                "Path to the extra_vars yaml file."
            ]
        },
        "inventory": {
            "default": null,
            "required": false,
            "description": [
                "Inventory to use for the job_template."
            ]
        },
        "limit": {
            "default": null,
            "required": false,
            "description": [
                "A host pattern to further constrain the list of hosts managed or affected by the playbook"
            ]
        },
        "forks": {
            "default": null,
            "required": false,
            "description": [
                "The number of parallel or simultaneous processes to use while executing the playbook."
            ]
        },
        "cloud_credential": {
            "default": null,
            "required": false,
            "description": [
                "Cloud_credential to use for the job_template."
            ]
        },
        "become_enabled": {
            "default": false,
            "required": false,
            "description": [
                "Should become_enabled."
            ]
        }
    },
    "module": "tower_job_template"
}, {
    "short_description": "Wait for Ansible Tower job to finish.",
    "deprecated": null,
    "options": {
        "min_interval": {
            "default": 1,
            "description": [
                "Minimum interval in seconds, to request an update from Tower."
            ]
        },
        "job_id": {
            "required": true,
            "description": [
                "ID of the job to monitor."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "max_interval": {
            "default": 30,
            "description": [
                "Maximum interval in seconds, to request an update from Tower."
            ]
        },
        "timeout": {
            "default": null,
            "description": [
                "Maximum time in seconds to wait for a job to finish."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        }
    },
    "module": "tower_job_wait"
}, {
    "short_description": "create, update, or destroy Ansible Tower label.",
    "deprecated": null,
    "options": {
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name to use for the label."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "organization": {
            "default": null,
            "required": true,
            "description": [
                "Organization the label should be applied to."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        }
    },
    "module": "tower_label"
}, {
    "short_description": "create, update, or destroy Ansible Tower organizations",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name to use for the organization."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "The description to use for the organization."
            ]
        }
    },
    "module": "tower_organization"
}, {
    "short_description": "create, update, or destroy Ansible Tower projects",
    "deprecated": null,
    "options": {
        "scm_branch": {
            "default": null,
            "required": false,
            "description": [
                "The branch to use for the scm resource."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description to use for the project."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "scm_update_on_launch": {
            "default": false,
            "required": false,
            "description": [
                "Before an update to the local repository before launching a job with this project."
            ]
        },
        "scm_clean": {
            "default": false,
            "required": false,
            "description": [
                "Remove local modifications before updating."
            ]
        },
        "scm_type": {
            "default": "manual",
            "required": false,
            "description": [
                "Type of scm resource."
            ],
            "choices": [
                "manual",
                "git",
                "hg",
                "svn"
            ]
        },
        "scm_delete_on_update": {
            "default": false,
            "required": false,
            "description": [
                "Remove the repository completely before updating."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name to use for the project."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "scm_credential": {
            "default": null,
            "required": false,
            "description": [
                "Name of the credential to use with this scm resource."
            ]
        },
        "scm_url": {
            "default": null,
            "required": false,
            "description": [
                "URL of scm resource."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "local_path": {
            "default": null,
            "required": false,
            "description": [
                "The server playbook directory for manual projects."
            ]
        },
        "organization": {
            "default": null,
            "required": false,
            "description": [
                "Primary key of organization for project."
            ]
        }
    },
    "module": "tower_project"
}, {
    "short_description": "create, update, or destroy Ansible Tower role.",
    "deprecated": null,
    "options": {
        "credential": {
            "default": null,
            "required": false,
            "description": [
                "Credential the role acts on."
            ]
        },
        "job_template": {
            "default": null,
            "required": false,
            "description": [
                "The job_template the role acts on."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "team": {
            "default": null,
            "required": false,
            "description": [
                "Team that receives the permissions specified by the role."
            ]
        },
        "project": {
            "default": null,
            "required": false,
            "description": [
                "Project the role acts on."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "role": {
            "required": true,
            "description": [
                "The role type to grant/revoke."
            ],
            "choices": [
                "admin",
                "read",
                "member",
                "execute",
                "adhoc",
                "update",
                "use",
                "auditor"
            ]
        },
        "inventory": {
            "default": null,
            "required": false,
            "description": [
                "Inventory the role acts on."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "organization": {
            "default": null,
            "required": false,
            "description": [
                "Organiation the role acts on."
            ]
        },
        "target_team": {
            "default": null,
            "required": false,
            "description": [
                "Team that the role acts on."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        },
        "user": {
            "default": null,
            "required": false,
            "description": [
                "User that receives the permissions specified by the role."
            ]
        }
    },
    "module": "tower_role"
}, {
    "short_description": "create, update, or destroy Ansible Tower team.",
    "deprecated": null,
    "options": {
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name to use for the team."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "organization": {
            "default": null,
            "required": true,
            "description": [
                "Organization the team should be made a member of."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        }
    },
    "module": "tower_team"
}, {
    "short_description": "create, update, or destroy Ansible Tower user.",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the user."
            ]
        },
        "superuser": {
            "default": false,
            "required": false,
            "description": [
                "User is a system wide administator."
            ]
        },
        "first_name": {
            "default": null,
            "required": false,
            "description": [
                "First name of the user."
            ]
        },
        "last_name": {
            "default": null,
            "required": false,
            "description": [
                "Last name of the user."
            ]
        },
        "tower_host": {
            "default": null,
            "required": false,
            "description": [
                "URL to your Tower instance."
            ]
        },
        "email": {
            "required": true,
            "description": [
                "Email address of the user."
            ]
        },
        "tower_username": {
            "default": null,
            "required": false,
            "description": [
                "Username for your Tower instance."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the resource."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "auditor": {
            "default": false,
            "required": false,
            "description": [
                "User is a system wide auditor."
            ]
        },
        "tower_password": {
            "default": null,
            "required": false,
            "description": [
                "Password for your Tower instance."
            ]
        },
        "tower_config_file": {
            "default": null,
            "required": false,
            "description": [
                "Path to the Tower config file. See notes."
            ]
        },
        "organization": {
            "default": null,
            "required": false,
            "description": [
                "Organization the user should be made a member of."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Password of the user."
            ]
        },
        "tower_verify_ssl": {
            "default": true,
            "required": false,
            "description": [
                "Dis/allow insecure connections to Tower. If C(no), SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates."
            ]
        }
    },
    "module": "tower_user"
}, {
    "short_description": "Sends a text message to a mobile phone through Twilio.",
    "deprecated": null,
    "options": {
        "from_number": {
            "required": true,
            "description": "the Twilio number to send the text message from, format +15551112222"
        },
        "msg": {
            "required": true,
            "description": "the body of the text message"
        },
        "auth_token": {
            "required": true,
            "description": "user's Twilio authentication token"
        },
        "media_url": {
            "required": false,
            "description": "a URL with a picture, video or sound clip to send with an MMS (multimedia message) instead of a plain SMS"
        },
        "to_number": {
            "required": true,
            "description": "one or more phone numbers to send the text message to, format +15551112222"
        },
        "account_sid": {
            "required": true,
            "description": "user's Twilio account token found on the account page"
        }
    },
    "module": "twilio"
}, {
    "short_description": "Send a message to typetalk",
    "deprecated": null,
    "options": {
        "topic": {
            "required": true,
            "description": [
                "topic id to post message"
            ]
        },
        "client_secret": {
            "required": true,
            "description": [
                "OAuth2 client secret"
            ]
        },
        "client_id": {
            "required": true,
            "description": [
                "OAuth2 client ID"
            ]
        },
        "msg": {
            "required": true,
            "description": [
                "message body"
            ]
        }
    },
    "module": "typetalk"
}, {
    "short_description": "Manage dns entries on a univention corporate server",
    "deprecated": null,
    "options": {
        "type": {
            "required": true,
            "description": [
                "Define the record type. C(host_record) is a A or AAAA record, C(alias) is a CNAME, C(ptr_record) is a PTR record, C(srv_record) is a SRV record and C(txt_record) is a TXT record."
            ],
            "choices": [
                "host_record",
                "alias",
                "ptr_record",
                "srv_record",
                "txt_record"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the dns record is present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "data": {
            "default": [],
            "required": false,
            "description": [
                "Additional data for this record, e.g. ['a': '192.0.2.1']. Required if C(state=present)."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the record, this is also the DNS record. E.g. www for www.example.com."
            ]
        },
        "zone": {
            "required": true,
            "description": [
                "Corresponding DNS zone for this record, e.g. example.com."
            ]
        }
    },
    "module": "udm_dns_record"
}, {
    "short_description": "Manage dns zones on a univention corporate server",
    "deprecated": null,
    "options": {
        "retry": {
            "default": 1800,
            "required": false,
            "description": [
                "Interval that should elapse before a failed refresh should be retried."
            ]
        },
        "zone": {
            "required": true,
            "description": [
                "DNS zone name, e.g. C(example.com)."
            ]
        },
        "interfaces": {
            "required": false,
            "description": [
                "List of interface IP addresses, on which the server should response this zone. Required if C(state=present)."
            ]
        },
        "refresh": {
            "default": 3600,
            "required": false,
            "description": [
                "Interval before the zone should be refreshed."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the dns zone is present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "contact": {
            "default": "",
            "required": false,
            "description": [
                "Contact person in the SOA record."
            ]
        },
        "expire": {
            "default": 604800,
            "required": false,
            "description": [
                "Specifies the upper limit on the time interval that can elapse before the zone is no longer authoritative."
            ]
        },
        "ttl": {
            "default": 600,
            "required": false,
            "description": [
                "Minimum TTL field that should be exported with any RR from this zone."
            ]
        },
        "nameserver": {
            "required": false,
            "description": [
                "List of appropriate name servers. Required if C(state=present)."
            ]
        },
        "type": {
            "required": true,
            "description": [
                "Define if the zone is a forward or reverse DNS zone."
            ],
            "choices": [
                "forward_zone",
                "reverse_zone"
            ]
        },
        "mx": {
            "default": [],
            "required": false,
            "description": [
                "List of MX servers. (Must declared as A or AAAA records)."
            ]
        }
    },
    "module": "udm_dns_zone"
}, {
    "short_description": "Manage of the posix group",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the group is present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the posix group."
            ]
        },
        "position": {
            "required": false,
            "description": [
                "define the whole ldap position of the group, e.g. C(cn=g123m-1A,cn=classes,cn=schueler,cn=groups,ou=schule,dc=example,dc=com)."
            ]
        },
        "ou": {
            "required": false,
            "description": [
                "LDAP OU, e.g. school for LDAP OU C(ou=school,dc=example,dc=com)."
            ]
        },
        "subpath": {
            "required": false,
            "description": [
                "Subpath inside the OU, e.g. C(cn=classes,cn=students,cn=groups)."
            ]
        },
        "description": {
            "required": false,
            "description": [
                "Group description."
            ]
        }
    },
    "module": "udm_group"
}, {
    "short_description": "Manage samba shares on a univention corporate server",
    "deprecated": null,
    "options": {
        "samba_name": {
            "default": "None",
            "required": false,
            "description": [
                "Windows name. Required if C(state=present)."
            ],
            "aliases": [
                "sambaName"
            ]
        },
        "samba_hide_files": {
            "default": "None",
            "required": false,
            "description": [
                "Hide files."
            ],
            "aliases": [
                "sambaHideFiles"
            ]
        },
        "samba_blocking_locks": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Blocking locks."
            ],
            "aliases": [
                "sambaBlockingLocks"
            ]
        },
        "samba_directory_mode": {
            "default": "0755",
            "required": false,
            "description": [
                "Directory mode."
            ],
            "aliases": [
                "sambaDirectoryMode"
            ]
        },
        "samba_dos_filemode": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Users with write access may modify permissions."
            ],
            "aliases": [
                "sambaDosFilemode"
            ]
        },
        "samba_postexec": {
            "default": "None",
            "required": false,
            "description": [
                "Postexec script."
            ],
            "aliases": [
                "sambaPostexec"
            ]
        },
        "owner": {
            "default": 0,
            "required": false,
            "description": [
                "Directory owner of the share's root directory."
            ]
        },
        "samba_fake_oplocks": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Fake oplocks."
            ],
            "aliases": [
                "sambaFakeOplocks"
            ]
        },
        "samba_strict_locking": {
            "default": "Auto",
            "required": false,
            "description": [
                "Strict locking."
            ],
            "aliases": [
                "sambaStrictLocking"
            ]
        },
        "samba_public": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Allow anonymous read-only access with a guest user."
            ],
            "aliases": [
                "sambaPublic"
            ]
        },
        "samba_force_directory_security_mode": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Force directory security mode."
            ],
            "aliases": [
                "sambaForceDirectorySecurityMode"
            ]
        },
        "group": {
            "default": "0",
            "required": false,
            "description": [
                "Directory owner group of the share's root directory."
            ]
        },
        "samba_writeable": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Samba write access."
            ],
            "aliases": [
                "sambaWriteable"
            ]
        },
        "samba_nt_acl_support": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "NT ACL support."
            ],
            "aliases": [
                "sambaNtAclSupport"
            ]
        },
        "samba_write_list": {
            "default": "None",
            "required": false,
            "description": [
                "Restrict write access to these users/groups."
            ],
            "aliases": [
                "sambaWriteList"
            ]
        },
        "samba_preexec": {
            "default": "None",
            "required": false,
            "description": [
                "Preexec script."
            ],
            "aliases": [
                "sambaPreexec"
            ]
        },
        "samba_browseable": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Show in Windows network environment."
            ],
            "aliases": [
                "sambaBrowseable"
            ]
        },
        "samba_inherit_acls": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Inherit ACLs."
            ],
            "aliases": [
                "sambaInheritAcls"
            ]
        },
        "samba_msdfs_root": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "MSDFS root."
            ],
            "aliases": [
                "sambaMSDFSRoot"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the share is present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "samba_valid_users": {
            "default": "None",
            "required": false,
            "description": [
                "Valid users or groups."
            ],
            "aliases": [
                "sambaValidUsers"
            ]
        },
        "samba_force_create_mode": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Force file mode."
            ],
            "aliases": [
                "sambaForceCreateMode"
            ]
        },
        "root_squash": {
            "default": "1",
            "required": false,
            "description": [
                "Modify user ID for root user (root squashing)."
            ],
            "choices": [
                "0",
                "1"
            ]
        },
        "samba_directory_security_mode": {
            "default": "0777",
            "required": false,
            "description": [
                "Directory security mode."
            ],
            "aliases": [
                "sambaDirectorySecurityMode"
            ]
        },
        "samba_force_group": {
            "default": "None",
            "required": false,
            "description": [
                "Force group."
            ],
            "aliases": [
                "sambaForceGroup"
            ]
        },
        "samba_vfs_objects": {
            "default": "None",
            "required": false,
            "description": [
                "VFS objects."
            ],
            "aliases": [
                "sambaVFSObjects"
            ]
        },
        "samba_force_directory_mode": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Force directory mode."
            ],
            "aliases": [
                "sambaForceDirectoryMode"
            ]
        },
        "writeable": {
            "default": "1",
            "required": false,
            "description": [
                "NFS write access."
            ],
            "choices": [
                "0",
                "1"
            ]
        },
        "samba_locking": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Locking."
            ],
            "aliases": [
                "sambaLocking"
            ]
        },
        "samba_security_mode": {
            "default": "0777",
            "required": false,
            "description": [
                "Security mode."
            ],
            "aliases": [
                "sambaSecurityMode"
            ]
        },
        "samba_inherit_owner": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Create files/directories with the owner of the parent directory."
            ],
            "aliases": [
                "sambaInheritOwner"
            ]
        },
        "samba_csc_policy": {
            "default": "manual",
            "required": false,
            "description": [
                "Client-side caching policy."
            ],
            "aliases": [
                "sambaCscPolicy"
            ]
        },
        "sync": {
            "default": "sync",
            "required": false,
            "description": [
                "NFS synchronisation."
            ]
        },
        "nfs_hosts": {
            "default": [],
            "required": false,
            "description": [
                "Only allow access for this host, IP address or network."
            ]
        },
        "path": {
            "default": "None",
            "required": false,
            "description": [
                "Directory on the providing server, e.g. C(/home). Required if C(state=present)."
            ]
        },
        "nfs_custom_settings": {
            "default": [],
            "required": false,
            "description": [
                "Option name in exports file."
            ],
            "aliases": [
                "nfsCustomSettings"
            ]
        },
        "samba_force_user": {
            "default": "None",
            "required": false,
            "description": [
                "Force user."
            ],
            "aliases": [
                "sambaForceUser"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name"
            ]
        },
        "samba_invalid_users": {
            "default": "None",
            "required": false,
            "description": [
                "Invalid users or groups."
            ],
            "aliases": [
                "sambaInvalidUsers"
            ]
        },
        "samba_create_mode": {
            "default": "0744",
            "required": false,
            "description": [
                "File mode."
            ],
            "aliases": [
                "sambaCreateMode"
            ]
        },
        "samba_force_security_mode": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Force security mode."
            ],
            "aliases": [
                "sambaForceSecurityMode"
            ]
        },
        "samba_level_2_oplocks": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Level 2 oplocks."
            ],
            "aliases": [
                "sambaLevel2Oplocks"
            ]
        },
        "samba_custom_settings": {
            "default": [],
            "required": false,
            "description": [
                "Option name in smb.conf and its value."
            ],
            "aliases": [
                "sambaCustomSettings"
            ]
        },
        "samba_hide_unreadable": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Hide unreadable files/directories."
            ],
            "aliases": [
                "sambaHideUnreadable"
            ]
        },
        "host": {
            "default": "None",
            "required": false,
            "description": [
                "Host FQDN (server which provides the share), e.g. C({{ ansible_fqdn }}). Required if C(state=present)."
            ]
        },
        "samba_block_size": {
            "default": "None",
            "required": false,
            "description": [
                "Blocking size."
            ],
            "aliases": [
                "sambaBlockSize"
            ]
        },
        "samba_oplocks": {
            "default": "1",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Oplocks."
            ],
            "aliases": [
                "sambaOplocks"
            ]
        },
        "samba_hosts_allow": {
            "default": [],
            "required": false,
            "description": [
                "Allowed host/network."
            ],
            "aliases": [
                "sambaHostsAllow"
            ]
        },
        "samba_inherit_permissions": {
            "default": "0",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Create files/directories with permissions of the parent directory."
            ],
            "aliases": [
                "sambaInheritPermissions"
            ]
        },
        "subtree_checking": {
            "default": "1",
            "required": false,
            "description": [
                "Subtree checking."
            ],
            "choices": [
                "0",
                "1"
            ]
        },
        "directorymode": {
            "default": "00755",
            "required": false,
            "description": [
                "Permissions for the share's root directory."
            ]
        },
        "ou": {
            "required": true,
            "description": [
                "Organisational unit, inside the LDAP Base DN."
            ]
        },
        "samba_hosts_deny": {
            "default": [],
            "required": false,
            "description": [
                "Denied host/network."
            ],
            "aliases": [
                "sambaHostsDeny"
            ]
        }
    },
    "module": "udm_share"
}, {
    "short_description": "Manage posix users on a univention corporate server",
    "deprecated": null,
    "options": {
        "update_password": {
            "default": "always",
            "required": false,
            "description": [
                "C(always) will update passwords if they differ. C(on_create) will only set the password for newly created users."
            ],
            "version_added": "2.3"
        },
        "samba_user_workstations": {
            "default": [],
            "required": false,
            "description": [
                "Allow the authentication only on this Microsoft Windows host."
            ],
            "aliases": [
                "sambaUserWorkstations"
            ]
        },
        "homedrive": {
            "default": "None",
            "required": false,
            "description": [
                "Windows home drive, e.g. C(\"H:\")."
            ]
        },
        "room_number": {
            "default": "None",
            "required": false,
            "description": [
                "Room number of users business address."
            ],
            "aliases": [
                "roomNumber"
            ]
        },
        "primary_group": {
            "default": "cn=Domain Users,cn=groups,$LDAP_BASE_DN",
            "required": false,
            "description": [
                "Primary group. This must be the group LDAP DN."
            ],
            "aliases": [
                "primaryGroup"
            ]
        },
        "postcode": {
            "default": "None",
            "required": false,
            "description": [
                "Postal code of users business address."
            ]
        },
        "scriptpath": {
            "default": "None",
            "required": false,
            "description": [
                "Windows logon script."
            ]
        },
        "home_share": {
            "default": "None",
            "required": false,
            "description": [
                "Home NFS share. Must be a LDAP DN, e.g. C(cn=home,cn=shares,ou=school,dc=example,dc=com)."
            ],
            "aliases": [
                "homeShare"
            ]
        },
        "override_pw_history": {
            "default": false,
            "required": false,
            "description": [
                "Override password history"
            ],
            "aliases": [
                "overridePWHistory"
            ]
        },
        "city": {
            "default": "None",
            "required": false,
            "description": [
                "City of users business address."
            ]
        },
        "display_name": {
            "default": "None",
            "required": false,
            "description": [
                "Display name (not gecos)"
            ],
            "aliases": [
                "displayName"
            ]
        },
        "pager_telephonenumber": {
            "default": [],
            "required": false,
            "description": [
                "List of pager telephone numbers."
            ],
            "aliases": [
                "pagerTelephonenumber"
            ]
        },
        "employee_number": {
            "default": "None",
            "required": false,
            "description": [
                "Employee number"
            ],
            "aliases": [
                "employeeNumber"
            ]
        },
        "serviceprovider": {
            "default": [
                ""
            ],
            "required": false,
            "description": [
                "Enable user for the following service providers."
            ]
        },
        "organisation": {
            "default": "None",
            "required": false,
            "description": [
                "Organisation"
            ]
        },
        "subpath": {
            "default": "cn=users",
            "required": false,
            "description": [
                "LDAP subpath inside the organizational unit, e.g. C(cn=teachers,cn=users) for LDAP container C(cn=teachers,cn=users,dc=example,dc=com)."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the user is present or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "home_share_path": {
            "default": "None",
            "required": false,
            "description": [
                "Path to home NFS share, inside the homeShare."
            ],
            "aliases": [
                "homeSharePath"
            ]
        },
        "userexpiry": {
            "default": "Today + 1 year",
            "required": false,
            "description": [
                "Account expiry date, e.g. C(1999-12-31)."
            ]
        },
        "unixhome": {
            "default": "/home/$USERNAME",
            "required": false,
            "description": [
                "Unix home directory"
            ]
        },
        "mail_home_server": {
            "default": "None",
            "required": false,
            "description": [
                "FQDN of mail server"
            ],
            "aliases": [
                "mailHomeServer"
            ]
        },
        "email": {
            "default": [
                ""
            ],
            "required": false,
            "description": [
                "A list of e-mail addresses."
            ]
        },
        "sambahome": {
            "default": "None",
            "required": false,
            "description": [
                "Windows home path, e.g. C('\\\\$FQDN\\$USERNAME')."
            ]
        },
        "username": {
            "required": true,
            "description": [
                "User name"
            ],
            "aliases": [
                "name"
            ]
        },
        "home_telephone_number": {
            "default": [],
            "required": false,
            "description": [
                "List of private telephone numbers."
            ],
            "aliases": [
                "homeTelephoneNumber"
            ]
        },
        "shell": {
            "default": "/bin/bash",
            "required": false,
            "description": [
                "Login shell"
            ]
        },
        "description": {
            "default": "None",
            "required": false,
            "description": [
                "Description (not gecos)"
            ]
        },
        "firstname": {
            "required": false,
            "description": [
                "First name. Required if C(state=present)."
            ]
        },
        "lastname": {
            "required": false,
            "description": [
                "Last name. Required if C(state=present)."
            ]
        },
        "mail_alternative_address": {
            "default": [],
            "required": false,
            "description": [
                "List of alternative e-mail addresses."
            ],
            "aliases": [
                "mailAlternativeAddress"
            ]
        },
        "phone": {
            "default": [],
            "required": false,
            "description": [
                "List of telephone numbers."
            ]
        },
        "birthday": {
            "default": "None",
            "required": false,
            "description": [
                "Birthday"
            ]
        },
        "groups": {
            "default": [],
            "required": false,
            "description": [
                "POSIX groups, the LDAP DNs of the groups will be found with the LDAP filter for each group as $GROUP: C((&(objectClass=posixGroup)(cn=$GROUP)))."
            ]
        },
        "profilepath": {
            "default": "None",
            "required": false,
            "description": [
                "Windows profile directory"
            ]
        },
        "employee_type": {
            "default": "None",
            "required": false,
            "description": [
                "Employee type"
            ],
            "aliases": [
                "employeeType"
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "Password. Required if C(state=present)."
            ]
        },
        "pwd_change_next_login": {
            "default": "None",
            "choices": [
                "0",
                "1"
            ],
            "required": false,
            "description": [
                "Change password on next login."
            ],
            "aliases": [
                "pwdChangeNextLogin"
            ]
        },
        "mail_primary_address": {
            "default": "None",
            "required": false,
            "description": [
                "Primary e-mail address"
            ],
            "aliases": [
                "mailPrimaryAddress"
            ]
        },
        "country": {
            "default": "None",
            "required": false,
            "description": [
                "Country of users business address."
            ]
        },
        "title": {
            "default": "None",
            "required": false,
            "description": [
                "Title, e.g. C(Prof.)."
            ]
        },
        "override_pw_length": {
            "default": false,
            "required": false,
            "description": [
                "Override password check"
            ],
            "aliases": [
                "overridePWLength"
            ]
        },
        "street": {
            "default": "None",
            "required": false,
            "description": [
                "Street of users business address."
            ]
        },
        "gecos": {
            "default": "None",
            "required": false,
            "description": [
                "GECOS"
            ]
        },
        "mobile_telephone_number": {
            "default": [],
            "required": false,
            "description": [
                "Mobile phone number"
            ],
            "aliases": [
                "mobileTelephoneNumber"
            ]
        },
        "position": {
            "default": "",
            "required": false,
            "description": [
                "Define the whole position of users object inside the LDAP tree, e.g. C(cn=employee,cn=users,ou=school,dc=example,dc=com)."
            ]
        },
        "ou": {
            "default": "",
            "required": false,
            "description": [
                "Organizational Unit inside the LDAP Base DN, e.g. C(school) for LDAP OU C(ou=school,dc=example,dc=com)."
            ]
        },
        "department_number": {
            "default": "None",
            "required": false,
            "description": [
                "Department number of users business address."
            ],
            "aliases": [
                "departmentNumber"
            ]
        },
        "samba_privileges": {
            "default": [],
            "required": false,
            "description": [
                "Samba privilege, like allow printer administration, do domain join."
            ],
            "aliases": [
                "sambaPrivileges"
            ]
        },
        "secretary": {
            "default": [],
            "required": false,
            "description": [
                "A list of superiors as LDAP DNs."
            ]
        }
    },
    "module": "udm_user"
}, {
    "short_description": "Manage firewall with UFW",
    "deprecated": null,
    "options": {
        "direction": {
            "required": false,
            "description": [
                "Select direction for a rule or default policy command."
            ],
            "choices": [
                "in",
                "out",
                "incoming",
                "outgoing",
                "routed"
            ]
        },
        "from_port": {
            "required": false,
            "description": [
                "Source port."
            ]
        },
        "to_ip": {
            "default": "any",
            "required": false,
            "description": [
                "Destination IP address."
            ],
            "aliases": [
                "to",
                "dest"
            ]
        },
        "to_port": {
            "required": false,
            "description": [
                "Destination port."
            ],
            "aliases": [
                "port"
            ]
        },
        "from_ip": {
            "default": "any",
            "required": false,
            "description": [
                "Source IP address."
            ],
            "aliases": [
                "from",
                "src"
            ]
        },
        "interface": {
            "required": false,
            "description": [
                "Specify interface for rule."
            ],
            "aliases": [
                "if"
            ]
        },
        "name": {
            "required": false,
            "description": [
                "Use profile located in C(/etc/ufw/applications.d)"
            ],
            "aliases": [
                "app"
            ]
        },
        "insert": {
            "required": false,
            "description": [
                "Insert the corresponding rule as rule number NUM"
            ]
        },
        "logging": {
            "required": false,
            "description": [
                "Toggles logging. Logged packets use the LOG_KERN syslog facility."
            ],
            "choices": [
                "on",
                "off",
                "low",
                "medium",
                "high",
                "full"
            ]
        },
        "log": {
            "required": false,
            "description": [
                "Log new connections matched to this rule"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "proto": {
            "required": false,
            "description": [
                "TCP/IP protocol."
            ],
            "choices": [
                "any",
                "tcp",
                "udp",
                "ipv6",
                "esp",
                "ah"
            ]
        },
        "route": {
            "required": false,
            "description": [
                "Apply the rule to routed/forwarded packets."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "rule": {
            "required": false,
            "description": [
                "Add firewall rule"
            ],
            "choices": [
                "allow",
                "deny",
                "reject",
                "limit"
            ]
        },
        "state": {
            "required": false,
            "description": [
                "C(enabled) reloads firewall and enables firewall on boot.",
                "C(disabled) unloads firewall and disables firewall on boot.",
                "C(reloaded) reloads firewall.",
                "C(reset) disables and resets firewall to installation defaults."
            ],
            "choices": [
                "enabled",
                "disabled",
                "reloaded",
                "reset"
            ]
        },
        "policy": {
            "aliases": [
                "default"
            ],
            "required": false,
            "description": [
                "Change the default policy for incoming or outgoing traffic."
            ],
            "choices": [
                "allow",
                "deny",
                "reject"
            ]
        },
        "delete": {
            "required": false,
            "description": [
                "Delete rule."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "ufw"
}, {
    "short_description": "Unpacks an archive after (optionally) copying it from the local machine.",
    "deprecated": null,
    "options": {
        "src": {
            "default": null,
            "required": true,
            "description": [
                "If remote_src=no (default), local path to archive file to copy to the target server; can be absolute or relative. If remote_src=yes, path on the target server to existing archive file to unpack.",
                "If remote_src=yes and src contains ://, the remote machine will download the file from the url first. (version_added 2.0). This is only for simple cases, for full download support look at the M(get_url) module."
            ]
        },
        "seuser": {
            "default": null,
            "required": false,
            "description": [
                "User part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available."
            ]
        },
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Name of the group that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "remote_src": {
            "default": "no",
            "required": false,
            "description": [
                "Set to C(yes) to indicate the archived file is already on the remote system and not local to the Ansible controller.",
                "This option is mutually exclusive with C(copy)."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "dest": {
            "default": null,
            "required": true,
            "description": [
                "Remote absolute path where the archive should be unpacked"
            ]
        },
        "selevel": {
            "default": "s0",
            "required": false,
            "description": [
                "Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
            ]
        },
        "list_files": {
            "default": "no",
            "required": false,
            "description": [
                "If set to True, return the list of files that are contained in the tarball."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "keep_newer": {
            "default": false,
            "required": false,
            "description": [
                "Do not replace existing files that are newer than files from the archive."
            ],
            "version_added": "2.1"
        },
        "setype": {
            "default": null,
            "required": false,
            "description": [
                "Type part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "creates": {
            "default": null,
            "required": false,
            "description": [
                "a filename, when it already exists, this step will B(not) be run."
            ],
            "version_added": "1.6"
        },
        "unsafe_writes": {
            "default": false,
            "required": false,
            "description": [
                "Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner.",
                "This boolean option allows ansible to fall back to unsafe methods of updating files for those cases in which you do not have any other choice. Be aware that this is subject to race conditions and can lead to data corruption."
            ],
            "version_added": "2.2"
        },
        "serole": {
            "default": null,
            "required": false,
            "description": [
                "Role part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
            ]
        },
        "exclude": {
            "default": [],
            "required": false,
            "description": [
                "List the directory and file entries that you would like to exclude from the unarchive action."
            ],
            "version_added": "2.1"
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the user that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "extra_opts": {
            "default": null,
            "required": false,
            "description": [
                "Specify additional options by passing in an array."
            ],
            "version_added": "2.1"
        },
        "copy": {
            "default": "yes",
            "required": false,
            "description": [
                "If true, the file is copied from local 'master' to the target machine, otherwise, the plugin will look for src archive at the target machine.",
                "This option has been deprecated in favor of C(remote_src)",
                "This option is mutually exclusive with C(remote_src)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "This only applies if using a https url as the source of the file.",
                "This should only set to C(no) used on personally controlled sites using self-signed cer",
                "Prior to 2.2 the code worked as if this was set to C(yes)."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": [
                "Attributes the file or directory should have. To get supported flags look at the man page for I(chattr) on the target system. This string should contain the attributes in the same order as the one displayed by I(lsattr)."
            ],
            "version_added": "2.3",
            "aliases": [
                "attr"
            ]
        }
    },
    "module": "unarchive"
}, {
    "short_description": "Pause and start Uptime Robot monitoring",
    "deprecated": null,
    "options": {
        "monitorid": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "ID of the monitor to check."
            ],
            "aliases": []
        },
        "state": {
            "default": null,
            "choices": [
                "started",
                "paused"
            ],
            "required": true,
            "description": [
                "Define whether or not the monitor should be running or paused."
            ],
            "aliases": []
        },
        "apikey": {
            "default": null,
            "choices": [],
            "required": true,
            "description": [
                "Uptime Robot API key."
            ],
            "aliases": []
        }
    },
    "module": "uptimerobot"
}, {
    "short_description": "Interacts with webservices",
    "deprecated": null,
    "options": {
        "body": {
            "default": null,
            "required": false,
            "description": [
                "The body of the http request/response to the web service. If C(body_format) is set to 'json' it will take an already formatted JSON string or convert a data structure into JSON."
            ]
        },
        "dest": {
            "default": null,
            "required": false,
            "description": [
                "path of where to download the file to (if desired). If I(dest) is a directory, the basename of the file on the remote server will be used."
            ]
        },
        "follow_redirects": {
            "default": "safe",
            "required": false,
            "description": [
                "Whether or not the URI module should follow redirects. C(all) will follow all redirects. C(safe) will follow only \"safe\" redirects, where \"safe\" means that the client is only doing a GET or HEAD on the URI to which it is being redirected. C(none) will not follow any redirects. Note that C(yes) and C(no) choices are accepted for backwards compatibility, where C(yes) is the equivalent of C(all) and C(no) is the equivalent of C(safe). C(yes) and C(no) are deprecated and will be removed in some future version of Ansible."
            ],
            "choices": [
                "all",
                "safe",
                "none"
            ]
        },
        "force_basic_auth": {
            "default": "no",
            "required": false,
            "description": [
                "The library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail. This option forces the sending of the Basic authentication header upon initial request."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "removes": {
            "required": false,
            "description": [
                "a filename, when it does not exist, this step will not be run."
            ]
        },
        "user": {
            "default": null,
            "required": false,
            "description": [
                "username for the module to use for Digest, Basic or WSSE authentication."
            ]
        },
        "others": {
            "required": false,
            "description": [
                "all arguments accepted by the M(file) module also work here"
            ]
        },
        "body_format": {
            "default": "raw",
            "required": false,
            "description": [
                "The serialization format of the body. When set to json, encodes the body argument, if needed, and automatically sets the Content-Type header accordingly. As of C(2.3) it is possible to override the `Content-Type` header, when set to json via the I(headers) option."
            ],
            "version_added": "2.0",
            "choices": [
                "raw",
                "json"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "password for the module to use for Digest, Basic or WSSE authentication."
            ]
        },
        "HEADER_": {
            "default": null,
            "required": false,
            "description": [
                "Any parameter starting with \"HEADER_\" is a sent with your request as a header. For example, HEADER_Content-Type=\"application/json\" would send the header \"Content-Type\" along with your request with a value of \"application/json\". This option is deprecated as of C(2.1) and may be removed in a future release. Use I(headers) instead."
            ]
        },
        "url": {
            "default": null,
            "required": true,
            "description": [
                "HTTP or HTTPS URL in the form (http|https)://host.domain[:port]/path"
            ]
        },
        "creates": {
            "required": false,
            "description": [
                "a filename, when it already exists, this step will not be run."
            ]
        },
        "headers": {
            "default": null,
            "required": false,
            "description": [
                "Add custom HTTP headers to a request in the format of a YAML hash. As of C(2.3) supplying C(Content-Type) here will override the header generated by supplying C(json) for I(body_format)."
            ],
            "version_added": "2.1"
        },
        "timeout": {
            "default": 30,
            "required": false,
            "description": [
                "The socket level timeout in seconds"
            ]
        },
        "status_code": {
            "default": 200,
            "required": false,
            "description": [
                "A valid, numeric, HTTP status code that signifies success of the request. Can also be comma separated list of status codes."
            ]
        },
        "return_content": {
            "default": "no",
            "required": false,
            "description": [
                "Whether or not to return the body of the request as a \"content\" key in the dictionary result. If the reported Content-type is \"application/json\", then the JSON is additionally loaded into a key called C(json) in the dictionary results."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated.  This should only set to C(no) used on personally controlled sites using self-signed certificates.  Prior to 1.9.2 the code defaulted to C(no)."
            ],
            "version_added": "1.9.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "method": {
            "default": "GET",
            "required": false,
            "description": [
                "The HTTP method of the request or response. It MUST be uppercase."
            ],
            "choices": [
                "GET",
                "POST",
                "PUT",
                "HEAD",
                "DELETE",
                "OPTIONS",
                "PATCH",
                "TRACE",
                "CONNECT",
                "REFRESH"
            ]
        }
    },
    "module": "uri"
}, {
    "short_description": "Urpmi manager",
    "deprecated": null,
    "options": {
        "update_cache": {
            "default": false,
            "required": false,
            "description": [
                "update the package database first C(urpmi.update -a)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Indicates the desired package state"
            ],
            "choices": [
                "absent",
                "present"
            ]
        },
        "force": {
            "default": true,
            "required": false,
            "description": [
                "Assume \"yes\" is the answer to any question urpmi has to ask. Corresponds to the C(--force) option for I(urpmi)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "pkg": {
            "default": null,
            "required": true,
            "description": [
                "name of package to install, upgrade or remove."
            ]
        },
        "no-recommends": {
            "default": true,
            "required": false,
            "description": [
                "Corresponds to the C(--no-recommends) option for I(urpmi)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "urpmi"
}, {
    "short_description": "Manage user accounts",
    "deprecated": null,
    "options": {
        "comment": {
            "required": false,
            "description": [
                "Optionally sets the description (aka I(GECOS)) of user account."
            ]
        },
        "ssh_key_bits": {
            "default": "default set by ssh-keygen",
            "required": false,
            "description": [
                "Optionally specify number of bits in SSH key to create."
            ],
            "version_added": "0.9"
        },
        "update_password": {
            "default": "always",
            "required": false,
            "description": [
                "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
            ],
            "version_added": "1.3",
            "choices": [
                "always",
                "on_create"
            ]
        },
        "non_unique": {
            "default": "no",
            "required": false,
            "description": [
                "Optionally when used with the -u option, this option allows to change the user ID to a non-unique value."
            ],
            "version_added": "1.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "force": {
            "default": "no",
            "required": false,
            "description": [
                "When used with C(state=absent), behavior is as with C(userdel --force)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "ssh_key_type": {
            "default": "rsa",
            "required": false,
            "description": [
                "Optionally specify the type of SSH key to generate. Available SSH key types will depend on implementation present on target host."
            ],
            "version_added": "0.9"
        },
        "expires": {
            "default": "None",
            "required": false,
            "description": [
                "An expiry time for the user in epoch, it will be ignored on platforms that do not support this. Currently supported on Linux and FreeBSD."
            ],
            "version_added": "1.9"
        },
        "ssh_key_passphrase": {
            "required": false,
            "description": [
                "Set a passphrase for the SSH key.  If no passphrase is provided, the SSH key will default to having no passphrase."
            ],
            "version_added": "0.9"
        },
        "groups": {
            "required": false,
            "description": [
                "Puts the user in  list of groups. When set to the empty string ('groups='), the user is removed from all groups except the primary group.",
                "Before version 2.3, the only input format allowed was a 'comma separated string', now it should be able to accept YAML lists also."
            ]
        },
        "home": {
            "required": false,
            "description": [
                "Optionally set the user's home directory."
            ]
        },
        "move_home": {
            "default": "no",
            "required": false,
            "description": [
                "If set to C(yes) when used with C(home=), attempt to move the user's home directory to the specified directory if it isn't there already."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "password": {
            "required": false,
            "description": [
                "Optionally set the user's password to this crypted value.  See the user example in the github examples directory for what this looks like in a playbook. See U(http://docs.ansible.com/ansible/faq.html#how-do-i-generate-crypted-passwords-for-the-user-module) for details on various ways to generate these password values. Note on Darwin system, this value has to be cleartext. Beware of security issues."
            ]
        },
        "skeleton": {
            "required": false,
            "description": [
                "Optionally set a home skeleton directory. Requires createhome option!"
            ],
            "version_added": "2.0"
        },
        "generate_ssh_key": {
            "default": "no",
            "required": false,
            "description": [
                "Whether to generate a SSH key for the user in question. This will B(not) overwrite an existing SSH key."
            ],
            "version_added": "0.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "append": {
            "default": "no",
            "required": false,
            "description": [
                "If C(yes), will only add groups, not set them to just the list in I(groups)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "uid": {
            "required": false,
            "description": [
                "Optionally sets the I(UID) of the user."
            ]
        },
        "ssh_key_comment": {
            "default": "ansible-generated on $HOSTNAME",
            "required": false,
            "description": [
                "Optionally define the comment for the SSH key."
            ],
            "version_added": "0.9"
        },
        "group": {
            "required": false,
            "description": [
                "Optionally sets the user's primary group (takes a group name)."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the user to create, remove or modify."
            ],
            "aliases": [
                "user"
            ]
        },
        "createhome": {
            "default": "yes",
            "required": false,
            "description": [
                "Unless set to C(no), a home directory will be made for the user when the account is created or if the home directory does not exist."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "system": {
            "default": "no",
            "required": false,
            "description": [
                "When creating an account, setting this to C(yes) makes the user a system account.  This setting cannot be changed on existing users."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "remove": {
            "default": "no",
            "required": false,
            "description": [
                "When used with C(state=absent), behavior is as with C(userdel --remove)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "seuser": {
            "required": false,
            "description": [
                "Optionally sets the seuser type (user_u) on selinux enabled systems."
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the account should exist or not, taking action if the state is different from what is stated."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "ssh_key_file": {
            "default": ".ssh/id_rsa",
            "required": false,
            "description": [
                "Optionally specify the SSH key filename. If this is a relative filename then it will be relative to the user's home directory."
            ],
            "version_added": "0.9"
        },
        "login_class": {
            "required": false,
            "description": [
                "Optionally sets the user's login class for FreeBSD, OpenBSD and NetBSD systems."
            ]
        },
        "shell": {
            "required": false,
            "description": [
                "Optionally set the user's shell."
            ]
        }
    },
    "module": "user"
}, {
    "short_description": "add remove firewall rules in a gateway  in a vca",
    "deprecated": null,
    "options": {
        "username": {
            "default": "None",
            "required": false,
            "description": [
                "The vca username or email address, if not set the environment variable C(VCA_USER) is checked for the username."
            ],
            "aliases": [
                "user"
            ]
        },
        "gateway_name": {
            "default": "gateway",
            "required": false,
            "description": [
                "The name of the gateway of the vdc where the rule should be added."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "If the object should be added or removed."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "instance_id": {
            "default": "None",
            "required": false,
            "description": [
                "The instance id in a vchs environment to be used for creating the vapp."
            ]
        },
        "host": {
            "default": "None",
            "required": false,
            "description": [
                "The authentication host to be used when service type is vcd."
            ]
        },
        "fw_rules": {
            "default": false,
            "required": true,
            "description": [
                "A list of firewall rules to be added to the gateway, Please see examples on valid entries"
            ]
        },
        "service_type": {
            "default": "vca",
            "required": false,
            "description": [
                "The type of service we are authenticating against."
            ],
            "choices": [
                "vca",
                "vchs",
                "vcd"
            ]
        },
        "org": {
            "default": "None",
            "required": false,
            "description": [
                "The org to login to for creating vapp. This option is required when the C(service_type) is I(vdc)."
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "The vca password, if not set the environment variable C(VCA_PASS) is checked for the password."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "vdc_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the vdc where the gateway is located."
            ]
        },
        "api_version": {
            "default": "5.7",
            "required": false,
            "description": [
                "The api version to be used with the vca."
            ]
        },
        "verify_certs": {
            "default": true,
            "required": false,
            "description": [
                "If the certificates of the authentication is to be verified."
            ]
        }
    },
    "module": "vca_fw"
}, {
    "short_description": "add remove nat rules in a gateway  in a vca",
    "deprecated": null,
    "options": {
        "username": {
            "default": "None",
            "required": false,
            "description": [
                "The vca username or email address, if not set the environment variable C(VCA_USER) is checked for the username."
            ],
            "aliases": [
                "user"
            ]
        },
        "nat_rules": {
            "default": false,
            "required": true,
            "description": [
                "A list of rules to be added to the gateway, Please see examples on valid entries"
            ]
        },
        "purge_rules": {
            "default": false,
            "required": false,
            "description": [
                "If set to true, it will delete all rules in the gateway that are not given as paramter to this module."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "If the object should be added or removed."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "instance_id": {
            "default": "None",
            "required": false,
            "description": [
                "The instance id in a vchs environment to be used for creating the vapp."
            ]
        },
        "host": {
            "default": "None",
            "required": false,
            "description": [
                "The authentication host to be used when service type is vcd."
            ]
        },
        "org": {
            "default": "None",
            "required": false,
            "description": [
                "The org to login to for creating vapp. This option is required when the C(service_type) is I(vdc)."
            ]
        },
        "service_type": {
            "default": "vca",
            "required": false,
            "description": [
                "The type of service we are authenticating against."
            ],
            "choices": [
                "vca",
                "vchs",
                "vcd"
            ]
        },
        "gateway_name": {
            "default": "gateway",
            "required": false,
            "description": [
                "The name of the gateway of the vdc where the rule should be added."
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "The vca password, if not set the environment variable C(VCA_PASS) is checked for the password."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "vdc_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the vdc where the gateway is located."
            ]
        },
        "api_version": {
            "default": "5.7",
            "required": false,
            "description": [
                "The api version to be used with the vca."
            ]
        },
        "verify_certs": {
            "default": true,
            "required": false,
            "description": [
                "If the certificates of the authentication is to be verified."
            ]
        }
    },
    "module": "vca_nat"
}, {
    "short_description": "Manages vCloud Air vApp instances.",
    "deprecated": null,
    "options": {
        "vm_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the virtual machine instance in the vApp to manage."
            ]
        },
        "username": {
            "default": "None",
            "required": false,
            "description": [
                "The vCloud Air username to use during authentication"
            ]
        },
        "vm_memory": {
            "default": "None",
            "required": false,
            "description": [
                "The amount of memory in MB to allocate to VMs in the vApp.  If the I(vm_name) argument is provided, then this becomes a per VM setting otherise it is applied to all VMs in the vApp."
            ]
        },
        "template_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the vApp template to use to create the vApp instance.  If the I(state) is not `absent` then the I(template_name) value must be provided.  The I(template_name) must be previously uploaded to the catalog specified by I(catalog_name)"
            ]
        },
        "network_mode": {
            "default": "pool",
            "required": false,
            "description": [
                "Configures the mode of the network connection."
            ],
            "choices": [
                "pool",
                "dhcp",
                "static"
            ]
        },
        "vapp_name": {
            "required": true,
            "description": [
                "The name of the vCloud Air vApp instance"
            ]
        },
        "org": {
            "default": "None",
            "required": false,
            "description": [
                "The org to login to for creating vapp, mostly set when the service_type is vdc."
            ]
        },
        "operation": {
            "default": "noop",
            "required": false,
            "description": [
                "Specifies an operation to be performed on the vApp."
            ],
            "choices": [
                "noop",
                "poweron",
                "poweroff",
                "suspend",
                "shutdown",
                "reboot",
                "reset"
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "The vCloud Air password to use during authentication"
            ]
        },
        "vm_cpus": {
            "default": "None",
            "required": false,
            "description": [
                "The number of vCPUs to configure for the VM in the vApp.   If the I(vm_name) argument is provided, then this becomes a per VM setting otherwise it is applied to all VMs in the vApp."
            ]
        },
        "vdc_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the virtual data center (VDC) where the vm should be created or contains the vAPP."
            ]
        },
        "network_name": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the network that should be attached to the virtual machine in the vApp.  The virtual network specified must already be created in the vCloud Air VDC.  If the I(state) is not 'absent' then the I(network_name) argument must be provided."
            ]
        },
        "host": {
            "default": "None",
            "required": false,
            "description": [
                "The authentication host to be used when service type  is vcd."
            ]
        },
        "instance_id": {
            "default": "None",
            "required": false,
            "description": [
                "The instance id in a vchs environment to be used for creating the vapp"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Configures the state of the vApp."
            ],
            "choices": [
                "present",
                "absent",
                "deployed",
                "undeployed"
            ]
        },
        "service_type": {
            "default": "vca",
            "required": false,
            "description": [
                "The type of service we are authenticating against"
            ],
            "choices": [
                "vca",
                "vchs",
                "vcd"
            ]
        },
        "api_version": {
            "default": "5.7",
            "required": false,
            "description": [
                "The api version to be used with the vca"
            ]
        }
    },
    "module": "vca_vapp"
}, {
    "short_description": "Updates Vertica configuration parameters.",
    "deprecated": null,
    "options": {
        "cluster": {
            "default": "localhost",
            "required": false,
            "description": [
                "Name of the Vertica cluster."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the parameter to update."
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        },
        "login_user": {
            "default": "dbadmin",
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "Name of the Vertica database."
            ]
        },
        "port": {
            "default": 5433,
            "required": false,
            "description": [
                "Vertica cluster port to connect to."
            ]
        },
        "value": {
            "required": true,
            "description": [
                "Value of the parameter to be set."
            ]
        }
    },
    "module": "vertica_configuration"
}, {
    "short_description": "Gathers Vertica database facts.",
    "deprecated": null,
    "options": {
        "login_user": {
            "default": "dbadmin",
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "cluster": {
            "default": "localhost",
            "required": false,
            "description": [
                "Name of the cluster running the schema."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "Name of the database running the schema."
            ]
        },
        "port": {
            "default": 5433,
            "required": false,
            "description": "Database port to connect to."
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        }
    },
    "module": "vertica_facts"
}, {
    "short_description": "Adds or removes Vertica database roles and assigns roles to them.",
    "deprecated": null,
    "options": {
        "assigned_roles": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of roles to assign to the role."
            ],
            "aliases": [
                "assigned_role"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the role to add or remove."
            ]
        },
        "login_user": {
            "default": "dbadmin",
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "Name of the Vertica database."
            ]
        },
        "cluster": {
            "default": "localhost",
            "required": false,
            "description": [
                "Name of the Vertica cluster."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to create C(present), drop C(absent) or lock C(locked) a role."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        },
        "port": {
            "default": 5433,
            "required": false,
            "description": [
                "Vertica cluster port to connect to."
            ]
        }
    },
    "module": "vertica_role"
}, {
    "short_description": "Adds or removes Vertica database schema and roles.",
    "deprecated": null,
    "options": {
        "create_roles": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of roles to create and grant usage and create access to the schema."
            ],
            "aliases": [
                "create_role"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the schema to add or remove."
            ]
        },
        "login_user": {
            "default": "dbadmin",
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "Name of the Vertica database."
            ]
        },
        "usage_roles": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of roles to create and grant usage access to the schema."
            ],
            "aliases": [
                "usage_role"
            ]
        },
        "cluster": {
            "default": "localhost",
            "required": false,
            "description": [
                "Name of the Vertica cluster."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to create C(present), or drop C(absent) a schema."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the user to set as owner of the schema."
            ]
        },
        "port": {
            "default": 5433,
            "required": false,
            "description": [
                "Vertica cluster port to connect to."
            ]
        }
    },
    "module": "vertica_schema"
}, {
    "short_description": "Adds or removes Vertica database users and assigns roles.",
    "deprecated": null,
    "options": {
        "profile": {
            "default": null,
            "required": false,
            "description": [
                "Sets the user's profile."
            ]
        },
        "resource_pool": {
            "default": null,
            "required": false,
            "description": [
                "Sets the user's resource pool."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the user to add or remove."
            ]
        },
        "roles": {
            "default": null,
            "required": false,
            "description": [
                "Comma separated list of roles to assign to the user."
            ],
            "aliases": [
                "role"
            ]
        },
        "login_user": {
            "default": "dbadmin",
            "required": false,
            "description": [
                "The username used to authenticate with."
            ]
        },
        "ldap": {
            "default": null,
            "required": false,
            "description": [
                "Set to true if users are authenticated via LDAP.",
                "The user will be created with password expired and set to I($ldap$)."
            ]
        },
        "db": {
            "default": null,
            "required": false,
            "description": [
                "Name of the Vertica database."
            ]
        },
        "cluster": {
            "default": "localhost",
            "required": false,
            "description": [
                "Name of the Vertica cluster."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to create C(present), drop C(absent) or lock C(locked) a user."
            ],
            "choices": [
                "present",
                "absent",
                "locked"
            ]
        },
        "login_password": {
            "default": null,
            "required": false,
            "description": [
                "The password used to authenticate with."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "The user's password encrypted by the MD5 algorithm.",
                "The password must be generated with the format C(\"md5\" + md5[password + username]), resulting in a total of 35 characters. An easy way to do this is by querying the Vertica database with select 'md5'||md5('<user_password><user_name>')."
            ]
        },
        "expired": {
            "default": null,
            "required": false,
            "description": [
                "Sets the user's password expiration."
            ]
        },
        "port": {
            "default": 5433,
            "required": false,
            "description": [
                "Vertica cluster port to connect to."
            ]
        }
    },
    "module": "vertica_user"
}, {
    "short_description": "Manages virtual machines supported by libvirt",
    "deprecated": null,
    "options": {
        "xml": {
            "default": null,
            "required": false,
            "description": [
                "XML document used with the define command"
            ]
        },
        "state": {
            "default": "no",
            "required": false,
            "description": [
                "Note that there may be some lag for state requests like C(shutdown) since these refer only to VM states. After starting a guest, it may not be immediately accessible."
            ],
            "choices": [
                "running",
                "shutdown",
                "destroyed",
                "paused"
            ]
        },
        "command": {
            "required": false,
            "description": [
                "in addition to state management, various non-idempotent commands are available. See examples"
            ],
            "choices": [
                "create",
                "status",
                "start",
                "stop",
                "pause",
                "unpause",
                "shutdown",
                "undefine",
                "destroy",
                "get_xml",
                "freemem",
                "list_vms",
                "info",
                "nodeinfo",
                "virttype",
                "define"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "name of the guest VM being managed. Note that VM must be previously defined with xml."
            ],
            "aliases": []
        },
        "autostart": {
            "default": null,
            "description": [
                "start VM at host startup"
            ],
            "version_added": "2.3",
            "choices": [
                true,
                false
            ]
        },
        "uri": {
            "default": "qemu:///system",
            "required": false,
            "description": [
                "libvirt connection uri"
            ]
        }
    },
    "module": "virt"
}, {
    "short_description": "Manage libvirt network configuration",
    "deprecated": null,
    "options": {
        "xml": {
            "required": false,
            "description": [
                "XML document used with the define command."
            ]
        },
        "state": {
            "required": false,
            "description": [
                "specify which state you want a network to be in. If 'active', network will be started. If 'present', ensure that network is present but do not change its state; if it's missing, you need to specify xml argument. If 'inactive', network will be stopped. If 'undefined' or 'absent', network will be removed from I(libvirt) configuration."
            ],
            "choices": [
                "active",
                "inactive",
                "present",
                "absent"
            ]
        },
        "command": {
            "required": false,
            "description": [
                "in addition to state management, various non-idempotent commands are available. See examples. Modify was added in version 2.1"
            ],
            "choices": [
                "define",
                "create",
                "start",
                "stop",
                "destroy",
                "undefine",
                "get_xml",
                "list_nets",
                "facts",
                "info",
                "status",
                "modify"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "name of the network being managed. Note that network must be previously defined with xml."
            ],
            "aliases": [
                "network"
            ]
        },
        "autostart": {
            "required": false,
            "description": [
                "Specify if a given storage pool should be started automatically on system boot."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "uri": {
            "default": "qemu:///system",
            "required": false,
            "description": [
                "libvirt connection uri."
            ]
        }
    },
    "module": "virt_net"
}, {
    "short_description": "Manage libvirt storage pools",
    "deprecated": null,
    "options": {
        "xml": {
            "required": false,
            "description": [
                "XML document used with the define command."
            ]
        },
        "state": {
            "required": false,
            "description": [
                "specify which state you want a storage pool to be in. If 'active', pool will be started. If 'present', ensure that pool is present but do not change its state; if it's missing, you need to specify xml argument. If 'inactive', pool will be stopped. If 'undefined' or 'absent', pool will be removed from I(libvirt) configuration. If 'deleted', pool contents will be deleted and then pool undefined."
            ],
            "choices": [
                "active",
                "inactive",
                "present",
                "absent",
                "undefined",
                "deleted"
            ]
        },
        "command": {
            "required": false,
            "description": [
                "in addition to state management, various non-idempotent commands are available. See examples."
            ],
            "choices": [
                "define",
                "build",
                "create",
                "start",
                "stop",
                "destroy",
                "delete",
                "undefine",
                "get_xml",
                "list_pools",
                "facts",
                "info",
                "status"
            ]
        },
        "name": {
            "required": false,
            "description": [
                "name of the storage pool being managed. Note that pool must be previously defined with xml."
            ],
            "aliases": [
                "pool"
            ]
        },
        "autostart": {
            "required": false,
            "description": [
                "Specify if a given storage pool should be started automatically on system boot."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "uri": {
            "default": "qemu:///system",
            "required": false,
            "description": [
                "I(libvirt) connection uri."
            ]
        },
        "mode": {
            "required": false,
            "description": [
                "Pass additional parameters to 'build' or 'delete' commands."
            ],
            "choices": [
                "new",
                "repair",
                "resize",
                "no_overwrite",
                "overwrite",
                "normal",
                "zeroed"
            ]
        }
    },
    "module": "virt_pool"
}, {
    "short_description": "Manage SmartOS virtual machines and zones.",
    "deprecated": null,
    "options": {
        "customer_metadata": {
            "required": false,
            "description": [
                "Metadata to be set and associated with this VM, this contain customer modifiable keys."
            ]
        },
        "disk_driver": {
            "required": false,
            "description": [
                "Default value for a virtual disk model for KVM guests."
            ]
        },
        "force": {
            "required": false,
            "description": [
                "Force a particular action (i.e. stop or delete a VM)."
            ]
        },
        "zfs_root_compression": {
            "required": false,
            "description": [
                "Specifies compression algorithm used for this VMs root dataset. This option only has effect on the zoneroot dataset."
            ]
        },
        "virtio_txtimer": {
            "required": false,
            "description": [
                "Timeout (in nanoseconds) for the TX timer of virtio NICs."
            ]
        },
        "spice_password": {
            "required": false,
            "description": [
                "Password required to connect to SPICE. By default no password is set. Please note this can be read from the Global Zone."
            ]
        },
        "zfs_io_priority": {
            "required": false,
            "description": [
                "IO throttle priority value relative to other VMs."
            ]
        },
        "ram": {
            "required": false,
            "description": [
                "Amount of virtual RAM for a KVM guest (in MiBs)."
            ]
        },
        "dns_domain": {
            "required": false,
            "description": [
                "Domain value for C(/etc/hosts)."
            ]
        },
        "max_physical_memory": {
            "required": false,
            "description": [
                "Maximum amount of memory (in MiBs) on the host that the VM is allowed to use."
            ]
        },
        "nic_driver": {
            "required": false,
            "description": [
                "Default value for a virtual NIC model for KVM guests."
            ]
        },
        "zfs_data_compression": {
            "required": false,
            "description": [
                "Specifies compression algorithm used for this VMs data dataset. This option only has effect on delegated datasets."
            ]
        },
        "image_uuid": {
            "required": false,
            "description": [
                "Image UUID."
            ]
        },
        "fs_allowed": {
            "required": false,
            "description": [
                "Comma separated list of filesystem types this zone is allowed to mount."
            ]
        },
        "indestructible_delegated": {
            "required": false,
            "description": [
                "Adds an C(@indestructible) snapshot to delegated datasets."
            ]
        },
        "qemu_opts": {
            "required": false,
            "description": [
                "Additional qemu arguments for KVM guests. This overwrites the default arguments provided by vmadm(1M) and should only be used for debugging."
            ]
        },
        "delegate_dataset": {
            "required": false,
            "description": [
                "Whether to delegate a ZFS dataset to an OS VM."
            ]
        },
        "firewall_enabled": {
            "required": false,
            "description": [
                "Enables the firewall, allowing fwadm(1M) rules to be applied."
            ]
        },
        "mdata_exec_timeout": {
            "required": false,
            "description": [
                "Timeout in seconds (or 0 to disable) for the C(svc:/smartdc/mdata:execute) service that runs user-scripts in the zone."
            ]
        },
        "archive_on_delete": {
            "required": false,
            "description": [
                "When enabled, the zone dataset will be mounted on C(/zones/archive) upon removal."
            ]
        },
        "nics": {
            "required": false,
            "description": [
                "A list of nics to add, valid properties are documented in vmadm(1M)."
            ]
        },
        "hostname": {
            "required": false,
            "description": [
                "Zone/VM hostname."
            ]
        },
        "boot": {
            "required": false,
            "description": [
                "Set the boot order for KVM VMs."
            ]
        },
        "vga": {
            "required": false,
            "description": [
                "Specify VGA emulation used by KVM VMs."
            ]
        },
        "zfs_snapshot_limit": {
            "required": false,
            "description": [
                "Number of snapshots the VM can have."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "States for the VM to be in. Please note that C(present), C(stopped) and C(restarted) operate on a VM that is currently provisioned. C(present) means that the VM will be created if it was absent, and that it will be in a running state. C(absent) will shutdown the zone before removing it. C(stopped) means the zone will be created if it doesn't exist already, before shutting it down."
            ],
            "choices": [
                "present",
                "absent",
                "stopped",
                "restarted"
            ]
        },
        "limit_priv": {
            "required": false,
            "description": [
                "Set (comma separated) list of privileges the zone is allowed to use."
            ]
        },
        "cpu_cap": {
            "required": false,
            "description": [
                "Sets a limit on the amount of CPU time that can be used by a VM. Use C(0) for no cap."
            ]
        },
        "maintain_resolvers": {
            "required": false,
            "description": [
                "Resolvers in C(/etc/resolv.conf) will be updated when updating the I(resolvers) property."
            ]
        },
        "indestructible_zoneroot": {
            "required": false,
            "description": [
                "Adds an C(@indestructible) snapshot to zoneroot."
            ]
        },
        "vnc_password": {
            "required": false,
            "description": [
                "Password required to connect to VNC. By default no password is set. Please note this can be read from the Global Zone."
            ]
        },
        "vcpus": {
            "required": false,
            "description": [
                "Number of virtual CPUs for a KVM guest."
            ]
        },
        "disks": {
            "required": false,
            "description": [
                "A list of disks to add, valid properties are documented in vmadm(1M)."
            ]
        },
        "max_swap": {
            "required": false,
            "description": [
                "Maximum amount of virtual memory (in MiBs) the VM is allowed to use."
            ]
        },
        "zfs_root_recsize": {
            "required": false,
            "description": [
                "Suggested block size (power of 2) for files in the zoneroot dataset's filesystem."
            ]
        },
        "brand": {
            "default": "joyent",
            "required": true,
            "description": [
                "Type of virtual machine."
            ],
            "choices": [
                "joyent",
                "joyent-minimal",
                "kvm",
                "lx"
            ]
        },
        "zfs_filesystem_limit": {
            "required": false,
            "description": [
                "Maximum number of filesystems the VM can have."
            ]
        },
        "quota": {
            "required": false,
            "description": [
                "Quota on zone filesystems (in MiBs)."
            ]
        },
        "filesystems": {
            "required": false,
            "description": [
                "Mount additional filesystems into an OS VM."
            ]
        },
        "autoboot": {
            "required": false,
            "description": [
                "Whether or not a VM is booted when the system is rebooted."
            ]
        },
        "tmpfs": {
            "required": false,
            "description": [
                "Amount of memory (in MiBs) that will be available in the VM for the C(/tmp) filesystem."
            ]
        },
        "qemu_extra_opts": {
            "required": false,
            "description": [
                "Additional qemu cmdline arguments for KVM guests."
            ]
        },
        "resolvers": {
            "required": false,
            "description": [
                "List of resolvers to be put into C(/etc/resolv.conf)."
            ]
        },
        "max_lwps": {
            "required": false,
            "description": [
                "Maximum number of lightweight processes this VM is allowed to have running."
            ]
        },
        "nowait": {
            "required": false,
            "description": [
                "Consider the provisioning complete when the VM first starts, rather than when the VM has rebooted."
            ]
        },
        "name": {
            "required": false,
            "description": [
                "Name of the VM. vmadm(1M) uses this as an optional name."
            ],
            "aliases": [
                "alias"
            ]
        },
        "kernel_version": {
            "required": false,
            "description": [
                "Kernel version to emulate for LX VMs."
            ]
        },
        "max_locked_memory": {
            "required": false,
            "description": [
                "Total amount of memory (in MiBs) on the host that can be locked by this VM."
            ]
        },
        "vnc_port": {
            "required": false,
            "description": [
                "TCP port to listen of the VNC server. Or set C(0) for random, or C(-1) to disable."
            ]
        },
        "uuid": {
            "required": false,
            "description": [
                "UUID of the VM. Can either be a full UUID or C(*) for all VMs."
            ]
        },
        "internal_metadata_namespace": {
            "required": false,
            "description": [
                "List of namespaces to be set as I(internal_metadata-only); these namespaces will come from I(internal_metadata) rather than I(customer_metadata)."
            ]
        },
        "virtio_txburst": {
            "required": false,
            "description": [
                "Number of packets that can be sent in a single flush of the tx queue of virtio NICs."
            ]
        },
        "spice_opts": {
            "required": false,
            "description": [
                "Addition options for SPICE-enabled KVM VMs."
            ]
        },
        "zfs_data_recsize": {
            "required": false,
            "description": [
                "Suggested block size (power of 2) for files in the delegated dataset's filesystem."
            ]
        },
        "internal_metadata": {
            "required": false,
            "description": [
                "Metadata to be set and associated with this VM, this contains operator generated keys."
            ]
        },
        "cpu_type": {
            "default": "qemu64",
            "required": false,
            "description": [
                "Control the type of virtual CPU exposed to KVM VMs."
            ],
            "choices": [
                "qemu64",
                "host"
            ]
        },
        "routes": {
            "required": false,
            "description": [
                "Dictionary that maps destinations to gateways, these will be set as static routes in the VM."
            ]
        },
        "zpool": {
            "required": false,
            "description": [
                "ZFS pool the VM's zone dataset will be created in."
            ]
        },
        "cpu_shares": {
            "required": false,
            "description": [
                "Sets a limit on the number of fair share scheduler (FSS) CPU shares for a VM. This limit is relative to all other VMs on the system."
            ]
        }
    },
    "module": "vmadm"
}, {
    "short_description": "Create VMware vSphere Cluster",
    "deprecated": null,
    "options": {
        "enable_ha": {
            "default": false,
            "required": false,
            "description": [
                "If set to True will enable HA when the cluster is created."
            ]
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "enable_vsan": {
            "default": false,
            "required": false,
            "description": [
                "If set to True will enable vSAN when the cluster is created."
            ]
        },
        "datacenter_name": {
            "required": true,
            "description": [
                "The name of the datacenter the cluster will be created in."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "cluster_name": {
            "required": true,
            "description": [
                "The name of the cluster that will be created"
            ]
        },
        "enable_drs": {
            "default": false,
            "required": false,
            "description": [
                "If set to True will enable DRS when the cluster is created."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "vmware_cluster"
}, {
    "short_description": "Manage VMware vSphere Datacenters",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "datacenter_name": {
            "required": true,
            "description": [
                "The name of the datacenter the cluster will be created in."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "If the datacenter should be present or absent"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "vmware_datacenter"
}, {
    "short_description": "Manage VMware ESXi DNS Configuration",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "dns_servers": {
            "required": true,
            "description": [
                "The DNS servers that the host should be configured to use."
            ]
        },
        "domainname": {
            "required": true,
            "description": [
                "The domain the ESXi host should be apart of."
            ]
        },
        "change_hostname_to": {
            "required": true,
            "description": [
                "The hostname that an ESXi host should be changed to."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        }
    },
    "module": "vmware_dns_config"
}, {
    "short_description": "Add or remove a host from distributed virtual switch",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "If the host should be present or absent attached to the vSwitch"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "esxi_hostname": {
            "required": true,
            "description": [
                "The ESXi hostname"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "vmnics": {
            "required": true,
            "description": [
                "The ESXi hosts vmnics to use with the Distributed vSwitch"
            ]
        },
        "switch_name": {
            "required": true,
            "description": [
                "The name of the Distributed vSwitch"
            ]
        }
    },
    "module": "vmware_dvs_host"
}, {
    "short_description": "Create or remove a Distributed vSwitch portgroup",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "portgroup_name": {
            "required": true,
            "description": [
                "The name of the portgroup that is to be created or deleted"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "num_ports": {
            "required": true,
            "description": [
                "The number of ports the portgroup should contain"
            ]
        },
        "portgroup_type": {
            "required": true,
            "description": [
                "See VMware KB 1022312 regarding portgroup types"
            ],
            "choices": [
                "earlyBinding",
                "lateBinding",
                "ephemeral"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "switch_name": {
            "required": true,
            "description": [
                "The name of the distributed vSwitch the port group should be created on."
            ]
        },
        "vlan_id": {
            "required": true,
            "description": [
                "The VLAN ID that should be configured with the portgroup"
            ]
        }
    },
    "module": "vmware_dvs_portgroup"
}, {
    "short_description": "Create or remove a distributed vSwitch",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "datacenter_name": {
            "required": true,
            "description": [
                "The name of the datacenter that will contain the dvSwitch"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "discovery_proto": {
            "required": true,
            "description": [
                "Link discovery protocol between Cisco and Link Layer discovery"
            ],
            "choices": [
                "cdp",
                "lldp"
            ]
        },
        "mtu": {
            "required": true,
            "description": [
                "The switch maximum transmission unit"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or remove dvSwitch"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "discovery_operation": {
            "description": [
                "Select the discovery operation"
            ],
            "choices": [
                "both",
                "none",
                "advertise",
                "listen"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "switch_name": {
            "required": true,
            "description": [
                "The name of the switch to create or remove"
            ]
        },
        "uplink_quantity": {
            "required": true,
            "description": [
                "Quantity of uplink per ESXi host added to the switch"
            ]
        }
    },
    "module": "vmware_dvswitch"
}, {
    "short_description": "Manages virtual machines in vcenter",
    "deprecated": null,
    "options": {
        "resource_pool": {
            "default": "None",
            "description": [
                "Affect machine to the given resource pool",
                "Resource pool should be child of the selected host parent"
            ],
            "version_added": "2.3"
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "force": {
            "description": [
                "Ignore warnings and complete the actions"
            ]
        },
        "template": {
            "description": [
                "Template used to create VM.",
                "If this value is not set, VM is created without using a template.",
                "If the VM exists already this setting will be ignored."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the VM to work with"
            ]
        },
        "guest_id": {
            "description": [
                "Set the guest ID (Debian, RHEL, Windows...)",
                "This field is required when creating a VM",
                "Valid values are referenced here: https://www.vmware.com/support/developer/converter-sdk/conv55_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html"
            ],
            "version_added": "2.3"
        },
        "cluster": {
            "description": [
                "The cluster name where the VM will run."
            ],
            "version_added": "2.3"
        },
        "hardware": {
            "description": [
                "Manage some VM hardware attributes.",
                "Valid attributes are: memory_mb, num_cpus and scsi",
                "scsi: Valid values are buslogic, lsilogic, lsilogicsas and paravirtual (default)"
            ]
        },
        "name_match": {
            "default": "first",
            "description": [
                "If multiple VMs matching the name, use the first or last found"
            ],
            "choices": [
                "first",
                "last"
            ]
        },
        "customization": {
            "description": [
                "Parameters to customize template",
                "Common parameters (Linux/Windows):",
                "  C(dns_servers) (list): List of DNS servers to configure",
                "  C(dns_suffix) (list): List of domain suffixes, aka DNS search path (default: C(domain) parameter)",
                "  C(domain) (string): DNS domain name to use",
                "  C(hostname) (string): Computer hostname (default: C(name) parameter)",
                "Parameters related to windows customization:",
                "  C(autologon) (bool): Auto logon after VM customization (default: False)",
                "  C(autologoncount) (int): Number of autologon after reboot (default: 1)",
                "  C(domainadmin) (string): User used to join in AD domain (mandatory with joindomain)",
                "  C(domainadminpassword) (string): Password used to join in AD domain (mandatory with joindomain)",
                "  C(fullname) (string): Server owner name (default: Administrator)",
                "  C(joindomain) (string): AD domain to join (Not compatible with C(joinworkgroup))",
                "  C(joinworkgroup) (string): Workgroup to join (Not compatible with C(joindomain), default: WORKGROUP)",
                "  C(orgname) (string): Organisation name (default: ACME)",
                "  C(password) (string): Local administrator password (mandatory)",
                "  C(productid) (string): Product ID",
                "  C(runonce) (list): List of commands to run at first user logon",
                "  C(timezone) (int): Timezone (default: 85) See U(https://msdn.microsoft.com/en-us/library/ms912391(v=winembedded.11).aspx)"
            ],
            "version_added": "2.3"
        },
        "disk": {
            "description": [
                "A list of disks to add",
                "Valid attributes are: size_[tb,gb,mb,kb], type, datastore and autoselect_datastore",
                "type: Valid value is thin (default: None)",
                "datastore: Datastore to use for the disk. If autoselect_datastore is True, filter datastore selection.",
                "autoselect_datastore (bool): select the less used datastore."
            ]
        },
        "networks": {
            "description": [
                "Network to use should include C(name) or C(vlan) entry",
                "Add an optional C(ip) and C(netmask) for network configuration",
                "Add an optional C(gateway) entry to configure a gateway",
                "Add an optional C(mac) entry to customize mac address",
                "Add an optional C(dns_servers) or C(domain) entry per interface (Windows)",
                "Add an optional C(device_type) to configure the virtual NIC (pcnet32, vmxnet2, vmxnet3, e1000, e1000e)"
            ],
            "version_added": "2.3"
        },
        "wait_for_ip_address": {
            "default": false,
            "description": [
                "Wait until vCenter detects an IP address for the VM",
                "This requires vmware-tools (vmtoolsd) to properly work after creation"
            ]
        },
        "datacenter": {
            "default": "ha-datacenter",
            "description": [
                "Destination datacenter for the deploy operation"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "uuid": {
            "description": [
                "UUID of the instance to manage if known, this is VMware's unique identifier.",
                "This is required if name is not supplied."
            ]
        },
        "customvalues": {
            "description": [
                "Define a list of customvalues to set on VM.",
                "A customvalue object takes 2 fields 'key' and 'value'."
            ],
            "version_added": "2.3"
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "state": {
            "required": true,
            "description": [
                "What state should the virtual machine be in?",
                "If C(state) is set to C(present) and VM exists, ensure the VM configuration conforms to task arguments"
            ],
            "choices": [
                "present",
                "absent",
                "poweredon",
                "poweredoff",
                "restarted",
                "suspended",
                "shutdownguest",
                "rebootguest"
            ]
        },
        "annotation": {
            "description": [
                "A note or annotation to include in the VM"
            ],
            "version_added": "2.3"
        },
        "is_template": {
            "default": false,
            "description": [
                "Flag the instance as a template"
            ],
            "version_added": "2.3"
        },
        "esxi_hostname": {
            "description": [
                "The esxi hostname where the VM will run."
            ]
        },
        "folder": {
            "description": [
                "Destination folder, absolute path to find an existing guest or create the new guest"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "vmware_guest"
}, {
    "short_description": "Gather facts about a single Virtual Machine",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "datacenter": {
            "required": true,
            "description": [
                "Destination datacenter for the deploy operation"
            ]
        },
        "uuid": {
            "description": [
                "UUID of the instance to manage if known, this is VMware's unique identifier.",
                "This is required if name is not supplied."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "name_match": {
            "default": "first",
            "description": [
                "If multiple Virtual Machines matching the name, use the first or last found"
            ],
            "choices": [
                "first",
                "last"
            ]
        },
        "folder": {
            "default": "/vm",
            "description": [
                "Destination folder, absolute or relative path to find an existing guest.",
                "This is required if name is supplied.",
                "The folder should include the datacenter. ESX's datacenter is ha-datacenter",
                "Examples:",
                "   folder: /ha-datacenter/vm",
                "   folder: ha-datacenter/vm",
                "   folder: /datacenter1/vm",
                "   folder: datacenter1/vm",
                "   folder: /datacenter1/vm/folder1",
                "   folder: datacenter1/vm/folder1",
                "   folder: /folder1/datacenter1/vm",
                "   folder: folder1/datacenter1/vm",
                "   folder: /folder1/datacenter1/vm/folder2",
                "   folder: vm/folder2",
                "   folder: folder2"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the Virtual Machine to work with"
            ]
        }
    },
    "module": "vmware_guest_facts"
}, {
    "short_description": "Manages virtual machines snapshots in vcenter",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "datacenter": {
            "required": true,
            "description": [
                "Destination datacenter for the deploy operation"
            ]
        },
        "uuid": {
            "description": [
                "UUID of the instance to manage if known, this is VMware's unique identifier.",
                "This is required if name is not supplied."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the VM to work with"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Manage snapshots attached to a specific virtual machine."
            ],
            "choices": [
                "present",
                "absent",
                "revert",
                "remove_all"
            ]
        },
        "snapshot_name": {
            "description": [
                "Sets the snapshot name to manage.",
                "This param is required only if state is not C(remove_all)"
            ]
        },
        "name_match": {
            "default": "first",
            "description": [
                "If multiple VMs matching the name, use the first or last found"
            ],
            "choices": [
                "first",
                "last"
            ]
        },
        "folder": {
            "description": [
                "Define instance folder location."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "description": {
            "description": [
                "Define an arbitrary description to attach to snapshot."
            ]
        }
    },
    "module": "vmware_guest_snapshot"
}, {
    "short_description": "Add/remove ESXi host to/from vCenter",
    "deprecated": null,
    "options": {
        "cluster_name": {
            "required": true,
            "description": [
                "Name of the cluster to add the host"
            ]
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Add or remove the host"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "datacenter_name": {
            "required": true,
            "description": [
                "Name of the datacenter to add the host"
            ]
        },
        "esxi_hostname": {
            "required": true,
            "description": [
                "ESXi hostname to manage"
            ]
        },
        "esxi_password": {
            "required": true,
            "description": [
                "ESXi password"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "esxi_username": {
            "required": true,
            "description": [
                "ESXi username"
            ]
        }
    },
    "module": "vmware_host"
}, {
    "short_description": "Manage local users on an ESXi host",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "local_user_description": {
            "required": false,
            "description": [
                "Description for the user"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "local_user_password": {
            "required": false,
            "description": [
                "The password to be set"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the user. If the user already exists when C(state=present), the user info is updated"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "local_user_name": {
            "required": true,
            "description": [
                "The local user name to be changed"
            ]
        }
    },
    "module": "vmware_local_user_manager"
}, {
    "short_description": "Place a host into maintenance mode",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "timeout": {
            "default": 0,
            "required": false,
            "description": [
                "Specify a timeout for the operation"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "evacuate": {
            "default": false,
            "required": false,
            "description": [
                "If True, evacuate all powered off VMs"
            ],
            "choices": [
                true,
                false
            ]
        },
        "vsan_mode": {
            "required": false,
            "description": [
                "Specify which VSAN compliant mode to enter"
            ],
            "choices": [
                "ensureObjectAccessibility",
                "evacuateAllData",
                "noAction"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Enter or exit maintenance mode"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "esxi_hostname": {
            "required": true,
            "description": [
                "Name of the host as defined in vCenter"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "vmware_maintenancemode"
}, {
    "short_description": "Migrate a VMK interface from VSS to VDS",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "current_switch_name": {
            "required": true,
            "description": [
                "Switch VMK interface is currently on"
            ]
        },
        "migrate_portgroup_name": {
            "required": true,
            "description": [
                "Portgroup name to migrate VMK interface to"
            ]
        },
        "esxi_hostname": {
            "required": true,
            "description": [
                "ESXi hostname to be managed"
            ]
        },
        "device": {
            "required": true,
            "description": [
                "VMK interface name"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "migrate_switch_name": {
            "required": true,
            "description": [
                "Switch name to migrate VMK interface to"
            ]
        },
        "current_portgroup_name": {
            "required": true,
            "description": [
                "Portgroup name VMK interface is currently on"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        }
    },
    "module": "vmware_migrate_vmk"
}, {
    "short_description": "Create a VMware portgroup",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "portgroup_name": {
            "required": true,
            "description": [
                "Portgroup name to add"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "network_policy": {
            "required": false,
            "description": [
                "Network policy specifies layer 2 security settings for a portgroup such as promiscuous mode, where guest adapter listens to all the packets, MAC address changes and forged transmits. Settings are promiscuous_mode, forged_transmits, mac_changes"
            ],
            "version_added": "2.2"
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "switch_name": {
            "required": true,
            "description": [
                "vSwitch to modify"
            ]
        },
        "vlan_id": {
            "required": true,
            "description": [
                "VLAN ID to assign to portgroup"
            ]
        }
    },
    "module": "vmware_portgroup"
}, {
    "short_description": "Return canonical (NAA) from an ESXi host",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "target_id": {
            "required": true,
            "description": [
                "The target id based on order of scsi device"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        }
    },
    "module": "vmware_target_canonical_facts"
}, {
    "short_description": "Return basic facts pertaining to a vSphere virtual machine guest",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        }
    },
    "module": "vmware_vm_facts"
}, {
    "short_description": "Execute a process in VM",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "datacenter": {
            "default": "None",
            "required": false,
            "description": [
                "The datacenter hosting the VM",
                "Will help speed up search"
            ]
        },
        "vm_password": {
            "default": "None",
            "required": false,
            "description": [
                "The password used to login to the VM."
            ]
        },
        "vm_shell": {
            "required": true,
            "description": [
                "The absolute path to the program to start. On Linux this is executed via bash."
            ]
        },
        "vm_shell_cwd": {
            "default": "None",
            "required": false,
            "description": [
                "The current working directory of the application from which it will be run"
            ]
        },
        "vm_shell_args": {
            "default": "None",
            "required": false,
            "description": [
                "The argument to the program."
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "vm_username": {
            "default": "None",
            "required": false,
            "description": [
                "The user to connect to the VM."
            ]
        },
        "vm_shell_env": {
            "default": "None",
            "required": false,
            "description": [
                "Comma separated list of envirnoment variable, specified in the guest OS notation"
            ]
        },
        "cluster": {
            "default": "None",
            "required": false,
            "description": [
                "The cluster hosting the VM",
                "Will help speed up search"
            ]
        },
        "vm_id_type": {
            "default": "vm_name",
            "required": false,
            "description": [
                "The identification tag for the VM"
            ],
            "choices": [
                "uuid",
                "dns_name",
                "inventory_path",
                "vm_name"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "vm_id": {
            "required": true,
            "description": [
                "The identification for the VM"
            ]
        }
    },
    "module": "vmware_vm_shell"
}, {
    "short_description": "Migrates a virtual machine from a standard vswitch to distributed",
    "deprecated": null,
    "options": {
        "vm_name": {
            "required": true,
            "description": [
                "Name of the virtual machine to migrate to a dvSwitch"
            ]
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "dvportgroup_name": {
            "required": true,
            "description": [
                "Name of the portgroup to migrate to the virtual machine to"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        }
    },
    "module": "vmware_vm_vss_dvs_migrate"
}, {
    "short_description": "Create a VMware VMkernel Interface",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "portgroup_name": {
            "required": true,
            "description": [
                "The name of the portgroup for the VMK interface"
            ]
        },
        "vland_id": {
            "required": true,
            "description": [
                "The VLAN ID for the VMK interface"
            ]
        },
        "enable_vmotion": {
            "required": false,
            "description": [
                "Enable the VMK interface for vMotion traffic"
            ]
        },
        "subnet_mask": {
            "required": true,
            "description": [
                "The Subnet Mask for the VMK interface"
            ]
        },
        "vswitch_name": {
            "required": true,
            "description": [
                "The name of the vswitch where to add the VMK interface"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "mtu": {
            "required": false,
            "description": [
                "The MTU for the VMK interface"
            ]
        },
        "enable_mgmt": {
            "required": false,
            "description": [
                "Enable the VMK interface for Management traffic"
            ]
        },
        "enable_vsan": {
            "required": false,
            "description": [
                "Enable the VMK interface for VSAN traffic"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "The IP Address for the VMK interface"
            ]
        },
        "enable_ft": {
            "required": false,
            "description": [
                "Enable the VMK interface for Fault Tolerance traffic"
            ]
        }
    },
    "module": "vmware_vmkernel"
}, {
    "short_description": "Configure the VMkernel IP Address",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "subnet_mask": {
            "required": true,
            "description": [
                "Subnet Mask to assign to VMkernel interface"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "vmk_name": {
            "required": true,
            "description": [
                "VMkernel interface name"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "ip_address": {
            "required": true,
            "description": [
                "IP address to assign to VMkernel interface"
            ]
        }
    },
    "module": "vmware_vmkernel_ip_config"
}, {
    "short_description": "Move a virtual machine using vMotion",
    "deprecated": null,
    "options": {
        "vm_name": {
            "required": true,
            "description": [
                "Name of the VM to perform a vMotion on"
            ],
            "aliases": [
                "vm"
            ]
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "destination_host": {
            "required": true,
            "description": [
                "Name of the end host the VM should be running on"
            ],
            "aliases": [
                "destination"
            ]
        }
    },
    "module": "vmware_vmotion"
}, {
    "short_description": "Configure VSAN clustering on an ESXi host",
    "deprecated": null,
    "options": {
        "cluster_uuid": {
            "required": false,
            "description": [
                "Desired cluster UUID"
            ]
        },
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        }
    },
    "module": "vmware_vsan_cluster"
}, {
    "short_description": "Add a VMware Standard Switch to an ESXi host",
    "deprecated": null,
    "options": {
        "username": {
            "required": true,
            "description": [
                "The username of the vSphere vCenter."
            ],
            "aliases": [
                "user",
                "admin"
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password of the vSphere vCenter."
            ],
            "aliases": [
                "pass",
                "pwd"
            ]
        },
        "hostname": {
            "required": true,
            "description": [
                "The hostname or IP address of the vSphere vCenter."
            ]
        },
        "mtu": {
            "required": false,
            "description": [
                "MTU to configure on vswitch"
            ]
        },
        "nic_name": {
            "required": true,
            "description": [
                "vmnic name to attach to vswitch"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Add or remove the switch"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "number_of_ports": {
            "default": 128,
            "required": false,
            "description": [
                "Number of port to configure on vswitch"
            ]
        },
        "validate_certs": {
            "default": "True",
            "required": false,
            "description": [
                "Allows connection when SSL certificates are not valid. Set to false when certificates are not trusted."
            ],
            "choices": [
                "True",
                "False"
            ]
        },
        "switch_name": {
            "required": true,
            "description": [
                "vSwitch name to add"
            ]
        }
    },
    "module": "vmware_vswitch"
}, {
    "short_description": "Copy a file to a vCenter datastore",
    "deprecated": null,
    "options": {
        "src": {
            "required": true,
            "description": [
                "The file to push to vCenter"
            ]
        },
        "datacenter": {
            "required": true,
            "description": [
                "The datacenter on the vCenter server that holds the datastore."
            ]
        },
        "host": {
            "required": true,
            "description": [
                "The vCenter server on which the datastore is available."
            ]
        },
        "path": {
            "required": true,
            "description": [
                "The file to push to the datastore on the vCenter server."
            ]
        },
        "login": {
            "required": true,
            "description": [
                "The login name to authenticate on the vCenter server."
            ]
        },
        "password": {
            "required": true,
            "description": [
                "The password to authenticate on the vCenter server."
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "If C(no), SSL certificates will not be validated. This should only be set to C(no) when no other option exists."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "datastore": {
            "required": true,
            "description": [
                "The datastore on the vCenter server to push files to."
            ]
        }
    },
    "module": "vsphere_copy"
}, {
    "short_description": "Create/delete/manage a guest VM through VMware vSphere.",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": true,
            "description": [
                "Username to connect to vcenter as."
            ]
        },
        "resource_pool": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the resource_pool to create the VM in."
            ]
        },
        "force": {
            "default": "no",
            "description": [
                "Boolean. Allows you to run commands which may alter the running state of a guest. Also used to reconfigure and destroy."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "vm_disk": {
            "default": null,
            "required": false,
            "description": [
                "A key, value list of disks and their sizes and which datastore to keep it in."
            ]
        },
        "vm_hw_version": {
            "default": null,
            "required": false,
            "description": [
                "Desired hardware version identifier (for example, \"vmx-08\" for vms that needs to be managed with vSphere Client). Note that changing hardware version of existing vm is not supported."
            ],
            "version_added": "1.7"
        },
        "cluster": {
            "default": "None",
            "required": false,
            "description": [
                "The name of the cluster to create the VM in. By default this is derived from the host you tell the module to build the guest on."
            ]
        },
        "vmware_guest_facts": {
            "default": null,
            "required": false,
            "description": [
                "Gather facts from vCenter on a particular VM"
            ]
        },
        "vm_extra_config": {
            "default": null,
            "required": false,
            "description": [
                "A key, value pair of any extra values you want set or changed in the vmx file of the VM. Useful to set advanced options on the VM."
            ]
        },
        "vcenter_hostname": {
            "default": null,
            "required": true,
            "description": [
                "The hostname of the vcenter server the module will connect to, to create the guest."
            ],
            "aliases": []
        },
        "template_src": {
            "default": "None",
            "description": [
                "Name of the source template to deploy from"
            ],
            "version_added": "1.9"
        },
        "password": {
            "default": null,
            "required": true,
            "description": [
                "Password of the user to connect to vcenter as."
            ]
        },
        "power_on_after_clone": {
            "default": true,
            "required": false,
            "description": [
                "Specifies if the VM should be powered on after the clone."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "guest": {
            "required": true,
            "description": [
                "The virtual server name you wish to manage."
            ]
        },
        "vm_nic": {
            "default": null,
            "required": false,
            "description": [
                "A key, value list of nics, their types and what network to put them on."
            ]
        },
        "esxi": {
            "default": null,
            "required": false,
            "description": [
                "Dictionary which includes datacenter and hostname on which the VM should be created. For standalone ESXi hosts, ha-datacenter should be used as the datacenter name"
            ]
        },
        "vm_hardware": {
            "default": null,
            "required": false,
            "description": [
                "A key, value list of VM config settings. Must include ['memory_mb', 'num_cpus', 'osid', 'scsi']."
            ]
        },
        "validate_certs": {
            "default": true,
            "required": false,
            "description": [
                "Validate SSL certs.  Note, if running on python without SSLContext support (typically, python < 2.7.9) you will have to set this to C(no) as pysphere does not support validating certificates on older python. Prior to 2.1, this module would always validate on python >= 2.7.9 and never validate on python <= 2.7.8."
            ],
            "version_added": 2.1,
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Indicate desired state of the vm. 'reconfigured' only applies changes to 'vm_cdrom', 'memory_mb', and 'num_cpus' in vm_hardware parameter. The 'memory_mb' and 'num_cpus' changes are applied to powered-on vms when hot-plugging is enabled for the guest."
            ],
            "choices": [
                "present",
                "powered_off",
                "absent",
                "powered_on",
                "restarted",
                "reconfigured"
            ]
        },
        "from_template": {
            "default": false,
            "description": [
                "Specifies if the VM should be deployed from a template (mutually exclusive with 'state' parameter). No guest customization changes to hardware such as CPU, RAM, NICs or Disks can be applied when launching from template."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "snapshot_to_clone": {
            "default": "none",
            "required": false,
            "description": [
                "A string that when specified, will create a linked clone copy of the VM. Snapshot must already be taken in vCenter."
            ],
            "version_added": "2.0"
        }
    },
    "module": "vsphere_guest"
}, {
    "short_description": "Run one or more commands on VyOS devices",
    "deprecated": null,
    "options": {
        "retries": {
            "default": 10,
            "required": false,
            "description": [
                "Specifies the number of retries a command should be tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditionals."
            ]
        },
        "commands": {
            "required": true,
            "description": [
                "The ordered set of commands to execute on the remote device running VyOS.  The output from the command execution is returned to the playbook.  If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has been exceeded."
            ]
        },
        "interval": {
            "default": 1,
            "required": false,
            "description": [
                "Configures the interval in seconds to wait between I(retries) of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again."
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "wait_for": {
            "default": null,
            "required": false,
            "description": [
                "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward.  If the conditional is not true by the configured I(retries), the task fails. See examples."
            ],
            "aliases": [
                "waitfor"
            ]
        },
        "match": {
            "default": "all",
            "required": false,
            "description": [
                "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy. Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the wait_for must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied."
            ],
            "choices": [
                "any",
                "all"
            ]
        }
    },
    "module": "vyos_command"
}, {
    "short_description": "Manage VyOS configuration on remote device",
    "deprecated": null,
    "options": {
        "comment": {
            "default": "configured by vyos_config",
            "required": false,
            "description": [
                "Allows a commit description to be specified to be included when the configuration is committed.  If the configuration is not changed or committed, this argument is ignored."
            ]
        },
        "src": {
            "default": null,
            "required": false,
            "description": [
                "The C(src) argument specifies the path to the source config file to load.  The source config file can either be in bracket format or set format.  The source file can include Jinja2 template variables."
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "config": {
            "default": null,
            "required": false,
            "description": [
                "The C(config) argument specifies the base configuration to use to compare against the desired configuration.  If this value is not specified, the module will automatically retrieve the current active configuration from the remote device."
            ]
        },
        "lines": {
            "default": null,
            "required": false,
            "description": [
                "The ordered set of configuration lines to be managed and compared with the existing configuration on the remote device."
            ]
        },
        "save": {
            "default": false,
            "required": false,
            "description": [
                "The C(save) argument controls whether or not changes made to the active configuration are saved to disk.  This is independent of committing the config.  When set to True, the active configuration is saved."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "backup": {
            "default": false,
            "required": false,
            "description": [
                "The C(backup) argument will backup the current devices active configuration to the Ansible control host prior to making any changes.  The backup file will be located in the backup folder in the root of the playbook"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "match": {
            "default": "line",
            "required": false,
            "description": [
                "The C(match) argument controls the method used to match against the current active configuration.  By default, the desired config is matched against the active config and the deltas are loaded.  If the C(match) argument is set to C(none) the active configuration is ignored and the configuration is always loaded."
            ],
            "choices": [
                "line",
                "none"
            ]
        }
    },
    "module": "vyos_config"
}, {
    "short_description": "Collect facts from remote devices running VyOS",
    "deprecated": null,
    "options": {
        "gather_subset": {
            "default": "!config",
            "required": false,
            "description": [
                "When supplied, this argument will restrict the facts collected to a given subset.  Possible values for this argument include all, default, config, and neighbors.  Can specify a list of values to include a larger subset.  Values can also be used with an initial C(M(!)) to specify that a specific subset should not be collected."
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        }
    },
    "module": "vyos_facts"
}, {
    "short_description": "Run `set system` commands on VyOS devices",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "description": [
                "Whether to apply (C(present)) or remove (C(absent)) the settings."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name_server": {
            "default": null,
            "required": false,
            "description": [
                "A list of name servers to use with the device. Mutually exclusive with I(domain_search)"
            ]
        },
        "provider": {
            "default": null,
            "description": [
                "A dict object containing connection details."
            ],
            "suboptions": {
                "username": {
                    "description": [
                        "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead."
                    ]
                },
                "host": {
                    "required": true,
                    "description": [
                        "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport."
                    ]
                },
                "ssh_keyfile": {
                    "description": [
                        "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead."
                    ]
                },
                "timeout": {
                    "default": 10,
                    "description": [
                        "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error."
                    ]
                },
                "password": {
                    "default": null,
                    "description": [
                        "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead."
                    ]
                },
                "port": {
                    "default": 22,
                    "description": [
                        "Specifies the port to use when building the connection to the remote device."
                    ]
                }
            }
        },
        "domain_search": {
            "description": [
                "A list of domain names to search. Mutually exclusive with I(name_server)"
            ]
        },
        "hostname": {
            "description": [
                "Configure the device hostname parameter. This option takes an ASCII string value."
            ]
        },
        "domain_name": {
            "description": [
                "The new domain name to apply to the device."
            ]
        }
    },
    "module": "vyos_system"
}, {
    "short_description": "Waits for a condition before continuing.",
    "deprecated": null,
    "options": {
        "active_connection_states": {
            "default": [
                "ESTABLISHED",
                "SYN_SENT",
                "SYN_RECV",
                "FIN_WAIT1",
                "FIN_WAIT2",
                "TIME_WAIT"
            ],
            "description": [
                "The list of tcp connection states which are counted as active connections"
            ],
            "version_added": "2.3"
        },
        "host": {
            "default": "127.0.0.1",
            "required": false,
            "description": [
                "A resolvable hostname or IP address to wait for"
            ]
        },
        "connect_timeout": {
            "default": 5,
            "required": false,
            "description": [
                "maximum number of seconds to wait for a connection to happen before closing and retrying"
            ]
        },
        "delay": {
            "default": 0,
            "required": false,
            "description": [
                "number of seconds to wait before starting to poll"
            ]
        },
        "state": {
            "default": "started",
            "required": false,
            "description": [
                "either C(present), C(started), or C(stopped), C(absent), or C(drained)",
                "When checking a port C(started) will ensure the port is open, C(stopped) will check that it is closed, C(drained) will check for active connections",
                "When checking for a file or a search string C(present) or C(started) will ensure that the file or string is present before continuing, C(absent) will check that file is absent or removed"
            ],
            "choices": [
                "present",
                "started",
                "stopped",
                "absent",
                "drained"
            ]
        },
        "sleep": {
            "default": 1,
            "required": false,
            "description": [
                "Number of seconds to sleep between checks, before 2.3 this was hardcoded to 1 second."
            ],
            "version_added": "2.3"
        },
        "timeout": {
            "default": 300,
            "required": false,
            "description": [
                "maximum number of seconds to wait for"
            ]
        },
        "exclude_hosts": {
            "default": null,
            "required": false,
            "description": [
                "list of hosts or IPs to ignore when looking for active TCP connections for C(drained) state"
            ],
            "version_added": "1.8"
        },
        "search_regex": {
            "default": null,
            "required": false,
            "description": [
                "Can be used to match a string in either a file or a socket connection. Defaults to a multiline regex."
            ],
            "version_added": "1.4"
        },
        "path": {
            "default": null,
            "required": false,
            "description": [
                "path to a file on the filesytem that must exist before continuing"
            ],
            "version_added": "1.4"
        },
        "port": {
            "default": null,
            "required": false,
            "description": [
                "port number to poll"
            ]
        }
    },
    "module": "wait_for"
}, {
    "short_description": "Waits until remote system is reachable/usable",
    "deprecated": null,
    "options": {
        "delay": {
            "default": 0,
            "description": [
                "Number of seconds to wait before starting to poll."
            ]
        },
        "sleep": {
            "default": 1,
            "description": [
                "Number of seconds to sleep between checks."
            ]
        },
        "connect_timeout": {
            "default": 5,
            "description": [
                "Maximum number of seconds to wait for a connection to happen before closing and retrying."
            ]
        },
        "timeout": {
            "default": 600,
            "description": [
                "Maximum number of seconds to wait for."
            ]
        }
    },
    "module": "wait_for_connection"
}, {
    "short_description": "Send a magic Wake-on-LAN (WoL) broadcast packet",
    "deprecated": null,
    "options": {
        "broadcast": {
            "default": "255.255.255.255",
            "description": [
                "Network broadcast address to use for broadcasting magic Wake-on-LAN packet."
            ]
        },
        "mac": {
            "required": true,
            "description": [
                "MAC address to send Wake-on-LAN broadcast packet for."
            ]
        },
        "port": {
            "default": 7,
            "description": [
                "UDP port to use for magic Wake-on-LAN packet."
            ]
        }
    },
    "module": "wakeonlan"
}, {
    "short_description": "Add or remove applications on a Webfaction host",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "The name of the application"
            ]
        },
        "port_open": {
            "default": false,
            "required": false,
            "description": [
                "IF the port should be opened"
            ]
        },
        "machine": {
            "required": false,
            "description": [
                "The machine name to use (optional for accounts with only one machine)"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the application should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "autostart": {
            "default": "no",
            "required": false,
            "description": [
                "Whether the app should restart with an autostart.cgi script"
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "The webfaction password to use"
            ]
        },
        "type": {
            "required": true,
            "description": [
                "The type of application to create. See the Webfaction docs at http://docs.webfaction.com/xmlrpc-api/apps.html for a list."
            ]
        },
        "login_name": {
            "required": true,
            "description": [
                "The webfaction account to use"
            ]
        },
        "extra_info": {
            "default": null,
            "required": false,
            "description": [
                "Any extra parameters required by the app"
            ]
        }
    },
    "module": "webfaction_app"
}, {
    "short_description": "Add or remove a database on Webfaction",
    "deprecated": null,
    "options": {
        "machine": {
            "required": false,
            "description": [
                "The machine name to use (optional for accounts with only one machine)"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the database should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the database"
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "The webfaction password to use"
            ]
        },
        "password": {
            "default": "None",
            "required": false,
            "description": [
                "The password for the new database user."
            ]
        },
        "type": {
            "required": true,
            "description": [
                "The type of database to create."
            ],
            "choices": [
                "mysql",
                "postgresql"
            ]
        },
        "login_name": {
            "required": true,
            "description": [
                "The webfaction account to use"
            ]
        }
    },
    "module": "webfaction_db"
}, {
    "short_description": "Add or remove domains and subdomains on Webfaction",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the domain should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "subdomains": {
            "default": null,
            "required": false,
            "description": [
                "Any subdomains to create."
            ]
        },
        "login_name": {
            "required": true,
            "description": [
                "The webfaction account to use"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the domain"
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "The webfaction password to use"
            ]
        }
    },
    "module": "webfaction_domain"
}, {
    "short_description": "Add or remove mailboxes on Webfaction",
    "deprecated": null,
    "options": {
        "mailbox_password": {
            "default": null,
            "required": true,
            "description": [
                "The password for the mailbox"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the mailbox should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "login_name": {
            "required": true,
            "description": [
                "The webfaction account to use"
            ]
        },
        "mailbox_name": {
            "required": true,
            "description": [
                "The name of the mailbox"
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "The webfaction password to use"
            ]
        }
    },
    "module": "webfaction_mailbox"
}, {
    "short_description": "Add or remove a website on a Webfaction host",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "The name of the website"
            ]
        },
        "host": {
            "required": true,
            "description": [
                "The webfaction host on which the site should be created."
            ]
        },
        "subdomains": {
            "default": null,
            "required": false,
            "description": [
                "A list of subdomains associated with this site."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the website should exist"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "https": {
            "default": "false",
            "required": false,
            "description": [
                "Whether or not to use HTTPS"
            ],
            "choices": [
                true,
                false
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "The webfaction password to use"
            ]
        },
        "login_name": {
            "required": true,
            "description": [
                "The webfaction account to use"
            ]
        },
        "site_apps": {
            "required": false,
            "description": [
                "A mapping of URLs to apps"
            ]
        }
    },
    "module": "webfaction_site"
}, {
    "short_description": "Set file/directory permissions for a system user or group.",
    "deprecated": null,
    "options": {
        "propagation": {
            "default": "None",
            "required": false,
            "description": [
                "Propagation flag on the ACL rules.  For more information on the choices see MSDN PropagationFlags Enumeration."
            ],
            "choices": [
                "None",
                "NoPropagateInherit",
                "InheritOnly"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Specify whether to add C(present) or remove C(absent) the specified access rule"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "user": {
            "default": "none",
            "required": true,
            "description": [
                "User or Group to add specified rights to act on src file/folder"
            ]
        },
        "rights": {
            "default": "none",
            "required": true,
            "description": [
                "The rights/permissions that are to be allowed/denyed for the specified user or group for the given src file or directory.  Can be entered as a comma separated list (Ex. \"Modify, Delete, ExecuteFile\").  For more information on the choices see MSDN FileSystemRights Enumeration."
            ],
            "choices": [
                "AppendData",
                "ChangePermissions",
                "Delete",
                "DeleteSubdirectoriesAndFiles",
                "ExecuteFile",
                "FullControl",
                "ListDirectory",
                "Modify",
                "Read",
                "ReadAndExecute",
                "ReadAttributes",
                "ReadData",
                "ReadExtendedAttributes",
                "ReadPermissions",
                "Synchronize",
                "TakeOwnership",
                "Traverse",
                "Write",
                "WriteAttributes",
                "WriteData",
                "WriteExtendedAttributes"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "File or Directory"
            ]
        },
        "type": {
            "default": "none",
            "required": true,
            "description": [
                "Specify whether to allow or deny the rights specified"
            ],
            "choices": [
                "allow",
                "deny"
            ]
        },
        "inherit": {
            "default": "For Leaf File, None; For Directory, ContainerInherit, ObjectInherit;",
            "required": false,
            "description": [
                "Inherit flags on the ACL rules.  Can be specified as a comma separated list (Ex. \"ContainerInherit, ObjectInherit\").  For more information on the choices see MSDN InheritanceFlags Enumeration."
            ],
            "choices": [
                "ContainerInherit",
                "ObjectInherit",
                "None"
            ]
        }
    },
    "module": "win_acl"
}, {
    "short_description": "Change ACL inheritance",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "Path to be used for changing inheritance"
            ]
        },
        "state": {
            "default": "absent",
            "required": false,
            "description": [
                "Specify whether to enable I(present) or disable I(absent) ACL inheritance"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "reorganize": {
            "default": false,
            "required": false,
            "description": [
                "For P(state) = I(absent), indicates if the inherited ACE's should be copied from the parent directory. This is necessary (in combination with removal) for a simple ACL instead of using multiple ACE deny entries.",
                "For P(state) = I(present), indicates if the inherited ACE's should be deduplicated compared to the parent directory. This removes complexity of the ACL structure."
            ],
            "choices": [
                false,
                true
            ]
        }
    },
    "module": "win_acl_inheritance"
}, {
    "short_description": "Installs packages using chocolatey",
    "deprecated": null,
    "options": {
        "upgrade": {
            "default": false,
            "description": [
                "If package is already installed it, try to upgrade to the latest version or to the specified version.",
                "As of Ansible v2.3 this is deprecated, set parameter C(state) to \"latest\" for the same result."
            ],
            "choices": [
                true,
                false
            ]
        },
        "force": {
            "default": false,
            "description": [
                "Forces install of the package (even if it already exists).",
                "Using C(force) will cause ansible to always report that a change was made."
            ],
            "choices": [
                true,
                false
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the package to be installed."
            ]
        },
        "ignore_checksums": {
            "default": false,
            "description": [
                "Ignore checksums altogether."
            ],
            "version_added": "2.2"
        },
        "allow_empty_checksums": {
            "default": false,
            "description": [
                "Allow empty checksums to be used."
            ],
            "version_added": "2.2"
        },
        "install_args": {
            "description": [
                "Arguments to pass to the native installer."
            ],
            "version_added": "2.1"
        },
        "source": {
            "description": [
                "Specify source rather than using default chocolatey repository."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "State of the package on the system."
            ],
            "choices": [
                "present",
                "absent",
                "latest",
                "reinstalled"
            ]
        },
        "version": {
            "description": [
                "Specific version of the package to be installed.",
                "Ignored when C(state) is set to \"absent\"."
            ]
        },
        "params": {
            "description": [
                "Parameters to pass to the package"
            ],
            "version_added": "2.1"
        },
        "ignore_dependencies": {
            "default": false,
            "description": [
                "Ignore dependencies, only install/upgrade the package itself."
            ],
            "version_added": "2.1"
        },
        "timeout": {
            "default": 2700,
            "description": [
                "The time to allow chocolatey to finish before timing out."
            ],
            "version_added": "2.3",
            "aliases": [
                "execution_timeout"
            ]
        }
    },
    "module": "win_chocolatey"
}, {
    "short_description": "Executes a command on a remote Windows node",
    "deprecated": null,
    "options": {
        "creates": {
            "description": [
                "a path or path filter pattern; when the referenced path exists on the target host, the task will be skipped."
            ]
        },
        "free_form": {
            "required": true,
            "description": [
                "the win_command module takes a free form command to run.  There is no parameter actually named 'free form'. See the examples!"
            ]
        },
        "chdir": {
            "description": [
                "set the specified path as the current working directory before executing a command"
            ]
        },
        "removes": {
            "description": [
                "a path or path filter pattern; when the referenced path B(does not) exist on the target host, the task will be skipped."
            ]
        }
    },
    "module": "win_command"
}, {
    "short_description": "Copies files to remote locations on windows hosts.",
    "deprecated": null,
    "options": {
        "content": {
            "description": [
                "When used instead of C(src), sets the contents of a file directly to the specified value. This is for simple values, for anything complex or with formatting please switch to the template module."
            ],
            "version_added": "2.3"
        },
        "dest": {
            "required": true,
            "description": [
                "Remote absolute path where the file should be copied to. If src is a directory, this must be a directory too.",
                "Use \\ for path separators or \\\\ when in \"double quotes\"."
            ]
        },
        "remote_src": {
            "default": false,
            "description": [
                "If False, it will search for src at originating/master machine, if True it will go to the remote/target machine for the src."
            ],
            "version_added": "2.3",
            "choices": [
                true,
                false
            ]
        },
        "force": {
            "default": true,
            "description": [
                "If set to C(yes), the remote file will be replaced when content is different than the source.",
                "If set to C(no), the remote file will only be transferred if the destination does not exist."
            ],
            "version_added": "2.3",
            "choices": [
                true,
                false
            ]
        },
        "src": {
            "required": true,
            "description": [
                "Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with \"/\", only inside contents of that directory are copied to destination. Otherwise, if it does not end with \"/\", the directory itself with all contents is copied. This behavior is similar to Rsync."
            ]
        }
    },
    "module": "win_copy"
}, {
    "short_description": "Manage ISO/VHD/VHDX mounts on Windows hosts",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "description": [
                "whether the image should be present as a drive-letter mount or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "image_path": {
            "required": true,
            "description": [
                "path to an ISO, VHD, or VHDX image on the target Windows host (the file cannot reside on a network share)"
            ]
        }
    },
    "module": "win_disk_image"
}, {
    "short_description": "Configures DNS lookup on Windows hosts",
    "deprecated": null,
    "options": {
        "adapter_names": {
            "required": true,
            "description": [
                "Adapter name or list of adapter names for which to manage DNS settings ('*' is supported as a wildcard value). The adapter name used is the connection caption in the Network Control Panel or via C(Get-NetAdapter), eg C(Local Area Connection)."
            ]
        },
        "ipv4_addresses": {
            "required": true,
            "description": [
                "Single or ordered list of DNS server IPv4 addresses to configure for lookup. An empty list will configure the adapter to use the DHCP-assigned values on connections where DHCP is enabled, or disable DNS lookup on statically-configured connections."
            ]
        }
    },
    "module": "win_dns_client"
}, {
    "short_description": "Ensures the existence of a Windows domain.",
    "deprecated": null,
    "options": {
        "dns_domain_name": {
            "required": true,
            "description": [
                "the DNS name of the domain which should exist and be reachable or reside on the target Windows host"
            ]
        },
        "safe_mode_password": {
            "required": true,
            "description": [
                "safe mode password for the domain controller"
            ]
        }
    },
    "module": "win_domain"
}, {
    "short_description": "Manage domain controller/member server state for a Windows host",
    "deprecated": null,
    "options": {
        "state": {
            "description": [
                "whether the target host should be a domain controller or a member server"
            ],
            "choices": [
                "domain_controller",
                "member_server"
            ]
        },
        "local_admin_password": {
            "description": [
                "password to be assigned to the local C(Administrator) user (required when C(state) is C(member_server))"
            ]
        },
        "domain_admin_user": {
            "required": true,
            "description": [
                "username of a domain admin for the target domain (necessary to promote or demote a domain controller)"
            ]
        },
        "dns_domain_name": {
            "description": [
                "when C(state) is C(domain_controller), the DNS name of the domain for which the targeted Windows host should be a DC"
            ]
        },
        "safe_mode_password": {
            "description": [
                "safe mode password for the domain controller (required when C(state) is C(domain_controller))"
            ]
        },
        "domain_admin_password": {
            "required": true,
            "description": [
                "password for the specified C(domain_admin_user)"
            ]
        }
    },
    "module": "win_domain_controller"
}, {
    "short_description": "Manage domain/workgroup membership for a Windows host",
    "deprecated": null,
    "options": {
        "workgroup_name": {
            "description": [
                "when C(state) is C(workgroup), the name of the workgroup that the Windows host should be in"
            ]
        },
        "state": {
            "description": [
                "whether the target host should be a member of a domain or workgroup"
            ],
            "choices": [
                "domain",
                "workgroup"
            ]
        },
        "domain_admin_user": {
            "required": true,
            "description": [
                "username of a domain admin for the target domain (required to join or leave the domain)"
            ]
        },
        "dns_domain_name": {
            "description": [
                "when C(state) is C(domain), the DNS name of the domain to which the targeted Windows host should be joined"
            ]
        },
        "hostname": {
            "description": [
                "the desired hostname for the Windows host"
            ]
        },
        "domain_admin_password": {
            "description": [
                "password for the specified C(domain_admin_user)"
            ]
        }
    },
    "module": "win_domain_membership"
}, {
    "short_description": "Runs ngen to recompile DLLs after .NET  updates",
    "deprecated": null,
    "options": {},
    "module": "win_dotnet_ngen"
}, {
    "short_description": "Modifies environment variables on windows hosts.",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "present to ensure environment variable is set, or absent to ensure it is removed"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "default": "no default",
            "required": true,
            "description": [
                "The name of the environment variable"
            ]
        },
        "value": {
            "default": "no default",
            "required": false,
            "description": [
                "The value to store in the environment variable. Can be omitted for state=absent"
            ]
        },
        "level": {
            "default": "no default",
            "required": true,
            "description": [
                "The level at which to set the environment variable.",
                "Use 'machine' to set for all users.",
                "Use 'user' to set for the current user that ansible is connected as.",
                "Use 'process' to set for the current process.  Probably not that useful."
            ],
            "choices": [
                "machine",
                "process",
                "user"
            ]
        }
    },
    "module": "win_environment"
}, {
    "short_description": "Installs and uninstalls Windows Features on Windows Server",
    "deprecated": null,
    "options": {
        "source": {
            "description": [
                "Specify a source to install the feature from.",
                "Not supported in Windows 2008. If present when using Windows 2008 this option will be ignored."
            ],
            "version_added": "2.1",
            "choices": [
                " {driveletter}:\\sources\\sxs",
                " {IP}\\Share\\sources\\sxs"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "State of the features or roles on the system"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Names of roles or features to install as a single feature or a comma-separated list of features"
            ]
        },
        "include_management_tools": {
            "description": [
                "Adds the corresponding management tools to the specified feature.",
                "Not supported in Windows 2008. If present when using Windows 2008 this option will be ignored."
            ],
            "choices": [
                true,
                false
            ]
        },
        "include_sub_features": {
            "description": [
                "Adds all subfeatures of the specified feature"
            ],
            "choices": [
                true,
                false
            ]
        },
        "restart": {
            "description": [
                "Restarts the computer automatically when installation is complete, if restarting is required by the roles or features installed."
            ],
            "choices": [
                true,
                false
            ]
        }
    },
    "module": "win_feature"
}, {
    "short_description": "Creates, touches or removes files or directories.",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "path to the file being managed.  Aliases: I(dest), I(name)"
            ],
            "aliases": [
                "dest",
                "name"
            ]
        },
        "state": {
            "description": [
                "If C(directory), all immediate subdirectories will be created if they do not exist. If C(file), the file will NOT be created if it does not exist, see the M(copy) or M(template) module if you want that behavior.  If C(absent), directories will be recursively deleted, and files will be removed. If C(touch), an empty file will be created if the C(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way C(touch) works from the command line)."
            ],
            "choices": [
                "file",
                "directory",
                "touch",
                "absent"
            ]
        }
    },
    "module": "win_file"
}, {
    "short_description": "Get DLL or EXE file build version",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "File to get version(provide absolute path)"
            ],
            "aliases": []
        }
    },
    "module": "win_file_version"
}, {
    "short_description": "return a list of files based on specific criteria",
    "deprecated": null,
    "options": {
        "paths": {
            "required": true,
            "description": [
                "List of paths of directories to search for files or folders in. This can be supplied as a single path or a list of paths."
            ]
        },
        "file_type": {
            "default": "file",
            "required": false,
            "description": "Type of file to search for",
            "choices": [
                "file",
                "directory"
            ]
        },
        "checksum_algorithm": {
            "default": "sha1",
            "required": false,
            "description": [
                "Algorithm to determine the checksum of a file. Will throw an error if the host is unable to use specified algorithm."
            ],
            "choices": [
                "md5",
                "sha1",
                "sha256",
                "sha384",
                "sha512"
            ]
        },
        "age": {
            "required": false,
            "description": [
                "Select files or folders whose age is equal to or greater than the specified time. Use a negative age to find files equal to or less than the specified time. You can choose seconds, minutes, hours, days or weeks by specifying the first letter of an of those words (e.g., \"2s\", \"10d\", 1w\")."
            ]
        },
        "recurse": {
            "default": false,
            "required": false,
            "description": [
                "Will recursively descend into the directory looking for files or folders"
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "age_stamp": {
            "default": "mtime",
            "required": false,
            "description": [
                "Choose the file property against which we compare C(age). The default attribute we compare with is the last modification time."
            ],
            "choices": [
                "atime",
                "mtime",
                "ctime"
            ]
        },
        "patterns": {
            "required": false,
            "description": [
                "One or more (powershell or regex) patterns to compare filenames with. The type of pattern matching is controlled by C(use_regex) option. The patterns retrict the list of files or folders to be returned based on the filenames. For a file to be matched it only has to match with one pattern in a list provided."
            ]
        },
        "get_checksum": {
            "default": true,
            "required": false,
            "description": [
                "Whether to return a checksum of the file in the return info (default sha1), use C(checksum_algorithm) to change from the default."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "use_regex": {
            "default": false,
            "required": false,
            "description": [
                "Will set patterns to run as a regex check if true"
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "follow": {
            "default": false,
            "required": false,
            "description": [
                "Set this to true to follow symlinks in the path. This needs to be used in conjunction with C(recurse)."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "hidden": {
            "default": false,
            "required": false,
            "description": "Set this to include hidden files or folders",
            "choices": [
                "true",
                "false"
            ]
        },
        "size": {
            "default": false,
            "required": false,
            "description": [
                "Select files or folders whose size is equal to or greater than the specified size. Use a negative value to find files equal to or less than the specified size. You can specify the size with a suffix of the byte type i.e. kilo = k, mega = m... Size is not evaluated for symbolic links."
            ]
        }
    },
    "module": "win_find"
}, {
    "short_description": "Windows firewall automation",
    "deprecated": null,
    "options": {
        "profile": {
            "default": "any",
            "required": false,
            "description": [
                "the profile this rule applies to, e.g. Domain,Private,Public"
            ]
        },
        "remoteport": {
            "default": "any",
            "required": false,
            "description": [
                "the remote port this rule applies to"
            ]
        },
        "direction": {
            "default": null,
            "required": true,
            "description": [
                "is this rule for inbound or outbound traffic"
            ],
            "choices": [
                "in",
                "out"
            ]
        },
        "enable": {
            "default": true,
            "required": false,
            "description": [
                "is this firewall rule enabled or disabled"
            ]
        },
        "protocol": {
            "default": "any",
            "required": false,
            "description": [
                "the protocol this rule applies to"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "the rules name"
            ]
        },
        "service": {
            "default": "any",
            "required": false,
            "description": [
                "the service this rule applies to"
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "description for the firewall rule"
            ]
        },
        "localip": {
            "default": "any",
            "required": false,
            "description": [
                "the local ip address this rule applies to"
            ]
        },
        "state": {
            "default": "present",
            "required": true,
            "description": [
                "should this rule be added or removed"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "program": {
            "default": null,
            "required": false,
            "description": [
                "the program this rule applies to"
            ]
        },
        "remoteip": {
            "default": "any",
            "required": false,
            "description": [
                "the remote ip address/range this rule applies to"
            ]
        },
        "action": {
            "default": null,
            "required": true,
            "description": [
                "what to do with the items this rule is for"
            ],
            "choices": [
                "allow",
                "block",
                "bypass"
            ]
        },
        "force": {
            "default": false,
            "required": false,
            "description": [
                "Enforces the change if a rule with different values exists"
            ]
        },
        "localport": {
            "default": "any",
            "required": false,
            "description": [
                "the local port this rule applies to"
            ]
        }
    },
    "module": "win_firewall_rule"
}, {
    "short_description": "Fetches a file from a given URL",
    "deprecated": null,
    "options": {
        "username": {
            "default": null,
            "required": false,
            "description": [
                "Basic authentication username"
            ]
        },
        "force": {
            "default": true,
            "required": false,
            "description": [
                "If C(yes), will always download the file. If C(no), will only download the file if it does not exist or the remote file has been modified more recently than the local file. This works by sending an http HEAD request to retrieve last modified time of the requested resource, so for this to work, the remote web server must support HEAD requests."
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "url": {
            "default": null,
            "required": true,
            "description": [
                "The full URL of a file to download"
            ]
        },
        "skip_certificate_validation": {
            "default": false,
            "required": false,
            "description": [
                "Skip SSL certificate validation if true"
            ]
        },
        "proxy_url": {
            "required": false,
            "description": [
                "The full URL of the proxy server to download through."
            ],
            "version_added": "2.0"
        },
        "proxy_password": {
            "required": false,
            "description": [
                "Proxy authentication password"
            ],
            "version_added": "2.0"
        },
        "dest": {
            "default": null,
            "required": true,
            "description": [
                "The absolute path of the location to save the file at the URL. Be sure to include a filename and extension as appropriate."
            ]
        },
        "proxy_username": {
            "required": false,
            "description": [
                "Proxy authentication username"
            ],
            "version_added": "2.0"
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Basic authentication password"
            ]
        }
    },
    "module": "win_get_url"
}, {
    "short_description": "Add and remove local groups",
    "deprecated": null,
    "options": {
        "state": {
            "default": "present",
            "choices": [
                "present",
                "absent"
            ],
            "required": false,
            "description": [
                "Create or remove the group"
            ],
            "aliases": []
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the group"
            ],
            "aliases": []
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description of the group"
            ],
            "aliases": []
        }
    },
    "module": "win_group"
}, {
    "short_description": "Configures a virtual directory in IIS.",
    "deprecated": null,
    "options": {
        "application": {
            "default": null,
            "required": false,
            "description": [
                "The application under which the virtual directory is created or exists."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to add or remove the specified virtual directory"
            ],
            "choices": [
                "absent",
                "present"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The name of the virtual directory to create or remove"
            ]
        },
        "physical_path": {
            "default": null,
            "required": false,
            "description": [
                "The physical path to the folder in which the new virtual directory is created. The specified folder must already exist."
            ]
        },
        "site": {
            "required": true,
            "description": [
                "The site name under which the virtual directory is created or exists."
            ]
        }
    },
    "module": "win_iis_virtualdirectory"
}, {
    "short_description": "Configures IIS web applications.",
    "deprecated": null,
    "options": {
        "state": {
            "default": null,
            "choices": [
                "present",
                "absent"
            ],
            "required": false,
            "description": [
                "State of the web application."
            ],
            "aliases": []
        },
        "application_pool": {
            "default": null,
            "required": false,
            "description": [
                "The application pool in which the new site executes."
            ],
            "aliases": []
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of the web application."
            ],
            "aliases": []
        },
        "physical_path": {
            "default": null,
            "required": false,
            "description": [
                "The physical path on the remote host to use for the new application. The specified folder must already exist."
            ],
            "aliases": []
        },
        "site": {
            "default": null,
            "required": true,
            "description": [
                "Name of the site on which the application is created."
            ],
            "aliases": []
        }
    },
    "module": "win_iis_webapplication"
}, {
    "short_description": "Configures an IIS Web Application Pool.",
    "deprecated": null,
    "options": {
        "attributes": {
            "default": null,
            "required": false,
            "description": [
                "Application Pool attributes from string where attributes are separated by a pipe and attribute name/values by colon Ex. \"foo:1|bar:2\".",
                "The following attributes may only have the following names.",
                "managedPipelineMode may be either \"Integrated\" or  \"Classic\".",
                "startMode may be either \"OnDemand\" or  \"AlwaysRunning\".",
                "state may be one of \"Starting\", \"Started\", \"Stopping\", \"Stopped\", \"Unknown\". Use the C(state) module parameter to modify, states shown are reflect the possible runtime values."
            ]
        },
        "state": {
            "default": null,
            "required": false,
            "description": [
                "State of the binding"
            ],
            "choices": [
                "absent",
                "stopped",
                "started",
                "restarted"
            ]
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Name of application pool"
            ],
            "aliases": []
        }
    },
    "module": "win_iis_webapppool"
}, {
    "short_description": "Configures a IIS Web site.",
    "deprecated": null,
    "options": {
        "protocol": {
            "default": null,
            "required": false,
            "description": [
                "The protocol to be used for the Web binding (usually HTTP, HTTPS, or FTP)."
            ],
            "aliases": []
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Names of web site"
            ],
            "aliases": []
        },
        "certificate_hash": {
            "default": null,
            "required": false,
            "description": [
                "Certificate hash for the SSL binding. The certificate hash is the unique identifier for the certificate."
            ],
            "aliases": []
        },
        "ip": {
            "default": null,
            "required": false,
            "description": [
                "The IP address to bind to / use for the new site."
            ],
            "aliases": []
        },
        "host_header": {
            "default": null,
            "required": false,
            "description": [
                "The host header to bind to / use for the new site."
            ],
            "aliases": []
        },
        "state": {
            "default": null,
            "choices": [
                "present",
                "absent"
            ],
            "required": false,
            "description": [
                "State of the binding"
            ],
            "aliases": []
        },
        "port": {
            "default": null,
            "required": false,
            "description": [
                "The port to bind to / use for the new site."
            ],
            "aliases": []
        },
        "certificate_store_name": {
            "default": "My",
            "required": false,
            "description": [
                "Name of the certificate store where the certificate for the binding is located."
            ],
            "aliases": []
        }
    },
    "module": "win_iis_webbinding"
}, {
    "short_description": "Configures a IIS Web site.",
    "deprecated": null,
    "options": {
        "application_pool": {
            "default": null,
            "required": false,
            "description": [
                "The application pool in which the new site executes."
            ],
            "aliases": []
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Names of web site"
            ],
            "aliases": []
        },
        "parameters": {
            "default": null,
            "required": false,
            "description": [
                "Custom site Parameters from string where properties are separated by a pipe and property name/values by colon Ex. \"foo:1|bar:2\""
            ],
            "aliases": []
        },
        "ip": {
            "default": null,
            "required": false,
            "description": [
                "The IP address to bind to / use for the new site."
            ],
            "aliases": []
        },
        "physical_path": {
            "default": null,
            "required": false,
            "description": [
                "The physical path on the remote host to use for the new site. The specified folder must already exist."
            ],
            "aliases": []
        },
        "hostname": {
            "default": null,
            "required": false,
            "description": [
                "The host header to bind to / use for the new site."
            ],
            "aliases": []
        },
        "site_id": {
            "default": null,
            "required": false,
            "description": [
                "Explicitly set the IIS numeric ID for a site. Note that this value cannot be changed after the website has been created."
            ],
            "version_added": "2.1"
        },
        "ssl": {
            "default": null,
            "required": false,
            "description": [
                "Enables HTTPS binding on the site.."
            ],
            "aliases": []
        },
        "state": {
            "default": null,
            "choices": [
                "started",
                "restarted",
                "stopped",
                "absent"
            ],
            "required": false,
            "description": [
                "State of the web site"
            ],
            "aliases": []
        },
        "port": {
            "default": null,
            "required": false,
            "description": [
                "The port to bind to / use for the new site."
            ],
            "aliases": []
        }
    },
    "module": "win_iis_website"
}, {
    "short_description": "Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression.",
    "deprecated": null,
    "options": {
        "insertbefore": {
            "required": false,
            "description": [
                "Used with C(state=present). If specified, the line will be inserted before the last match of specified regular expression. A value is available; C(BOF) for inserting the line at the beginning of the file.",
                "If specified regular expression has no matches, the line will be inserted at the end of the file. May not be used with C(backrefs)."
            ],
            "choices": [
                "BOF",
                "*regex*"
            ]
        },
        "encoding": {
            "default": "auto",
            "required": false,
            "description": [
                "Specifies the encoding of the source text file to operate on (and thus what the output encoding will be). The default of C(auto) will cause the module to auto-detect the encoding of the source file and ensure that the modified file is written with the same encoding.",
                "An explicit encoding can be passed as a string that is a valid value to pass to the .NET framework System.Text.Encoding.GetEncoding() method - see U(https://msdn.microsoft.com/en-us/library/system.text.encoding%28v=vs.110%29.aspx).",
                "This is mostly useful with C(create=yes) if you want to create a new file with a specific encoding. If C(create=yes) is specified without a specific encoding, the default encoding (UTF-8, no BOM) will be used."
            ]
        },
        "create": {
            "default": "no",
            "required": false,
            "description": [
                "Used with C(state=present). If specified, the file will be created if it does not already exist. By default it will fail if the file is missing."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "newline": {
            "default": "windows",
            "required": false,
            "description": [
                "Specifies the line separator style to use for the modified file. This defaults to the windows line separator (C(\r\n)). Note that the indicated line separator will be used for file output regardless of the original line separator that appears in the input file."
            ],
            "choices": [
                "windows",
                "unix"
            ]
        },
        "backrefs": {
            "default": "no",
            "required": false,
            "description": [
                "Used with C(state=present). If set, line can contain backreferences (both positional and named) that will get populated if the C(regexp) matches. This flag changes the operation of the module slightly; C(insertbefore) and C(insertafter) will be ignored, and if the C(regexp) doesn't match anywhere in the file, the file will be left unchanged.",
                "If the C(regexp) does match, the last matching line will be replaced by the expanded line parameter."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether the line should be there or not."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "The path of the file to modify.",
                "Note that the Windows path delimiter C(\\) must be escaped as C(\\\\) when the line is double quoted.",
                "Before 2.3 this option was only usable as I(dest), I(destfile) and I(name)."
            ],
            "aliases": [
                "dest",
                "destfile",
                "name"
            ]
        },
        "insertafter": {
            "default": "EOF",
            "required": false,
            "description": [
                "Used with C(state=present). If specified, the line will be inserted after the last match of specified regular expression. A special value is available; C(EOF) for inserting the line at the end of the file.",
                "If specified regular expression has no matches, EOF will be used instead. May not be used with C(backrefs)."
            ],
            "choices": [
                "EOF",
                "*regex*"
            ]
        },
        "regexp": {
            "required": false,
            "description": [
                "The regular expression to look for in every line of the file. For C(state=present), the pattern to replace if found; only the last line found will be replaced. For C(state=absent), the pattern of the line to remove. Uses .NET compatible regular expressions; see U(https://msdn.microsoft.com/en-us/library/hs600312%28v=vs.110%29.aspx)."
            ]
        },
        "line": {
            "required": false,
            "description": [
                "Required for C(state=present). The line to insert/replace into the file. If C(backrefs) is set, may contain backreferences that will get expanded with the C(regexp) capture groups if the regexp matches."
            ]
        },
        "backup": {
            "default": "no",
            "required": false,
            "description": [
                "Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate": {
            "default": "None",
            "required": false,
            "description": [
                "Validation to run before copying into place. Use %s in the command to indicate the current file to validate.",
                "The command is passed securely so shell features like expansion and pipes won't work."
            ]
        }
    },
    "module": "win_lineinfile"
}, {
    "short_description": "Sends a message to logged in users on Windows hosts.",
    "deprecated": null,
    "options": {
        "msg": {
            "default": "Hello world!",
            "description": [
                "The text of the message to be displayed."
            ]
        },
        "to": {
            "default": "*",
            "description": [
                "Who to send the message to. Can be a username, sessionname or sessionid."
            ]
        },
        "display_seconds": {
            "default": 10,
            "description": [
                "How long to wait for receiver to acknowledge message, in seconds."
            ]
        },
        "wait": {
            "default": false,
            "required": false,
            "description": [
                "Whether to wait for users to respond.  Module will only wait for the number of seconds specified in display_seconds or 10 seconds if not specified. However, if I(wait) is true, the message is sent to each logged on user in turn, waiting for the user to either press 'ok' or for the timeout to elapse before moving on to the next user."
            ]
        }
    },
    "module": "win_msg"
}, {
    "short_description": "Installs and uninstalls Windows MSI files",
    "deprecated": null,
    "options": {
        "extra_args": {
            "description": [
                "Additional arguments to pass to the msiexec.exe command"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "File system path to the MSI file to install"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Whether the MSI file should be installed or uninstalled"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "creates": {
            "description": [
                "Path to a file created by installing the MSI to prevent from attempting to reinstall the package on every run"
            ]
        },
        "wait": {
            "default": false,
            "description": [
                "Specify whether to wait for install or uninstall to complete before continuing."
            ],
            "version_added": "2.1",
            "choices": [
                true,
                false
            ]
        }
    },
    "module": "win_msi"
}, {
    "short_description": "NSSM - the Non-Sucking Service Manager",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the service to operate on"
            ]
        },
        "start_mode": {
            "default": "auto",
            "description": [
                "If C(auto) is selected, the service will start at bootup. C(manual) means that the service will start only when another service needs it. C(disabled) means that the service will stay off, regardless if it is needed or not."
            ],
            "choices": [
                "auto",
                "manual",
                "disabled"
            ]
        },
        "state": {
            "default": "started",
            "description": [
                "State of the service on the system",
                "Note that NSSM actions like \"pause\", \"continue\", \"rotate\" do not fit the declarative style of ansible, so these should be implemented via the ansible command module"
            ],
            "choices": [
                "present",
                "started",
                "stopped",
                "restarted",
                "absent"
            ]
        },
        "app_parameters_free_form": {
            "description": [
                "Single string of parameters to be passed to the service.",
                "Use either this or C(app_parameters), not both"
            ],
            "version_added": "2.3.0"
        },
        "application": {
            "description": [
                "The application binary to run as a service",
                "Specify this whenever the service may need to be installed (state: present, started, stopped, restarted)",
                "Note that the application name must look like the following, if the directory includes spaces:",
                "nssm install service \"c:\\\\Program Files\\\\app.exe\\\\\" \"C:\\\\Path with spaces\\\\\"",
                "See commit 0b386fc1984ab74ee59b7bed14b7e8f57212c22b in the nssm.git project for more info: U(https://git.nssm.cc/?p=nssm.git;a=commit;h=0b386fc1984ab74ee59b7bed14b7e8f57212c22b)"
            ]
        },
        "stderr_file": {
            "description": [
                "Path to receive error output"
            ]
        },
        "dependencies": {
            "description": [
                "Service dependencies that has to be started to trigger startup, separated by comma."
            ]
        },
        "user": {
            "description": [
                "User to be used for service startup"
            ]
        },
        "password": {
            "description": [
                "Password to be used for service startup"
            ]
        },
        "stdout_file": {
            "description": [
                "Path to receive output"
            ]
        },
        "app_parameters": {
            "description": [
                "Parameters to be passed to the application when it starts.",
                "Use either this or C(app_parameters_free_form), not both"
            ]
        }
    },
    "module": "win_nssm"
}, {
    "short_description": "Set owner",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "Path to be used for changing owner"
            ]
        },
        "recurse": {
            "default": false,
            "description": [
                "Indicates if the owner should be changed recursively"
            ],
            "choices": [
                false,
                true
            ]
        },
        "user": {
            "required": true,
            "description": [
                "Name to be used for changing owner"
            ]
        }
    },
    "module": "win_owner"
}, {
    "short_description": "Installs/Uninstalls an installable package, either from local file system or url",
    "deprecated": null,
    "options": {
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the package, if name isn't specified the path will be used for log messages"
            ]
        },
        "user_password": {
            "default": null,
            "required": false,
            "description": [
                "Password of an account with access to the package if it's located on a file share. Only needed if the winrm user doesn't have access to the package. Also specify user_name for this to function properly."
            ]
        },
        "expected_return_code": {
            "default": 0,
            "required": false,
            "description": [
                "One or more return codes from the package installation that indicates success.",
                "If not provided, defaults to 0"
            ]
        },
        "state": {
            "default": "present",
            "choices": [
                "present",
                "absent"
            ],
            "required": false,
            "description": [
                "Install or Uninstall"
            ],
            "aliases": [
                "ensure"
            ]
        },
        "arguments": {
            "default": null,
            "required": false,
            "description": [
                "Any arguments the installer needs"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "Location of the package to be installed (either on file system, network share or url)"
            ]
        },
        "user_name": {
            "default": null,
            "required": false,
            "description": [
                "Username of an account with access to the package if it's located on a file share. Only needed if the winrm user doesn't have access to the package. Also specify user_password for this to function properly."
            ]
        },
        "product_id": {
            "required": true,
            "description": [
                "Product id of the installed package (used for checking if already installed)",
                "You can find product ids for installed programs in the windows registry either in C(HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall) or for 32 bit programs C(HKLM:Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall)'"
            ],
            "aliases": [
                "productid"
            ]
        }
    },
    "module": "win_package"
}, {
    "short_description": "Manage Windows path environment variables",
    "deprecated": null,
    "options": {
        "scope": {
            "default": "machine",
            "description": [
                "The level at which the environment variable specified by C(name) should be managed (either for the current user or global machine scope)."
            ],
            "choices": [
                "machine",
                "user"
            ]
        },
        "state": {
            "description": [
                "Whether the path elements specified in C(elements) should be present or absent."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "elements": {
            "required": true,
            "description": [
                "A single path element, or a list of path elements (ie, directories) to add or remove.",
                "When multiple elements are included in the list (and C(state) is C(present)), the elements are guaranteed to appear in the same relative order in the resultant path value.",
                "Variable expansions (eg, C(%VARNAME%)) are allowed, and are stored unexpanded in the target path element.",
                "Any existing path elements not mentioned in C(elements) are always preserved in their current order.",
                "New path elements are appended to the path, and existing path elements may be moved closer to the end to satisfy the requested ordering.",
                "Paths are compared in a case-insensitive fashion, and trailing backslashes are ignored for comparison purposes. However, note that trailing backslashes in YAML require quotes."
            ]
        },
        "name": {
            "default": "PATH",
            "description": [
                "Target path environment variable name"
            ]
        }
    },
    "module": "win_path"
}, {
    "short_description": "A windows version of the classic ping module.",
    "deprecated": null,
    "options": {
        "data": {
            "default": "pong",
            "description": [
                "Alternate data to return instead of 'pong'"
            ]
        }
    },
    "module": "win_ping"
}, {
    "short_description": "Runs commands (remotely) as another (privileged) user",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "The (remote) user to run the command as.",
                "If not provided, the current user is used."
            ]
        },
        "limited": {
            "default": false,
            "description": [
                "Run the command as limited user (strips the Administrators group and allows only privileges assigned to the Users group)."
            ]
        },
        "executable": {
            "default": "psexec.exe",
            "description": [
                "The location of the PsExec utility (in case it is not located in your PATH)."
            ]
        },
        "chdir": {
            "description": [
                "Run the command from this (remote) directory."
            ]
        },
        "interactive": {
            "default": false,
            "description": [
                "Run the program so that it interacts with the desktop on the remote system."
            ]
        },
        "noprofile": {
            "default": false,
            "description": [
                "Run the command without loading the account's profile."
            ]
        },
        "system": {
            "default": false,
            "description": [
                "Run the remote command in the System account."
            ]
        },
        "elevated": {
            "default": false,
            "description": [
                "Run the command with elevated privileges."
            ]
        },
        "priority": {
            "description": [
                "Used to run the command at a different priority."
            ],
            "choices": [
                "background",
                "low",
                "belownormal",
                "abovenormal",
                "high",
                "realtime"
            ]
        },
        "hostnames": {
            "description": [
                "The hostnames to run the command.",
                "If not provided, the command is run locally."
            ]
        },
        "command": {
            "required": true,
            "description": [
                "The command line to run through PsExec (limited to 260 characters)."
            ]
        },
        "timeout": {
            "description": [
                "The connection timeout in seconds"
            ]
        },
        "password": {
            "description": [
                "The password for the (remote) user to run the command as.",
                "This is mandatory in order authenticate yourself."
            ]
        },
        "wait": {
            "default": true,
            "description": [
                "Wait for the application to terminate.",
                "Only use for non-interactive applications."
            ]
        }
    },
    "module": "win_psexec"
}, {
    "short_description": "Reboot a windows machine",
    "deprecated": null,
    "options": {
        "test_command": {
            "default": "whoami",
            "description": [
                "Command to expect success for to determine the machine is ready for management"
            ]
        },
        "connect_timeout_sec": {
            "default": 5,
            "description": [
                "Maximum seconds to wait for a single successful TCP connection to the WinRM endpoint before trying again"
            ]
        },
        "msg": {
            "default": "Reboot initiated by Ansible",
            "description": [
                "Message to display to users"
            ]
        },
        "pre_reboot_delay_sec": {
            "default": 2,
            "description": [
                "Seconds for shutdown to wait before requesting reboot"
            ]
        },
        "shutdown_timeout_sec": {
            "default": 600,
            "description": [
                "Maximum seconds to wait for shutdown to occur",
                "Increase this timeout for very slow hardware, large update applications, etc"
            ]
        },
        "reboot_timeout_sec": {
            "default": 600,
            "description": [
                "Maximum seconds to wait for machine to re-appear on the network and respond to a test command",
                "This timeout is evaluated separately for both network appearance and test command success (so maximum clock time is actually twice this value)"
            ]
        }
    },
    "module": "win_reboot"
}, {
    "short_description": "returns information about a Windows registry key or property of a key",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": "The full registry key path including the hive to search for.",
            "aliases": [
                "key"
            ]
        },
        "name": {
            "required": false,
            "description": [
                "The registry property name to get information for, the return json will not include the sub_keys and properties entries for the I(key) specified."
            ],
            "aliases": [
                "entry",
                "value",
                "property"
            ]
        }
    },
    "module": "win_reg_stat"
}, {
    "short_description": "Add, change, or remove registry keys and values",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "Name of registry path.",
                "Should be in one of the following registry hives: HKCC, HKCR, HKCU, HKLM, HKU."
            ],
            "aliases": [
                "key"
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "State of registry entry."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "data": {
            "description": [
                "Value of the registry entry C(name) in C(path).",
                "Binary data should be expressed a yaml byte array or as comma separated hex values.  An easy way to generate this is to run C(regedit.exe) and use the I(Export) option to save the registry values to a file.  In the exported file binary values will look like C(hex:be,ef,be,ef).  The C(hex:) prefix is optional."
            ]
        },
        "name": {
            "description": [
                "Name of registry entry in C(path).",
                "This is an entry in the above C(key) parameter.",
                "If not provided, or empty we use the default name '(default)'"
            ],
            "aliases": [
                "entry"
            ]
        },
        "type": {
            "default": "string",
            "choices": [
                "binary",
                "dword",
                "expandstring",
                "multistring",
                "string",
                "qword"
            ],
            "description": [
                "Registry value data type."
            ],
            "aliases": [
                "datatype"
            ]
        }
    },
    "module": "win_regedit"
}, {
    "short_description": "Set the region and format settings",
    "deprecated": null,
    "options": {
        "unicode_language": {
            "description": [
                "The unicode language format to set for all users, see U(https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx) for a list of culture names to use. This needs to be set if C(location) or C(format) is not set. After setting this value a reboot is required for it to take effect."
            ]
        },
        "copy_settings": {
            "default": false,
            "description": [
                "This will copy the current format and location values to new user profiles and the welcome screen. This will only run if C(location), C(format) or C(unicode_language) has resulted in a change. If this process runs then it will always result in a change."
            ],
            "choices": [
                "true",
                "false"
            ]
        },
        "location": {
            "description": [
                "The location to set for the current user, see U(https://msdn.microsoft.com/en-us/library/dd374073.aspx) for a list of GeoIDs you can use and what location it relates to. This needs to be set if C(format) or C(unicode_language) is not set."
            ]
        },
        "format": {
            "description": [
                "The language format to set for the current user, see U(https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.aspx) for a list of culture names to use. This needs to be set if C(location) or C(unicode_language) is not set."
            ]
        }
    },
    "module": "win_region"
}, {
    "short_description": "Merges the contents of a registry file into the windows registry",
    "deprecated": null,
    "options": {
        "path": {
            "default": "no default",
            "required": true,
            "description": [
                "The full path including file name to the registry file on the remote machine to be merged"
            ]
        },
        "compare_key": {
            "default": "no default",
            "required": false,
            "description": [
                "The parent key to use when comparing the contents of the registry to the contents of the file.  Needs to be in HKLM or HKCU part of registry.  Use a PS-Drive style path for example HKLM:\\SOFTWARE not HKEY_LOCAL_MACHINE\\SOFTWARE If not supplied, or the registry key is not found, no comparison will be made, and the module will report changed."
            ]
        }
    },
    "module": "win_regmerge"
}, {
    "short_description": "Synchronizes the contents of two directories using Robocopy.",
    "deprecated": null,
    "options": {
        "dest": {
            "required": true,
            "description": [
                "Destination file/directory to sync (Will receive contents of src)."
            ]
        },
        "src": {
            "required": true,
            "description": [
                "Source file/directory to sync."
            ]
        },
        "recurse": {
            "default": false,
            "required": false,
            "description": [
                "Includes all subdirectories (Toggles the `/e` flag to RoboCopy). If \"flags\" is set, this will be ignored."
            ],
            "choices": [
                true,
                false
            ]
        },
        "purge": {
            "default": false,
            "required": false,
            "description": [
                "Deletes any files/directories found in the destination that do not exist in the source (Toggles the `/purge` flag to RoboCopy). If \"flags\" is set, this will be ignored."
            ],
            "choices": [
                true,
                false
            ]
        },
        "flags": {
            "default": "None",
            "required": false,
            "description": [
                "Directly supply Robocopy flags. If set, purge and recurse will be ignored."
            ]
        }
    },
    "module": "win_robocopy"
}, {
    "short_description": "Text to speech module for Windows to speak messages and optionally play sounds",
    "deprecated": null,
    "options": {
        "end_sound_path": {
            "default": null,
            "required": false,
            "description": [
                "Full path to a C(.wav) file containing a sound to play after the text has been spoken.  Useful on conference calls to alert other speakers that ansible has finished speaking."
            ]
        },
        "msg": {
            "default": "none",
            "required": false,
            "description": [
                "The text to be spoken.  Use either msg or msg_file.  Optional so that you can use this module just to play sounds."
            ]
        },
        "start_sound_path": {
            "default": null,
            "required": false,
            "description": [
                "Full path to a C(.wav) file containing a sound to play before the text is spoken.  Useful on conference calls to alert other speakers that ansible has something to say."
            ]
        },
        "voice": {
            "default": "system default voice",
            "required": false,
            "description": [
                "Which voice to use. See notes for how to discover installed voices.  If the requested voice is not available the default voice will be used. Example voice names from Windows 10 are 'Microsoft Zira Desktop' and 'Microsoft Hazel Desktop'."
            ]
        },
        "msg_file": {
            "default": "none",
            "required": false,
            "description": [
                "Full path to a windows format text file containing the text to be spokend.  Use either msg or msg_file.  Optional so that you can use this module just to play sounds."
            ]
        },
        "speech_speed": {
            "default": 0,
            "required": false,
            "description": [
                "How fast or slow to speak the text.  Must be an integer value in the range -10 to 10.  -10 is slowest, 10 is fastest."
            ]
        }
    },
    "module": "win_say"
}, {
    "short_description": "Manage scheduled tasks",
    "deprecated": null,
    "options": {
        "executable": {
            "description": [
                "Command the scheduled task should execute"
            ],
            "aliases": [
                "execute"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the scheduled task"
            ]
        },
        "description": {
            "description": [
                "The description for the scheduled task"
            ]
        },
        "enabled": {
            "default": true,
            "description": [
                "Enable/disable the task"
            ],
            "choices": [
                true,
                false
            ]
        },
        "days_of_week": {
            "description": [
                "Days of the week to run a weekly task, not idempotent"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "State that the task should become"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "frequency": {
            "description": [
                "The frequency of the command, not idempotent"
            ],
            "choices": [
                "once",
                "daily",
                "weekly"
            ]
        },
        "arguments": {
            "description": [
                "Arguments to provide scheduled task action"
            ],
            "aliases": [
                "argument"
            ]
        },
        "time": {
            "description": [
                "Time to execute scheduled task, not idempotent"
            ]
        },
        "path": {
            "default": "\\",
            "description": [
                "Task folder in which this task will be stored"
            ]
        },
        "user": {
            "description": [
                "User to run scheduled task as"
            ]
        }
    },
    "module": "win_scheduled_task"
}, {
    "short_description": "Manages Windows services",
    "deprecated": null,
    "options": {
        "username": {
            "description": [
                "The username to set the service to start as.",
                "This and the C(password) argument must be supplied together."
            ],
            "version_added": "2.3"
        },
        "display_name": {
            "description": [
                "The display name to set for the service."
            ],
            "version_added": "2.3"
        },
        "desktop_interact": {
            "default": false,
            "description": [
                "Whether to allow the service user to interact with the desktop.",
                "This should only be set to true when using the LocalSystem username."
            ],
            "version_added": "2.3"
        },
        "force_dependent_services": {
            "default": false,
            "description": [
                "If True, stopping or restarting a service with dependent services will force the dependent services to stop or restart also.",
                "If False, stopping or restarting a service with dependent services may fail."
            ],
            "version_added": "2.3"
        },
        "dependency_action": {
            "default": "set",
            "description": [
                "Used in conjunction with C(dependency) to either add the dependencies to the existing service dependencies.",
                "Remove the dependencies to the existing dependencies.",
                "Set the dependencies to only the values in the list replacing the existing dependencies."
            ],
            "version_added": "2.3",
            "choices": [
                "set",
                "add",
                "remove"
            ]
        },
        "description": {
            "description": [
                "The description to set for the service."
            ],
            "version_added": "2.3"
        },
        "start_mode": {
            "description": [
                "Set the startup type for the service.",
                "C(delayed) added in Ansible 2.3"
            ],
            "choices": [
                "auto",
                "manual",
                "disabled",
                "delayed"
            ]
        },
        "state": {
            "description": [
                "C(started)/C(stopped)/C(absent) are idempotent actions that will not run commands unless necessary.",
                "C(restarted) will always bounce the service.",
                "C(absent) added in Ansible 2.3"
            ],
            "choices": [
                "started",
                "stopped",
                "restarted",
                "absent"
            ]
        },
        "dependencies": {
            "description": [
                "A list of service dependencies to set for this particular service.",
                "This should be a list of service names and not the display name of the service.",
                "This works by C(dependency_action) to either add/remove or set the services in this list."
            ],
            "version_added": "2.3"
        },
        "path": {
            "description": [
                "The path to the executable to set for the service."
            ],
            "version_added": "2.3"
        },
        "password": {
            "description": [
                "The password to set the service to start as.",
                "This and the C(username) argument must be supplied together.",
                "If specifying LocalSystem, NetworkService or LocalService this field must be an empty string and not null."
            ],
            "version_added": "2.3"
        },
        "name": {
            "required": true,
            "description": [
                "Name of the service"
            ]
        }
    },
    "module": "win_service"
}, {
    "short_description": "Manage Windows shares",
    "deprecated": null,
    "options": {
        "deny": {
            "description": [
                "Specify user list that should get no access, regardless of implied access on share, separated by comma."
            ]
        },
        "full": {
            "description": [
                "Specify user list that should get full access on share, separated by comma."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Share name"
            ]
        },
        "read": {
            "description": [
                "Specify user list that should get read access on share, separated by comma."
            ]
        },
        "list": {
            "description": [
                "Specify whether to allow or deny file listing, in case user got no permission on share"
            ],
            "choices": [
                true,
                false
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "Specify whether to add C(present) or remove C(absent) the specified share"
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "caching_mode": {
            "default": "Manual",
            "description": [
                "Set the CachingMode for this share."
            ],
            "version_added": "2.3",
            "choices": [
                "BranchCache",
                "Documents",
                "Manual",
                "None",
                "Programs",
                "Unknown"
            ]
        },
        "path": {
            "required": true,
            "description": [
                "Share directory"
            ]
        },
        "change": {
            "description": [
                "Specify user list that should get read and write access on share, separated by comma."
            ]
        },
        "description": {
            "description": [
                "Share description"
            ]
        }
    },
    "module": "win_share"
}, {
    "short_description": "Execute shell commands on target hosts.",
    "deprecated": null,
    "options": {
        "creates": {
            "description": [
                "a path or path filter pattern; when the referenced path exists on the target host, the task will be skipped."
            ]
        },
        "free_form": {
            "required": true,
            "description": [
                "the win_shell module takes a free form command to run.  There is no parameter actually named 'free form'. See the examples!"
            ]
        },
        "chdir": {
            "description": [
                "set the specified path as the current working directory before executing a command"
            ]
        },
        "removes": {
            "description": [
                "a path or path filter pattern; when the referenced path B(does not) exist on the target host, the task will be skipped."
            ]
        },
        "executable": {
            "description": [
                "change the shell used to execute the command (eg, C(cmd)). The target shell must accept a C(/c) parameter followed by the raw command line to be executed."
            ]
        }
    },
    "module": "win_shell"
}, {
    "short_description": "Manage shortcuts on Windows",
    "deprecated": null,
    "options": {
        "windowstyle": {
            "description": [
                "Influences how the application is displayed when it is launched."
            ],
            "choices": [
                "default",
                "maximized",
                "minimized"
            ]
        },
        "src": {
            "description": [
                "Executable or URL the shortcut points to."
            ]
        },
        "description": {
            "description": [
                "Description for the shortcut.",
                "This is usually shown when hoovering the icon."
            ]
        },
        "dest": {
            "required": true,
            "description": [
                "Destination file for the shortcuting file.",
                "File name should have a C(.lnk) or C(.url) extension."
            ]
        },
        "args": {
            "description": [
                "Additional arguments for the executable defined in C(src)."
            ]
        },
        "directory": {
            "description": [
                "Working directory for executable defined in C(src)."
            ]
        },
        "state": {
            "default": "present",
            "description": [
                "When C(present), creates or updates the shortcut.  When C(absent), removes the shortcut if it exists."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "hotkey": {
            "description": [
                "Key combination for the shortcut."
            ]
        },
        "icon": {
            "description": [
                "Icon used for the shortcut",
                "File name should have a C(.ico) extension.",
                "The file name is followed by a comma and the number in the library file (.dll) or use 0 for an image file."
            ]
        }
    },
    "module": "win_shortcut"
}, {
    "short_description": "returns information about a Windows file",
    "deprecated": null,
    "options": {
        "path": {
            "required": true,
            "description": [
                "The full path of the file/object to get the facts of; both forward and back slashes are accepted."
            ]
        },
        "get_md5": {
            "default": true,
            "required": false,
            "description": [
                "Whether to return the checksum sum of the file. Between Ansible 1.9 and 2.2 this is no longer an MD5, but a SHA1 instead. As of Ansible 2.3 this is back to an MD5. Will return None if host is unable to use specified algorithm.",
                "This option is deprecated in Ansible 2.3 and is replaced with C(checksum_algorithm=md5)."
            ]
        },
        "get_checksum": {
            "default": true,
            "required": false,
            "description": [
                "Whether to return a checksum of the file (default sha1)"
            ],
            "version_added": "2.1"
        },
        "checksum_algorithm": {
            "default": "sha1",
            "required": false,
            "description": [
                "Algorithm to determine checksum of file. Will throw an error if the host is unable to use specified algorithm."
            ],
            "version_added": "2.3",
            "choices": [
                "md5",
                "sha1",
                "sha256",
                "sha384",
                "sha512"
            ]
        }
    },
    "module": "win_stat"
}, {
    "short_description": "Creates temporary files and directories.",
    "deprecated": null,
    "options": {
        "path": {
            "default": "%TEMP%",
            "description": [
                "Location where temporary file or directory should be created.",
                "If path is not specified default system temporary directory (%TEMP%) will be used."
            ]
        },
        "state": {
            "default": "file",
            "description": [
                "Whether to create file or directory."
            ],
            "choices": [
                "file",
                "directory"
            ]
        },
        "prefix": {
            "default": "ansible.",
            "description": [
                "Prefix of file/directory name created by module."
            ]
        },
        "suffix": {
            "default": "",
            "description": [
                "Suffix of file/directory name created by module."
            ]
        }
    },
    "module": "win_tempfile"
}, {
    "short_description": "Templates a file out to a remote server.",
    "deprecated": null,
    "options": {
        "dest": {
            "required": true,
            "description": [
                "Location to render the template to on the remote machine."
            ]
        },
        "src": {
            "required": true,
            "description": [
                "Path of a Jinja2 formatted template on the local server. This can be a relative or absolute path."
            ]
        }
    },
    "module": "win_template"
}, {
    "short_description": "Sets Windows machine timezone",
    "deprecated": null,
    "options": {
        "timezone": {
            "default": null,
            "required": true,
            "description": [
                "Timezone to set to.  Example Central Standard Time"
            ],
            "aliases": []
        }
    },
    "module": "win_timezone"
}, {
    "short_description": "Unzips compressed files and archives on the Windows node",
    "deprecated": null,
    "options": {
        "dest": {
            "required": true,
            "description": [
                "Destination of zip file (provide absolute path of directory). If it does not exist, the directory will be created."
            ]
        },
        "src": {
            "required": true,
            "description": [
                "File to be unzipped (provide absolute path)"
            ]
        },
        "recurse": {
            "default": false,
            "required": false,
            "description": [
                "Recursively expand zipped files within the src file."
            ],
            "choices": [
                true,
                false,
                true,
                false
            ]
        },
        "creates": {
            "default": null,
            "required": false,
            "description": [
                "If this file or directory exists the specified src will not be extracted."
            ]
        },
        "rm": {
            "default": false,
            "required": false,
            "description": [
                "Remove the zip file, after unzipping"
            ],
            "choices": [
                true,
                false,
                true,
                false
            ]
        }
    },
    "module": "win_unzip"
}, {
    "short_description": "Download and install Windows updates",
    "deprecated": null,
    "options": {
        "log_path": {
            "required": false,
            "description": [
                "If set, win_updates will append update progress to the specified file. The directory must already exist."
            ]
        },
        "state": {
            "default": "installed",
            "required": false,
            "description": [
                "Controls whether found updates are returned as a list or actually installed.",
                "This module also supports Ansible check mode, which has the same effect as setting state=searched"
            ],
            "choices": [
                "installed",
                "searched"
            ]
        },
        "category_names": {
            "default": [
                "CriticalUpdates",
                "SecurityUpdates",
                "UpdateRollups"
            ],
            "required": false,
            "description": [
                "A scalar or list of categories to install updates from"
            ],
            "choices": [
                "Application",
                "Connectors",
                "CriticalUpdates",
                "DefinitionUpdates",
                "DeveloperKits",
                "FeaturePacks",
                "Guidance",
                "SecurityUpdates",
                "ServicePacks",
                "Tools",
                "UpdateRollups",
                "Updates"
            ]
        }
    },
    "module": "win_updates"
}, {
    "short_description": "Interacts with webservices.",
    "deprecated": null,
    "options": {
        "body": {
            "description": [
                "The body of the HTTP request/response to the web service."
            ]
        },
        "headers": {
            "description": [
                "Key Value pairs for headers. Example \"Host: www.somesite.com\""
            ]
        },
        "dest": {
            "description": [
                "Output the response body to a file."
            ],
            "version_added": "2.3"
        },
        "content_type": {
            "description": [
                "Sets the \"Content-Type\" header."
            ]
        },
        "url": {
            "required": true,
            "description": [
                "HTTP or HTTPS URL in the form of (http|https)://host.domain:port/path"
            ]
        },
        "method": {
            "default": "GET",
            "description": [
                "The HTTP Method of the request or response."
            ],
            "choices": [
                "GET",
                "POST",
                "PUT",
                "HEAD",
                "DELETE",
                "OPTIONS",
                "PATCH",
                "TRACE",
                "CONNECT",
                "REFRESH"
            ]
        },
        "use_basic_parsing": {
            "default": true,
            "description": [
                "This module relies upon 'Invoke-WebRequest', which by default uses the Internet Explorer Engine to parse a webpage. There's an edge-case where if a user hasn't run IE before, this will fail. The only advantage to using the Internet Explorer praser is that you can traverse the DOM in a powershell script. That isn't useful for Ansible, so by default we toggle 'UseBasicParsing'. However, you can toggle that off here."
            ],
            "choices": [
                true,
                false
            ]
        }
    },
    "module": "win_uri"
}, {
    "short_description": "Manages local Windows user accounts",
    "deprecated": null,
    "options": {
        "update_password": {
            "default": "always",
            "required": false,
            "description": [
                "C(always) will update passwords if they differ.  C(on_create) will only set the password for newly created users."
            ],
            "version_added": "1.9",
            "choices": [
                "always",
                "on_create"
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Optionally set the user's password to this (plain text) value."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Name of the user to create, remove or modify."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "Description of the user"
            ],
            "version_added": "1.9"
        },
        "groups_action": {
            "default": "replace",
            "required": false,
            "description": [
                "If C(replace), the user is added as a member of each group in I(groups) and removed from any other groups.  If C(add), the user is added to each group in I(groups) where not already a member.  If C(remove), the user is removed from each group in I(groups)."
            ],
            "version_added": "1.9",
            "choices": [
                "replace",
                "add",
                "remove"
            ]
        },
        "password_expired": {
            "default": null,
            "required": false,
            "description": [
                "C(yes) will require the user to change their password at next login. C(no) will clear the expired password flag."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "choices": [
                "present",
                "absent",
                "query"
            ],
            "required": false,
            "description": [
                "When C(present), creates or updates the user account.  When C(absent), removes the user account if it exists.  When C(query) (new in 1.9), retrieves the user account details without making any changes."
            ],
            "aliases": []
        },
        "groups": {
            "required": false,
            "description": [
                "Adds or removes the user from this comma-separated lis of groups, depending on the value of I(groups_action). When I(groups_action) is C(replace) and I(groups) is set to the empty string ('groups='), the user is removed from all groups."
            ],
            "version_added": "1.9"
        },
        "account_disabled": {
            "default": null,
            "required": false,
            "description": [
                "C(yes) will disable the user account.  C(no) will clear the disabled flag."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "fullname": {
            "default": null,
            "required": false,
            "description": [
                "Full name of the user"
            ],
            "version_added": "1.9"
        },
        "password_never_expires": {
            "default": null,
            "required": false,
            "description": [
                "C(yes) will set the password to never expire.  C(no) will allow the password to expire."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        },
        "account_locked": {
            "default": null,
            "required": false,
            "description": [
                "C(no) will unlock the user account if locked."
            ],
            "version_added": "1.9",
            "choices": [
                "no"
            ]
        },
        "user_cannot_change_password": {
            "default": null,
            "required": false,
            "description": [
                "C(yes) will prevent the user from changing their password.  C(no) will allow the user to change their password."
            ],
            "version_added": "1.9",
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "win_user"
}, {
    "short_description": "Installs packages using Web Platform Installer command-line",
    "deprecated": null,
    "options": {
        "name": {
            "required": true,
            "description": [
                "Name of the package to be installed"
            ]
        }
    },
    "module": "win_webpicmd"
}, {
    "short_description": "set/retrieve extended attributes",
    "deprecated": null,
    "options": {
        "path": {
            "default": "None",
            "required": true,
            "description": [
                "The full path of the file/object to get the facts of.",
                "Before 2.3 this option was only usable as I(name)."
            ],
            "aliases": [
                "name"
            ]
        },
        "state": {
            "default": "get",
            "required": false,
            "description": [
                "defines which state you want to do. C(read) retrieves the current value for a C(key) (default) C(present) sets C(name) to C(value), default if value is set C(all) dumps all data C(keys) retrieves all keys C(absent) deletes the key"
            ],
            "choices": [
                "read",
                "present",
                "all",
                "keys",
                "absent"
            ]
        },
        "key": {
            "default": "None",
            "required": false,
            "description": [
                "The name of a specific Extended attribute key to set/retrieve"
            ]
        },
        "value": {
            "default": "None",
            "required": false,
            "description": [
                "The value to set the named name/key to, it automatically sets the C(state) to 'set'"
            ]
        },
        "follow": {
            "default": true,
            "required": false,
            "description": [
                "if yes, dereferences symlinks and sets/gets attributes on symlink target, otherwise acts on symlink itself."
            ],
            "choices": [
                "yes",
                "no"
            ]
        }
    },
    "module": "xattr"
}, {
    "short_description": "Manage packages with XBPS",
    "deprecated": null,
    "options": {
        "recurse": {
            "default": false,
            "required": false,
            "description": [
                "When removing a package, also remove its dependencies, provided that they are not required by other packages and were not explicitly installed by a user."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Desired state of the package."
            ],
            "choices": [
                "present",
                "absent",
                "latest"
            ]
        },
        "upgrade": {
            "default": false,
            "required": false,
            "description": [
                "Whether or not to upgrade whole system"
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "update_cache": {
            "default": true,
            "required": false,
            "description": [
                "Whether or not to refresh the master package lists. This can be run as part of a package installation or as a separate step."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "default": null,
            "required": false,
            "description": [
                "Name of the package to install, upgrade, or remove."
            ]
        }
    },
    "module": "xbps"
}, {
    "short_description": "get facts reported on xenserver",
    "deprecated": null,
    "options": {},
    "module": "xenserver_facts"
}, {
    "short_description": "Manages packages with the I(yum) package manager",
    "deprecated": null,
    "options": {
        "exclude": {
            "default": null,
            "required": false,
            "description": [
                "Package name(s) to exclude when state=present, or latest"
            ],
            "version_added": "2.0"
        },
        "name": {
            "default": null,
            "required": true,
            "description": [
                "Package name, or package specifier with version, like C(name-1.0). When using state=latest, this can be '*' which means run: yum -y update. You can also pass a url or a local path to a rpm file (using state=present).  To operate on several packages this can accept a comma separated list of packages or (as of 2.0) a list of packages."
            ],
            "aliases": [
                "pkg"
            ]
        },
        "list": {
            "default": null,
            "required": false,
            "description": [
                "Package name to run the equivalent of yum list <package> against."
            ]
        },
        "disable_gpg_check": {
            "aliases": [],
            "description": [
                "Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is I(present) or I(latest)."
            ],
            "version_added": "1.2",
            "default": "no",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "conf_file": {
            "default": null,
            "required": false,
            "description": [
                "The remote yum configuration file to use for the transaction."
            ],
            "version_added": "0.6",
            "aliases": []
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Whether to install (C(present) or C(installed), C(latest)), or remove (C(absent) or C(removed)) a package."
            ],
            "choices": [
                "present",
                "installed",
                "latest",
                "absent",
                "removed"
            ]
        },
        "disablerepo": {
            "default": null,
            "required": false,
            "description": [
                "I(Repoid) of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
            ],
            "version_added": "0.9",
            "aliases": []
        },
        "update_cache": {
            "aliases": [
                "expire-cache"
            ],
            "description": [
                "Force yum to check if cache is out of date and redownload if needed. Has an effect only if state is I(present) or I(latest)."
            ],
            "version_added": "1.9",
            "default": "no",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "enablerepo": {
            "default": null,
            "required": false,
            "description": [
                "I(Repoid) of repositories to enable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a \",\"."
            ],
            "version_added": "0.9",
            "aliases": []
        },
        "skip_broken": {
            "aliases": [],
            "description": [
                "Resolve depsolve problems by removing packages that are causing problems from the trans‐ action."
            ],
            "version_added": "2.3",
            "default": "no",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "validate_certs": {
            "default": "yes",
            "required": false,
            "description": [
                "This only applies if using a https url as the source of the rpm. e.g. for localinstall. If set to C(no), the SSL certificates will not be validated.",
                "This should only set to C(no) used on personally controlled sites using self-signed certificates as it avoids verifying the source site.",
                "Prior to 2.1 the code worked as if this was set to C(yes)."
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "installroot": {
            "default": "/",
            "required": false,
            "description": [
                "Specifies an alternative installroot, relative to which all packages will be installed."
            ],
            "version_added": "2.3",
            "aliases": []
        }
    },
    "module": "yum"
}, {
    "short_description": "Add or remove YUM repositories",
    "deprecated": null,
    "options": {
        "seuser": {
            "default": null,
            "required": false,
            "description": [
                "User part of SELinux file context. Will default to system policy, if applicable. If set to C(_default), it will use the C(user) portion of the policy if available."
            ]
        },
        "ip_resolve": {
            "default": "whatever",
            "required": false,
            "description": [
                "Determines how yum resolves host names.",
                "C(4) or C(IPv4) - resolve to IPv4 addresses only.",
                "C(6) or C(IPv6) - resolve to IPv6 addresses only."
            ],
            "choices": [
                4,
                6,
                "IPv4",
                "IPv6",
                "whatever"
            ]
        },
        "enabled": {
            "default": "yes",
            "required": false,
            "description": [
                "This tells yum whether or not use this repository."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "proxy_password": {
            "default": null,
            "required": false,
            "description": [
                "Username to use for proxy."
            ]
        },
        "mode": {
            "default": null,
            "required": false,
            "description": [
                "Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers (like 0644). Leaving off the leading zero will likely have unexpected results. As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r))."
            ]
        },
        "owner": {
            "default": null,
            "required": false,
            "description": [
                "Name of the user that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "bandwidth": {
            "default": 0,
            "required": false,
            "description": [
                "Maximum available network bandwidth in bytes/second. Used with the I(throttle) option.",
                "If I(throttle) is a percentage and bandwidth is C(0) then bandwidth throttling will be disabled. If I(throttle) is expressed as a data rate (bytes/sec) then this option is ignored. Default is C(0) (no bandwidth throttling)."
            ]
        },
        "cost": {
            "default": 1000,
            "required": false,
            "description": [
                "Relative cost of accessing this repository. Useful for weighing one repo's packages as greater/less than any other."
            ]
        },
        "file": {
            "default": null,
            "required": false,
            "description": [
                "File to use to save the repo in. Defaults to the value of I(name)."
            ]
        },
        "mirrorlist_expire": {
            "default": 21600,
            "required": false,
            "description": [
                "Time (in seconds) after which the mirrorlist locally cached will expire.",
                "Default value is 6 hours."
            ]
        },
        "exclude": {
            "default": null,
            "required": false,
            "description": [
                "List of packages to exclude from updates or installs. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed.",
                "The list can also be a regular YAML array."
            ]
        },
        "attributes": {
            "default": "None",
            "required": false,
            "description": [
                "Attributes the file or directory should have. To get supported flags look at the man page for I(chattr) on the target system. This string should contain the attributes in the same order as the one displayed by I(lsattr)."
            ],
            "version_added": "2.3",
            "aliases": [
                "attr"
            ]
        },
        "keepalive": {
            "default": "no",
            "required": false,
            "description": [
                "This tells yum whether or not HTTP/1.1 keepalive should be used with this repository. This can improve transfer speeds by using one connection when downloading multiple files from a repository."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "repo_gpgcheck": {
            "default": "no",
            "required": false,
            "description": [
                "This tells yum whether or not it should perform a GPG signature check on the repodata from this repository."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "sslverify": {
            "default": "yes",
            "required": false,
            "description": [
                "Defines whether yum should verify SSL certificates/hosts at all."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "failovermethod": {
            "default": "roundrobin",
            "required": false,
            "description": [
                "C(roundrobin) randomly selects a URL out of the list of URLs to start with and proceeds through each of them as it encounters a failure contacting the host.",
                "C(priority) starts from the first I(baseurl) listed and reads through them sequentially."
            ],
            "choices": [
                "roundrobin",
                "priority"
            ]
        },
        "unsafe_writes": {
            "default": false,
            "required": false,
            "description": [
                "Normally this module uses atomic operations to prevent data corruption or inconsistent reads from the target files, sometimes systems are configured or just broken in ways that prevent this. One example are docker mounted files, they cannot be updated atomically and can only be done in an unsafe manner.",
                "This boolean option allows ansible to fall back to unsafe methods of updating files for those cases in which you do not have any other choice. Be aware that this is subject to race conditions and can lead to data corruption."
            ],
            "version_added": "2.2"
        },
        "deltarpm_metadata_percentage": {
            "default": 100,
            "required": false,
            "description": [
                "When the relative size of deltarpm metadata vs pkgs is larger than this, deltarpm metadata is not downloaded from the repo. Note that you can give values over C(100), so C(200) means that the metadata is required to be half the size of the packages. Use C(0) to turn off this check, and always download metadata."
            ]
        },
        "gpgkey": {
            "default": null,
            "required": false,
            "description": [
                "A URL pointing to the ASCII-armored GPG key file for the repository."
            ]
        },
        "serole": {
            "default": null,
            "required": false,
            "description": [
                "Role part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "http_caching": {
            "default": "all",
            "required": false,
            "description": [
                "Determines how upstream HTTP caches are instructed to handle any HTTP downloads that Yum does.",
                "C(all) means that all HTTP downloads should be cached.",
                "C(packages) means that only RPM package downloads should be cached (but not repository metadata downloads).",
                "C(none) means that no HTTP downloads should be cached."
            ],
            "choices": [
                "all",
                "packages",
                "none"
            ]
        },
        "priority": {
            "default": 99,
            "required": false,
            "description": [
                "Enforce ordered protection of repositories. The value is an integer from 1 to 99.",
                "This option only works if the YUM Priorities plugin is installed."
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "State of the repo file."
            ],
            "choices": [
                "absent",
                "present"
            ]
        },
        "mirrorlist": {
            "default": null,
            "required": false,
            "description": [
                "Specifies a URL to a file containing a list of baseurls.",
                "This or the I(baseurl) parameter is required if I(state) is set to C(present)."
            ]
        },
        "params": {
            "default": null,
            "required": false,
            "description": [
                "Option used to allow the user to overwrite any of the other options. To remove an option, set the value of the option to C(null)."
            ]
        },
        "setype": {
            "default": null,
            "required": false,
            "description": [
                "Type part of SELinux file context, C(_default) feature works as for I(seuser)."
            ]
        },
        "gpgcheck": {
            "default": "no",
            "required": false,
            "description": [
                "Tells yum whether or not it should perform a GPG signature check on packages."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "include": {
            "default": null,
            "required": false,
            "description": [
                "Include external configuration file. Both, local path and URL is supported. Configuration file will be inserted at the position of the I(include=) line. Included files may contain further include lines. Yum will abort with an error if an inclusion loop is detected."
            ]
        },
        "proxy_username": {
            "default": null,
            "required": false,
            "description": [
                "Password for this proxy."
            ]
        },
        "username": {
            "default": null,
            "required": false,
            "description": [
                "Username to use for basic authentication to a repo or really any url."
            ]
        },
        "metadata_expire": {
            "default": 21600,
            "required": false,
            "description": [
                "Time (in seconds) after which the metadata will expire.",
                "Default value is 6 hours."
            ]
        },
        "description": {
            "default": null,
            "required": false,
            "description": [
                "A human readable string describing the repository.",
                "This parameter is only required if I(state) is set to C(present)."
            ]
        },
        "retries": {
            "default": 10,
            "required": false,
            "description": [
                "Set the number of times any attempt to retrieve a file should retry before returning an error. Setting this to C(0) makes yum try forever."
            ]
        },
        "selevel": {
            "default": "s0",
            "required": false,
            "description": [
                "Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the C(range). C(_default) feature works as for I(seuser)."
            ]
        },
        "sslclientcert": {
            "default": null,
            "required": false,
            "description": [
                "Path to the SSL client certificate yum should use to connect to repos/remote sites."
            ]
        },
        "baseurl": {
            "default": null,
            "required": false,
            "description": [
                "URL to the directory where the yum repository's 'repodata' directory lives.",
                "This or the I(mirrorlist) parameter is required if I(state) is set to C(present)."
            ]
        },
        "gpgcakey": {
            "default": null,
            "required": false,
            "description": [
                "A URL pointing to the ASCII-armored CA key file for the repository."
            ]
        },
        "s3_enabled": {
            "default": "no",
            "required": false,
            "description": [
                "Enables support for S3 repositories.",
                "This option only works if the YUM S3 plugin is installed."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "includepkgs": {
            "default": null,
            "required": false,
            "description": [
                "List of packages you want to only use from a repository. This should be a space separated list. Shell globs using wildcards (eg. C(*) and C(?)) are allowed. Substitution variables (e.g. C($releasever)) are honored here.",
                "The list can also be a regular YAML array."
            ]
        },
        "enablegroups": {
            "default": "yes",
            "required": false,
            "description": [
                "Determines whether yum will allow the use of package groups for this repository."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "group": {
            "default": null,
            "required": false,
            "description": [
                "Name of the group that should own the file/directory, as would be fed to I(chown)."
            ]
        },
        "password": {
            "default": null,
            "required": false,
            "description": [
                "Password to use with the username for basic authentication."
            ]
        },
        "ui_repoid_vars": {
            "default": "releasever basearch",
            "required": false,
            "description": [
                "When a repository id is displayed, append these yum variables to the string if they are used in the I(baseurl)/etc. Variables are appended in the order listed (and found)."
            ]
        },
        "protect": {
            "default": "no",
            "required": false,
            "description": [
                "Protect packages from updates from other repositories."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "ssl_check_cert_permissions": {
            "default": "no",
            "required": false,
            "description": [
                "Whether yum should check the permissions on the paths for the certificates on the repository (both remote and local).",
                "If we can't read any of the files then yum will force I(skip_if_unavailable) to be C(yes). This is most useful for non-root processes which use yum on repos that have client cert files which are readable only by root."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "throttle": {
            "default": null,
            "required": false,
            "description": [
                "Enable bandwidth throttling for downloads.",
                "This option can be expressed as a absolute data rate in bytes/sec. An SI prefix (k, M or G) may be appended to the bandwidth value."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Unique repository ID.",
                "This parameter is only required if I(state) is set to C(present) or C(absent)."
            ]
        },
        "deltarpm_percentage": {
            "default": 75,
            "required": false,
            "description": [
                "When the relative size of delta vs pkg is larger than this, delta is not used. Use C(0) to turn off delta rpm processing. Local repositories (with file:// I(baseurl)) have delta rpms turned off by default."
            ]
        },
        "sslclientkey": {
            "default": null,
            "required": false,
            "description": [
                "Path to the SSL client key yum should use to connect to repos/remote sites."
            ]
        },
        "metalink": {
            "default": null,
            "required": false,
            "description": [
                "Specifies a URL to a metalink file for the repomd.xml, a list of mirrors for the entire repository are generated by converting the mirrors for the repomd.xml file to a I(baseurl)."
            ]
        },
        "reposdir": {
            "default": "/etc/yum.repos.d",
            "required": false,
            "description": [
                "Directory where the C(.repo) files will be stored."
            ]
        },
        "skip_if_unavailable": {
            "default": "no",
            "required": false,
            "description": [
                "If set to C(yes) yum will continue running if this repository cannot be contacted for any reason. This should be set carefully as all repos are consulted for any given command."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "keepcache": {
            "default": "1",
            "required": false,
            "description": [
                "Either C(1) or C(0). Determines whether or not yum keeps the cache of headers and packages after successful installation."
            ],
            "choices": [
                "0",
                "1"
            ]
        },
        "sslcacert": {
            "default": null,
            "required": false,
            "description": [
                "Path to the directory containing the databases of the certificate authorities yum should use to verify SSL certificates."
            ]
        },
        "timeout": {
            "default": 30,
            "required": false,
            "description": [
                "Number of seconds to wait for a connection before timing out."
            ]
        },
        "async": {
            "default": "yes",
            "required": false,
            "description": [
                "If set to C(yes) Yum will download packages and metadata from this repo in parallel, if possible."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "metadata_expire_filter": {
            "default": "read-only:present",
            "required": false,
            "description": [
                "Filter the I(metadata_expire) time, allowing a trade of speed for accuracy if a command doesn't require it. Each yum command can specify that it requires a certain level of timeliness quality from the remote repos. from \"I'm about to install/upgrade, so this better be current\" to \"Anything that's available is good enough\".",
                "C(never) - Nothing is filtered, always obey I(metadata_expire).",
                "C(read-only:past) - Commands that only care about past information are filtered from metadata expiring. Eg. I(yum history) info (if history needs to lookup anything about a previous transaction, then by definition the remote package was available in the past).",
                "C(read-only:present) - Commands that are balanced between past and future. Eg. I(yum list yum).",
                "C(read-only:future) - Commands that are likely to result in running other commands which will require the latest metadata. Eg. I(yum check-update).",
                "Note that this option does not override \"yum clean expire-cache\"."
            ],
            "choices": [
                "never",
                "read-only:past",
                "read-only:present",
                "read-only:future"
            ]
        },
        "proxy": {
            "default": null,
            "required": false,
            "description": [
                "URL to the proxy server that yum should use. Set to C(_none_) to disable the global proxy setting."
            ]
        }
    },
    "module": "yum_repository"
}, {
    "short_description": "Zabbix host groups creates/deletes",
    "deprecated": null,
    "options": {
        "http_login_password": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth password"
            ],
            "version_added": "2.1"
        },
        "timeout": {
            "default": 10,
            "description": [
                "The timeout of API request(seconds)."
            ]
        },
        "login_user": {
            "required": true,
            "description": [
                "Zabbix user name."
            ]
        },
        "http_login_user": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth login"
            ],
            "version_added": "2.1"
        },
        "server_url": {
            "required": true,
            "description": [
                "Url of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
            ],
            "aliases": [
                "url"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or delete host group."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "host_groups": {
            "required": true,
            "description": [
                "List of host groups to create or delete."
            ],
            "aliases": [
                "host_group"
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "Zabbix user password."
            ]
        }
    },
    "module": "zabbix_group"
}, {
    "short_description": "Zabbix host creates/updates/deletes",
    "deprecated": null,
    "options": {
        "status": {
            "default": "enabled",
            "required": false,
            "description": [
                "Monitoring status of the host."
            ],
            "choices": [
                "enabled",
                "disabled"
            ]
        },
        "inventory_mode": {
            "default": "None",
            "required": false,
            "description": [
                "Configure the inventory mode."
            ],
            "version_added": "2.1",
            "choices": [
                "automatic",
                "manual",
                "disabled"
            ]
        },
        "login_user": {
            "required": true,
            "description": [
                "Zabbix user name, used to authenticate against the server."
            ]
        },
        "interfaces": {
            "default": [],
            "required": false,
            "description": [
                "List of interfaces to be created for the host (see example below).",
                "Available values are: dns, ip, main, port, type and useip.",
                "Please review the interface documentation for more information on the supported properties",
                "https://www.zabbix.com/documentation/2.0/manual/appendix/api/hostinterface/definitions#host_interface"
            ]
        },
        "server_url": {
            "required": true,
            "description": [
                "Url of Zabbix server, with protocol (http or https)."
            ],
            "aliases": [
                "url"
            ]
        },
        "proxy": {
            "default": "None",
            "description": [
                "The name of the Zabbix Proxy to be used"
            ]
        },
        "host_groups": {
            "required": false,
            "description": [
                "List of host groups the host is part of."
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "Zabbix user password."
            ]
        },
        "force": {
            "default": "yes",
            "required": false,
            "description": [
                "Overwrite the host configuration, even if already present"
            ],
            "version_added": "2.0",
            "choices": [
                "yes",
                "no"
            ]
        },
        "http_login_password": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth password"
            ],
            "version_added": "2.1"
        },
        "http_login_user": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth login"
            ],
            "version_added": "2.1"
        },
        "visible_name": {
            "required": false,
            "description": [
                "Visible name of the host in Zabbix."
            ],
            "version_added": "2.3"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "State of the host.",
                "On C(present), it will create if host does not exist or update the host if the associated data is different.",
                "On C(absent) will remove a host if it exists."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "host_name": {
            "required": true,
            "description": [
                "Name of the host in Zabbix.",
                "host_name is the unique identifier used and cannot be updated using this module."
            ]
        },
        "timeout": {
            "default": 10,
            "description": [
                "The timeout of API request (seconds)."
            ]
        },
        "link_templates": {
            "default": "None",
            "required": false,
            "description": [
                "List of templates linked to the host."
            ]
        }
    },
    "module": "zabbix_host"
}, {
    "short_description": "Zabbix host macro creates/updates/deletes",
    "deprecated": null,
    "options": {
        "http_login_password": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth password"
            ],
            "version_added": "2.1"
        },
        "macro_name": {
            "required": true,
            "description": [
                "Name of the host macro."
            ]
        },
        "macro_value": {
            "required": true,
            "description": [
                "Value of the host macro."
            ]
        },
        "login_user": {
            "required": true,
            "description": [
                "Zabbix user name."
            ]
        },
        "http_login_user": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth login"
            ],
            "version_added": "2.1"
        },
        "server_url": {
            "required": true,
            "description": [
                "Url of Zabbix server, with protocol (http or https)."
            ],
            "aliases": [
                "url"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "State of the macro.",
                "On C(present), it will create if macro does not exist or update the macro if the associated data is different.",
                "On C(absent) will remove a macro if it exists."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "host_name": {
            "required": true,
            "description": [
                "Name of the host."
            ]
        },
        "timeout": {
            "default": 10,
            "description": [
                "The timeout of API request (seconds)."
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "Zabbix user password."
            ]
        }
    },
    "module": "zabbix_hostmacro"
}, {
    "short_description": "Create Zabbix maintenance windows",
    "deprecated": null,
    "options": {
        "http_login_password": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth password"
            ],
            "version_added": "2.1"
        },
        "name": {
            "required": true,
            "description": [
                "Unique name of maintenance window."
            ]
        },
        "login_user": {
            "required": true,
            "description": [
                "Zabbix user name."
            ]
        },
        "http_login_user": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth login"
            ],
            "version_added": "2.1"
        },
        "server_url": {
            "default": null,
            "required": true,
            "description": [
                "Url of Zabbix server, with protocol (http or https). C(url) is an alias for C(server_url)."
            ],
            "aliases": [
                "url"
            ]
        },
        "host_names": {
            "default": null,
            "required": false,
            "description": [
                "Hosts to manage maintenance window for. Separate multiple hosts with commas. C(host_name) is an alias for C(host_names). B(Required) option when C(state) is I(present) and no C(host_groups) specified."
            ],
            "aliases": [
                "host_name"
            ]
        },
        "host_groups": {
            "default": null,
            "required": false,
            "description": [
                "Host groups to manage maintenance window for. Separate multiple groups with commas. C(host_group) is an alias for C(host_groups). B(Required) option when C(state) is I(present) and no C(host_names) specified."
            ],
            "aliases": [
                "host_group"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "Create or remove a maintenance window."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "timeout": {
            "default": 10,
            "required": false,
            "description": [
                "The timeout of API request (seconds)."
            ],
            "version_added": "2.1"
        },
        "login_password": {
            "required": true,
            "description": [
                "Zabbix user password."
            ]
        },
        "collect_data": {
            "default": "true",
            "required": false,
            "description": [
                "Type of maintenance. With data collection, or without."
            ]
        },
        "minutes": {
            "default": 10,
            "required": false,
            "description": [
                "Length of maintenance window in minutes."
            ]
        },
        "desc": {
            "default": "Created by Ansible",
            "required": true,
            "description": [
                "Short description of maintenance window."
            ]
        }
    },
    "module": "zabbix_maintenance"
}, {
    "short_description": "Zabbix screen creates/updates/deletes",
    "deprecated": null,
    "options": {
        "screens": {
            "required": true,
            "description": [
                "List of screens to be created/updated/deleted(see example).",
                "If the screen(s) already been added, the screen(s) name won't be updated.",
                "When creating or updating screen(s), C(screen_name), C(host_group) are required.",
                "When deleting screen(s), the C(screen_name) is required.",
                "The available states are: C(present) (default) and C(absent). If the screen(s) already exists, and the state is not C(absent), the screen(s) will just be updated as needed."
            ]
        },
        "http_login_password": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth password"
            ],
            "version_added": "2.1"
        },
        "timeout": {
            "default": 10,
            "description": [
                "The timeout of API request (seconds)."
            ]
        },
        "login_password": {
            "required": true,
            "description": [
                "Zabbix user password."
            ]
        },
        "login_user": {
            "required": true,
            "description": [
                "Zabbix user name."
            ]
        },
        "http_login_user": {
            "default": "None",
            "required": false,
            "description": [
                "Basic Auth login"
            ],
            "version_added": "2.1"
        },
        "server_url": {
            "required": true,
            "description": [
                "Url of Zabbix server, with protocol (http or https)."
            ],
            "aliases": [
                "url"
            ]
        }
    },
    "module": "zabbix_screen"
}, {
    "short_description": "Manage zfs",
    "deprecated": null,
    "options": {
        "origin": {
            "default": null,
            "required": false,
            "description": [
                "Snapshot from which to create a clone"
            ]
        },
        "state": {
            "required": true,
            "description": [
                "Whether to create (C(present)), or remove (C(absent)) a file system, snapshot or volume. All parents/children will be created/destroyed as needed to reach the desired state."
            ],
            "choices": [
                "present",
                "absent"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "File system, snapshot or volume name e.g. C(rpool/myfs)"
            ]
        },
        "key_value": {
            "default": null,
            "required": false,
            "description": [
                "The C(zfs) module takes key=value pairs for zfs properties to be set. See the zfs(8) man page for more information."
            ]
        }
    },
    "module": "zfs"
}, {
    "short_description": "Gather facts about ZFS datasets.",
    "deprecated": null,
    "options": {
        "parsable": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "Specifies if property values should be displayed in machine friendly format."
            ]
        },
        "depth": {
            "default": "None",
            "required": false,
            "description": [
                "Specifiies recurion depth."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "ZFS dataset name."
            ],
            "aliases": [
                "ds",
                "dataset"
            ]
        },
        "type": {
            "default": "all",
            "aliases": [
                "props"
            ],
            "required": false,
            "description": [
                "Specifies which datasets types to display. Multiple values have to be provided in comma-separated form."
            ],
            "choices": [
                "all",
                "filesystem",
                "volume",
                "snapshot",
                "bookmark"
            ]
        },
        "recurse": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "Specifies if properties for any children should be recursively displayed."
            ]
        },
        "properties": {
            "default": "all",
            "required": false,
            "description": [
                "Specifies which dataset properties should be queried in comma-separated format. For more information about dataset properties, check zfs(1M) man page."
            ],
            "aliases": [
                "props"
            ]
        }
    },
    "module": "zfs_facts"
}, {
    "short_description": "Create, delete, retrieve, and update znodes using ZooKeeper",
    "deprecated": null,
    "options": {
        "state": {
            "default": "None",
            "required": false,
            "description": [
                "The state to enforce. Mutually exclusive with op."
            ]
        },
        "hosts": {
            "required": true,
            "description": [
                "A list of ZooKeeper servers (format '[server]:[port]')."
            ]
        },
        "name": {
            "required": true,
            "description": [
                "The path of the znode."
            ]
        },
        "timeout": {
            "default": 300,
            "required": false,
            "description": [
                "The amount of time to wait for a node to appear."
            ]
        },
        "op": {
            "default": "None",
            "required": false,
            "description": [
                "An operation to perform. Mutually exclusive with state."
            ]
        },
        "value": {
            "default": "None",
            "required": false,
            "description": [
                "The value assigned to the znode."
            ]
        },
        "recursive": {
            "default": false,
            "required": false,
            "description": [
                "Recursively delete node and all its children."
            ],
            "version_added": "2.1"
        }
    },
    "module": "znode"
}, {
    "short_description": "Gather facts about ZFS pools.",
    "deprecated": null,
    "options": {
        "parsable": {
            "default": false,
            "required": false,
            "type": "bool",
            "description": [
                "Specifies if property values should be displayed in machine friendly format."
            ]
        },
        "name": {
            "required": false,
            "description": [
                "ZFS pool name."
            ],
            "aliases": [
                "pool",
                "zpool"
            ]
        },
        "properties": {
            "default": "all",
            "required": false,
            "description": [
                "Specifies which dataset properties should be queried in comma-separated format. For more information about dataset properties, check zpool(1M) man page."
            ],
            "aliases": [
                "props"
            ]
        }
    },
    "module": "zpool_facts"
}, {
    "short_description": "Manage packages on SUSE and openSUSE",
    "deprecated": null,
    "options": {
        "force": {
            "default": "no",
            "required": false,
            "description": [
                "Adds C(--force) option to I(zypper). Allows to downgrade packages and change vendor or architecture."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "name": {
            "required": true,
            "description": [
                "Package name C(name) or package specifier.",
                "Can include a version like C(name=1.0), C(name>3.4) or C(name<=2.7). If a version is given, C(oldpackage) is implied and zypper is allowed to update the package within the version range given.",
                "You can also pass a url or a local path to a rpm file.",
                "When using state=latest, this can be '*', which updates all installed packages."
            ],
            "aliases": [
                "pkg"
            ]
        },
        "disable_gpg_check": {
            "default": "no",
            "required": false,
            "description": [
                "Whether to disable to GPG signature checking of the package signature being installed. Has an effect only if state is I(present) or I(latest)."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "C(present) will make sure the package is installed. C(latest)  will make sure the latest version of the package is installed. C(absent)  will make sure the specified package is not installed."
            ],
            "choices": [
                "present",
                "latest",
                "absent"
            ]
        },
        "oldpackage": {
            "default": "no",
            "required": false,
            "description": [
                "Adds C(--oldpackage) option to I(zypper). Allows to downgrade packages with less side-effects than force. This is implied as soon as a version is specified as part of the package name."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "update_cache": {
            "aliases": [
                "refresh"
            ],
            "description": [
                "Run the equivalent of C(zypper refresh) before the operation. Disabled in check mode."
            ],
            "version_added": "2.2",
            "default": "no",
            "required": false,
            "choices": [
                "yes",
                "no"
            ]
        },
        "disable_recommends": {
            "default": "yes",
            "required": false,
            "description": [
                "Corresponds to the C(--no-recommends) option for I(zypper). Default behavior (C(yes)) modifies zypper's default behavior; C(no) does install recommended packages."
            ],
            "version_added": "1.8",
            "choices": [
                "yes",
                "no"
            ]
        },
        "type": {
            "default": "package",
            "required": false,
            "description": [
                "The type of package to be operated on."
            ],
            "version_added": "2.0",
            "choices": [
                "package",
                "patch",
                "pattern",
                "product",
                "srcpackage",
                "application"
            ]
        }
    },
    "module": "zypper"
}, {
    "short_description": "Add and remove Zypper repositories",
    "deprecated": null,
    "options": {
        "repo": {
            "default": "none",
            "required": false,
            "description": [
                "URI of the repository or .repo file. Required when state=present."
            ]
        },
        "name": {
            "default": "none",
            "required": false,
            "description": [
                "A name for the repository. Not required when adding repofiles."
            ]
        },
        "auto_import_keys": {
            "default": "no",
            "required": false,
            "description": [
                "Automatically import the gpg signing key of the new or changed repository.",
                "Has an effect only if state is I(present). Has no effect on existing (unchanged) repositories or in combination with I(absent).",
                "Implies runrefresh."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "enabled": {
            "default": "yes",
            "required": false,
            "description": [
                "Set repository to enabled (or disabled)."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "disable_gpg_check": {
            "default": "no",
            "required": false,
            "description": [
                "Whether to disable GPG signature checking of all packages. Has an effect only if state is I(present).",
                "Needs zypper version >= 1.6.2."
            ],
            "choices": [
                "yes",
                "no"
            ]
        },
        "priority": {
            "required": false,
            "description": [
                "Set priority of repository. Packages will always be installed from the repository with the smallest priority number.",
                "Needs zypper version >= 1.12.25."
            ],
            "version_added": "2.1"
        },
        "state": {
            "default": "present",
            "required": false,
            "description": [
                "A source string state."
            ],
            "choices": [
                "absent",
                "present"
            ]
        },
        "autorefresh": {
            "default": "yes",
            "choices": [
                "yes",
                "no"
            ],
            "required": false,
            "description": [
                "Enable autorefresh of the repository."
            ],
            "aliases": [
                "refresh"
            ]
        },
        "overwrite_multiple": {
            "default": "no",
            "required": false,
            "description": [
                "Overwrite multiple repository entries, if repositories with both name and URL already exist."
            ],
            "version_added": "2.1",
            "choices": [
                "yes",
                "no"
            ]
        },
        "runrefresh": {
            "default": "no",
            "required": false,
            "description": [
                "Refresh the package list of the given repository.",
                "Can be used with repo=* to refresh all repositories."
            ],
            "version_added": "2.2",
            "choices": [
                "yes",
                "no"
            ]
        },
        "description": {
            "default": "none",
            "required": false,
            "description": [
                "A description of the repository"
            ]
        }
    },
    "module": "zypper_repository"
}
],
"lookup_plugins": [
    "cartesian",
    "consul_kv",
    "credstash",
    "csvfile",
    "dict",
    "dig",
    "dnstxt",
    "env",
    "etcd",
    "file",
    "fileglob",
    "filetree",
    "first_found",
    "flattened",
    "hashi_vault",
    "indexed_items",
    "ini",
    "inventory_hostnames",
    "items",
    "keyring",
    "lastpass",
    "lines",
    "list",
    "mongodb",
    "nested",
    "password",
    "passwordstore",
    "pipe",
    "random_choice",
    "redis_kv",
    "sequence",
    "shelvefile",
    "subelements",
    "template",
    "together",
    "url"
]
}]
}